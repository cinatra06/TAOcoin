import React__default, { createElement, Component, createFactory, useState, useRef, useEffect } from 'react';
import PropTypes from 'prop-types';
import styled, { ThemeProvider as ThemeProvider$1, createGlobalStyle, keyframes } from 'styled-components';
import ReactDOM from 'react-dom';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

// based on https://github.com/styled-components/styled-components/blob/fcf6f3804c57a14dd7984dfab7bc06ee2edca044/src/utils/error.js

/**
 * Parse errors.md and turn it into a simple hash of code: message
 * @private
 */
var ERRORS = {
  "1": "Passed invalid arguments to hsl, please pass multiple numbers e.g. hsl(360, 0.75, 0.4) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75 }).\n\n",
  "2": "Passed invalid arguments to hsla, please pass multiple numbers e.g. hsla(360, 0.75, 0.4, 0.7) or an object e.g. rgb({ hue: 255, saturation: 0.4, lightness: 0.75, alpha: 0.7 }).\n\n",
  "3": "Passed an incorrect argument to a color function, please pass a string representation of a color.\n\n",
  "4": "Couldn't generate valid rgb string from %s, it returned %s.\n\n",
  "5": "Couldn't parse the color string. Please provide the color as a string in hex, rgb, rgba, hsl or hsla notation.\n\n",
  "6": "Passed invalid arguments to rgb, please pass multiple numbers e.g. rgb(255, 205, 100) or an object e.g. rgb({ red: 255, green: 205, blue: 100 }).\n\n",
  "7": "Passed invalid arguments to rgba, please pass multiple numbers e.g. rgb(255, 205, 100, 0.75) or an object e.g. rgb({ red: 255, green: 205, blue: 100, alpha: 0.75 }).\n\n",
  "8": "Passed invalid argument to toColorString, please pass a RgbColor, RgbaColor, HslColor or HslaColor object.\n\n",
  "9": "Please provide a number of steps to the modularScale helper.\n\n",
  "10": "Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n",
  "11": "Invalid value passed as base to modularScale, expected number or em string but got \"%s\"\n\n",
  "12": "Expected a string ending in \"px\" or a number passed as the first argument to %s(), got \"%s\" instead.\n\n",
  "13": "Expected a string ending in \"px\" or a number passed as the second argument to %s(), got \"%s\" instead.\n\n",
  "14": "Passed invalid pixel value (\"%s\") to %s(), please pass a value like \"12px\" or 12.\n\n",
  "15": "Passed invalid base value (\"%s\") to %s(), please pass a value like \"12px\" or 12.\n\n",
  "16": "You must provide a template to this method.\n\n",
  "17": "You passed an unsupported selector state to this method.\n\n",
  "18": "minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n",
  "19": "fromSize and toSize must be provided as stringified numbers with the same units.\n\n",
  "20": "expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n",
  "21": "expects the objects in the first argument array to have the properties `prop`, `fromSize`, and `toSize`.\n\n",
  "22": "expects the first argument object to have the properties `prop`, `fromSize`, and `toSize`.\n\n",
  "23": "fontFace expects a name of a font-family.\n\n",
  "24": "fontFace expects either the path to the font file(s) or a name of a local copy.\n\n",
  "25": "fontFace expects localFonts to be an array.\n\n",
  "26": "fontFace expects fileFormats to be an array.\n\n",
  "27": "radialGradient requries at least 2 color-stops to properly render.\n\n",
  "28": "Please supply a filename to retinaImage() as the first argument.\n\n",
  "29": "Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",
  "30": "Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n",
  "31": "The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation\n\n",
  "32": "To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s')\n\n",
  "33": "The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation\n\n",
  "34": "borderRadius expects a radius value as a string or number as the second argument.\n\n",
  "35": "borderRadius expects one of \"top\", \"bottom\", \"left\" or \"right\" as the first argument.\n\n",
  "36": "Property must be a string value.\n\n",
  "37": "Syntax Error at %s.\n\n",
  "38": "Formula contains a function that needs parentheses at %s.\n\n",
  "39": "Formula is missing closing parenthesis at %s.\n\n",
  "40": "Formula has too many closing parentheses at %s.\n\n",
  "41": "All values in a formula must have the same unit or be unitless.\n\n",
  "42": "Please provide a number of steps to the modularScale helper.\n\n",
  "43": "Please pass a number or one of the predefined scales to the modularScale helper as the ratio.\n\n",
  "44": "Invalid value passed as base to modularScale, expected number or em/rem string but got %s.\n\n",
  "45": "Passed invalid argument to hslToColorString, please pass a HslColor or HslaColor object.\n\n",
  "46": "Passed invalid argument to rgbToColorString, please pass a RgbColor or RgbaColor object.\n\n",
  "47": "minScreen and maxScreen must be provided as stringified numbers with the same units.\n\n",
  "48": "fromSize and toSize must be provided as stringified numbers with the same units.\n\n",
  "49": "Expects either an array of objects or a single object with the properties prop, fromSize, and toSize.\n\n",
  "50": "Expects the objects in the first argument array to have the properties prop, fromSize, and toSize.\n\n",
  "51": "Expects the first argument object to have the properties prop, fromSize, and toSize.\n\n",
  "52": "fontFace expects either the path to the font file(s) or a name of a local copy.\n\n",
  "53": "fontFace expects localFonts to be an array.\n\n",
  "54": "fontFace expects fileFormats to be an array.\n\n",
  "55": "fontFace expects a name of a font-family.\n\n",
  "56": "linearGradient requries at least 2 color-stops to properly render.\n\n",
  "57": "radialGradient requries at least 2 color-stops to properly render.\n\n",
  "58": "Please supply a filename to retinaImage() as the first argument.\n\n",
  "59": "Passed invalid argument to triangle, please pass correct pointingDirection e.g. 'right'.\n\n",
  "60": "Passed an invalid value to `height` or `width`. Please provide a pixel based unit.\n\n",
  "61": "Property must be a string value.\n\n",
  "62": "borderRadius expects a radius value as a string or number as the second argument.\n\n",
  "63": "borderRadius expects one of \"top\", \"bottom\", \"left\" or \"right\" as the first argument.\n\n",
  "64": "The animation shorthand only takes 8 arguments. See the specification for more information: http://mdn.io/animation.\n\n",
  "65": "To pass multiple animations please supply them in arrays, e.g. animation(['rotate', '2s'], ['move', '1s'])\\nTo pass a single animation please supply them in simple values, e.g. animation('rotate', '2s').\n\n",
  "66": "The animation shorthand arrays can only have 8 elements. See the specification for more information: http://mdn.io/animation.\n\n",
  "67": "You must provide a template to this method.\n\n",
  "68": "You passed an unsupported selector state to this method.\n\n",
  "69": "Expected a string ending in \"px\" or a number passed as the first argument to %s(), got %s instead.\n\n",
  "70": "Expected a string ending in \"px\" or a number passed as the second argument to %s(), got %s instead.\n\n",
  "71": "Passed invalid pixel value %s to %s(), please pass a value like \"12px\" or 12.\n\n",
  "72": "Passed invalid base value %s to %s(), please pass a value like \"12px\" or 12.\n"
};
/**
 * super basic version of sprintf
 * @private
 */

function format() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var a = args[0];
  var b = [];
  var c;

  for (c = 1; c < args.length; c += 1) {
    b.push(args[c]);
  }

  b.forEach(function (d) {
    a = a.replace(/%[a-z]/, d);
  });
  return a;
}
/**
 * Create an error file out of errors.md for development and a simple web link to the full errors
 * in production mode.
 * @private
 */


var PolishedError =
/*#__PURE__*/
function (_Error) {
  _inheritsLoose(PolishedError, _Error);

  function PolishedError(code) {
    var _this;

    if (process.env.NODE_ENV === 'production') {
      _this = _Error.call(this, "An error occurred. See https://github.com/styled-components/polished/blob/master/src/internalHelpers/errors.md#" + code + " for more information.") || this;
    } else {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      _this = _Error.call(this, format.apply(void 0, [ERRORS[code]].concat(args))) || this;
    }

    return _assertThisInitialized(_this);
  }

  return PolishedError;
}(
/*#__PURE__*/
_wrapNativeSuper(Error));

/**
 * CSS to represent truncated text with an ellipsis.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   ...ellipsis('250px')
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   ${ellipsis('250px')}
 * `
 *
 * // CSS as JS Output
 *
 * div: {
 *   'display': 'inline-block',
 *   'maxWidth': '250px',
 *   'overflow': 'hidden',
 *   'textOverflow': 'ellipsis',
 *   'whiteSpace': 'nowrap',
 *   'wordWrap': 'normal'
 * }
 */
function ellipsis(width) {
  if (width === void 0) {
    width = '100%';
  }

  return {
    display: 'inline-block',
    maxWidth: width,
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
    wordWrap: 'normal'
  };
}

/**
 * CSS to normalize abnormalities across browsers (normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css)
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *    ...normalize(),
 * }
 *
 * // styled-components usage
 * const GlobalStyle = createGlobalStyle`${normalize()}`
 *
 * // CSS as JS Output
 *
 * html {
 *   lineHeight: 1.15,
 *   textSizeAdjust: 100%,
 * } ...
 */
function normalize() {
  var _ref;

  return [(_ref = {
    html: {
      lineHeight: '1.15',
      textSizeAdjust: '100%'
    },
    body: {
      margin: '0'
    },
    h1: {
      fontSize: '2em',
      margin: '0.67em 0'
    },
    hr: {
      boxSizing: 'content-box',
      height: '0',
      overflow: 'visible'
    },
    pre: {
      fontFamily: 'monospace, monospace',
      fontSize: '1em'
    },
    a: {
      backgroundColor: 'transparent'
    },
    'abbr[title]': {
      borderBottom: 'none',
      textDecoration: 'underline'
    }
  }, _ref["b,\n    strong"] = {
    fontWeight: 'bolder'
  }, _ref["code,\n    kbd,\n    samp"] = {
    fontFamily: 'monospace, monospace',
    fontSize: '1em'
  }, _ref.small = {
    fontSize: '80%'
  }, _ref["sub,\n    sup"] = {
    fontSize: '75%',
    lineHeight: '0',
    position: 'relative',
    verticalAlign: 'baseline'
  }, _ref.sub = {
    bottom: '-0.25em'
  }, _ref.sup = {
    top: '-0.5em'
  }, _ref.img = {
    borderStyle: 'none'
  }, _ref["button,\n    input,\n    optgroup,\n    select,\n    textarea"] = {
    fontFamily: 'inherit',
    fontSize: '100%',
    lineHeight: '1.15',
    margin: '0'
  }, _ref["button,\n    input"] = {
    overflow: 'visible'
  }, _ref["button,\n    select"] = {
    textTransform: 'none'
  }, _ref["button,\n    html [type=\"button\"],\n    [type=\"reset\"],\n    [type=\"submit\"]"] = {
    WebkitAppearance: 'button'
  }, _ref["button::-moz-focus-inner,\n    [type=\"button\"]::-moz-focus-inner,\n    [type=\"reset\"]::-moz-focus-inner,\n    [type=\"submit\"]::-moz-focus-inner"] = {
    borderStyle: 'none',
    padding: '0'
  }, _ref["button:-moz-focusring,\n    [type=\"button\"]:-moz-focusring,\n    [type=\"reset\"]:-moz-focusring,\n    [type=\"submit\"]:-moz-focusring"] = {
    outline: '1px dotted ButtonText'
  }, _ref.fieldset = {
    padding: '0.35em 0.625em 0.75em'
  }, _ref.legend = {
    boxSizing: 'border-box',
    color: 'inherit',
    display: 'table',
    maxWidth: '100%',
    padding: '0',
    whiteSpace: 'normal'
  }, _ref.progress = {
    verticalAlign: 'baseline'
  }, _ref.textarea = {
    overflow: 'auto'
  }, _ref["[type=\"checkbox\"],\n    [type=\"radio\"]"] = {
    boxSizing: 'border-box',
    padding: '0'
  }, _ref["[type=\"number\"]::-webkit-inner-spin-button,\n    [type=\"number\"]::-webkit-outer-spin-button"] = {
    height: 'auto'
  }, _ref['[type="search"]'] = {
    WebkitAppearance: 'textfield',
    outlineOffset: '-2px'
  }, _ref['[type="search"]::-webkit-search-decoration'] = {
    WebkitAppearance: 'none'
  }, _ref['::-webkit-file-upload-button'] = {
    WebkitAppearance: 'button',
    font: 'inherit'
  }, _ref.details = {
    display: 'block'
  }, _ref.summary = {
    display: 'list-item'
  }, _ref.template = {
    display: 'none'
  }, _ref['[hidden]'] = {
    display: 'none'
  }, _ref), {
    'abbr[title]': {
      textDecoration: 'underline dotted'
    }
  }];
}

/* eslint-disable key-spacing */
var functionsMap = {
  easeInBack: 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',
  easeInCirc: 'cubic-bezier(0.600,  0.040, 0.980, 0.335)',
  easeInCubic: 'cubic-bezier(0.550,  0.055, 0.675, 0.190)',
  easeInExpo: 'cubic-bezier(0.950,  0.050, 0.795, 0.035)',
  easeInQuad: 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',
  easeInQuart: 'cubic-bezier(0.895,  0.030, 0.685, 0.220)',
  easeInQuint: 'cubic-bezier(0.755,  0.050, 0.855, 0.060)',
  easeInSine: 'cubic-bezier(0.470,  0.000, 0.745, 0.715)',
  easeOutBack: 'cubic-bezier(0.175,  0.885, 0.320, 1.275)',
  easeOutCubic: 'cubic-bezier(0.215,  0.610, 0.355, 1.000)',
  easeOutCirc: 'cubic-bezier(0.075,  0.820, 0.165, 1.000)',
  easeOutExpo: 'cubic-bezier(0.190,  1.000, 0.220, 1.000)',
  easeOutQuad: 'cubic-bezier(0.250,  0.460, 0.450, 0.940)',
  easeOutQuart: 'cubic-bezier(0.165,  0.840, 0.440, 1.000)',
  easeOutQuint: 'cubic-bezier(0.230,  1.000, 0.320, 1.000)',
  easeOutSine: 'cubic-bezier(0.390,  0.575, 0.565, 1.000)',
  easeInOutBack: 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',
  easeInOutCirc: 'cubic-bezier(0.785,  0.135, 0.150, 0.860)',
  easeInOutCubic: 'cubic-bezier(0.645,  0.045, 0.355, 1.000)',
  easeInOutExpo: 'cubic-bezier(1.000,  0.000, 0.000, 1.000)',
  easeInOutQuad: 'cubic-bezier(0.455,  0.030, 0.515, 0.955)',
  easeInOutQuart: 'cubic-bezier(0.770,  0.000, 0.175, 1.000)',
  easeInOutQuint: 'cubic-bezier(0.860,  0.000, 0.070, 1.000)',
  easeInOutSine: 'cubic-bezier(0.445,  0.050, 0.550, 0.950)'
  /* eslint-enable key-spacing */

};

function getTimingFunction(functionName) {
  return functionsMap[functionName];
}
/**
 * String to represent common easing functions as demonstrated here: (github.com/jaukia/easie).
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   'transitionTimingFunction': timingFunctions('easeInQuad')
 * }
 *
 * // styled-components usage
 *  const div = styled.div`
 *   transitionTimingFunction: ${timingFunctions('easeInQuad')};
 * `
 *
 * // CSS as JS Output
 *
 * 'div': {
 *   'transitionTimingFunction': 'cubic-bezier(0.550,  0.085, 0.680, 0.530)',
 * }
 */


function timingFunctions(timingFunction) {
  return getTimingFunction(timingFunction);
}

function colorToInt(color) {
  return Math.round(color * 255);
}

function convertToInt(red, green, blue) {
  return colorToInt(red) + "," + colorToInt(green) + "," + colorToInt(blue);
}

function hslToRgb(hue, saturation, lightness, convert) {
  if (convert === void 0) {
    convert = convertToInt;
  }

  if (saturation === 0) {
    // achromatic
    return convert(lightness, lightness, lightness);
  } // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV


  var huePrime = (hue % 360 + 360) % 360 / 60;
  var chroma = (1 - Math.abs(2 * lightness - 1)) * saturation;
  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));
  var red = 0;
  var green = 0;
  var blue = 0;

  if (huePrime >= 0 && huePrime < 1) {
    red = chroma;
    green = secondComponent;
  } else if (huePrime >= 1 && huePrime < 2) {
    red = secondComponent;
    green = chroma;
  } else if (huePrime >= 2 && huePrime < 3) {
    green = chroma;
    blue = secondComponent;
  } else if (huePrime >= 3 && huePrime < 4) {
    green = secondComponent;
    blue = chroma;
  } else if (huePrime >= 4 && huePrime < 5) {
    red = secondComponent;
    blue = chroma;
  } else if (huePrime >= 5 && huePrime < 6) {
    red = chroma;
    blue = secondComponent;
  }

  var lightnessModification = lightness - chroma / 2;
  var finalRed = red + lightnessModification;
  var finalGreen = green + lightnessModification;
  var finalBlue = blue + lightnessModification;
  return convert(finalRed, finalGreen, finalBlue);
}

var namedColorMap = {
  aliceblue: 'f0f8ff',
  antiquewhite: 'faebd7',
  aqua: '00ffff',
  aquamarine: '7fffd4',
  azure: 'f0ffff',
  beige: 'f5f5dc',
  bisque: 'ffe4c4',
  black: '000',
  blanchedalmond: 'ffebcd',
  blue: '0000ff',
  blueviolet: '8a2be2',
  brown: 'a52a2a',
  burlywood: 'deb887',
  cadetblue: '5f9ea0',
  chartreuse: '7fff00',
  chocolate: 'd2691e',
  coral: 'ff7f50',
  cornflowerblue: '6495ed',
  cornsilk: 'fff8dc',
  crimson: 'dc143c',
  cyan: '00ffff',
  darkblue: '00008b',
  darkcyan: '008b8b',
  darkgoldenrod: 'b8860b',
  darkgray: 'a9a9a9',
  darkgreen: '006400',
  darkgrey: 'a9a9a9',
  darkkhaki: 'bdb76b',
  darkmagenta: '8b008b',
  darkolivegreen: '556b2f',
  darkorange: 'ff8c00',
  darkorchid: '9932cc',
  darkred: '8b0000',
  darksalmon: 'e9967a',
  darkseagreen: '8fbc8f',
  darkslateblue: '483d8b',
  darkslategray: '2f4f4f',
  darkslategrey: '2f4f4f',
  darkturquoise: '00ced1',
  darkviolet: '9400d3',
  deeppink: 'ff1493',
  deepskyblue: '00bfff',
  dimgray: '696969',
  dimgrey: '696969',
  dodgerblue: '1e90ff',
  firebrick: 'b22222',
  floralwhite: 'fffaf0',
  forestgreen: '228b22',
  fuchsia: 'ff00ff',
  gainsboro: 'dcdcdc',
  ghostwhite: 'f8f8ff',
  gold: 'ffd700',
  goldenrod: 'daa520',
  gray: '808080',
  green: '008000',
  greenyellow: 'adff2f',
  grey: '808080',
  honeydew: 'f0fff0',
  hotpink: 'ff69b4',
  indianred: 'cd5c5c',
  indigo: '4b0082',
  ivory: 'fffff0',
  khaki: 'f0e68c',
  lavender: 'e6e6fa',
  lavenderblush: 'fff0f5',
  lawngreen: '7cfc00',
  lemonchiffon: 'fffacd',
  lightblue: 'add8e6',
  lightcoral: 'f08080',
  lightcyan: 'e0ffff',
  lightgoldenrodyellow: 'fafad2',
  lightgray: 'd3d3d3',
  lightgreen: '90ee90',
  lightgrey: 'd3d3d3',
  lightpink: 'ffb6c1',
  lightsalmon: 'ffa07a',
  lightseagreen: '20b2aa',
  lightskyblue: '87cefa',
  lightslategray: '789',
  lightslategrey: '789',
  lightsteelblue: 'b0c4de',
  lightyellow: 'ffffe0',
  lime: '0f0',
  limegreen: '32cd32',
  linen: 'faf0e6',
  magenta: 'f0f',
  maroon: '800000',
  mediumaquamarine: '66cdaa',
  mediumblue: '0000cd',
  mediumorchid: 'ba55d3',
  mediumpurple: '9370db',
  mediumseagreen: '3cb371',
  mediumslateblue: '7b68ee',
  mediumspringgreen: '00fa9a',
  mediumturquoise: '48d1cc',
  mediumvioletred: 'c71585',
  midnightblue: '191970',
  mintcream: 'f5fffa',
  mistyrose: 'ffe4e1',
  moccasin: 'ffe4b5',
  navajowhite: 'ffdead',
  navy: '000080',
  oldlace: 'fdf5e6',
  olive: '808000',
  olivedrab: '6b8e23',
  orange: 'ffa500',
  orangered: 'ff4500',
  orchid: 'da70d6',
  palegoldenrod: 'eee8aa',
  palegreen: '98fb98',
  paleturquoise: 'afeeee',
  palevioletred: 'db7093',
  papayawhip: 'ffefd5',
  peachpuff: 'ffdab9',
  peru: 'cd853f',
  pink: 'ffc0cb',
  plum: 'dda0dd',
  powderblue: 'b0e0e6',
  purple: '800080',
  rebeccapurple: '639',
  red: 'f00',
  rosybrown: 'bc8f8f',
  royalblue: '4169e1',
  saddlebrown: '8b4513',
  salmon: 'fa8072',
  sandybrown: 'f4a460',
  seagreen: '2e8b57',
  seashell: 'fff5ee',
  sienna: 'a0522d',
  silver: 'c0c0c0',
  skyblue: '87ceeb',
  slateblue: '6a5acd',
  slategray: '708090',
  slategrey: '708090',
  snow: 'fffafa',
  springgreen: '00ff7f',
  steelblue: '4682b4',
  tan: 'd2b48c',
  teal: '008080',
  thistle: 'd8bfd8',
  tomato: 'ff6347',
  turquoise: '40e0d0',
  violet: 'ee82ee',
  wheat: 'f5deb3',
  white: 'fff',
  whitesmoke: 'f5f5f5',
  yellow: 'ff0',
  yellowgreen: '9acd32'
  /**
   * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.
   * @private
   */

};

function nameToHex(color) {
  if (typeof color !== 'string') return color;
  var normalizedColorName = color.toLowerCase();
  return namedColorMap[normalizedColorName] ? "#" + namedColorMap[normalizedColorName] : color;
}

var hexRegex = /^#[a-fA-F0-9]{6}$/;
var hexRgbaRegex = /^#[a-fA-F0-9]{8}$/;
var reducedHexRegex = /^#[a-fA-F0-9]{3}$/;
var reducedRgbaHexRegex = /^#[a-fA-F0-9]{4}$/;
var rgbRegex = /^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/i;
var rgbaRegex = /^rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/i;
var hslRegex = /^hsl\(\s*(\d{0,3}[.]?[0-9]+)\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*\)$/i;
var hslaRegex = /^hsla\(\s*(\d{0,3}[.]?[0-9]+)\s*,\s*(\d{1,3})%\s*,\s*(\d{1,3})%\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/i;
/**
 * Returns an RgbColor or RgbaColor object. This utility function is only useful
 * if want to extract a color component. With the color util `toColorString` you
 * can convert a RgbColor or RgbaColor object back to a string.
 *
 * @example
 * // Assigns `{ red: 255, green: 0, blue: 0 }` to color1
 * const color1 = parseToRgb('rgb(255, 0, 0)');
 * // Assigns `{ red: 92, green: 102, blue: 112, alpha: 0.75 }` to color2
 * const color2 = parseToRgb('hsla(210, 10%, 40%, 0.75)');
 */

function parseToRgb(color) {
  if (typeof color !== 'string') {
    throw new PolishedError(3);
  }

  var normalizedColor = nameToHex(color);

  if (normalizedColor.match(hexRegex)) {
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[2], 16),
      green: parseInt("" + normalizedColor[3] + normalizedColor[4], 16),
      blue: parseInt("" + normalizedColor[5] + normalizedColor[6], 16)
    };
  }

  if (normalizedColor.match(hexRgbaRegex)) {
    var alpha = parseFloat((parseInt("" + normalizedColor[7] + normalizedColor[8], 16) / 255).toFixed(2));
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[2], 16),
      green: parseInt("" + normalizedColor[3] + normalizedColor[4], 16),
      blue: parseInt("" + normalizedColor[5] + normalizedColor[6], 16),
      alpha: alpha
    };
  }

  if (normalizedColor.match(reducedHexRegex)) {
    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[1], 16),
      green: parseInt("" + normalizedColor[2] + normalizedColor[2], 16),
      blue: parseInt("" + normalizedColor[3] + normalizedColor[3], 16)
    };
  }

  if (normalizedColor.match(reducedRgbaHexRegex)) {
    var _alpha = parseFloat((parseInt("" + normalizedColor[4] + normalizedColor[4], 16) / 255).toFixed(2));

    return {
      red: parseInt("" + normalizedColor[1] + normalizedColor[1], 16),
      green: parseInt("" + normalizedColor[2] + normalizedColor[2], 16),
      blue: parseInt("" + normalizedColor[3] + normalizedColor[3], 16),
      alpha: _alpha
    };
  }

  var rgbMatched = rgbRegex.exec(normalizedColor);

  if (rgbMatched) {
    return {
      red: parseInt("" + rgbMatched[1], 10),
      green: parseInt("" + rgbMatched[2], 10),
      blue: parseInt("" + rgbMatched[3], 10)
    };
  }

  var rgbaMatched = rgbaRegex.exec(normalizedColor);

  if (rgbaMatched) {
    return {
      red: parseInt("" + rgbaMatched[1], 10),
      green: parseInt("" + rgbaMatched[2], 10),
      blue: parseInt("" + rgbaMatched[3], 10),
      alpha: parseFloat("" + rgbaMatched[4])
    };
  }

  var hslMatched = hslRegex.exec(normalizedColor);

  if (hslMatched) {
    var hue = parseInt("" + hslMatched[1], 10);
    var saturation = parseInt("" + hslMatched[2], 10) / 100;
    var lightness = parseInt("" + hslMatched[3], 10) / 100;
    var rgbColorString = "rgb(" + hslToRgb(hue, saturation, lightness) + ")";
    var hslRgbMatched = rgbRegex.exec(rgbColorString);

    if (!hslRgbMatched) {
      throw new PolishedError(4, normalizedColor, rgbColorString);
    }

    return {
      red: parseInt("" + hslRgbMatched[1], 10),
      green: parseInt("" + hslRgbMatched[2], 10),
      blue: parseInt("" + hslRgbMatched[3], 10)
    };
  }

  var hslaMatched = hslaRegex.exec(normalizedColor);

  if (hslaMatched) {
    var _hue = parseInt("" + hslaMatched[1], 10);

    var _saturation = parseInt("" + hslaMatched[2], 10) / 100;

    var _lightness = parseInt("" + hslaMatched[3], 10) / 100;

    var _rgbColorString = "rgb(" + hslToRgb(_hue, _saturation, _lightness) + ")";

    var _hslRgbMatched = rgbRegex.exec(_rgbColorString);

    if (!_hslRgbMatched) {
      throw new PolishedError(4, normalizedColor, _rgbColorString);
    }

    return {
      red: parseInt("" + _hslRgbMatched[1], 10),
      green: parseInt("" + _hslRgbMatched[2], 10),
      blue: parseInt("" + _hslRgbMatched[3], 10),
      alpha: parseFloat("" + hslaMatched[4])
    };
  }

  throw new PolishedError(5);
}

/**
 * Reduces hex values if possible e.g. #ff8866 to #f86
 * @private
 */
var reduceHexValue = function reduceHexValue(value) {
  if (value.length === 7 && value[1] === value[2] && value[3] === value[4] && value[5] === value[6]) {
    return "#" + value[1] + value[3] + value[5];
  }

  return value;
};

function numberToHex(value) {
  var hex = value.toString(16);
  return hex.length === 1 ? "0" + hex : hex;
}

/**
 * Returns a string value for the color. The returned result is the smallest possible hex notation.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: rgb(255, 205, 100),
 *   background: rgb({ red: 255, green: 205, blue: 100 }),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${rgb(255, 205, 100)};
 *   background: ${rgb({ red: 255, green: 205, blue: 100 })};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#ffcd64";
 *   background: "#ffcd64";
 * }
 */
function rgb(value, green, blue) {
  if (typeof value === 'number' && typeof green === 'number' && typeof blue === 'number') {
    return reduceHexValue("#" + numberToHex(value) + numberToHex(green) + numberToHex(blue));
  } else if (typeof value === 'object' && green === undefined && blue === undefined) {
    return reduceHexValue("#" + numberToHex(value.red) + numberToHex(value.green) + numberToHex(value.blue));
  }

  throw new PolishedError(6);
}

/**
 * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.
 *
 * Can also be used to fade a color by passing a hex value or named CSS color along with an alpha value.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: rgba(255, 205, 100, 0.7),
 *   background: rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 }),
 *   background: rgba(255, 205, 100, 1),
 *   background: rgba('#ffffff', 0.4),
 *   background: rgba('black', 0.7),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${rgba(255, 205, 100, 0.7)};
 *   background: ${rgba({ red: 255, green: 205, blue: 100, alpha: 0.7 })};
 *   background: ${rgba(255, 205, 100, 1)};
 *   background: ${rgba('#ffffff', 0.4)};
 *   background: ${rgba('black', 0.7)};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "rgba(255,205,100,0.7)";
 *   background: "rgba(255,205,100,0.7)";
 *   background: "#ffcd64";
 *   background: "rgba(255,255,255,0.4)";
 *   background: "rgba(0,0,0,0.7)";
 * }
 */
function rgba(firstValue, secondValue, thirdValue, fourthValue) {
  if (typeof firstValue === 'string' && typeof secondValue === 'number') {
    var rgbValue = parseToRgb(firstValue);
    return "rgba(" + rgbValue.red + "," + rgbValue.green + "," + rgbValue.blue + "," + secondValue + ")";
  } else if (typeof firstValue === 'number' && typeof secondValue === 'number' && typeof thirdValue === 'number' && typeof fourthValue === 'number') {
    return fourthValue >= 1 ? rgb(firstValue, secondValue, thirdValue) : "rgba(" + firstValue + "," + secondValue + "," + thirdValue + "," + fourthValue + ")";
  } else if (typeof firstValue === 'object' && secondValue === undefined && thirdValue === undefined && fourthValue === undefined) {
    return firstValue.alpha >= 1 ? rgb(firstValue.red, firstValue.green, firstValue.blue) : "rgba(" + firstValue.red + "," + firstValue.green + "," + firstValue.blue + "," + firstValue.alpha + ")";
  }

  throw new PolishedError(7);
}

// Type definitions taken from https://github.com/gcanti/flow-static-land/blob/master/src/Fun.js
// eslint-disable-next-line no-unused-vars
// eslint-disable-next-line no-unused-vars
// eslint-disable-next-line no-redeclare
function curried(f, length, acc) {
  return function fn() {
    // eslint-disable-next-line prefer-rest-params
    var combined = acc.concat(Array.prototype.slice.call(arguments));
    return combined.length >= length ? f.apply(this, combined) : curried(f, length, combined);
  };
} // eslint-disable-next-line no-redeclare


function curry(f) {
  // eslint-disable-line no-redeclare
  return curried(f, f.length, []);
}

function guard(lowerBoundary, upperBoundary, value) {
  return Math.max(lowerBoundary, Math.min(upperBoundary, value));
}

/**
 * Returns a number (float) representing the luminance of a color.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff',
 *   background: getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?
 *                             'rgba(58, 133, 255, 1)' :
 *                             'rgba(255, 57, 149, 1)',
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${getLuminance('#CCCD64') >= getLuminance('#0000ff') ? '#CCCD64' : '#0000ff'};
 *   background: ${getLuminance('rgba(58, 133, 255, 1)') >= getLuminance('rgba(255, 57, 149, 1)') ?
 *                             'rgba(58, 133, 255, 1)' :
 *                             'rgba(255, 57, 149, 1)'};
 *
 * // CSS in JS Output
 *
 * div {
 *   background: "#CCCD64";
 *   background: "rgba(58, 133, 255, 1)";
 * }
 */

function getLuminance(color) {
  if (color === 'transparent') return 0;
  var rgbColor = parseToRgb(color);

  var _Object$keys$map = Object.keys(rgbColor).map(function (key) {
    var channel = rgbColor[key] / 255;
    return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);
  }),
      r = _Object$keys$map[0],
      g = _Object$keys$map[1],
      b = _Object$keys$map[2];

  return parseFloat((0.2126 * r + 0.7152 * g + 0.0722 * b).toFixed(3));
}

/**
 * Mixes the two provided colors together by calculating the average of each of the RGB components weighted to the first color by the provided weight.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: mix(0.5, '#f00', '#00f')
 *   background: mix(0.25, '#f00', '#00f')
 *   background: mix('0.5', 'rgba(255, 0, 0, 0.5)', '#00f')
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${mix(0.5, '#f00', '#00f')};
 *   background: ${mix(0.25, '#f00', '#00f')};
 *   background: ${mix('0.5', 'rgba(255, 0, 0, 0.5)', '#00f')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#7f007f";
 *   background: "#3f00bf";
 *   background: "rgba(63, 0, 191, 0.75)";
 * }
 */

function mix(weight, color, otherColor) {
  if (color === 'transparent') return otherColor;
  if (otherColor === 'transparent') return color;
  var parsedColor1 = parseToRgb(color);

  var color1 = _extends({}, parsedColor1, {
    alpha: typeof parsedColor1.alpha === 'number' ? parsedColor1.alpha : 1
  });

  var parsedColor2 = parseToRgb(otherColor);

  var color2 = _extends({}, parsedColor2, {
    alpha: typeof parsedColor2.alpha === 'number' ? parsedColor2.alpha : 1 // The formular is copied from the original Sass implementation:
    // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method

  });

  var alphaDelta = color1.alpha - color2.alpha;
  var x = parseFloat(weight) * 2 - 1;
  var y = x * alphaDelta === -1 ? x : x + alphaDelta;
  var z = 1 + x * alphaDelta;
  var weight1 = (y / z + 1) / 2.0;
  var weight2 = 1 - weight1;
  var mixedColor = {
    red: Math.floor(color1.red * weight1 + color2.red * weight2),
    green: Math.floor(color1.green * weight1 + color2.green * weight2),
    blue: Math.floor(color1.blue * weight1 + color2.blue * weight2),
    alpha: color1.alpha + (color2.alpha - color1.alpha) * (parseFloat(weight) / 1.0)
  };
  return rgba(mixedColor);
} // prettier-ignore


var curriedMix =
/*#__PURE__*/
curry
/* ::<number | string, string, string, string> */
(mix);

/**
 * Returns black or white (or optional light and dark return colors) for best contrast depending on the luminosity of the given color.
 * Follows [W3C specs for readability](https://www.w3.org/TR/WCAG20-TECHS/G18.html).
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   color: readableColor('#000'),
 *   color: readableColor('black', '#001', '#ff8'),
 *   color: readableColor('white', '#001', '#ff8'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   color: ${readableColor('#000')};
 *   color: ${readableColor('black', '#001', '#ff8')};
 *   color: ${readableColor('white', '#001', '#ff8')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   color: "#fff";
 *   color: "#ff8";
 *   color: "#001";
 * }
 */

function readableColor(color, lightReturnColor, darkReturnColor) {
  if (lightReturnColor === void 0) {
    lightReturnColor = '#000';
  }

  if (darkReturnColor === void 0) {
    darkReturnColor = '#fff';
  }

  return getLuminance(color) > 0.179 ? lightReturnColor : darkReturnColor;
}

/**
 * Shades a color by mixing it with black. `shade` can produce
 * hue shifts, where as `darken` manipulates the luminance channel and therefore
 * doesn't produce hue shifts.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: shade(0.25, '#00f')
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${shade(0.25, '#00f')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#00003f";
 * }
 */

function shade(percentage, color) {
  if (color === 'transparent') return color;
  return curriedMix(parseFloat(percentage), 'rgb(0, 0, 0)', color);
} // prettier-ignore


var curriedShade =
/*#__PURE__*/
curry
/* ::<number | string, string, string> */
(shade);

/**
 * Tints a color by mixing it with white. `tint` can produce
 * hue shifts, where as `lighten` manipulates the luminance channel and therefore
 * doesn't produce hue shifts.
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: tint(0.25, '#00f')
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${tint(0.25, '#00f')};
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "#bfbfff";
 * }
 */

function tint(percentage, color) {
  if (color === 'transparent') return color;
  return curriedMix(parseFloat(percentage), 'rgb(255, 255, 255)', color);
} // prettier-ignore


var curriedTint =
/*#__PURE__*/
curry
/* ::<number | string, string, string> */
(tint);

/**
 * Decreases the opacity of a color. Its range for the amount is between 0 to 1.
 *
 *
 * @example
 * // Styles as object usage
 * const styles = {
 *   background: transparentize(0.1, '#fff');
 *   background: transparentize(0.2, 'hsl(0, 0%, 100%)'),
 *   background: transparentize('0.5', 'rgba(255, 0, 0, 0.8)'),
 * }
 *
 * // styled-components usage
 * const div = styled.div`
 *   background: ${transparentize(0.1, '#fff')};
 *   background: ${transparentize(0.2, 'hsl(0, 0%, 100%)')},
 *   background: ${transparentize('0.5', 'rgba(255, 0, 0, 0.8)')},
 * `
 *
 * // CSS in JS Output
 *
 * element {
 *   background: "rgba(255,255,255,0.9)";
 *   background: "rgba(255,255,255,0.8)";
 *   background: "rgba(255,0,0,0.3)";
 * }
 */

function transparentize(amount, color) {
  if (color === 'transparent') return color;
  var parsedColor = parseToRgb(color);
  var alpha = typeof parsedColor.alpha === 'number' ? parsedColor.alpha : 1;

  var colorWithAlpha = _extends({}, parsedColor, {
    alpha: guard(0, 1, (alpha * 100 - parseFloat(amount) * 100) / 100)
  });

  return rgba(colorWithAlpha);
} // prettier-ignore


var curriedTransparentize =
/*#__PURE__*/
curry
/* ::<number | string, string, string> */
(transparentize);

var baseColors = {
  black: '#000',
  white: '#FFF',
  blue: '#36ADF1',
  green: '#28C081',
  yellow: '#FD9D28',
  red: '#DC2C10',
  blurple: '#4E3FCE',
  consensysblue: '#3259D6'
}; // rimble palette

var colors = {
  blurple: {
    base: baseColors.blurple,
    text: readableColor(baseColors.blurple),
    light: [null, curriedTint(0.2, baseColors.blurple)],
    dark: [null, curriedShade(0.2, baseColors.blurple)]
  },
  blue: {
    base: baseColors.blue,
    text: readableColor(baseColors.blue),
    light: [null, curriedTint(0.9, baseColors.blue)],
    dark: [null, curriedShade(0.4, baseColors.blue)]
  },
  green: {
    base: baseColors.green,
    text: baseColors.white,
    light: [null, curriedTint(0.9, baseColors.green)],
    dark: [null, curriedShade(0.4, baseColors.green)]
  },
  yellow: {
    base: baseColors.yellow,
    text: readableColor(baseColors.yellow),
    light: [null, curriedTint(0.9, baseColors.yellow)],
    dark: [null, curriedShade(0.4, baseColors.yellow)]
  },
  red: {
    base: baseColors.red,
    text: readableColor(baseColors.red),
    light: [null, curriedTint(0.9, baseColors.red)],
    dark: [null, curriedShade(0.4, baseColors.red)]
  }
};
var blurple = colors.blurple;
var blue = colors.blue;
var green = colors.green;
var yellow = colors.yellow;
var red = colors.red;

var colors$1 = {
  text: '#3F3D4B',
  background: '#fff',
  primary: blurple.base,
  'primary-light': blurple.light[1],
  'primary-dark': blurple.dark[1],
  blue: baseColors.consensysblue,
  black: '#000',
  'near-black': '#111',
  'dark-gray': '#333',
  'mid-gray': '#555',
  // maybe we don't need 'grey' here
  grey: '#CCC',
  silver: '#999',
  'light-silver': '#aaa',
  'moon-gray': '#ccc',
  'light-gray': '#eee',
  'near-white': '#f4f4f4',
  white: '#fff',
  transparent: 'transparent',
  blacks: ['rgba(0,0,0,.0125)', 'rgba(0,0,0,.025)', 'rgba(0,0,0,.05)', 'rgba(0,0,0,.1)', 'rgba(0,0,0,.2)', 'rgba(0,0,0,.3)', 'rgba(0,0,0,.4)', 'rgba(0,0,0,.5)', 'rgba(0,0,0,.6)', 'rgba(0,0,0,.7)', 'rgba(0,0,0,.8)', 'rgba(0,0,0,.9)'],
  whites: ['rgba(255,255,255,.0125)', 'rgba(255,255,255,.025)', 'rgba(255,255,255,.05)', 'rgba(255,255,255,.1)', 'rgba(255,255,255,.2)', 'rgba(255,255,255,.3)', 'rgba(255,255,255,.4)', 'rgba(255,255,255,.5)', 'rgba(255,255,255,.6)', 'rgba(255,255,255,.7)', 'rgba(255,255,255,.8)', 'rgba(255,255,255,.9)'],
  success: green.base,
  warning: yellow.base,
  danger: red.base,
  info: blue.base
}; // theme.js

var theme = {
  colors: colors$1,
  space: [0, 4, 8, 16, 32, 64, 128, 256],
  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64],
  fontWeights: [0, 300, 400, 600, 700],
  letterSpacings: [0, 1, 2, 4, 8],
  lineHeights: {
    solid: 1,
    title: 1.25,
    copy: 1.5
  },
  fonts: {
    serif: 'athelas, georgia, times, serif',
    sansSerif: '"Source Sans Pro", -apple-system, sans-serif',
    mono: '"Source Code Pro", -apple-system, monospace'
  },
  radii: ['0', '4px', '8px', '16px', '32px'],
  borders: [0, '1px solid transparent'],
  borderWidths: ['0', '1px', '2px', '4px'],
  breakpoints: ['40em', '52em', '64em'],
  shadows: ['0', '0px 2px 4px rgba(0, 0, 0, 0.1)', '0px 8px 16px rgba(0, 0, 0, 0.1)', '0 7px 14px rgba(50,50,93,.1)'],
  opacity: {
    disabled: 0.4
  },
  zIndices: [0, 9, 99, 999, 9999],
  messageStyle: {
    base: {
      color: colors$1['mid-gray'],
      backgroundColor: colors$1['near-white'],
      borderColor: colors$1['light-silver']
    },
    success: {
      color: green.dark[1],
      backgroundColor: green.light[1],
      borderColor: green.base
    },
    warning: {
      color: yellow.dark[1],
      backgroundColor: yellow.light[1],
      borderColor: yellow.base
    },
    danger: {
      color: red.dark[1],
      backgroundColor: red.light[1],
      borderColor: red.base
    },
    info: {
      color: blue.dark[1],
      backgroundColor: blue.light[1],
      borderColor: blue.base
    }
  },
  buttons: {
    primary: {
      color: blurple.text,
      backgroundColor: blurple.base,
      // use css custom props
      '--main-color': blurple.base,
      '--contrast-color': blurple.text
    },
    success: {
      '--main-color': green.base,
      '--contrast-color': green.text
    },
    danger: {
      '--main-color': red.base,
      '--contrast-color': red.text
    }
  },
  buttonSizes: {
    small: {
      fontSize: '0.75rem',
      height: '2rem',
      minWidth: '2rem',
      padding: '0 1rem'
    },
    medium: {
      fontSize: '1rem',
      height: '3rem',
      minWidth: '3rem'
    },
    large: {
      fontSize: '1.5rem',
      height: '4rem',
      minWidth: '4rem'
    }
  }
};

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends$1() {
  _extends$1 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$1.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf$1(subClass, superClass);
}

function _getPrototypeOf$1(o) {
  _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf$1(o);
}

function _setPrototypeOf$1(o, p) {
  _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf$1(o, p);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _assertThisInitialized$1(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized$1(self);
}

function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var ThemeProvider = function ThemeProvider(_ref) {
  var children = _ref.children,
      theme = _ref.theme,
      rest = _objectWithoutProperties(_ref, ["children", "theme"]);

  return React__default.createElement(ThemeProvider$1, _extends$1({
    theme: theme
  }, rest), children);
};

ThemeProvider.propTypes = {
  theme: PropTypes.object
};
ThemeProvider.defaultProps = {
  theme: theme
};
ThemeProvider.displayName = 'ThemeProvider';

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

var merge = function merge(a, b) {
  var result = objectAssign({}, a, b);

  for (var key in a) {
    var _assign;

    if (!a[key] || typeof b[key] !== 'object') continue;
    objectAssign(result, (_assign = {}, _assign[key] = objectAssign(a[key], b[key]), _assign));
  }

  return result;
}; // sort object-value responsive styles

var sort = function sort(obj) {
  var next = {};
  Object.keys(obj).sort(function (a, b) {
    return a.localeCompare(b, undefined, {
      numeric: true,
      sensitivity: 'base'
    });
  }).forEach(function (key) {
    next[key] = obj[key];
  });
  return next;
};

var defaults = {
  breakpoints: [40, 52, 64].map(function (n) {
    return n + 'em';
  })
};

var createMediaQuery = function createMediaQuery(n) {
  return "@media screen and (min-width: " + n + ")";
};

var getValue = function getValue(n, scale) {
  return get(scale, n, n);
};

var get = function get(obj, key, def, p, undef) {
  key = key && key.split ? key.split('.') : [key];

  for (p = 0; p < key.length; p++) {
    obj = obj ? obj[key[p]] : undef;
  }

  return obj === undef ? def : obj;
};
var createParser = function createParser(config) {
  var cache = {};

  var parse = function parse(props) {
    var styles = {};
    var shouldSort = false;
    var isCacheDisabled = props.theme && props.theme.disableStyledSystemCache;

    for (var key in props) {
      if (!config[key]) continue;
      var sx = config[key];
      var raw = props[key];
      var scale = get(props.theme, sx.scale, sx.defaults);

      if (typeof raw === 'object') {
        cache.breakpoints = !isCacheDisabled && cache.breakpoints || get(props.theme, 'breakpoints', defaults.breakpoints);

        if (Array.isArray(raw)) {
          cache.media = !isCacheDisabled && cache.media || [null].concat(cache.breakpoints.map(createMediaQuery));
          styles = merge(styles, parseResponsiveStyle(cache.media, sx, scale, raw, props));
          continue;
        }

        if (raw !== null) {
          styles = merge(styles, parseResponsiveObject(cache.breakpoints, sx, scale, raw, props));
          shouldSort = true;
        }

        continue;
      }

      objectAssign(styles, sx(raw, scale, props));
    } // sort object-based responsive styles


    if (shouldSort) {
      styles = sort(styles);
    }

    return styles;
  };

  parse.config = config;
  parse.propNames = Object.keys(config);
  parse.cache = cache;
  var keys = Object.keys(config).filter(function (k) {
    return k !== 'config';
  });

  if (keys.length > 1) {
    keys.forEach(function (key) {
      var _createParser;

      parse[key] = createParser((_createParser = {}, _createParser[key] = config[key], _createParser));
    });
  }

  return parse;
};

var parseResponsiveStyle = function parseResponsiveStyle(mediaQueries, sx, scale, raw, _props) {
  var styles = {};
  raw.slice(0, mediaQueries.length).forEach(function (value, i) {
    var media = mediaQueries[i];
    var style = sx(value, scale, _props);

    if (!media) {
      objectAssign(styles, style);
    } else {
      var _assign2;

      objectAssign(styles, (_assign2 = {}, _assign2[media] = objectAssign({}, styles[media], style), _assign2));
    }
  });
  return styles;
};

var parseResponsiveObject = function parseResponsiveObject(breakpoints, sx, scale, raw, _props) {
  var styles = {};

  for (var key in raw) {
    var breakpoint = breakpoints[key];
    var value = raw[key];
    var style = sx(value, scale, _props);

    if (!breakpoint) {
      objectAssign(styles, style);
    } else {
      var _assign3;

      var media = createMediaQuery(breakpoint);
      objectAssign(styles, (_assign3 = {}, _assign3[media] = objectAssign({}, styles[media], style), _assign3));
    }
  }

  return styles;
};

var createStyleFunction = function createStyleFunction(_ref) {
  var properties = _ref.properties,
      property = _ref.property,
      scale = _ref.scale,
      _ref$transform = _ref.transform,
      transform = _ref$transform === void 0 ? getValue : _ref$transform,
      defaultScale = _ref.defaultScale;
  properties = properties || [property];

  var sx = function sx(value, scale, _props) {
    var result = {};
    var n = transform(value, scale, _props);
    if (n === null) return;
    properties.forEach(function (prop) {
      result[prop] = n;
    });
    return result;
  };

  sx.scale = scale;
  sx.defaults = defaultScale;
  return sx;
}; // new v5 API

var system = function system(args) {
  if (args === void 0) {
    args = {};
  }

  var config = {};
  Object.keys(args).forEach(function (key) {
    var conf = args[key];

    if (conf === true) {
      // shortcut definition
      config[key] = createStyleFunction({
        property: key,
        scale: key
      });
      return;
    }

    if (typeof conf === 'function') {
      config[key] = conf;
      return;
    }

    config[key] = createStyleFunction(conf);
  });
  var parser = createParser(config);
  return parser;
};
var compose = function compose() {
  var config = {};

  for (var _len = arguments.length, parsers = new Array(_len), _key = 0; _key < _len; _key++) {
    parsers[_key] = arguments[_key];
  }

  parsers.forEach(function (parser) {
    if (!parser || !parser.config) return;
    objectAssign(config, parser.config);
  });
  var parser = createParser(config);
  return parser;
};

var isNumber = function isNumber(n) {
  return typeof n === 'number' && !isNaN(n);
};

var getWidth = function getWidth(n, scale) {
  return get(scale, n, !isNumber(n) || n > 1 ? n : n * 100 + '%');
};

var config = {
  width: {
    property: 'width',
    scale: 'sizes',
    transform: getWidth
  },
  height: {
    property: 'height',
    scale: 'sizes'
  },
  minWidth: {
    property: 'minWidth',
    scale: 'sizes'
  },
  minHeight: {
    property: 'minHeight',
    scale: 'sizes'
  },
  maxWidth: {
    property: 'maxWidth',
    scale: 'sizes'
  },
  maxHeight: {
    property: 'maxHeight',
    scale: 'sizes'
  },
  size: {
    properties: ['width', 'height'],
    scale: 'sizes'
  },
  overflow: true,
  overflowX: true,
  overflowY: true,
  display: true,
  verticalAlign: true
};
var layout = system(config);

var config$1 = {
  color: {
    property: 'color',
    scale: 'colors'
  },
  backgroundColor: {
    property: 'backgroundColor',
    scale: 'colors'
  },
  opacity: true
};
config$1.bg = config$1.backgroundColor;
var color = system(config$1);

var defaults$1 = {
  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72]
};
var config$2 = {
  fontFamily: {
    property: 'fontFamily',
    scale: 'fonts'
  },
  fontSize: {
    property: 'fontSize',
    scale: 'fontSizes',
    defaultScale: defaults$1.fontSizes
  },
  fontWeight: {
    property: 'fontWeight',
    scale: 'fontWeights'
  },
  lineHeight: {
    property: 'lineHeight',
    scale: 'lineHeights'
  },
  letterSpacing: {
    property: 'letterSpacing',
    scale: 'letterSpacings'
  },
  textAlign: true,
  fontStyle: true
};
var typography = system(config$2);

var config$3 = {
  alignItems: true,
  alignContent: true,
  justifyItems: true,
  justifyContent: true,
  flexWrap: true,
  flexDirection: true,
  // item
  flex: true,
  flexGrow: true,
  flexShrink: true,
  flexBasis: true,
  justifySelf: true,
  alignSelf: true,
  order: true
};
var flexbox = system(config$3);

var defaults$2 = {
  space: [0, 4, 8, 16, 32, 64, 128, 256, 512]
};
var config$4 = {
  gridGap: {
    property: 'gridGap',
    scale: 'space',
    defaultScale: defaults$2.space
  },
  gridColumnGap: {
    property: 'gridColumnGap',
    scale: 'space',
    defaultScale: defaults$2.space
  },
  gridRowGap: {
    property: 'gridRowGap',
    scale: 'space',
    defaultScale: defaults$2.space
  },
  gridColumn: true,
  gridRow: true,
  gridAutoFlow: true,
  gridAutoColumns: true,
  gridAutoRows: true,
  gridTemplateColumns: true,
  gridTemplateRows: true,
  gridTemplateAreas: true,
  gridArea: true
};
var grid = system(config$4);

var config$5 = {
  border: {
    property: 'border',
    scale: 'borders'
  },
  borderWidth: {
    property: 'borderWidth',
    scale: 'borderWidths'
  },
  borderStyle: {
    property: 'borderStyle',
    scale: 'borderStyles'
  },
  borderColor: {
    property: 'borderColor',
    scale: 'colors'
  },
  borderRadius: {
    property: 'borderRadius',
    scale: 'radii'
  },
  borderTop: {
    property: 'borderTop',
    scale: 'borders'
  },
  borderTopLeftRadius: {
    property: 'borderTopLeftRadius',
    scale: 'radii'
  },
  borderTopRightRadius: {
    property: 'borderTopRightRadius',
    scale: 'radii'
  },
  borderRight: {
    property: 'borderRight',
    scale: 'borders'
  },
  borderBottom: {
    property: 'borderBottom',
    scale: 'borders'
  },
  borderBottomLeftRadius: {
    property: 'borderBottomLeftRadius',
    scale: 'radii'
  },
  borderBottomRightRadius: {
    property: 'borderBottomRightRadius',
    scale: 'radii'
  },
  borderLeft: {
    property: 'borderLeft',
    scale: 'borders'
  },
  borderX: {
    properties: ['borderLeft', 'borderRight'],
    scale: 'borders'
  },
  borderY: {
    properties: ['borderTop', 'borderBottom'],
    scale: 'borders'
  }
};
config$5.borderTopWidth = {
  property: 'borderTopWidth',
  scale: 'borderWidths'
};
config$5.borderTopColor = {
  property: 'borderTopColor',
  scale: 'colors'
};
config$5.borderTopStyle = {
  property: 'borderTopStyle',
  scale: 'borderStyles'
};
config$5.borderTopLeftRadius = {
  property: 'borderTopLeftRadius',
  scale: 'radii'
};
config$5.borderTopRightRadius = {
  property: 'borderTopRightRadius',
  scale: 'radii'
};
config$5.borderBottomWidth = {
  property: 'borderBottomWidth',
  scale: 'borderWidths'
};
config$5.borderBottomColor = {
  property: 'borderBottomColor',
  scale: 'colors'
};
config$5.borderBottomStyle = {
  property: 'borderBottomStyle',
  scale: 'borderStyles'
};
config$5.borderBottomLeftRadius = {
  property: 'borderBottomLeftRadius',
  scale: 'radii'
};
config$5.borderBottomRightRadius = {
  property: 'borderBottomRightRadius',
  scale: 'radii'
};
config$5.borderLeftWidth = {
  property: 'borderLeftWidth',
  scale: 'borderWidths'
};
config$5.borderLeftColor = {
  property: 'borderLeftColor',
  scale: 'colors'
};
config$5.borderLeftStyle = {
  property: 'borderLeftStyle',
  scale: 'borderStyles'
};
config$5.borderRightWidth = {
  property: 'borderRightWidth',
  scale: 'borderWidths'
};
config$5.borderRightColor = {
  property: 'borderRightColor',
  scale: 'colors'
};
config$5.borderRightStyle = {
  property: 'borderRightStyle',
  scale: 'borderStyles'
};
var border = system(config$5);

var config$6 = {
  background: true,
  backgroundImage: true,
  backgroundSize: true,
  backgroundPosition: true,
  backgroundRepeat: true
};
config$6.bgImage = config$6.backgroundImage;
config$6.bgSize = config$6.backgroundSize;
config$6.bgPosition = config$6.backgroundPosition;
config$6.bgRepeat = config$6.backgroundRepeat;
var background = system(config$6);

var defaults$3 = {
  space: [0, 4, 8, 16, 32, 64, 128, 256, 512]
};
var config$7 = {
  position: true,
  zIndex: {
    property: 'zIndex',
    scale: 'zIndices'
  },
  top: {
    property: 'top',
    scale: 'space',
    defaultScale: defaults$3.space
  },
  right: {
    property: 'right',
    scale: 'space',
    defaultScale: defaults$3.space
  },
  bottom: {
    property: 'bottom',
    scale: 'space',
    defaultScale: defaults$3.space
  },
  left: {
    property: 'left',
    scale: 'space',
    defaultScale: defaults$3.space
  }
};
var position = system(config$7);

var defaults$4 = {
  space: [0, 4, 8, 16, 32, 64, 128, 256, 512]
};

var isNumber$1 = function isNumber(n) {
  return typeof n === 'number' && !isNaN(n);
};

var getMargin = function getMargin(n, scale) {
  if (!isNumber$1(n)) {
    return get(scale, n, n);
  }

  var isNegative = n < 0;
  var absolute = Math.abs(n);
  var value = get(scale, absolute, absolute);

  if (!isNumber$1(value)) {
    return isNegative ? '-' + value : value;
  }

  return value * (isNegative ? -1 : 1);
};

var configs = {};
configs.margin = {
  margin: {
    property: 'margin',
    scale: 'space',
    transform: getMargin,
    defaultScale: defaults$4.space
  },
  marginTop: {
    property: 'marginTop',
    scale: 'space',
    transform: getMargin,
    defaultScale: defaults$4.space
  },
  marginRight: {
    property: 'marginRight',
    scale: 'space',
    transform: getMargin,
    defaultScale: defaults$4.space
  },
  marginBottom: {
    property: 'marginBottom',
    scale: 'space',
    transform: getMargin,
    defaultScale: defaults$4.space
  },
  marginLeft: {
    property: 'marginLeft',
    scale: 'space',
    transform: getMargin,
    defaultScale: defaults$4.space
  },
  marginX: {
    properties: ['marginLeft', 'marginRight'],
    scale: 'space',
    transform: getMargin,
    defaultScale: defaults$4.space
  },
  marginY: {
    properties: ['marginTop', 'marginBottom'],
    scale: 'space',
    transform: getMargin,
    defaultScale: defaults$4.space
  }
};
configs.margin.m = configs.margin.margin;
configs.margin.mt = configs.margin.marginTop;
configs.margin.mr = configs.margin.marginRight;
configs.margin.mb = configs.margin.marginBottom;
configs.margin.ml = configs.margin.marginLeft;
configs.margin.mx = configs.margin.marginX;
configs.margin.my = configs.margin.marginY;
configs.padding = {
  padding: {
    property: 'padding',
    scale: 'space',
    defaultScale: defaults$4.space
  },
  paddingTop: {
    property: 'paddingTop',
    scale: 'space',
    defaultScale: defaults$4.space
  },
  paddingRight: {
    property: 'paddingRight',
    scale: 'space',
    defaultScale: defaults$4.space
  },
  paddingBottom: {
    property: 'paddingBottom',
    scale: 'space',
    defaultScale: defaults$4.space
  },
  paddingLeft: {
    property: 'paddingLeft',
    scale: 'space',
    defaultScale: defaults$4.space
  },
  paddingX: {
    properties: ['paddingLeft', 'paddingRight'],
    scale: 'space',
    defaultScale: defaults$4.space
  },
  paddingY: {
    properties: ['paddingTop', 'paddingBottom'],
    scale: 'space',
    defaultScale: defaults$4.space
  }
};
configs.padding.p = configs.padding.padding;
configs.padding.pt = configs.padding.paddingTop;
configs.padding.pr = configs.padding.paddingRight;
configs.padding.pb = configs.padding.paddingBottom;
configs.padding.pl = configs.padding.paddingLeft;
configs.padding.px = configs.padding.paddingX;
configs.padding.py = configs.padding.paddingY;
var margin = system(configs.margin);
var padding = system(configs.padding);
var space = compose(margin, padding);

var shadow = system({
  boxShadow: {
    property: 'boxShadow',
    scale: 'shadows'
  },
  textShadow: {
    property: 'textShadow',
    scale: 'shadows'
  }
});

function _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }

// based on https://github.com/developit/dlv
var get$1 = function get(obj, key, def, p, undef) {
  key = key && key.split ? key.split('.') : [key];

  for (p = 0; p < key.length; p++) {
    obj = obj ? obj[key[p]] : undef;
  }

  return obj === undef ? def : obj;
};
var defaultBreakpoints = [40, 52, 64].map(function (n) {
  return n + 'em';
});
var defaultTheme = {
  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],
  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72]
};
var aliases = {
  bg: 'backgroundColor',
  m: 'margin',
  mt: 'marginTop',
  mr: 'marginRight',
  mb: 'marginBottom',
  ml: 'marginLeft',
  mx: 'marginX',
  my: 'marginY',
  p: 'padding',
  pt: 'paddingTop',
  pr: 'paddingRight',
  pb: 'paddingBottom',
  pl: 'paddingLeft',
  px: 'paddingX',
  py: 'paddingY'
};
var multiples = {
  marginX: ['marginLeft', 'marginRight'],
  marginY: ['marginTop', 'marginBottom'],
  paddingX: ['paddingLeft', 'paddingRight'],
  paddingY: ['paddingTop', 'paddingBottom'],
  size: ['width', 'height']
};
var scales = {
  color: 'colors',
  backgroundColor: 'colors',
  borderColor: 'colors',
  margin: 'space',
  marginTop: 'space',
  marginRight: 'space',
  marginBottom: 'space',
  marginLeft: 'space',
  marginX: 'space',
  marginY: 'space',
  padding: 'space',
  paddingTop: 'space',
  paddingRight: 'space',
  paddingBottom: 'space',
  paddingLeft: 'space',
  paddingX: 'space',
  paddingY: 'space',
  top: 'space',
  right: 'space',
  bottom: 'space',
  left: 'space',
  gridGap: 'space',
  gridColumnGap: 'space',
  gridRowGap: 'space',
  gap: 'space',
  columnGap: 'space',
  rowGap: 'space',
  fontFamily: 'fonts',
  fontSize: 'fontSizes',
  fontWeight: 'fontWeights',
  lineHeight: 'lineHeights',
  letterSpacing: 'letterSpacings',
  border: 'borders',
  borderTop: 'borders',
  borderRight: 'borders',
  borderBottom: 'borders',
  borderLeft: 'borders',
  borderWidth: 'borderWidths',
  borderStyle: 'borderStyles',
  borderRadius: 'radii',
  borderTopRightRadius: 'radii',
  borderTopLeftRadius: 'radii',
  borderBottomRightRadius: 'radii',
  borderBottomLeftRadius: 'radii',
  borderTopWidth: 'borderWidths',
  borderTopColor: 'colors',
  borderTopStyle: 'borderStyles',
  borderBottomWidth: 'borderWidths',
  borderBottomColor: 'colors',
  borderBottomStyle: 'borderStyles',
  borderLeftWidth: 'borderWidths',
  borderLeftColor: 'colors',
  borderLeftStyle: 'borderStyles',
  borderRightWidth: 'borderWidths',
  borderRightColor: 'colors',
  borderRightStyle: 'borderStyles',
  outlineColor: 'colors',
  boxShadow: 'shadows',
  textShadow: 'shadows',
  zIndex: 'zIndices',
  width: 'sizes',
  minWidth: 'sizes',
  maxWidth: 'sizes',
  height: 'sizes',
  minHeight: 'sizes',
  maxHeight: 'sizes',
  flexBasis: 'sizes',
  size: 'sizes',
  // svg
  fill: 'colors',
  stroke: 'colors'
};

var positiveOrNegative = function positiveOrNegative(scale, value) {
  if (typeof value !== 'number' || value >= 0) {
    return get$1(scale, value, value);
  }

  var absolute = Math.abs(value);
  var n = get$1(scale, absolute, absolute);
  if (typeof n === 'string') return '-' + n;
  return n * -1;
};

var transforms = ['margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'top', 'bottom', 'left', 'right'].reduce(function (acc, curr) {
  var _extends2;

  return _extends$2({}, acc, (_extends2 = {}, _extends2[curr] = positiveOrNegative, _extends2));
}, {});
var responsive = function responsive(styles) {
  return function (theme) {
    var next = {};
    var breakpoints = get$1(theme, 'breakpoints', defaultBreakpoints);
    var mediaQueries = [null].concat(breakpoints.map(function (n) {
      return "@media screen and (min-width: " + n + ")";
    }));

    for (var key in styles) {
      var value = typeof styles[key] === 'function' ? styles[key](theme) : styles[key];
      if (value == null) continue;

      if (!Array.isArray(value)) {
        next[key] = value;
        continue;
      }

      for (var i = 0; i < value.slice(0, mediaQueries.length).length; i++) {
        var media = mediaQueries[i];

        if (!media) {
          next[key] = value[i];
          continue;
        }

        next[media] = next[media] || {};
        if (value[i] == null) continue;
        next[media][key] = value[i];
      }
    }

    return next;
  };
};
var css = function css(args) {
  return function (props) {
    if (props === void 0) {
      props = {};
    }

    var theme = _extends$2({}, defaultTheme, {}, props.theme || props);

    var result = {};
    var obj = typeof args === 'function' ? args(theme) : args;
    var styles = responsive(obj)(theme);

    for (var key in styles) {
      var x = styles[key];
      var val = typeof x === 'function' ? x(theme) : x;

      if (key === 'variant') {
        var variant = css(get$1(theme, val))(theme);
        result = _extends$2({}, result, {}, variant);
        continue;
      }

      if (val && typeof val === 'object') {
        result[key] = css(val)(theme);
        continue;
      }

      var prop = get$1(aliases, key, key);
      var scaleName = get$1(scales, prop);
      var scale = get$1(theme, scaleName, get$1(theme, prop, {}));
      var transform = get$1(transforms, prop, get$1);
      var value = transform(scale, val, val);

      if (multiples[prop]) {
        var dirs = multiples[prop];

        for (var i = 0; i < dirs.length; i++) {
          result[dirs[i]] = value;
        }
      } else {
        result[prop] = value;
      }
    }

    return result;
  };
};

var variant = function variant(_ref) {
  var _config;

  var scale = _ref.scale,
      _ref$prop = _ref.prop,
      prop = _ref$prop === void 0 ? 'variant' : _ref$prop,
      _ref$variants = _ref.variants,
      variants = _ref$variants === void 0 ? {} : _ref$variants,
      key = _ref.key;
  var sx;

  if (Object.keys(variants).length) {
    sx = function sx(value, scale, props) {
      return css(get(scale, value, null))(props.theme);
    };
  } else {
    sx = function sx(value, scale) {
      return get(scale, value, null);
    };
  }

  sx.scale = scale || key;
  sx.defaults = variants;
  var config = (_config = {}, _config[prop] = sx, _config);
  var parser = createParser(config);
  return parser;
};
var buttonStyle = variant({
  key: 'buttons'
});
var textStyle = variant({
  key: 'textStyles',
  prop: 'textStyle'
});
var colorStyle = variant({
  key: 'colorStyles',
  prop: 'colors'
});

var width = layout.width,
    height = layout.height,
    minWidth = layout.minWidth,
    minHeight = layout.minHeight,
    maxWidth = layout.maxWidth,
    maxHeight = layout.maxHeight,
    size = layout.size,
    verticalAlign = layout.verticalAlign,
    display = layout.display,
    overflow = layout.overflow;
var fontSize = typography.fontSize,
    fontFamily = typography.fontFamily,
    fontWeight = typography.fontWeight,
    lineHeight = typography.lineHeight,
    textAlign = typography.textAlign,
    letterSpacing = typography.letterSpacing;
var alignItems = flexbox.alignItems,
    alignContent = flexbox.alignContent,
    justifyItems = flexbox.justifyItems,
    justifyContent = flexbox.justifyContent,
    flexWrap = flexbox.flexWrap,
    flexDirection = flexbox.flexDirection,
    flex = flexbox.flex,
    flexBasis = flexbox.flexBasis,
    justifySelf = flexbox.justifySelf,
    alignSelf = flexbox.alignSelf,
    order = flexbox.order;
var borderColor = border.borderColor,
    borderRadius = border.borderRadius;
var zIndex = position.zIndex,
    top = position.top,
    right = position.right,
    bottom = position.bottom,
    left = position.left;

var style = function style(_ref) {
  var prop = _ref.prop,
      cssProperty = _ref.cssProperty,
      alias = _ref.alias,
      key = _ref.key,
      transformValue = _ref.transformValue,
      scale = _ref.scale,
      properties = _ref.properties;
  var config = {};
  config[prop] = createStyleFunction({
    properties: properties,
    property: cssProperty || prop,
    scale: key,
    defaultScale: scale,
    transform: transformValue
  });
  if (alias) config[alias] = config[prop];
  var parse = createParser(config);
  return parse;
};

function _extends$3() { _extends$3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3.apply(this, arguments); }
var propType = PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array, PropTypes.object]);
var createPropTypes = function createPropTypes(props) {
  return props.reduce(function (acc, name) {
    var _extends2;

    return _extends$3({}, acc, (_extends2 = {}, _extends2[name] = propType, _extends2));
  }, {});
};
var propTypes = {
  space: createPropTypes(space.propNames),
  color: createPropTypes(color.propNames),
  layout: createPropTypes(layout.propNames),
  typography: createPropTypes(typography.propNames),
  flexbox: createPropTypes(flexbox.propNames),
  border: createPropTypes(border.propNames),
  background: createPropTypes(background.propNames),
  position: createPropTypes(position.propNames),
  grid: createPropTypes(grid.propNames),
  shadow: createPropTypes(shadow.propNames),
  buttonStyle: createPropTypes(buttonStyle.propNames),
  textStyle: createPropTypes(textStyle.propNames),
  colorStyle: createPropTypes(colorStyle.propNames)
};

var themeGet = function themeGet(path, fallback) {
  if (fallback === void 0) {
    fallback = null;
  }

  return function (props) {
    return get(props.theme, path, fallback);
  };
};

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  ", "\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  ", "\n  html {\n    box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    margin: 0;\n    line-height: 1.25;\n  }\n  h1 {\n    font-size: ", "px;\n  }\n  h2 {\n    font-size: ", "px;\n  }\n  h3 {\n    font-size: ", "px;\n  }\n  h4 {\n    font-size: ", "px;\n  }\n  h5 {\n    font-size: ", "px;\n  }\n  h6 {\n    font-size: ", "px;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var GlobalStyle = createGlobalStyle(_templateObject(), normalize(), themeGet('fontSizes.6', ''), themeGet('fontSizes.5', ''), themeGet('fontSizes.4', ''), themeGet('fontSizes.3', ''), themeGet('fontSizes.2', ''), themeGet('fontSizes.1', ''));

var Base = function Base(_ref) {
  var children = _ref.children,
      rest = _objectWithoutProperties(_ref, ["children"]);

  return React__default.createElement("div", rest, React__default.createElement(GlobalStyle, null), children);
};

var styleProps = compose(color, typography);
var BaseStyles = styled(Base)(_templateObject2(), styleProps);
BaseStyles.defaultProps = {
  fontSize: '2',
  fontFamily: 'sansSerif',
  color: 'text',
  theme: theme
};
BaseStyles.propTypes = _objectSpread2({}, propTypes.styleProps, {
  theme: PropTypes.object
});

function _templateObject$1() {
  var data = _taggedTemplateLiteral(["\n  box-sizing: border-box;\n  ", "\n"]);

  _templateObject$1 = function _templateObject() {
    return data;
  };

  return data;
}
var styleProps$1 = compose(color, space, layout, position, flexbox, border, typography, shadow);
var StyledBox = styled('div')(_templateObject$1(), styleProps$1);
StyledBox.defaultProps = {
  theme: theme
};
var Box = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledBox, _extends$1({
    ref: ref
  }, props));
});
Box.propTypes = _objectSpread2({}, propTypes.styleProps, {
  theme: PropTypes.object
});
Box.displayName = 'Box';

var Flex = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(Box, _extends$1({
    ref: ref
  }, props));
});
Flex.defaultProps = {
  display: 'flex'
};
Flex.propTypes = _objectSpread2({}, Box.propTypes);
Flex.displayName = 'Flex';

var Text = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(Box, _extends$1({
    ref: ref
  }, props));
});
Text.defaultProps = {
  fontSize: 2,
  fontWeight: 2,
  lineHeight: 'copy',
  theme: theme
};
Text.propTypes = _objectSpread2({}, Box.propTypes, {
  theme: PropTypes.object
});
Text.displayName = 'Text';

Text.span = function (props) {
  return React__default.createElement(Text, props);
};

Text.span.defaultProps = _objectSpread2({}, Text.defaultProps, {
  as: 'span'
});

Text.p = function (props) {
  return React__default.createElement(Text, props);
};

Text.p.defaultProps = _objectSpread2({}, Text.defaultProps, {
  as: 'p'
});

Text.s = function (props) {
  return React__default.createElement(Text, props);
};

Text.s.defaultProps = _objectSpread2({}, Text.defaultProps, {
  as: 's'
});

var defaultProps = {
  fontWeight: 3,
  lineHeight: 'title'
};
var Heading = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(Box, _extends$1({
    ref: ref
  }, props));
});
Heading.defaultProps = _objectSpread2({}, defaultProps, {
  as: 'h2',
  fontSize: '',
  theme: theme
});
Heading.propTypes = _objectSpread2({}, Box.propTypes, {
  theme: PropTypes.object
});
Heading.displayName = 'Heading'; // H1

Heading.h1 = function (props) {
  return React__default.createElement(Heading, props);
};

Heading.h1.defaultProps = _objectSpread2({}, defaultProps, {
  as: 'h1',
  fontSize: 6
});
Heading.h1.displayName = 'Heading.h1'; // H2

Heading.h2 = function (props) {
  return React__default.createElement(Heading, props);
};

Heading.h2.defaultProps = _objectSpread2({}, defaultProps, {
  as: 'h2',
  fontSize: 5
});
Heading.h2.displayName = 'Heading.h2'; // H3

Heading.h3 = function (props) {
  return React__default.createElement(Heading, props);
};

Heading.h3.defaultProps = _objectSpread2({}, defaultProps, {
  as: 'h3',
  fontSize: 4
});
Heading.h3.displayName = 'Heading.h3'; // H4

Heading.h4 = function (props) {
  return React__default.createElement(Heading, props);
};

Heading.h4.defaultProps = _objectSpread2({}, defaultProps, {
  as: 'h4',
  fontSize: 3
});
Heading.h4.displayName = 'Heading.h4'; // H5

Heading.h5 = function (props) {
  return React__default.createElement(Heading, props);
};

Heading.h5.defaultProps = _objectSpread2({}, defaultProps, {
  as: 'h5',
  fontSize: 2
});
Heading.h5.displayName = 'Heading.h5'; // H6

Heading.h6 = function (props) {
  return React__default.createElement(Heading, props);
};

Heading.h6.defaultProps = _objectSpread2({}, defaultProps, {
  as: 'h6',
  fontSize: 1
});
Heading.h6.displayName = 'Heading.h6';

function _extends$4() { _extends$4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4.apply(this, arguments); }
var Svg = styled("svg")({
  flex: "none"
}, space, color);

var SvgAcUnit = function SvgAcUnit(props) {
  return createElement(Svg, _extends$4({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 11h-4.17l3.24-3.24-1.41-1.42L15 11h-2V9l4.66-4.66-1.42-1.41L13 6.17V2h-2v4.17L7.76 2.93 6.34 4.34 11 9v2H9L4.34 6.34 2.93 7.76 6.17 11H2v2h4.17l-3.24 3.24 1.41 1.42L9 13h2v2l-4.66 4.66 1.42 1.41L11 17.83V22h2v-4.17l3.24 3.24 1.42-1.41L13 15v-2h2l4.66 4.66 1.41-1.42L17.83 13H22z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgAcUnit.displayName = "SvgAcUnit";
SvgAcUnit.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5() { _extends$5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5.apply(this, arguments); }
var Svg$1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAccessAlarm = function SvgAccessAlarm(props) {
  return createElement(Svg$1, _extends$5({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9a9 9 0 000-18zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
  }));
};

SvgAccessAlarm.displayName = "SvgAccessAlarm";
SvgAccessAlarm.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6() { _extends$6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6.apply(this, arguments); }
var Svg$2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAccessAlarms = function SvgAccessAlarms(props) {
  return createElement(Svg$2, _extends$6({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 5.7l-4.6-3.9-1.3 1.5 4.6 3.9L22 5.7zM7.9 3.4L6.6 1.9 2 5.7l1.3 1.5 4.6-3.8zM12.5 8H11v6l4.7 2.9.8-1.2-4-2.4V8zM12 4c-5 0-9 4-9 9s4 9 9 9 9-4 9-9-4-9-9-9zm0 16c-3.9 0-7-3.1-7-7s3.1-7 7-7 7 3.1 7 7-3.1 7-7 7z"
  }));
};

SvgAccessAlarms.displayName = "SvgAccessAlarms";
SvgAccessAlarms.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7() { _extends$7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7.apply(this, arguments); }
var Svg$3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAccessTime = function SvgAccessTime(props) {
  return createElement(Svg$3, _extends$7({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  }));
};

SvgAccessTime.displayName = "SvgAccessTime";
SvgAccessTime.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8() { _extends$8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8.apply(this, arguments); }
var Svg$4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAccessibility = function SvgAccessibility(props) {
  return createElement(Svg$4, _extends$8({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 7h-6v13h-2v-6h-2v6H9V9H3V7h18v2z"
  }));
};

SvgAccessibility.displayName = "SvgAccessibility";
SvgAccessibility.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9() { _extends$9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9.apply(this, arguments); }
var Svg$5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAccessible = function SvgAccessible(props) {
  return createElement(Svg$5, _extends$9({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("circle", {
    cx: 12,
    cy: 4,
    r: 2
  }), createElement("path", {
    d: "M19 13v-2c-1.54.02-3.09-.75-4.07-1.83l-1.29-1.43c-.17-.19-.38-.34-.61-.45-.01 0-.01-.01-.02-.01H13c-.35-.2-.75-.3-1.19-.26C10.76 7.11 10 8.04 10 9.09V15c0 1.1.9 2 2 2h5v5h2v-5.5c0-1.1-.9-2-2-2h-3v-3.45c1.29 1.07 3.25 1.94 5 1.95zm-6.17 5c-.41 1.16-1.52 2-2.83 2-1.66 0-3-1.34-3-3 0-1.31.84-2.41 2-2.83V12.1a5 5 0 105.9 5.9h-2.07z"
  }));
};

SvgAccessible.displayName = "SvgAccessible";
SvgAccessible.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a() { _extends$a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a.apply(this, arguments); }
var Svg$6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAccountBalance = function SvgAccountBalance(props) {
  return createElement(Svg$6, _extends$a({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M4 10v7h3v-7H4zm6 0v7h3v-7h-3zM2 22h19v-3H2v3zm14-12v7h3v-7h-3zm-4.5-9L2 6v2h19V6l-9.5-5z"
  }));
};

SvgAccountBalance.displayName = "SvgAccountBalance";
SvgAccountBalance.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b() { _extends$b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b.apply(this, arguments); }
var Svg$7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAccountBalanceWallet = function SvgAccountBalanceWallet(props) {
  return createElement(Svg$7, _extends$b({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 18v1c0 1.1-.9 2-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h14c1.1 0 2 .9 2 2v1h-9a2 2 0 00-2 2v8a2 2 0 002 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
  }));
};

SvgAccountBalanceWallet.displayName = "SvgAccountBalanceWallet";
SvgAccountBalanceWallet.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c() { _extends$c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c.apply(this, arguments); }
var Svg$8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAccountBox = function SvgAccountBox(props) {
  return createElement(Svg$8, _extends$c({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5v14a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5a2 2 0 00-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgAccountBox.displayName = "SvgAccountBox";
SvgAccountBox.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d() { _extends$d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d.apply(this, arguments); }
var Svg$9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAccountCircle = function SvgAccountCircle(props) {
  return createElement(Svg$9, _extends$d({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2a7.2 7.2 0 01-6-3.22c.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08a7.2 7.2 0 01-6 3.22z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgAccountCircle.displayName = "SvgAccountCircle";
SvgAccountCircle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e() { _extends$e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e.apply(this, arguments); }
var Svg$a = styled("svg")({
  flex: "none"
}, space, color);

var SvgAdb = function SvgAdb(props) {
  return createElement(Svg$a, _extends$e({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M5 16c0 3.87 3.13 7 7 7s7-3.13 7-7v-4H5v4zM16.12 4.37l2.1-2.1-.82-.83-2.3 2.31C14.16 3.28 13.12 3 12 3s-2.16.28-3.09.75L6.6 1.44l-.82.83 2.1 2.1C6.14 5.64 5 7.68 5 10v1h14v-1c0-2.32-1.14-4.36-2.88-5.63zM9 9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm6 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
  }));
};

SvgAdb.displayName = "SvgAdb";
SvgAdb.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f() { _extends$f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f.apply(this, arguments); }
var Svg$b = styled("svg")({
  flex: "none"
}, space, color);

var SvgAdd = function SvgAdd(props) {
  return createElement(Svg$b, _extends$f({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgAdd.displayName = "SvgAdd";
SvgAdd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$g() { _extends$g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g.apply(this, arguments); }
var Svg$c = styled("svg")({
  flex: "none"
}, space, color);

var SvgAddAPhoto = function SvgAddAPhoto(props) {
  return createElement(Svg$c, _extends$g({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 4V1h2v3h3v2H5v3H3V6H0V4h3zm3 6V7h3V4h7l1.83 2H21c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2V10h3zm7 9c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-3.2-5c0 1.77 1.43 3.2 3.2 3.2s3.2-1.43 3.2-3.2-1.43-3.2-3.2-3.2-3.2 1.43-3.2 3.2z"
  }));
};

SvgAddAPhoto.displayName = "SvgAddAPhoto";
SvgAddAPhoto.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$h() { _extends$h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h.apply(this, arguments); }
var Svg$d = styled("svg")({
  flex: "none"
}, space, color);

var SvgAddAlarm = function SvgAddAlarm(props) {
  return createElement(Svg$d, _extends$h({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9a9 9 0 000-18zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm1-11h-2v3H8v2h3v3h2v-3h3v-2h-3V9z"
  }));
};

SvgAddAlarm.displayName = "SvgAddAlarm";
SvgAddAlarm.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$i() { _extends$i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i.apply(this, arguments); }
var Svg$e = styled("svg")({
  flex: "none"
}, space, color);

var SvgAddAlert = function SvgAddAlert(props) {
  return createElement(Svg$e, _extends$i({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M10.01 21.01c0 1.1.89 1.99 1.99 1.99s1.99-.89 1.99-1.99h-3.98zm8.87-4.19V11c0-3.25-2.25-5.97-5.29-6.69v-.72C13.59 2.71 12.88 2 12 2s-1.59.71-1.59 1.59v.72A6.873 6.873 0 005.12 11v5.82L3 18.94V20h18v-1.06l-2.12-2.12zM16 13.01h-3v3h-2v-3H8V11h3V8h2v3h3v2.01z"
  }));
};

SvgAddAlert.displayName = "SvgAddAlert";
SvgAddAlert.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$j() { _extends$j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j.apply(this, arguments); }
var Svg$f = styled("svg")({
  flex: "none"
}, space, color);

var SvgAddBox = function SvgAddBox(props) {
  return createElement(Svg$f, _extends$j({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgAddBox.displayName = "SvgAddBox";
SvgAddBox.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$k() { _extends$k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k.apply(this, arguments); }
var Svg$g = styled("svg")({
  flex: "none"
}, space, color);

var SvgAddCircle = function SvgAddCircle(props) {
  return createElement(Svg$g, _extends$k({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"
  }));
};

SvgAddCircle.displayName = "SvgAddCircle";
SvgAddCircle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$l() { _extends$l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$l.apply(this, arguments); }
var Svg$h = styled("svg")({
  flex: "none"
}, space, color);

var SvgAddCircleOutline = function SvgAddCircleOutline(props) {
  return createElement(Svg$h, _extends$l({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
  }));
};

SvgAddCircleOutline.displayName = "SvgAddCircleOutline";
SvgAddCircleOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$m() { _extends$m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$m.apply(this, arguments); }
var Svg$i = styled("svg")({
  flex: "none"
}, space, color);

var SvgAddLocation = function SvgAddLocation(props) {
  return createElement(Svg$i, _extends$m({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M12 2C8.14 2 5 5.14 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.86-3.14-7-7-7zm4 8h-3v3h-2v-3H8V8h3V5h2v3h3v2z"
  }));
};

SvgAddLocation.displayName = "SvgAddLocation";
SvgAddLocation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$n() { _extends$n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$n.apply(this, arguments); }
var Svg$j = styled("svg")({
  flex: "none"
}, space, color);

var SvgAddShoppingCart = function SvgAddShoppingCart(props) {
  return createElement(Svg$j, _extends$n({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0zm18.31 6l-2.76 5z",
    fill: "none"
  }), createElement("path", {
    d: "M11 9h2V6h3V4h-3V1h-2v3H8v2h3v3zm-4 9c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zm10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2zm-9.83-3.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.86-7.01L19.42 4h-.01l-1.1 2-2.76 5H8.53l-.13-.27L6.16 6l-.95-2-.94-2H1v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.13 0-.25-.11-.25-.25z"
  }));
};

SvgAddShoppingCart.displayName = "SvgAddShoppingCart";
SvgAddShoppingCart.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$o() { _extends$o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$o.apply(this, arguments); }
var Svg$k = styled("svg")({
  flex: "none"
}, space, color);

var SvgAddToPhotos = function SvgAddToPhotos(props) {
  return createElement(Svg$k, _extends$o({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z"
  }));
};

SvgAddToPhotos.displayName = "SvgAddToPhotos";
SvgAddToPhotos.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$p() { _extends$p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$p.apply(this, arguments); }
var Svg$l = styled("svg")({
  flex: "none"
}, space, color);

var SvgAddToQueue = function SvgAddToQueue(props) {
  return createElement(Svg$l, _extends$p({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 3H3c-1.11 0-2 .89-2 2v12a2 2 0 002 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5a2 2 0 00-2-2zm0 14H3V5h18v12zm-5-7v2h-3v3h-2v-3H8v-2h3V7h2v3h3z"
  }));
};

SvgAddToQueue.displayName = "SvgAddToQueue";
SvgAddToQueue.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$q() { _extends$q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$q.apply(this, arguments); }
var Svg$m = styled("svg")({
  flex: "none"
}, space, color);

var SvgAdjust = function SvgAdjust(props) {
  return createElement(Svg$m, _extends$q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3-8c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3z"
  }));
};

SvgAdjust.displayName = "SvgAdjust";
SvgAdjust.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$r() { _extends$r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$r.apply(this, arguments); }
var Svg$n = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirlineSeatFlat = function SvgAirlineSeatFlat(props) {
  return createElement(Svg$n, _extends$r({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 11v2H9V7h9c2.21 0 4 1.79 4 4zM2 14v2h6v2h8v-2h6v-2H2zm5.14-1.9a3 3 0 00-.04-4.24 3 3 0 00-4.24.04 3 3 0 00.04 4.24 3 3 0 004.24-.04z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgAirlineSeatFlat.displayName = "SvgAirlineSeatFlat";
SvgAirlineSeatFlat.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$s() { _extends$s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$s.apply(this, arguments); }
var Svg$o = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirlineSeatFlatAngled = function SvgAirlineSeatFlatAngled(props) {
  return createElement(Svg$o, _extends$s({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22.25 14.29l-.69 1.89L9.2 11.71l2.08-5.66 8.56 3.09a4 4 0 012.41 5.15zM1.5 12.14L8 14.48V19h8v-1.63L20.52 19l.69-1.89-19.02-6.86-.69 1.89zm5.8-1.94a3.01 3.01 0 001.41-4A3.005 3.005 0 004.7 4.8a2.99 2.99 0 00-1.4 4 2.99 2.99 0 004 1.4z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgAirlineSeatFlatAngled.displayName = "SvgAirlineSeatFlatAngled";
SvgAirlineSeatFlatAngled.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$t() { _extends$t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$t.apply(this, arguments); }
var Svg$p = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirlineSeatIndividualSuite = function SvgAirlineSeatIndividualSuite(props) {
  return createElement(Svg$p, _extends$t({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M7 13c1.65 0 3-1.35 3-3S8.65 7 7 7s-3 1.35-3 3 1.35 3 3 3zm12-6h-8v7H3V7H1v10h22v-6c0-2.21-1.79-4-4-4z"
  }));
};

SvgAirlineSeatIndividualSuite.displayName = "SvgAirlineSeatIndividualSuite";
SvgAirlineSeatIndividualSuite.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$u() { _extends$u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$u.apply(this, arguments); }
var Svg$q = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirlineSeatLegroomExtra = function SvgAirlineSeatLegroomExtra(props) {
  return createElement(Svg$q, _extends$u({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M4 12V3H2v9c0 2.76 2.24 5 5 5h6v-2H7c-1.66 0-3-1.34-3-3zm18.83 5.24c-.38-.72-1.29-.97-2.03-.63l-1.09.5-3.41-6.98a2.01 2.01 0 00-1.79-1.12L11 9V3H5v8c0 1.66 1.34 3 3 3h7l3.41 7 3.72-1.7c.77-.36 1.1-1.3.7-2.06z"
  }));
};

SvgAirlineSeatLegroomExtra.displayName = "SvgAirlineSeatLegroomExtra";
SvgAirlineSeatLegroomExtra.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$v() { _extends$v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$v.apply(this, arguments); }
var Svg$r = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirlineSeatLegroomNormal = function SvgAirlineSeatLegroomNormal(props) {
  return createElement(Svg$r, _extends$v({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M5 12V3H3v9c0 2.76 2.24 5 5 5h6v-2H8c-1.66 0-3-1.34-3-3zm15.5 6H19v-7c0-1.1-.9-2-2-2h-5V3H6v8c0 1.65 1.35 3 3 3h7v7h4.5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5z"
  }));
};

SvgAirlineSeatLegroomNormal.displayName = "SvgAirlineSeatLegroomNormal";
SvgAirlineSeatLegroomNormal.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$w() { _extends$w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$w.apply(this, arguments); }
var Svg$s = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirlineSeatLegroomReduced = function SvgAirlineSeatLegroomReduced(props) {
  return createElement(Svg$s, _extends$w({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M19.97 19.2c.18.96-.55 1.8-1.47 1.8H14v-3l1-4H9c-1.65 0-3-1.35-3-3V3h6v6h5c1.1 0 2 .9 2 2l-2 7h1.44c.73 0 1.39.49 1.53 1.2zM5 12V3H3v9c0 2.76 2.24 5 5 5h4v-2H8c-1.66 0-3-1.34-3-3z"
  }));
};

SvgAirlineSeatLegroomReduced.displayName = "SvgAirlineSeatLegroomReduced";
SvgAirlineSeatLegroomReduced.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$x() { _extends$x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$x.apply(this, arguments); }
var Svg$t = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirlineSeatReclineExtra = function SvgAirlineSeatReclineExtra(props) {
  return createElement(Svg$t, _extends$x({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5.35 5.64c-.9-.64-1.12-1.88-.49-2.79.63-.9 1.88-1.12 2.79-.49.9.64 1.12 1.88.49 2.79-.64.9-1.88 1.12-2.79.49zM16 19H8.93c-1.48 0-2.74-1.08-2.96-2.54L4 7H2l1.99 9.76A5.01 5.01 0 008.94 21H16v-2zm.23-4h-4.88l-1.03-4.1c1.58.89 3.28 1.54 5.15 1.22V9.99c-1.63.31-3.44-.27-4.69-1.25L9.14 7.47c-.23-.18-.49-.3-.76-.38a2.21 2.21 0 00-.99-.06h-.02a2.268 2.268 0 00-1.84 2.61l1.35 5.92A3.008 3.008 0 009.83 18h6.85l3.82 3 1.5-1.5-5.77-4.5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgAirlineSeatReclineExtra.displayName = "SvgAirlineSeatReclineExtra";
SvgAirlineSeatReclineExtra.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$y() { _extends$y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$y.apply(this, arguments); }
var Svg$u = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirlineSeatReclineNormal = function SvgAirlineSeatReclineNormal(props) {
  return createElement(Svg$u, _extends$y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7.59 5.41c-.78-.78-.78-2.05 0-2.83.78-.78 2.05-.78 2.83 0 .78.78.78 2.05 0 2.83-.79.79-2.05.79-2.83 0zM6 16V7H4v9c0 2.76 2.24 5 5 5h6v-2H9c-1.66 0-3-1.34-3-3zm14 4.07L14.93 15H11.5v-3.68c1.4 1.15 3.6 2.16 5.5 2.16v-2.16c-1.66.02-3.61-.87-4.67-2.04l-1.4-1.55c-.19-.21-.43-.38-.69-.5-.29-.14-.62-.23-.96-.23h-.03C8.01 7 7 8.01 7 9.25V15c0 1.66 1.34 3 3 3h5.07l3.5 3.5L20 20.07z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgAirlineSeatReclineNormal.displayName = "SvgAirlineSeatReclineNormal";
SvgAirlineSeatReclineNormal.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$z() { _extends$z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$z.apply(this, arguments); }
var Svg$v = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirplanemodeActive = function SvgAirplanemodeActive(props) {
  return createElement(Svg$v, _extends$z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 16v-2l-8-5V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5V9l-8 5v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-5.5l8 2.5z"
  }));
};

SvgAirplanemodeActive.displayName = "SvgAirplanemodeActive";
SvgAirplanemodeActive.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$A() { _extends$A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$A.apply(this, arguments); }
var Svg$w = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirplanemodeInactive = function SvgAirplanemodeInactive(props) {
  return createElement(Svg$w, _extends$A({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 9V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5v3.68l7.83 7.83L21 16v-2l-8-5zM3 5.27l4.99 4.99L2 14v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-3.73L18.73 21 20 19.73 4.27 4 3 5.27z"
  }));
};

SvgAirplanemodeInactive.displayName = "SvgAirplanemodeInactive";
SvgAirplanemodeInactive.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$B() { _extends$B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$B.apply(this, arguments); }
var Svg$x = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirplay = function SvgAirplay(props) {
  return createElement(Svg$x, _extends$B({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "airplay_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("defs", null, createElement("path", {
    id: "airplay_svg__c",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "airplay_svg__b"
  }, createElement("use", {
    xlinkHref: "#airplay_svg__a",
    overflow: "visible"
  })), createElement("clipPath", {
    id: "airplay_svg__d",
    clipPath: "url(#airplay_svg__b)"
  }, createElement("use", {
    xlinkHref: "#airplay_svg__c",
    overflow: "visible"
  })), createElement("path", {
    d: "M6 22h12l-6-6zM21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4v-2H3V5h18v12h-4v2h4c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z",
    clipPath: "url(#airplay_svg__d)"
  }));
};

SvgAirplay.displayName = "SvgAirplay";
SvgAirplay.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$C() { _extends$C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$C.apply(this, arguments); }
var Svg$y = styled("svg")({
  flex: "none"
}, space, color);

var SvgAirportShuttle = function SvgAirportShuttle(props) {
  return createElement(Svg$y, _extends$C({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M17 5H3a2 2 0 00-2 2v9h2c0 1.65 1.34 3 3 3s3-1.35 3-3h5.5c0 1.65 1.34 3 3 3s3-1.35 3-3H23v-5l-6-6zM3 11V7h4v4H3zm3 6.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm7-6.5H9V7h4v4zm4.5 6.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM15 11V7h1l4 4h-5z"
  }));
};

SvgAirportShuttle.displayName = "SvgAirportShuttle";
SvgAirportShuttle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$D() { _extends$D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$D.apply(this, arguments); }
var Svg$z = styled("svg")({
  flex: "none"
}, space, color);

var SvgAlarm = function SvgAlarm(props) {
  return createElement(Svg$z, _extends$D({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9a9 9 0 000-18zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
  }));
};

SvgAlarm.displayName = "SvgAlarm";
SvgAlarm.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$E() { _extends$E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$E.apply(this, arguments); }
var Svg$A = styled("svg")({
  flex: "none"
}, space, color);

var SvgAlarmAdd = function SvgAlarmAdd(props) {
  return createElement(Svg$A, _extends$E({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9a9 9 0 000-18zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm1-11h-2v3H8v2h3v3h2v-3h3v-2h-3V9z"
  }));
};

SvgAlarmAdd.displayName = "SvgAlarmAdd";
SvgAlarmAdd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$F() { _extends$F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$F.apply(this, arguments); }
var Svg$B = styled("svg")({
  flex: "none"
}, space, color);

var SvgAlarmOff = function SvgAlarmOff(props) {
  return createElement(Svg$B, _extends$F({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 6c3.87 0 7 3.13 7 7 0 .84-.16 1.65-.43 2.4l1.52 1.52c.58-1.19.91-2.51.91-3.92a9 9 0 00-9-9c-1.41 0-2.73.33-3.92.91L9.6 6.43C10.35 6.16 11.16 6 12 6zm10-.28l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM2.92 2.29L1.65 3.57 2.98 4.9l-1.11.93 1.42 1.42 1.11-.94.8.8A8.964 8.964 0 003 13c0 4.97 4.02 9 9 9 2.25 0 4.31-.83 5.89-2.2l2.2 2.2 1.27-1.27L3.89 3.27l-.97-.98zm13.55 16.1C15.26 19.39 13.7 20 12 20c-3.87 0-7-3.13-7-7 0-1.7.61-3.26 1.61-4.47l9.86 9.86zM8.02 3.28L6.6 1.86l-.86.71 1.42 1.42.86-.71z"
  }));
};

SvgAlarmOff.displayName = "SvgAlarmOff";
SvgAlarmOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$G() { _extends$G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$G.apply(this, arguments); }
var Svg$C = styled("svg")({
  flex: "none"
}, space, color);

var SvgAlarmOn = function SvgAlarmOn(props) {
  return createElement(Svg$C, _extends$G({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9a9 9 0 000-18zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-1.46-5.47L8.41 12.4l-1.06 1.06 3.18 3.18 6-6-1.06-1.06-4.93 4.95z"
  }));
};

SvgAlarmOn.displayName = "SvgAlarmOn";
SvgAlarmOn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$H() { _extends$H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$H.apply(this, arguments); }
var Svg$D = styled("svg")({
  flex: "none"
}, space, color);

var SvgAlbum = function SvgAlbum(props) {
  return createElement(Svg$D, _extends$H({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 14.5c-2.49 0-4.5-2.01-4.5-4.5S9.51 7.5 12 7.5s4.5 2.01 4.5 4.5-2.01 4.5-4.5 4.5zm0-5.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"
  }));
};

SvgAlbum.displayName = "SvgAlbum";
SvgAlbum.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$I() { _extends$I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$I.apply(this, arguments); }
var Svg$E = styled("svg")({
  flex: "none"
}, space, color);

var SvgAllInclusive = function SvgAllInclusive(props) {
  return createElement(Svg$E, _extends$I({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.6 6.62c-1.44 0-2.8.56-3.77 1.53L12 10.66 10.48 12h.01L7.8 14.39c-.64.64-1.49.99-2.4.99-1.87 0-3.39-1.51-3.39-3.38S3.53 8.62 5.4 8.62c.91 0 1.76.35 2.44 1.03l1.13 1 1.51-1.34L9.22 8.2A5.37 5.37 0 005.4 6.62C2.42 6.62 0 9.04 0 12s2.42 5.38 5.4 5.38c1.44 0 2.8-.56 3.77-1.53l2.83-2.5.01.01L13.52 12h-.01l2.69-2.39c.64-.64 1.49-.99 2.4-.99 1.87 0 3.39 1.51 3.39 3.38s-1.52 3.38-3.39 3.38c-.9 0-1.76-.35-2.44-1.03l-1.14-1.01-1.51 1.34 1.27 1.12a5.386 5.386 0 003.82 1.57c2.98 0 5.4-2.41 5.4-5.38s-2.42-5.37-5.4-5.37z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgAllInclusive.displayName = "SvgAllInclusive";
SvgAllInclusive.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$J() { _extends$J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$J.apply(this, arguments); }
var Svg$F = styled("svg")({
  flex: "none"
}, space, color);

var SvgAllOut = function SvgAllOut(props) {
  return createElement(Svg$F, _extends$J({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16.21 4.16l4 4v-4zm4 12l-4 4h4zm-12 4l-4-4v4zm-4-12l4-4h-4zm12.95-.95c-2.73-2.73-7.17-2.73-9.9 0s-2.73 7.17 0 9.9 7.17 2.73 9.9 0 2.73-7.16 0-9.9zm-1.1 8.8c-2.13 2.13-5.57 2.13-7.7 0s-2.13-5.57 0-7.7 5.57-2.13 7.7 0 2.13 5.57 0 7.7z",
    fill: "#010101"
  }), createElement("path", {
    fill: "none",
    d: "M.21.16h24v24h-24z"
  }));
};

SvgAllOut.displayName = "SvgAllOut";
SvgAllOut.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$K() { _extends$K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$K.apply(this, arguments); }
var Svg$G = styled("svg")({
  flex: "none"
}, space, color);

var SvgAndroid = function SvgAndroid(props) {
  return createElement(Svg$G, _extends$K({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M6 18c0 .55.45 1 1 1h1v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h2v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h1c.55 0 1-.45 1-1V8H6v10zM3.5 8C2.67 8 2 8.67 2 9.5v7c0 .83.67 1.5 1.5 1.5S5 17.33 5 16.5v-7C5 8.67 4.33 8 3.5 8zm17 0c-.83 0-1.5.67-1.5 1.5v7c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5zm-4.97-5.84l1.3-1.3c.2-.2.2-.51 0-.71-.2-.2-.51-.2-.71 0l-1.48 1.48A5.84 5.84 0 0012 1c-.96 0-1.86.23-2.66.63L7.85.15c-.2-.2-.51-.2-.71 0-.2.2-.2.51 0 .71l1.31 1.31A5.983 5.983 0 006 7h12c0-1.99-.97-3.75-2.47-4.84zM10 5H9V4h1v1zm5 0h-1V4h1v1z"
  }));
};

SvgAndroid.displayName = "SvgAndroid";
SvgAndroid.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$L() { _extends$L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$L.apply(this, arguments); }
var Svg$H = styled("svg")({
  flex: "none"
}, space, color);

var SvgAnnouncement = function SvgAnnouncement(props) {
  return createElement(Svg$H, _extends$L({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 9h-2V5h2v6zm0 4h-2v-2h2v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgAnnouncement.displayName = "SvgAnnouncement";
SvgAnnouncement.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$M() { _extends$M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$M.apply(this, arguments); }
var Svg$I = styled("svg")({
  flex: "none"
}, space, color);

var SvgApps = function SvgApps(props) {
  return createElement(Svg$I, _extends$M({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z"
  }));
};

SvgApps.displayName = "SvgApps";
SvgApps.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$N() { _extends$N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$N.apply(this, arguments); }
var Svg$J = styled("svg")({
  flex: "none"
}, space, color);

var SvgArchive = function SvgArchive(props) {
  return createElement(Svg$J, _extends$N({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgArchive.displayName = "SvgArchive";
SvgArchive.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$O() { _extends$O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$O.apply(this, arguments); }
var Svg$K = styled("svg")({
  flex: "none"
}, space, color);

var SvgArrowBack = function SvgArrowBack(props) {
  return createElement(Svg$K, _extends$O({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
  }));
};

SvgArrowBack.displayName = "SvgArrowBack";
SvgArrowBack.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$P() { _extends$P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$P.apply(this, arguments); }
var Svg$L = styled("svg")({
  flex: "none"
}, space, color);

var SvgArrowDownward = function SvgArrowDownward(props) {
  return createElement(Svg$L, _extends$P({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "#010101",
    d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
  }));
};

SvgArrowDownward.displayName = "SvgArrowDownward";
SvgArrowDownward.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$Q() { _extends$Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$Q.apply(this, arguments); }
var Svg$M = styled("svg")({
  flex: "none"
}, space, color);

var SvgArrowDropDown = function SvgArrowDropDown(props) {
  return createElement(Svg$M, _extends$Q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 10l5 5 5-5z"
  }));
};

SvgArrowDropDown.displayName = "SvgArrowDropDown";
SvgArrowDropDown.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$R() { _extends$R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$R.apply(this, arguments); }
var Svg$N = styled("svg")({
  flex: "none"
}, space, color);

var SvgArrowDropDownCircle = function SvgArrowDropDownCircle(props) {
  return createElement(Svg$N, _extends$R({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 12l-4-4h8l-4 4z"
  }));
};

SvgArrowDropDownCircle.displayName = "SvgArrowDropDownCircle";
SvgArrowDropDownCircle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$S() { _extends$S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$S.apply(this, arguments); }
var Svg$O = styled("svg")({
  flex: "none"
}, space, color);

var SvgArrowDropUp = function SvgArrowDropUp(props) {
  return createElement(Svg$O, _extends$S({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 14l5-5 5 5z"
  }));
};

SvgArrowDropUp.displayName = "SvgArrowDropUp";
SvgArrowDropUp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$T() { _extends$T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$T.apply(this, arguments); }
var Svg$P = styled("svg")({
  flex: "none"
}, space, color);

var SvgArrowForward = function SvgArrowForward(props) {
  return createElement(Svg$P, _extends$T({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"
  }));
};

SvgArrowForward.displayName = "SvgArrowForward";
SvgArrowForward.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$U() { _extends$U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$U.apply(this, arguments); }
var Svg$Q = styled("svg")({
  flex: "none"
}, space, color);

var SvgArrowUpward = function SvgArrowUpward(props) {
  return createElement(Svg$Q, _extends$U({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
  }));
};

SvgArrowUpward.displayName = "SvgArrowUpward";
SvgArrowUpward.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$V() { _extends$V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$V.apply(this, arguments); }
var Svg$R = styled("svg")({
  flex: "none"
}, space, color);

var SvgArtTrack = function SvgArtTrack(props) {
  return createElement(Svg$R, _extends$V({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    fill: "#010101",
    d: "M22 13h-8v-2h8v2zm0-6h-8v2h8V7zm-8 10h8v-2h-8v2zm-2-8v6c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V9c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2zm-1.5 6l-2.25-3-1.75 2.26-1.25-1.51L3.5 15h7z"
  }));
};

SvgArtTrack.displayName = "SvgArtTrack";
SvgArtTrack.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$W() { _extends$W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$W.apply(this, arguments); }
var Svg$S = styled("svg")({
  flex: "none"
}, space, color);

var SvgAspectRatio = function SvgAspectRatio(props) {
  return createElement(Svg$S, _extends$W({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 12h-2v3h-3v2h5v-5zM7 9h3V7H5v5h2V9zm14-6H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgAspectRatio.displayName = "SvgAspectRatio";
SvgAspectRatio.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$X() { _extends$X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$X.apply(this, arguments); }
var Svg$T = styled("svg")({
  flex: "none"
}, space, color);

var SvgAssessment = function SvgAssessment(props) {
  return createElement(Svg$T, _extends$X({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgAssessment.displayName = "SvgAssessment";
SvgAssessment.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$Y() { _extends$Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$Y.apply(this, arguments); }
var Svg$U = styled("svg")({
  flex: "none"
}, space, color);

var SvgAssignment = function SvgAssignment(props) {
  return createElement(Svg$U, _extends$Y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"
  }));
};

SvgAssignment.displayName = "SvgAssignment";
SvgAssignment.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$Z() { _extends$Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$Z.apply(this, arguments); }
var Svg$V = styled("svg")({
  flex: "none"
}, space, color);

var SvgAssignmentInd = function SvgAssignmentInd(props) {
  return createElement(Svg$V, _extends$Z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 4c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1.4c0-2 4-3.1 6-3.1s6 1.1 6 3.1V19z"
  }));
};

SvgAssignmentInd.displayName = "SvgAssignmentInd";
SvgAssignmentInd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$_() { _extends$_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$_.apply(this, arguments); }
var Svg$W = styled("svg")({
  flex: "none"
}, space, color);

var SvgAssignmentLate = function SvgAssignmentLate(props) {
  return createElement(Svg$W, _extends$_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-6 15h-2v-2h2v2zm0-4h-2V8h2v6zm-1-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
  }));
};

SvgAssignmentLate.displayName = "SvgAssignmentLate";
SvgAssignmentLate.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$$() { _extends$$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$$.apply(this, arguments); }
var Svg$X = styled("svg")({
  flex: "none"
}, space, color);

var SvgAssignmentReturn = function SvgAssignmentReturn(props) {
  return createElement(Svg$X, _extends$$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm4 12h-4v3l-5-5 5-5v3h4v4z"
  }));
};

SvgAssignmentReturn.displayName = "SvgAssignmentReturn";
SvgAssignmentReturn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$10() { _extends$10 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$10.apply(this, arguments); }
var Svg$Y = styled("svg")({
  flex: "none"
}, space, color);

var SvgAssignmentReturned = function SvgAssignmentReturned(props) {
  return createElement(Svg$Y, _extends$10({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 15l-5-5h3V9h4v4h3l-5 5z"
  }));
};

SvgAssignmentReturned.displayName = "SvgAssignmentReturned";
SvgAssignmentReturned.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$11() { _extends$11 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$11.apply(this, arguments); }
var Svg$Z = styled("svg")({
  flex: "none"
}, space, color);

var SvgAssignmentTurnedIn = function SvgAssignmentTurnedIn(props) {
  return createElement(Svg$Z, _extends$11({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-2 14l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z"
  }));
};

SvgAssignmentTurnedIn.displayName = "SvgAssignmentTurnedIn";
SvgAssignmentTurnedIn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$12() { _extends$12 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$12.apply(this, arguments); }
var Svg$_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgAssistant = function SvgAssistant(props) {
  return createElement(Svg$_, _extends$12({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h4l3 3 3-3h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-5.12 10.88L12 17l-1.88-4.12L6 11l4.12-1.88L12 5l1.88 4.12L18 11l-4.12 1.88z"
  }));
};

SvgAssistant.displayName = "SvgAssistant";
SvgAssistant.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$13() { _extends$13 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$13.apply(this, arguments); }
var Svg$$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgAssistantPhoto = function SvgAssistantPhoto(props) {
  return createElement(Svg$$, _extends$13({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14.4 6L14 4H5v17h2v-7h5.6l.4 2h7V6z"
  }));
};

SvgAssistantPhoto.displayName = "SvgAssistantPhoto";
SvgAssistantPhoto.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$14() { _extends$14 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$14.apply(this, arguments); }
var Svg$10 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAttachFile = function SvgAttachFile(props) {
  return createElement(Svg$10, _extends$14({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5a2.5 2.5 0 015 0v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5a2.5 2.5 0 005 0V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z"
  }));
};

SvgAttachFile.displayName = "SvgAttachFile";
SvgAttachFile.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$15() { _extends$15 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$15.apply(this, arguments); }
var Svg$11 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAttachMoney = function SvgAttachMoney(props) {
  return createElement(Svg$11, _extends$15({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4z"
  }));
};

SvgAttachMoney.displayName = "SvgAttachMoney";
SvgAttachMoney.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$16() { _extends$16 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$16.apply(this, arguments); }
var Svg$12 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAttachment = function SvgAttachment(props) {
  return createElement(Svg$12, _extends$16({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M2 12.5C2 9.46 4.46 7 7.5 7H18c2.21 0 4 1.79 4 4s-1.79 4-4 4H9.5a2.5 2.5 0 010-5H17v2H9.41c-.55 0-.55 1 0 1H18c1.1 0 2-.9 2-2s-.9-2-2-2H7.5C5.57 9 4 10.57 4 12.5S5.57 16 7.5 16H17v2H7.5C4.46 18 2 15.54 2 12.5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgAttachment.displayName = "SvgAttachment";
SvgAttachment.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$17() { _extends$17 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$17.apply(this, arguments); }
var Svg$13 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAudiotrack = function SvgAudiotrack(props) {
  return createElement(Svg$13, _extends$17({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 3v9.28a4.39 4.39 0 00-1.5-.28C8.01 12 6 14.01 6 16.5S8.01 21 10.5 21c2.31 0 4.2-1.75 4.45-4H15V6h4V3h-7z"
  }));
};

SvgAudiotrack.displayName = "SvgAudiotrack";
SvgAudiotrack.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$18() { _extends$18 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$18.apply(this, arguments); }
var Svg$14 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAutorenew = function SvgAutorenew(props) {
  return createElement(Svg$14, _extends$18({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8A5.87 5.87 0 016 12c0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgAutorenew.displayName = "SvgAutorenew";
SvgAutorenew.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$19() { _extends$19 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$19.apply(this, arguments); }
var Svg$15 = styled("svg")({
  flex: "none"
}, space, color);

var SvgAvTimer = function SvgAvTimer(props) {
  return createElement(Svg$15, _extends$19({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M11 17c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1zm0-14v4h2V5.08c3.39.49 6 3.39 6 6.92 0 3.87-3.13 7-7 7s-7-3.13-7-7c0-1.68.59-3.22 1.58-4.42L12 13l1.41-1.41-6.8-6.8v.02C4.42 6.45 3 9.05 3 12c0 4.97 4.02 9 9 9a9 9 0 000-18h-1zm7 9c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1zM6 12c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1z"
  }));
};

SvgAvTimer.displayName = "SvgAvTimer";
SvgAvTimer.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1a() { _extends$1a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1a.apply(this, arguments); }
var Svg$16 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBackspace = function SvgBackspace(props) {
  return createElement(Svg$16, _extends$1a({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-3 12.59L17.59 17 14 13.41 10.41 17 9 15.59 12.59 12 9 8.41 10.41 7 14 10.59 17.59 7 19 8.41 15.41 12 19 15.59z"
  }));
};

SvgBackspace.displayName = "SvgBackspace";
SvgBackspace.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1b() { _extends$1b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1b.apply(this, arguments); }
var Svg$17 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBackup = function SvgBackup(props) {
  return createElement(Svg$17, _extends$1b({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.35 10.04A7.49 7.49 0 0012 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 000 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
  }));
};

SvgBackup.displayName = "SvgBackup";
SvgBackup.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1c() { _extends$1c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1c.apply(this, arguments); }
var Svg$18 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBattery20 = function SvgBattery20(props) {
  return createElement(Svg$18, _extends$1c({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 17v3.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V17H7z"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V17h10V5.33z"
  }));
};

SvgBattery20.displayName = "SvgBattery20";
SvgBattery20.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1d() { _extends$1d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1d.apply(this, arguments); }
var Svg$19 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBattery30 = function SvgBattery30(props) {
  return createElement(Svg$19, _extends$1d({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V15h10V5.33z"
  }), createElement("path", {
    d: "M7 15v5.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V15H7z"
  }));
};

SvgBattery30.displayName = "SvgBattery30";
SvgBattery30.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1e() { _extends$1e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1e.apply(this, arguments); }
var Svg$1a = styled("svg")({
  flex: "none"
}, space, color);

var SvgBattery50 = function SvgBattery50(props) {
  return createElement(Svg$1a, _extends$1e({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V13h10V5.33z"
  }), createElement("path", {
    d: "M7 13v7.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V13H7z"
  }));
};

SvgBattery50.displayName = "SvgBattery50";
SvgBattery50.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1f() { _extends$1f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1f.apply(this, arguments); }
var Svg$1b = styled("svg")({
  flex: "none"
}, space, color);

var SvgBattery60 = function SvgBattery60(props) {
  return createElement(Svg$1b, _extends$1f({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V11h10V5.33z"
  }), createElement("path", {
    d: "M7 11v9.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V11H7z"
  }));
};

SvgBattery60.displayName = "SvgBattery60";
SvgBattery60.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1g() { _extends$1g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1g.apply(this, arguments); }
var Svg$1c = styled("svg")({
  flex: "none"
}, space, color);

var SvgBattery80 = function SvgBattery80(props) {
  return createElement(Svg$1c, _extends$1g({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V9h10V5.33z"
  }), createElement("path", {
    d: "M7 9v11.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V9H7z"
  }));
};

SvgBattery80.displayName = "SvgBattery80";
SvgBattery80.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1h() { _extends$1h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1h.apply(this, arguments); }
var Svg$1d = styled("svg")({
  flex: "none"
}, space, color);

var SvgBattery90 = function SvgBattery90(props) {
  return createElement(Svg$1d, _extends$1h({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M17 5.33C17 4.6 16.4 4 15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V8h10V5.33z"
  }), createElement("path", {
    d: "M7 8v12.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V8H7z"
  }));
};

SvgBattery90.displayName = "SvgBattery90";
SvgBattery90.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1i() { _extends$1i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1i.apply(this, arguments); }
var Svg$1e = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryAlert = function SvgBatteryAlert(props) {
  return createElement(Svg$1e, _extends$1i({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4zM13 18h-2v-2h2v2zm0-4h-2V9h2v5z"
  }));
};

SvgBatteryAlert.displayName = "SvgBatteryAlert";
SvgBatteryAlert.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1j() { _extends$1j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1j.apply(this, arguments); }
var Svg$1f = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryCharging20 = function SvgBatteryCharging20(props) {
  return createElement(Svg$1f, _extends$1j({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 20v-3H7v3.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V17h-4.4L11 20z"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V17h4v-2.5H9L13 7v5.5h2L12.6 17H17V5.33C17 4.6 16.4 4 15.67 4z"
  }));
};

SvgBatteryCharging20.displayName = "SvgBatteryCharging20";
SvgBatteryCharging20.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1k() { _extends$1k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1k.apply(this, arguments); }
var Svg$1g = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryCharging30 = function SvgBatteryCharging30(props) {
  return createElement(Svg$1g, _extends$1k({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v9.17h2L13 7v5.5h2l-1.07 2H17V5.33C17 4.6 16.4 4 15.67 4z"
  }), createElement("path", {
    d: "M11 20v-5.5H7v6.17C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V14.5h-3.07L11 20z"
  }));
};

SvgBatteryCharging30.displayName = "SvgBatteryCharging30";
SvgBatteryCharging30.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1l() { _extends$1l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1l.apply(this, arguments); }
var Svg$1h = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryCharging50 = function SvgBatteryCharging50(props) {
  return createElement(Svg$1h, _extends$1l({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14.47 13.5L11 20v-5.5H9l.53-1H7v7.17C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V13.5h-2.53z"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v8.17h2.53L13 7v5.5h2l-.53 1H17V5.33C17 4.6 16.4 4 15.67 4z"
  }));
};

SvgBatteryCharging50.displayName = "SvgBatteryCharging50";
SvgBatteryCharging50.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1m() { _extends$1m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1m.apply(this, arguments); }
var Svg$1i = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryCharging60 = function SvgBatteryCharging60(props) {
  return createElement(Svg$1i, _extends$1m({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V11h3.87L13 7v4h4V5.33C17 4.6 16.4 4 15.67 4z"
  }), createElement("path", {
    d: "M13 12.5h2L11 20v-5.5H9l1.87-3.5H7v9.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V11h-4v1.5z"
  }));
};

SvgBatteryCharging60.displayName = "SvgBatteryCharging60";
SvgBatteryCharging60.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1n() { _extends$1n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1n.apply(this, arguments); }
var Svg$1j = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryCharging80 = function SvgBatteryCharging80(props) {
  return createElement(Svg$1j, _extends$1n({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V9h4.93L13 7v2h4V5.33C17 4.6 16.4 4 15.67 4z"
  }), createElement("path", {
    d: "M13 12.5h2L11 20v-5.5H9L11.93 9H7v11.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V9h-4v3.5z"
  }));
};

SvgBatteryCharging80.displayName = "SvgBatteryCharging80";
SvgBatteryCharging80.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1o() { _extends$1o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1o.apply(this, arguments); }
var Svg$1k = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryCharging90 = function SvgBatteryCharging90(props) {
  return createElement(Svg$1k, _extends$1o({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33V8h5.47L13 7v1h4V5.33C17 4.6 16.4 4 15.67 4z"
  }), createElement("path", {
    d: "M13 12.5h2L11 20v-5.5H9L12.47 8H7v12.67C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V8h-4v4.5z"
  }));
};

SvgBatteryCharging90.displayName = "SvgBatteryCharging90";
SvgBatteryCharging90.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1p() { _extends$1p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1p.apply(this, arguments); }
var Svg$1l = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryChargingFull = function SvgBatteryChargingFull(props) {
  return createElement(Svg$1l, _extends$1p({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4zM11 20v-5.5H9L13 7v5.5h2L11 20z"
  }));
};

SvgBatteryChargingFull.displayName = "SvgBatteryChargingFull";
SvgBatteryChargingFull.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1q() { _extends$1q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1q.apply(this, arguments); }
var Svg$1m = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryFull = function SvgBatteryFull(props) {
  return createElement(Svg$1m, _extends$1q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4z"
  }));
};

SvgBatteryFull.displayName = "SvgBatteryFull";
SvgBatteryFull.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1r() { _extends$1r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1r.apply(this, arguments); }
var Svg$1n = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryStd = function SvgBatteryStd(props) {
  return createElement(Svg$1n, _extends$1r({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4z"
  }));
};

SvgBatteryStd.displayName = "SvgBatteryStd";
SvgBatteryStd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1s() { _extends$1s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1s.apply(this, arguments); }
var Svg$1o = styled("svg")({
  flex: "none"
}, space, color);

var SvgBatteryUnknown = function SvgBatteryUnknown(props) {
  return createElement(Svg$1o, _extends$1s({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.67 4H14V2h-4v2H8.33C7.6 4 7 4.6 7 5.33v15.33C7 21.4 7.6 22 8.33 22h7.33c.74 0 1.34-.6 1.34-1.33V5.33C17 4.6 16.4 4 15.67 4zm-2.72 13.95h-1.9v-1.9h1.9v1.9zm1.35-5.26s-.38.42-.67.71c-.48.48-.83 1.15-.83 1.6h-1.6c0-.83.46-1.52.93-2l.93-.94A1.498 1.498 0 0012 9.5c-.83 0-1.5.67-1.5 1.5H9c0-1.66 1.34-3 3-3s3 1.34 3 3c0 .66-.27 1.26-.7 1.69z"
  }));
};

SvgBatteryUnknown.displayName = "SvgBatteryUnknown";
SvgBatteryUnknown.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1t() { _extends$1t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1t.apply(this, arguments); }
var Svg$1p = styled("svg")({
  flex: "none"
}, space, color);

var SvgBeachAccess = function SvgBeachAccess(props) {
  return createElement(Svg$1p, _extends$1t({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13.127 14.56l1.43-1.43 6.44 6.443L19.57 21zm4.293-5.73l2.86-2.86c-3.95-3.95-10.35-3.96-14.3-.02 3.93-1.3 8.31-.25 11.44 2.88zM5.95 5.98c-3.94 3.95-3.93 10.35.02 14.3l2.86-2.86C5.7 14.29 4.65 9.91 5.95 5.98zm.02-.02l-.01.01c-.38 3.01 1.17 6.88 4.3 10.02l5.73-5.73c-3.13-3.13-7.01-4.68-10.02-4.3z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgBeachAccess.displayName = "SvgBeachAccess";
SvgBeachAccess.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1u() { _extends$1u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1u.apply(this, arguments); }
var Svg$1q = styled("svg")({
  flex: "none"
}, space, color);

var SvgBeenhere = function SvgBeenhere(props) {
  return createElement(Svg$1q, _extends$1u({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 1H5c-1.1 0-1.99.9-1.99 2L3 15.93c0 .69.35 1.3.88 1.66L12 23l8.11-5.41c.53-.36.88-.97.88-1.66L21 3c0-1.1-.9-2-2-2zm-9 15l-5-5 1.41-1.41L10 13.17l7.59-7.59L19 7l-9 9z"
  }));
};

SvgBeenhere.displayName = "SvgBeenhere";
SvgBeenhere.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1v() { _extends$1v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1v.apply(this, arguments); }
var Svg$1r = styled("svg")({
  flex: "none"
}, space, color);

var SvgBlock = function SvgBlock(props) {
  return createElement(Svg$1r, _extends$1v({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9A7.902 7.902 0 014 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1A7.902 7.902 0 0120 12c0 4.42-3.58 8-8 8z"
  }));
};

SvgBlock.displayName = "SvgBlock";
SvgBlock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1w() { _extends$1w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1w.apply(this, arguments); }
var Svg$1s = styled("svg")({
  flex: "none"
}, space, color);

var SvgBluetooth = function SvgBluetooth(props) {
  return createElement(Svg$1s, _extends$1w({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17.71 7.71L12 2h-1v7.59L6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 5.83l1.88 1.88L13 9.59V5.83zm1.88 10.46L13 18.17v-3.76l1.88 1.88z"
  }));
};

SvgBluetooth.displayName = "SvgBluetooth";
SvgBluetooth.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1x() { _extends$1x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1x.apply(this, arguments); }
var Svg$1t = styled("svg")({
  flex: "none"
}, space, color);

var SvgBluetoothAudio = function SvgBluetoothAudio(props) {
  return createElement(Svg$1t, _extends$1x({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M14.24 12.01l2.32 2.32c.28-.72.44-1.51.44-2.33 0-.82-.16-1.59-.43-2.31l-2.33 2.32zm5.29-5.3l-1.26 1.26c.63 1.21.98 2.57.98 4.02s-.36 2.82-.98 4.02l1.2 1.2a9.936 9.936 0 001.54-5.31c-.01-1.89-.55-3.67-1.48-5.19zm-3.82 1L10 2H9v7.59L4.41 5 3 6.41 8.59 12 3 17.59 4.41 19 9 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM11 5.83l1.88 1.88L11 9.59V5.83zm1.88 10.46L11 18.17v-3.76l1.88 1.88z"
  }));
};

SvgBluetoothAudio.displayName = "SvgBluetoothAudio";
SvgBluetoothAudio.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1y() { _extends$1y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1y.apply(this, arguments); }
var Svg$1u = styled("svg")({
  flex: "none"
}, space, color);

var SvgBluetoothConnected = function SvgBluetoothConnected(props) {
  return createElement(Svg$1u, _extends$1y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 12l-2-2-2 2 2 2 2-2zm10.71-4.29L12 2h-1v7.59L6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 5.83l1.88 1.88L13 9.59V5.83zm1.88 10.46L13 18.17v-3.76l1.88 1.88zM19 10l-2 2 2 2 2-2-2-2z"
  }));
};

SvgBluetoothConnected.displayName = "SvgBluetoothConnected";
SvgBluetoothConnected.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1z() { _extends$1z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1z.apply(this, arguments); }
var Svg$1v = styled("svg")({
  flex: "none"
}, space, color);

var SvgBluetoothDisabled = function SvgBluetoothDisabled(props) {
  return createElement(Svg$1v, _extends$1z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 5.83l1.88 1.88-1.6 1.6 1.41 1.41 3.02-3.02L12 2h-1v5.03l2 2v-3.2zM5.41 4L4 5.41 10.59 12 5 17.59 6.41 19 11 14.41V22h1l4.29-4.29 2.3 2.29L20 18.59 5.41 4zM13 18.17v-3.76l1.88 1.88L13 18.17z"
  }));
};

SvgBluetoothDisabled.displayName = "SvgBluetoothDisabled";
SvgBluetoothDisabled.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1A() { _extends$1A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1A.apply(this, arguments); }
var Svg$1w = styled("svg")({
  flex: "none"
}, space, color);

var SvgBluetoothSearching = function SvgBluetoothSearching(props) {
  return createElement(Svg$1w, _extends$1A({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14.24 12.01l2.32 2.32c.28-.72.44-1.51.44-2.33 0-.82-.16-1.59-.43-2.31l-2.33 2.32zm5.29-5.3l-1.26 1.26c.63 1.21.98 2.57.98 4.02s-.36 2.82-.98 4.02l1.2 1.2a9.936 9.936 0 001.54-5.31c-.01-1.89-.55-3.67-1.48-5.19zm-3.82 1L10 2H9v7.59L4.41 5 3 6.41 8.59 12 3 17.59 4.41 19 9 14.41V22h1l5.71-5.71-4.3-4.29 4.3-4.29zM11 5.83l1.88 1.88L11 9.59V5.83zm1.88 10.46L11 18.17v-3.76l1.88 1.88z"
  }));
};

SvgBluetoothSearching.displayName = "SvgBluetoothSearching";
SvgBluetoothSearching.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1B() { _extends$1B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1B.apply(this, arguments); }
var Svg$1x = styled("svg")({
  flex: "none"
}, space, color);

var SvgBlurCircular = function SvgBlurCircular(props) {
  return createElement(Svg$1x, _extends$1B({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM7 9.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm3 7c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm-3-3c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm3-6c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM14 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-1.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm3 6c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm0-4c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm2-3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm0-3.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"
  }));
};

SvgBlurCircular.displayName = "SvgBlurCircular";
SvgBlurCircular.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1C() { _extends$1C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1C.apply(this, arguments); }
var Svg$1y = styled("svg")({
  flex: "none"
}, space, color);

var SvgBlurLinear = function SvgBlurLinear(props) {
  return createElement(Svg$1y, _extends$1C({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5 17.5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM9 13c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zM3 21h18v-2H3v2zM5 9.5c.83 0 1.5-.67 1.5-1.5S5.83 6.5 5 6.5 3.5 7.17 3.5 8 4.17 9.5 5 9.5zm0 4c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM9 17c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm8-.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM3 3v2h18V3H3zm14 5.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm0 4c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM13 9c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1z"
  }));
};

SvgBlurLinear.displayName = "SvgBlurLinear";
SvgBlurLinear.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1D() { _extends$1D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1D.apply(this, arguments); }
var Svg$1z = styled("svg")({
  flex: "none"
}, space, color);

var SvgBlurOff = function SvgBlurOff(props) {
  return createElement(Svg$1z, _extends$1D({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-.2 4.48l.2.02c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5l.02.2c.09.67.61 1.19 1.28 1.28zM14 3.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm-4 0c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm11 7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm8 8c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-4 13.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM2.5 5.27l3.78 3.78L6 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1c0-.1-.03-.19-.06-.28l2.81 2.81c-.71.11-1.25.73-1.25 1.47 0 .83.67 1.5 1.5 1.5.74 0 1.36-.54 1.47-1.25l2.81 2.81A.875.875 0 0014 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1c0-.1-.03-.19-.06-.28l3.78 3.78L20 20.23 3.77 4 2.5 5.27zM10 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm11-3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM3 9.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm7 11c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM6 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-3-3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5z"
  }));
};

SvgBlurOff.displayName = "SvgBlurOff";
SvgBlurOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1E() { _extends$1E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1E.apply(this, arguments); }
var Svg$1A = styled("svg")({
  flex: "none"
}, space, color);

var SvgBlurOn = function SvgBlurOn(props) {
  return createElement(Svg$1A, _extends$1E({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-3 .5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm15 5.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM14 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-3.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zm-11 10c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm7 7c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm0-17c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 5.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm8 .5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3 8.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zM14 17c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 3.5c-.28 0-.5.22-.5.5s.22.5.5.5.5-.22.5-.5-.22-.5-.5-.5zm-4-12c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0 8.5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-4.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-4c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
  }));
};

SvgBlurOn.displayName = "SvgBlurOn";
SvgBlurOn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1F() { _extends$1F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1F.apply(this, arguments); }
var Svg$1B = styled("svg")({
  flex: "none"
}, space, color);

var SvgBook = function SvgBook(props) {
  return createElement(Svg$1B, _extends$1F({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z"
  }));
};

SvgBook.displayName = "SvgBook";
SvgBook.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1G() { _extends$1G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1G.apply(this, arguments); }
var Svg$1C = styled("svg")({
  flex: "none"
}, space, color);

var SvgBookmark = function SvgBookmark(props) {
  return createElement(Svg$1C, _extends$1G({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgBookmark.displayName = "SvgBookmark";
SvgBookmark.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1H() { _extends$1H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1H.apply(this, arguments); }
var Svg$1D = styled("svg")({
  flex: "none"
}, space, color);

var SvgBookmarkBorder = function SvgBookmarkBorder(props) {
  return createElement(Svg$1D, _extends$1H({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgBookmarkBorder.displayName = "SvgBookmarkBorder";
SvgBookmarkBorder.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1I() { _extends$1I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1I.apply(this, arguments); }
var Svg$1E = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderAll = function SvgBorderAll(props) {
  return createElement(Svg$1E, _extends$1I({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 3v18h18V3H3zm8 16H5v-6h6v6zm0-8H5V5h6v6zm8 8h-6v-6h6v6zm0-8h-6V5h6v6z"
  }));
};

SvgBorderAll.displayName = "SvgBorderAll";
SvgBorderAll.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1J() { _extends$1J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1J.apply(this, arguments); }
var Svg$1F = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderBottom = function SvgBorderBottom(props) {
  return createElement(Svg$1F, _extends$1J({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 11H7v2h2v-2zm4 4h-2v2h2v-2zM9 3H7v2h2V3zm4 8h-2v2h2v-2zM5 3H3v2h2V3zm8 4h-2v2h2V7zm4 4h-2v2h2v-2zm-4-8h-2v2h2V3zm4 0h-2v2h2V3zm2 10h2v-2h-2v2zm0 4h2v-2h-2v2zM5 7H3v2h2V7zm14-4v2h2V3h-2zm0 6h2V7h-2v2zM5 11H3v2h2v-2zM3 21h18v-2H3v2zm2-6H3v2h2v-2z"
  }));
};

SvgBorderBottom.displayName = "SvgBorderBottom";
SvgBorderBottom.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1K() { _extends$1K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1K.apply(this, arguments); }
var Svg$1G = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderClear = function SvgBorderClear(props) {
  return createElement(Svg$1G, _extends$1K({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 5h2V3H7v2zm0 8h2v-2H7v2zm0 8h2v-2H7v2zm4-4h2v-2h-2v2zm0 4h2v-2h-2v2zm-8 0h2v-2H3v2zm0-4h2v-2H3v2zm0-4h2v-2H3v2zm0-4h2V7H3v2zm0-4h2V3H3v2zm8 8h2v-2h-2v2zm8 4h2v-2h-2v2zm0-4h2v-2h-2v2zm0 8h2v-2h-2v2zm0-12h2V7h-2v2zm-8 0h2V7h-2v2zm8-6v2h2V3h-2zm-8 2h2V3h-2v2zm4 16h2v-2h-2v2zm0-8h2v-2h-2v2zm0-8h2V3h-2v2z"
  }));
};

SvgBorderClear.displayName = "SvgBorderClear";
SvgBorderClear.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1L() { _extends$1L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1L.apply(this, arguments); }
var Svg$1H = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderColor = function SvgBorderColor(props) {
  return createElement(Svg$1H, _extends$1L({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17.75 7L14 3.25l-10 10V17h3.75l10-10zm2.96-2.96a.996.996 0 000-1.41L18.37.29a.996.996 0 00-1.41 0L15 2.25 18.75 6l1.96-1.96z"
  }), createElement("path", {
    fillOpacity: 0.36,
    d: "M0 20h24v4H0z"
  }));
};

SvgBorderColor.displayName = "SvgBorderColor";
SvgBorderColor.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1M() { _extends$1M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1M.apply(this, arguments); }
var Svg$1I = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderHorizontal = function SvgBorderHorizontal(props) {
  return createElement(Svg$1I, _extends$1M({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 21h2v-2H3v2zM5 7H3v2h2V7zM3 17h2v-2H3v2zm4 4h2v-2H7v2zM5 3H3v2h2V3zm4 0H7v2h2V3zm8 0h-2v2h2V3zm-4 4h-2v2h2V7zm0-4h-2v2h2V3zm6 14h2v-2h-2v2zm-8 4h2v-2h-2v2zm-8-8h18v-2H3v2zM19 3v2h2V3h-2zm0 6h2V7h-2v2zm-8 8h2v-2h-2v2zm4 4h2v-2h-2v2zm4 0h2v-2h-2v2z"
  }));
};

SvgBorderHorizontal.displayName = "SvgBorderHorizontal";
SvgBorderHorizontal.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1N() { _extends$1N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1N.apply(this, arguments); }
var Svg$1J = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderInner = function SvgBorderInner(props) {
  return createElement(Svg$1J, _extends$1N({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 21h2v-2H3v2zm4 0h2v-2H7v2zM5 7H3v2h2V7zM3 17h2v-2H3v2zM9 3H7v2h2V3zM5 3H3v2h2V3zm12 0h-2v2h2V3zm2 6h2V7h-2v2zm0-6v2h2V3h-2zm-4 18h2v-2h-2v2zM13 3h-2v8H3v2h8v8h2v-8h8v-2h-8V3zm6 18h2v-2h-2v2zm0-4h2v-2h-2v2z"
  }));
};

SvgBorderInner.displayName = "SvgBorderInner";
SvgBorderInner.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1O() { _extends$1O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1O.apply(this, arguments); }
var Svg$1K = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderLeft = function SvgBorderLeft(props) {
  return createElement(Svg$1K, _extends$1O({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 21h2v-2h-2v2zm0-4h2v-2h-2v2zm0-12h2V3h-2v2zm0 4h2V7h-2v2zm0 4h2v-2h-2v2zm-4 8h2v-2H7v2zM7 5h2V3H7v2zm0 8h2v-2H7v2zm-4 8h2V3H3v18zM19 9h2V7h-2v2zm-4 12h2v-2h-2v2zm4-4h2v-2h-2v2zm0-14v2h2V3h-2zm0 10h2v-2h-2v2zm0 8h2v-2h-2v2zm-4-8h2v-2h-2v2zm0-8h2V3h-2v2z"
  }));
};

SvgBorderLeft.displayName = "SvgBorderLeft";
SvgBorderLeft.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1P() { _extends$1P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1P.apply(this, arguments); }
var Svg$1L = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderOuter = function SvgBorderOuter(props) {
  return createElement(Svg$1L, _extends$1P({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 7h-2v2h2V7zm0 4h-2v2h2v-2zm4 0h-2v2h2v-2zM3 3v18h18V3H3zm16 16H5V5h14v14zm-6-4h-2v2h2v-2zm-4-4H7v2h2v-2z"
  }));
};

SvgBorderOuter.displayName = "SvgBorderOuter";
SvgBorderOuter.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1Q() { _extends$1Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1Q.apply(this, arguments); }
var Svg$1M = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderRight = function SvgBorderRight(props) {
  return createElement(Svg$1M, _extends$1Q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 21h2v-2H7v2zM3 5h2V3H3v2zm4 0h2V3H7v2zm0 8h2v-2H7v2zm-4 8h2v-2H3v2zm8 0h2v-2h-2v2zm-8-8h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm8 8h2v-2h-2v2zm4-4h2v-2h-2v2zm4-10v18h2V3h-2zm-4 18h2v-2h-2v2zm0-16h2V3h-2v2zm-4 8h2v-2h-2v2zm0-8h2V3h-2v2zm0 4h2V7h-2v2z"
  }));
};

SvgBorderRight.displayName = "SvgBorderRight";
SvgBorderRight.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1R() { _extends$1R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1R.apply(this, arguments); }
var Svg$1N = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderStyle = function SvgBorderStyle(props) {
  return createElement(Svg$1N, _extends$1R({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15 21h2v-2h-2v2zm4 0h2v-2h-2v2zM7 21h2v-2H7v2zm4 0h2v-2h-2v2zm8-4h2v-2h-2v2zm0-4h2v-2h-2v2zM3 3v18h2V5h16V3H3zm16 6h2V7h-2v2z"
  }));
};

SvgBorderStyle.displayName = "SvgBorderStyle";
SvgBorderStyle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1S() { _extends$1S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1S.apply(this, arguments); }
var Svg$1O = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderTop = function SvgBorderTop(props) {
  return createElement(Svg$1O, _extends$1S({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 21h2v-2H7v2zm0-8h2v-2H7v2zm4 0h2v-2h-2v2zm0 8h2v-2h-2v2zm-8-4h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2v-2H3v2zm0-4h2V7H3v2zm8 8h2v-2h-2v2zm8-8h2V7h-2v2zm0 4h2v-2h-2v2zM3 3v2h18V3H3zm16 14h2v-2h-2v2zm-4 4h2v-2h-2v2zM11 9h2V7h-2v2zm8 12h2v-2h-2v2zm-4-8h2v-2h-2v2z"
  }));
};

SvgBorderTop.displayName = "SvgBorderTop";
SvgBorderTop.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1T() { _extends$1T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1T.apply(this, arguments); }
var Svg$1P = styled("svg")({
  flex: "none"
}, space, color);

var SvgBorderVertical = function SvgBorderVertical(props) {
  return createElement(Svg$1P, _extends$1T({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 9h2V7H3v2zm0-4h2V3H3v2zm4 16h2v-2H7v2zm0-8h2v-2H7v2zm-4 0h2v-2H3v2zm0 8h2v-2H3v2zm0-4h2v-2H3v2zM7 5h2V3H7v2zm12 12h2v-2h-2v2zm-8 4h2V3h-2v18zm8 0h2v-2h-2v2zm0-8h2v-2h-2v2zm0-10v2h2V3h-2zm0 6h2V7h-2v2zm-4-4h2V3h-2v2zm0 16h2v-2h-2v2zm0-8h2v-2h-2v2z"
  }));
};

SvgBorderVertical.displayName = "SvgBorderVertical";
SvgBorderVertical.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1U() { _extends$1U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1U.apply(this, arguments); }
var Svg$1Q = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrandingWatermark = function SvgBrandingWatermark(props) {
  return createElement(Svg$1Q, _extends$1U({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16h-9v-6h9v6z"
  }));
};

SvgBrandingWatermark.displayName = "SvgBrandingWatermark";
SvgBrandingWatermark.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1V() { _extends$1V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1V.apply(this, arguments); }
var Svg$1R = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightness1 = function SvgBrightness1(props) {
  return createElement(Svg$1R, _extends$1V({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 12,
    cy: 12,
    r: 10
  }));
};

SvgBrightness1.displayName = "SvgBrightness1";
SvgBrightness1.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1W() { _extends$1W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1W.apply(this, arguments); }
var Svg$1S = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightness2 = function SvgBrightness2(props) {
  return createElement(Svg$1S, _extends$1W({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 2c-1.82 0-3.53.5-5 1.35C7.99 5.08 10 8.3 10 12s-2.01 6.92-5 8.65C6.47 21.5 8.18 22 10 22c5.52 0 10-4.48 10-10S15.52 2 10 2z"
  }));
};

SvgBrightness2.displayName = "SvgBrightness2";
SvgBrightness2.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1X() { _extends$1X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1X.apply(this, arguments); }
var Svg$1T = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightness3 = function SvgBrightness3(props) {
  return createElement(Svg$1T, _extends$1X({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 2c-1.05 0-2.05.16-3 .46 4.06 1.27 7 5.06 7 9.54 0 4.48-2.94 8.27-7 9.54.95.3 1.95.46 3 .46 5.52 0 10-4.48 10-10S14.52 2 9 2z"
  }));
};

SvgBrightness3.displayName = "SvgBrightness3";
SvgBrightness3.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1Y() { _extends$1Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1Y.apply(this, arguments); }
var Svg$1U = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightness4 = function SvgBrightness4(props) {
  return createElement(Svg$1U, _extends$1Y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-.89 0-1.74-.2-2.5-.55C11.56 16.5 13 14.42 13 12s-1.44-4.5-3.5-5.45C10.26 6.2 11.11 6 12 6c3.31 0 6 2.69 6 6s-2.69 6-6 6z"
  }));
};

SvgBrightness4.displayName = "SvgBrightness4";
SvgBrightness4.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1Z() { _extends$1Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1Z.apply(this, arguments); }
var Svg$1V = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightness5 = function SvgBrightness5(props) {
  return createElement(Svg$1V, _extends$1Z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"
  }));
};

SvgBrightness5.displayName = "SvgBrightness5";
SvgBrightness5.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1_() { _extends$1_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1_.apply(this, arguments); }
var Svg$1W = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightness6 = function SvgBrightness6(props) {
  return createElement(Svg$1W, _extends$1_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18V6c3.31 0 6 2.69 6 6s-2.69 6-6 6z"
  }));
};

SvgBrightness6.displayName = "SvgBrightness6";
SvgBrightness6.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$1$() { _extends$1$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1$.apply(this, arguments); }
var Svg$1X = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightness7 = function SvgBrightness7(props) {
  return createElement(Svg$1X, _extends$1$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"
  }));
};

SvgBrightness7.displayName = "SvgBrightness7";
SvgBrightness7.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$20() { _extends$20 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$20.apply(this, arguments); }
var Svg$1Y = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightnessAuto = function SvgBrightnessAuto(props) {
  return createElement(Svg$1Y, _extends$20({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10.85 12.65h2.3L12 9l-1.15 3.65zM20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM14.3 16l-.7-2h-3.2l-.7 2H7.8L11 7h2l3.2 9h-1.9z"
  }));
};

SvgBrightnessAuto.displayName = "SvgBrightnessAuto";
SvgBrightnessAuto.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$21() { _extends$21 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$21.apply(this, arguments); }
var Svg$1Z = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightnessHigh = function SvgBrightnessHigh(props) {
  return createElement(Svg$1Z, _extends$21({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"
  }));
};

SvgBrightnessHigh.displayName = "SvgBrightnessHigh";
SvgBrightnessHigh.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$22() { _extends$22 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$22.apply(this, arguments); }
var Svg$1_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightnessLow = function SvgBrightnessLow(props) {
  return createElement(Svg$1_, _extends$22({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"
  }));
};

SvgBrightnessLow.displayName = "SvgBrightnessLow";
SvgBrightnessLow.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$23() { _extends$23 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$23.apply(this, arguments); }
var Svg$1$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrightnessMedium = function SvgBrightnessMedium(props) {
  return createElement(Svg$1$, _extends$23({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 15.31L23.31 12 20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69zM12 18V6c3.31 0 6 2.69 6 6s-2.69 6-6 6z"
  }));
};

SvgBrightnessMedium.displayName = "SvgBrightnessMedium";
SvgBrightnessMedium.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$24() { _extends$24 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$24.apply(this, arguments); }
var Svg$20 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrokenImage = function SvgBrokenImage(props) {
  return createElement(Svg$20, _extends$24({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 5v6.59l-3-3.01-4 4.01-4-4-4 4-3-3.01V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2zm-3 6.42l3 3.01V19c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2v-6.58l3 2.99 4-4 4 4 4-3.99z"
  }));
};

SvgBrokenImage.displayName = "SvgBrokenImage";
SvgBrokenImage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$25() { _extends$25 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$25.apply(this, arguments); }
var Svg$21 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrush = function SvgBrush(props) {
  return createElement(Svg$21, _extends$25({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 14c-1.66 0-3 1.34-3 3 0 1.31-1.16 2-2 2 .92 1.22 2.49 2 4 2 2.21 0 4-1.79 4-4 0-1.66-1.34-3-3-3zm13.71-9.37l-1.34-1.34a.996.996 0 00-1.41 0L9 12.25 11.75 15l8.96-8.96a.996.996 0 000-1.41z"
  }));
};

SvgBrush.displayName = "SvgBrush";
SvgBrush.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$26() { _extends$26 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$26.apply(this, arguments); }
var Svg$22 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBubbleChart = function SvgBubbleChart(props) {
  return createElement(Svg$22, _extends$26({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 7.2,
    cy: 14.4,
    r: 3.2
  }), createElement("circle", {
    cx: 14.8,
    cy: 18,
    r: 2
  }), createElement("circle", {
    cx: 15.2,
    cy: 8.8,
    r: 4.8
  }));
};

SvgBubbleChart.displayName = "SvgBubbleChart";
SvgBubbleChart.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$27() { _extends$27 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$27.apply(this, arguments); }
var Svg$23 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBugReport = function SvgBugReport(props) {
  return createElement(Svg$23, _extends$27({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 8h-2.81a5.985 5.985 0 00-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z"
  }));
};

SvgBugReport.displayName = "SvgBugReport";
SvgBugReport.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$28() { _extends$28 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$28.apply(this, arguments); }
var Svg$24 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBuild = function SvgBuild(props) {
  return createElement(Svg$24, _extends$28({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    clipRule: "evenodd",
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M22.7 19l-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z"
  }));
};

SvgBuild.displayName = "SvgBuild";
SvgBuild.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$29() { _extends$29 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$29.apply(this, arguments); }
var Svg$25 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBurstMode = function SvgBurstMode(props) {
  return createElement(Svg$25, _extends$29({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M1 5h2v14H1zm4 0h2v14H5zm17 0H10c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM11 17l2.5-3.15L15.29 16l2.5-3.22L21 17H11z"
  }));
};

SvgBurstMode.displayName = "SvgBurstMode";
SvgBurstMode.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2a() { _extends$2a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2a.apply(this, arguments); }
var Svg$26 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBusiness = function SvgBusiness(props) {
  return createElement(Svg$26, _extends$2a({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z"
  }));
};

SvgBusiness.displayName = "SvgBusiness";
SvgBusiness.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2b() { _extends$2b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2b.apply(this, arguments); }
var Svg$27 = styled("svg")({
  flex: "none"
}, space, color);

var SvgBusinessCenter = function SvgBusinessCenter(props) {
  return createElement(Svg$27, _extends$2b({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0zm10 5h4v2h-4zm0 0h4v2h-4z"
  }), createElement("path", {
    d: "M10 16v-1H3.01L3 19c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2v-4h-7v1h-4zm10-9h-4.01V5l-2-2h-4l-2 2v2H4c-1.1 0-2 .9-2 2v3c0 1.11.89 2 2 2h6v-2h4v2h6c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm-6 0h-4V5h4v2z"
  }));
};

SvgBusinessCenter.displayName = "SvgBusinessCenter";
SvgBusinessCenter.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2c() { _extends$2c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2c.apply(this, arguments); }
var Svg$28 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCached = function SvgCached(props) {
  return createElement(Svg$28, _extends$2c({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 8l-4 4h3c0 3.31-2.69 6-6 6a5.87 5.87 0 01-2.8-.7l-1.46 1.46A7.93 7.93 0 0012 20c4.42 0 8-3.58 8-8h3l-4-4zM6 12c0-3.31 2.69-6 6-6 1.01 0 1.97.25 2.8.7l1.46-1.46A7.93 7.93 0 0012 4c-4.42 0-8 3.58-8 8H1l4 4 4-4H6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgCached.displayName = "SvgCached";
SvgCached.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2d() { _extends$2d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2d.apply(this, arguments); }
var Svg$29 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCake = function SvgCake(props) {
  return createElement(Svg$29, _extends$2d({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 6a2 2 0 002-2c0-.38-.1-.73-.29-1.03L12 0l-1.71 2.97c-.19.3-.29.65-.29 1.03 0 1.1.9 2 2 2zm4.6 9.99l-1.07-1.07-1.08 1.07c-1.3 1.3-3.58 1.31-4.89 0l-1.07-1.07-1.09 1.07C6.75 16.64 5.88 17 4.96 17c-.73 0-1.4-.23-1.96-.61V21c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-4.61c-.56.38-1.23.61-1.96.61-.92 0-1.79-.36-2.44-1.01zM18 9h-5V7h-2v2H6c-1.66 0-3 1.34-3 3v1.54c0 1.08.88 1.96 1.96 1.96.52 0 1.02-.2 1.38-.57l2.14-2.13 2.13 2.13c.74.74 2.03.74 2.77 0l2.14-2.13 2.13 2.13c.37.37.86.57 1.38.57 1.08 0 1.96-.88 1.96-1.96V12C21 10.34 19.66 9 18 9z"
  }));
};

SvgCake.displayName = "SvgCake";
SvgCake.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2e() { _extends$2e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2e.apply(this, arguments); }
var Svg$2a = styled("svg")({
  flex: "none"
}, space, color);

var SvgCall = function SvgCall(props) {
  return createElement(Svg$2a, _extends$2e({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"
  }));
};

SvgCall.displayName = "SvgCall";
SvgCall.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2f() { _extends$2f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2f.apply(this, arguments); }
var Svg$2b = styled("svg")({
  flex: "none"
}, space, color);

var SvgCallEnd = function SvgCallEnd(props) {
  return createElement(Svg$2b, _extends$2f({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 9c-1.6 0-3.15.25-4.6.72v3.1c0 .39-.23.74-.56.9-.98.49-1.87 1.12-2.66 1.85-.18.18-.43.28-.7.28-.28 0-.53-.11-.71-.29L.29 13.08a.956.956 0 01-.29-.7c0-.28.11-.53.29-.71C3.34 8.78 7.46 7 12 7s8.66 1.78 11.71 4.67c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-2.48 2.48c-.18.18-.43.29-.71.29-.27 0-.52-.11-.7-.28a11.27 11.27 0 00-2.67-1.85.996.996 0 01-.56-.9v-3.1C15.15 9.25 13.6 9 12 9z"
  }));
};

SvgCallEnd.displayName = "SvgCallEnd";
SvgCallEnd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2g() { _extends$2g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2g.apply(this, arguments); }
var Svg$2c = styled("svg")({
  flex: "none"
}, space, color);

var SvgCallMade = function SvgCallMade(props) {
  return createElement(Svg$2c, _extends$2g({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5z"
  }));
};

SvgCallMade.displayName = "SvgCallMade";
SvgCallMade.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2h() { _extends$2h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2h.apply(this, arguments); }
var Svg$2d = styled("svg")({
  flex: "none"
}, space, color);

var SvgCallMerge = function SvgCallMerge(props) {
  return createElement(Svg$2d, _extends$2h({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 20.41L18.41 19 15 15.59 13.59 17 17 20.41zM7.5 8H11v5.59L5.59 19 7 20.41l6-6V8h3.5L12 3.5 7.5 8z"
  }));
};

SvgCallMerge.displayName = "SvgCallMerge";
SvgCallMerge.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2i() { _extends$2i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2i.apply(this, arguments); }
var Svg$2e = styled("svg")({
  flex: "none"
}, space, color);

var SvgCallMissed = function SvgCallMissed(props) {
  return createElement(Svg$2e, _extends$2i({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.59 7L12 14.59 6.41 9H11V7H3v8h2v-4.59l7 7 9-9z"
  }));
};

SvgCallMissed.displayName = "SvgCallMissed";
SvgCallMissed.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2j() { _extends$2j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2j.apply(this, arguments); }
var Svg$2f = styled("svg")({
  flex: "none"
}, space, color);

var SvgCallMissedOutgoing = function SvgCallMissedOutgoing(props) {
  return createElement(Svg$2f, _extends$2j({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 8.41l9 9 7-7V15h2V7h-8v2h4.59L12 14.59 4.41 7 3 8.41z"
  }));
};

SvgCallMissedOutgoing.displayName = "SvgCallMissedOutgoing";
SvgCallMissedOutgoing.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2k() { _extends$2k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2k.apply(this, arguments); }
var Svg$2g = styled("svg")({
  flex: "none"
}, space, color);

var SvgCallReceived = function SvgCallReceived(props) {
  return createElement(Svg$2g, _extends$2k({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 5.41L18.59 4 7 15.59V9H5v10h10v-2H8.41z"
  }));
};

SvgCallReceived.displayName = "SvgCallReceived";
SvgCallReceived.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2l() { _extends$2l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2l.apply(this, arguments); }
var Svg$2h = styled("svg")({
  flex: "none"
}, space, color);

var SvgCallSplit = function SvgCallSplit(props) {
  return createElement(Svg$2h, _extends$2l({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14 4l2.29 2.29-2.88 2.88 1.42 1.42 2.88-2.88L20 10V4zm-4 0H4v6l2.29-2.29 4.71 4.7V20h2v-8.41l-5.29-5.3z"
  }));
};

SvgCallSplit.displayName = "SvgCallSplit";
SvgCallSplit.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2m() { _extends$2m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2m.apply(this, arguments); }
var Svg$2i = styled("svg")({
  flex: "none"
}, space, color);

var SvgCallToAction = function SvgCallToAction(props) {
  return createElement(Svg$2i, _extends$2m({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3v-3h18v3z"
  }));
};

SvgCallToAction.displayName = "SvgCallToAction";
SvgCallToAction.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2n() { _extends$2n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2n.apply(this, arguments); }
var Svg$2j = styled("svg")({
  flex: "none"
}, space, color);

var SvgCamera = function SvgCamera(props) {
  return createElement(Svg$2j, _extends$2n({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9.4 10.5l4.77-8.26a9.984 9.984 0 00-8.49 2.01l3.66 6.35.06-.1zM21.54 9c-.92-2.92-3.15-5.26-6-6.34L11.88 9h9.66zm.26 1h-7.49l.29.5 4.76 8.25A9.91 9.91 0 0022 12c0-.69-.07-1.35-.2-2zM8.54 12l-3.9-6.75A9.958 9.958 0 002.2 14h7.49l-1.15-2zm-6.08 3c.92 2.92 3.15 5.26 6 6.34L12.12 15H2.46zm11.27 0l-3.9 6.76a9.984 9.984 0 008.49-2.01l-3.66-6.35-.93 1.6z"
  }));
};

SvgCamera.displayName = "SvgCamera";
SvgCamera.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2o() { _extends$2o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2o.apply(this, arguments); }
var Svg$2k = styled("svg")({
  flex: "none"
}, space, color);

var SvgCameraAlt = function SvgCameraAlt(props) {
  return createElement(Svg$2k, _extends$2o({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 12,
    cy: 12,
    r: 3.2
  }), createElement("path", {
    d: "M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
  }));
};

SvgCameraAlt.displayName = "SvgCameraAlt";
SvgCameraAlt.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2p() { _extends$2p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2p.apply(this, arguments); }
var Svg$2l = styled("svg")({
  flex: "none"
}, space, color);

var SvgCameraEnhance = function SvgCameraEnhance(props) {
  return createElement(Svg$2l, _extends$2p({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 3L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2h-3.17L15 3H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M12 17l1.25-2.75L16 13l-2.75-1.25L12 9l-1.25 2.75L8 13l2.75 1.25z"
  }));
};

SvgCameraEnhance.displayName = "SvgCameraEnhance";
SvgCameraEnhance.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2q() { _extends$2q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2q.apply(this, arguments); }
var Svg$2m = styled("svg")({
  flex: "none"
}, space, color);

var SvgCameraFront = function SvgCameraFront(props) {
  return createElement(Svg$2m, _extends$2q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 20H5v2h5v2l3-3-3-3v2zm4 0v2h5v-2h-5zM12 8c1.1 0 2-.9 2-2s-.9-2-2-2-1.99.9-1.99 2S10.9 8 12 8zm5-8H7C5.9 0 5 .9 5 2v14c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2zM7 2h10v10.5c0-1.67-3.33-2.5-5-2.5s-5 .83-5 2.5V2z"
  }));
};

SvgCameraFront.displayName = "SvgCameraFront";
SvgCameraFront.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2r() { _extends$2r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2r.apply(this, arguments); }
var Svg$2n = styled("svg")({
  flex: "none"
}, space, color);

var SvgCameraRear = function SvgCameraRear(props) {
  return createElement(Svg$2n, _extends$2r({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 20H5v2h5v2l3-3-3-3v2zm4 0v2h5v-2h-5zm3-20H7C5.9 0 5 .9 5 2v14c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V2c0-1.1-.9-2-2-2zm-5 6c-1.11 0-2-.9-2-2s.89-2 1.99-2 2 .9 2 2C14 5.1 13.1 6 12 6z"
  }));
};

SvgCameraRear.displayName = "SvgCameraRear";
SvgCameraRear.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2s() { _extends$2s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2s.apply(this, arguments); }
var Svg$2o = styled("svg")({
  flex: "none"
}, space, color);

var SvgCameraRoll = function SvgCameraRoll(props) {
  return createElement(Svg$2o, _extends$2s({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14 5c0-1.1-.9-2-2-2h-1V2c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v1H4c-1.1 0-2 .9-2 2v15c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2h8V5h-8zm-2 13h-2v-2h2v2zm0-9h-2V7h2v2zm4 9h-2v-2h2v2zm0-9h-2V7h2v2zm4 9h-2v-2h2v2zm0-9h-2V7h2v2z"
  }));
};

SvgCameraRoll.displayName = "SvgCameraRoll";
SvgCameraRoll.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2t() { _extends$2t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2t.apply(this, arguments); }
var Svg$2p = styled("svg")({
  flex: "none"
}, space, color);

var SvgCancel = function SvgCancel(props) {
  return createElement(Svg$2p, _extends$2t({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
  }));
};

SvgCancel.displayName = "SvgCancel";
SvgCancel.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2u() { _extends$2u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2u.apply(this, arguments); }
var Svg$2q = styled("svg")({
  flex: "none"
}, space, color);

var SvgCardGiftcard = function SvgCardGiftcard(props) {
  return createElement(Svg$2q, _extends$2u({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 00-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgCardGiftcard.displayName = "SvgCardGiftcard";
SvgCardGiftcard.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2v() { _extends$2v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2v.apply(this, arguments); }
var Svg$2r = styled("svg")({
  flex: "none"
}, space, color);

var SvgCardMembership = function SvgCardMembership(props) {
  return createElement(Svg$2r, _extends$2v({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h4v5l4-2 4 2v-5h4c1.11 0 2-.89 2-2V4c0-1.11-.89-2-2-2zm0 13H4v-2h16v2zm0-5H4V4h16v6z"
  }));
};

SvgCardMembership.displayName = "SvgCardMembership";
SvgCardMembership.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2w() { _extends$2w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2w.apply(this, arguments); }
var Svg$2s = styled("svg")({
  flex: "none"
}, space, color);

var SvgCardTravel = function SvgCardTravel(props) {
  return createElement(Svg$2s, _extends$2w({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 6h-3V4c0-1.11-.89-2-2-2H9c-1.11 0-2 .89-2 2v2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4h6v2H9V4zm11 15H4v-2h16v2zm0-5H4V8h3v2h2V8h6v2h2V8h3v6z"
  }));
};

SvgCardTravel.displayName = "SvgCardTravel";
SvgCardTravel.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2x() { _extends$2x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2x.apply(this, arguments); }
var Svg$2t = styled("svg")({
  flex: "none"
}, space, color);

var SvgCasino = function SvgCasino(props) {
  return createElement(Svg$2t, _extends$2x({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0zm21.02 19c0 1.1-.9 2-2 2h-14c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2h14c1.1 0 2 .9 2 2v14z"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM7.5 18c-.83 0-1.5-.67-1.5-1.5S6.67 15 7.5 15s1.5.67 1.5 1.5S8.33 18 7.5 18zm0-9C6.67 9 6 8.33 6 7.5S6.67 6 7.5 6 9 6.67 9 7.5 8.33 9 7.5 9zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5 4.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm0-9c-.83 0-1.5-.67-1.5-1.5S15.67 6 16.5 6s1.5.67 1.5 1.5S17.33 9 16.5 9z"
  }));
};

SvgCasino.displayName = "SvgCasino";
SvgCasino.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2y() { _extends$2y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2y.apply(this, arguments); }
var Svg$2u = styled("svg")({
  flex: "none"
}, space, color);

var SvgCast = function SvgCast(props) {
  return createElement(Svg$2u, _extends$2y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    opacity: 0.1,
    fill: "none"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v3h2V5h18v14h-7v2h7c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM1 18v3h3c0-1.66-1.34-3-3-3zm0-4v2c2.76 0 5 2.24 5 5h2c0-3.87-3.13-7-7-7zm0-4v2a9 9 0 019 9h2c0-6.08-4.93-11-11-11z"
  }));
};

SvgCast.displayName = "SvgCast";
SvgCast.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2z() { _extends$2z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2z.apply(this, arguments); }
var Svg$2v = styled("svg")({
  flex: "none"
}, space, color);

var SvgCastConnected = function SvgCastConnected(props) {
  return createElement(Svg$2v, _extends$2z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    opacity: 0.1,
    fill: "none"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M1 18v3h3c0-1.66-1.34-3-3-3zm0-4v2c2.76 0 5 2.24 5 5h2c0-3.87-3.13-7-7-7zm18-7H5v1.63c3.96 1.28 7.09 4.41 8.37 8.37H19V7zM1 10v2a9 9 0 019 9h2c0-6.08-4.93-11-11-11zm20-7H3c-1.1 0-2 .9-2 2v3h2V5h18v14h-7v2h7c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
  }));
};

SvgCastConnected.displayName = "SvgCastConnected";
SvgCastConnected.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2A() { _extends$2A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2A.apply(this, arguments); }
var Svg$2w = styled("svg")({
  flex: "none"
}, space, color);

var SvgCenterFocusStrong = function SvgCenterFocusStrong(props) {
  return createElement(Svg$2w, _extends$2A({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm-7 7H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4z"
  }));
};

SvgCenterFocusStrong.displayName = "SvgCenterFocusStrong";
SvgCenterFocusStrong.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2B() { _extends$2B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2B.apply(this, arguments); }
var Svg$2x = styled("svg")({
  flex: "none"
}, space, color);

var SvgCenterFocusWeak = function SvgCenterFocusWeak(props) {
  return createElement(Svg$2x, _extends$2B({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
  }));
};

SvgCenterFocusWeak.displayName = "SvgCenterFocusWeak";
SvgCenterFocusWeak.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2C() { _extends$2C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2C.apply(this, arguments); }
var Svg$2y = styled("svg")({
  flex: "none"
}, space, color);

var SvgChangeHistory = function SvgChangeHistory(props) {
  return createElement(Svg$2y, _extends$2C({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 7.77L18.39 18H5.61L12 7.77M12 4L2 20h20L12 4z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgChangeHistory.displayName = "SvgChangeHistory";
SvgChangeHistory.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2D() { _extends$2D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2D.apply(this, arguments); }
var Svg$2z = styled("svg")({
  flex: "none"
}, space, color);

var SvgChat = function SvgChat(props) {
  return createElement(Svg$2z, _extends$2D({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 9h12v2H6V9zm8 5H6v-2h8v2zm4-6H6V6h12v2z"
  }));
};

SvgChat.displayName = "SvgChat";
SvgChat.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2E() { _extends$2E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2E.apply(this, arguments); }
var Svg$2A = styled("svg")({
  flex: "none"
}, space, color);

var SvgChatBubble = function SvgChatBubble(props) {
  return createElement(Svg$2A, _extends$2E({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z"
  }));
};

SvgChatBubble.displayName = "SvgChatBubble";
SvgChatBubble.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2F() { _extends$2F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2F.apply(this, arguments); }
var Svg$2B = styled("svg")({
  flex: "none"
}, space, color);

var SvgChatBubbleOutline = function SvgChatBubbleOutline(props) {
  return createElement(Svg$2B, _extends$2F({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H6l-2 2V4h16v12z"
  }));
};

SvgChatBubbleOutline.displayName = "SvgChatBubbleOutline";
SvgChatBubbleOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2G() { _extends$2G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2G.apply(this, arguments); }
var Svg$2C = styled("svg")({
  flex: "none"
}, space, color);

var SvgCheck = function SvgCheck(props) {
  return createElement(Svg$2C, _extends$2G({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"
  }));
};

SvgCheck.displayName = "SvgCheck";
SvgCheck.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2H() { _extends$2H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2H.apply(this, arguments); }
var Svg$2D = styled("svg")({
  flex: "none"
}, space, color);

var SvgCheckBox = function SvgCheckBox(props) {
  return createElement(Svg$2D, _extends$2H({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2V5a2 2 0 00-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
  }));
};

SvgCheckBox.displayName = "SvgCheckBox";
SvgCheckBox.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2I() { _extends$2I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2I.apply(this, arguments); }
var Svg$2E = styled("svg")({
  flex: "none"
}, space, color);

var SvgCheckBoxOutlineBlank = function SvgCheckBoxOutlineBlank(props) {
  return createElement(Svg$2E, _extends$2I({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgCheckBoxOutlineBlank.displayName = "SvgCheckBoxOutlineBlank";
SvgCheckBoxOutlineBlank.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2J() { _extends$2J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2J.apply(this, arguments); }
var Svg$2F = styled("svg")({
  flex: "none"
}, space, color);

var SvgCheckCircle = function SvgCheckCircle(props) {
  return createElement(Svg$2F, _extends$2J({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
  }));
};

SvgCheckCircle.displayName = "SvgCheckCircle";
SvgCheckCircle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2K() { _extends$2K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2K.apply(this, arguments); }
var Svg$2G = styled("svg")({
  flex: "none"
}, space, color);

var SvgChevronLeft = function SvgChevronLeft(props) {
  return createElement(Svg$2G, _extends$2K({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
  }));
};

SvgChevronLeft.displayName = "SvgChevronLeft";
SvgChevronLeft.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2L() { _extends$2L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2L.apply(this, arguments); }
var Svg$2H = styled("svg")({
  flex: "none"
}, space, color);

var SvgChevronRight = function SvgChevronRight(props) {
  return createElement(Svg$2H, _extends$2L({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
  }));
};

SvgChevronRight.displayName = "SvgChevronRight";
SvgChevronRight.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2M() { _extends$2M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2M.apply(this, arguments); }
var Svg$2I = styled("svg")({
  flex: "none"
}, space, color);

var SvgChildCare = function SvgChildCare(props) {
  return createElement(Svg$2I, _extends$2M({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("circle", {
    cx: 14.5,
    cy: 10.5,
    r: 1.25
  }), createElement("circle", {
    cx: 9.5,
    cy: 10.5,
    r: 1.25
  }), createElement("path", {
    d: "M22.94 12.66c.04-.21.06-.43.06-.66s-.02-.45-.06-.66a4.008 4.008 0 00-2.81-3.17 9.114 9.114 0 00-2.19-2.91C16.36 3.85 14.28 3 12 3s-4.36.85-5.94 2.26c-.92.81-1.67 1.8-2.19 2.91a3.994 3.994 0 00-2.81 3.17c-.04.21-.06.43-.06.66s.02.45.06.66a4.008 4.008 0 002.81 3.17 8.977 8.977 0 002.17 2.89C7.62 20.14 9.71 21 12 21s4.38-.86 5.97-2.28c.9-.8 1.65-1.79 2.17-2.89a3.998 3.998 0 002.8-3.17zM19 14c-.1 0-.19-.02-.29-.03-.2.67-.49 1.29-.86 1.86C16.6 17.74 14.45 19 12 19s-4.6-1.26-5.85-3.17c-.37-.57-.66-1.19-.86-1.86-.1.01-.19.03-.29.03-1.1 0-2-.9-2-2s.9-2 2-2c.1 0 .19.02.29.03.2-.67.49-1.29.86-1.86C7.4 6.26 9.55 5 12 5s4.6 1.26 5.85 3.17c.37.57.66 1.19.86 1.86.1-.01.19-.03.29-.03 1.1 0 2 .9 2 2s-.9 2-2 2zM7.5 14c.76 1.77 2.49 3 4.5 3s3.74-1.23 4.5-3h-9z"
  }));
};

SvgChildCare.displayName = "SvgChildCare";
SvgChildCare.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2N() { _extends$2N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2N.apply(this, arguments); }
var Svg$2J = styled("svg")({
  flex: "none"
}, space, color);

var SvgChildFriendly = function SvgChildFriendly(props) {
  return createElement(Svg$2J, _extends$2N({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M13 2v8h8c0-4.42-3.58-8-8-8zm6.32 13.89A7.948 7.948 0 0021 11H6.44l-.95-2H2v2h2.22s1.89 4.07 2.12 4.42c-1.1.59-1.84 1.75-1.84 3.08C4.5 20.43 6.07 22 8 22c1.76 0 3.22-1.3 3.46-3h2.08c.24 1.7 1.7 3 3.46 3 1.93 0 3.5-1.57 3.5-3.5 0-1.04-.46-1.97-1.18-2.61zM8 20c-.83 0-1.5-.67-1.5-1.5S7.17 17 8 17s1.5.67 1.5 1.5S8.83 20 8 20zm9 0c-.83 0-1.5-.67-1.5-1.5S16.17 17 17 17s1.5.67 1.5 1.5S17.83 20 17 20z"
  }));
};

SvgChildFriendly.displayName = "SvgChildFriendly";
SvgChildFriendly.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2O() { _extends$2O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2O.apply(this, arguments); }
var Svg$2K = styled("svg")({
  flex: "none"
}, space, color);

var SvgChromeReaderMode = function SvgChromeReaderMode(props) {
  return createElement(Svg$2K, _extends$2O({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M-74 29h48v48h-48V29zM0 0h24v24H0V0zm0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M13 12h7v1.5h-7zm0-2.5h7V11h-7zm0 5h7V16h-7zM21 4H3c-1.1 0-2 .9-2 2v13c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 15h-9V6h9v13z"
  }));
};

SvgChromeReaderMode.displayName = "SvgChromeReaderMode";
SvgChromeReaderMode.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2P() { _extends$2P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2P.apply(this, arguments); }
var Svg$2L = styled("svg")({
  flex: "none"
}, space, color);

var SvgClass = function SvgClass(props) {
  return createElement(Svg$2L, _extends$2P({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z"
  }));
};

SvgClass.displayName = "SvgClass";
SvgClass.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2Q() { _extends$2Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2Q.apply(this, arguments); }
var Svg$2M = styled("svg")({
  flex: "none"
}, space, color);

var SvgClear = function SvgClear(props) {
  return createElement(Svg$2M, _extends$2Q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgClear.displayName = "SvgClear";
SvgClear.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2R() { _extends$2R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2R.apply(this, arguments); }
var Svg$2N = styled("svg")({
  flex: "none"
}, space, color);

var SvgClearAll = function SvgClearAll(props) {
  return createElement(Svg$2N, _extends$2R({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5 13h14v-2H5v2zm-2 4h14v-2H3v2zM7 7v2h14V7H7z"
  }));
};

SvgClearAll.displayName = "SvgClearAll";
SvgClearAll.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2S() { _extends$2S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2S.apply(this, arguments); }
var Svg$2O = styled("svg")({
  flex: "none"
}, space, color);

var SvgClose = function SvgClose(props) {
  return createElement(Svg$2O, _extends$2S({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
  }));
};

SvgClose.displayName = "SvgClose";
SvgClose.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2T() { _extends$2T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2T.apply(this, arguments); }
var Svg$2P = styled("svg")({
  flex: "none"
}, space, color);

var SvgClosedCaption = function SvgClosedCaption(props) {
  return createElement(Svg$2P, _extends$2T({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 4H5a2 2 0 00-2 2v12a2 2 0 002 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 7H9.5v-.5h-2v3h2V13H11v1c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1zm7 0h-1.5v-.5h-2v3h2V13H18v1c0 .55-.45 1-1 1h-3c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1z"
  }));
};

SvgClosedCaption.displayName = "SvgClosedCaption";
SvgClosedCaption.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2U() { _extends$2U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2U.apply(this, arguments); }
var Svg$2Q = styled("svg")({
  flex: "none"
}, space, color);

var SvgCloud = function SvgCloud(props) {
  return createElement(Svg$2Q, _extends$2U({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.35 10.04A7.49 7.49 0 0012 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 000 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96z"
  }));
};

SvgCloud.displayName = "SvgCloud";
SvgCloud.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2V() { _extends$2V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2V.apply(this, arguments); }
var Svg$2R = styled("svg")({
  flex: "none"
}, space, color);

var SvgCloudCircle = function SvgCloudCircle(props) {
  return createElement(Svg$2R, _extends$2V({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4.5 14H8c-1.66 0-3-1.34-3-3s1.34-3 3-3l.14.01A3.98 3.98 0 0112 7c2.21 0 4 1.79 4 4h.5a2.5 2.5 0 010 5z"
  }));
};

SvgCloudCircle.displayName = "SvgCloudCircle";
SvgCloudCircle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2W() { _extends$2W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2W.apply(this, arguments); }
var Svg$2S = styled("svg")({
  flex: "none"
}, space, color);

var SvgCloudDone = function SvgCloudDone(props) {
  return createElement(Svg$2S, _extends$2W({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.35 10.04A7.49 7.49 0 0012 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 000 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM10 17l-3.5-3.5 1.41-1.41L10 14.17 15.18 9l1.41 1.41L10 17z"
  }));
};

SvgCloudDone.displayName = "SvgCloudDone";
SvgCloudDone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2X() { _extends$2X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2X.apply(this, arguments); }
var Svg$2T = styled("svg")({
  flex: "none"
}, space, color);

var SvgCloudDownload = function SvgCloudDownload(props) {
  return createElement(Svg$2T, _extends$2X({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.35 10.04A7.49 7.49 0 0012 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 000 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z"
  }));
};

SvgCloudDownload.displayName = "SvgCloudDownload";
SvgCloudDownload.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2Y() { _extends$2Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2Y.apply(this, arguments); }
var Svg$2U = styled("svg")({
  flex: "none"
}, space, color);

var SvgCloudOff = function SvgCloudOff(props) {
  return createElement(Svg$2U, _extends$2Y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.35 10.04A7.49 7.49 0 0012 4c-1.48 0-2.85.43-4.01 1.17l1.46 1.46a5.497 5.497 0 018.05 4.87v.5H19c1.66 0 3 1.34 3 3 0 1.13-.64 2.11-1.56 2.62l1.45 1.45C23.16 18.16 24 16.68 24 15c0-2.64-2.05-4.78-4.65-4.96zM3 5.27l2.75 2.74C2.56 8.15 0 10.77 0 14c0 3.31 2.69 6 6 6h11.73l2 2L21 20.73 4.27 4 3 5.27zM7.73 10l8 8H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h1.73z"
  }));
};

SvgCloudOff.displayName = "SvgCloudOff";
SvgCloudOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2Z() { _extends$2Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2Z.apply(this, arguments); }
var Svg$2V = styled("svg")({
  flex: "none"
}, space, color);

var SvgCloudQueue = function SvgCloudQueue(props) {
  return createElement(Svg$2V, _extends$2Z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.35 10.04A7.49 7.49 0 0012 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 000 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h.71C7.37 7.69 9.48 6 12 6c3.04 0 5.5 2.46 5.5 5.5v.5H19c1.66 0 3 1.34 3 3s-1.34 3-3 3z"
  }));
};

SvgCloudQueue.displayName = "SvgCloudQueue";
SvgCloudQueue.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2_() { _extends$2_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2_.apply(this, arguments); }
var Svg$2W = styled("svg")({
  flex: "none"
}, space, color);

var SvgCloudUpload = function SvgCloudUpload(props) {
  return createElement(Svg$2W, _extends$2_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.35 10.04A7.49 7.49 0 0012 4C9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 000 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z"
  }));
};

SvgCloudUpload.displayName = "SvgCloudUpload";
SvgCloudUpload.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$2$() { _extends$2$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2$.apply(this, arguments); }
var Svg$2X = styled("svg")({
  flex: "none"
}, space, color);

var SvgCode = function SvgCode(props) {
  return createElement(Svg$2X, _extends$2$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"
  }));
};

SvgCode.displayName = "SvgCode";
SvgCode.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$30() { _extends$30 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$30.apply(this, arguments); }
var Svg$2Y = styled("svg")({
  flex: "none"
}, space, color);

var SvgCollections = function SvgCollections(props) {
  return createElement(Svg$2Y, _extends$30({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 16V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2zm-11-4l2.03 2.71L16 11l4 5H8l3-4zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z"
  }));
};

SvgCollections.displayName = "SvgCollections";
SvgCollections.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$31() { _extends$31 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$31.apply(this, arguments); }
var Svg$2Z = styled("svg")({
  flex: "none"
}, space, color);

var SvgCollectionsBookmark = function SvgCollectionsBookmark(props) {
  return createElement(Svg$2Z, _extends$31({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 10l-2.5-1.5L15 12V4h5v8z"
  }));
};

SvgCollectionsBookmark.displayName = "SvgCollectionsBookmark";
SvgCollectionsBookmark.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$32() { _extends$32 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$32.apply(this, arguments); }
var Svg$2_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgColorLens = function SvgColorLens(props) {
  return createElement(Svg$2_, _extends$32({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 3a9 9 0 000 18c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
  }));
};

SvgColorLens.displayName = "SvgColorLens";
SvgColorLens.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$33() { _extends$33 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$33.apply(this, arguments); }
var Svg$2$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgColorize = function SvgColorize(props) {
  return createElement(Svg$2$, _extends$33({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20.71 5.63l-2.34-2.34a.996.996 0 00-1.41 0l-3.12 3.12-1.93-1.91-1.41 1.41 1.42 1.42L3 16.25V21h4.75l8.92-8.92 1.42 1.42 1.41-1.41-1.92-1.92 3.12-3.12c.4-.4.4-1.03.01-1.42zM6.92 19L5 17.08l8.06-8.06 1.92 1.92L6.92 19z"
  }));
};

SvgColorize.displayName = "SvgColorize";
SvgColorize.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$34() { _extends$34 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$34.apply(this, arguments); }
var Svg$30 = styled("svg")({
  flex: "none"
}, space, color);

var SvgComment = function SvgComment(props) {
  return createElement(Svg$30, _extends$34({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21.99 4c0-1.1-.89-2-1.99-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4-.01-18zM18 14H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"
  }));
};

SvgComment.displayName = "SvgComment";
SvgComment.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$35() { _extends$35 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$35.apply(this, arguments); }
var Svg$31 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCompare = function SvgCompare(props) {
  return createElement(Svg$31, _extends$35({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h5v2h2V1h-2v2zm0 15H5l5-6v6zm9-15h-5v2h5v13l-5-6v9h5c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
  }));
};

SvgCompare.displayName = "SvgCompare";
SvgCompare.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$36() { _extends$36 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$36.apply(this, arguments); }
var Svg$32 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCompareArrows = function SvgCompareArrows(props) {
  return createElement(Svg$32, _extends$36({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "compareArrows_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "compareArrows_svg__b"
  }, createElement("use", {
    xlinkHref: "#compareArrows_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#compareArrows_svg__b)",
    d: "M9.01 14H2v2h7.01v3L13 15l-3.99-4v3zm5.98-1v-3H22V8h-7.01V5L11 9l3.99 4z"
  }));
};

SvgCompareArrows.displayName = "SvgCompareArrows";
SvgCompareArrows.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$37() { _extends$37 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$37.apply(this, arguments); }
var Svg$33 = styled("svg")({
  flex: "none"
}, space, color);

var SvgComputer = function SvgComputer(props) {
  return createElement(Svg$33, _extends$37({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 18c1.1 0 1.99-.9 1.99-2L22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z"
  }));
};

SvgComputer.displayName = "SvgComputer";
SvgComputer.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$38() { _extends$38 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$38.apply(this, arguments); }
var Svg$34 = styled("svg")({
  flex: "none"
}, space, color);

var SvgConfirmationNumber = function SvgConfirmationNumber(props) {
  return createElement(Svg$34, _extends$38({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "confirmationNumber_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "confirmationNumber_svg__b"
  }, createElement("use", {
    xlinkHref: "#confirmationNumber_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M22 10V6a2 2 0 00-2-2H4c-1.1 0-1.99.89-1.99 2v4c1.1 0 1.99.9 1.99 2s-.89 2-2 2v4c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-4c-1.1 0-2-.9-2-2s.9-2 2-2zm-9 7.5h-2v-2h2v2zm0-4.5h-2v-2h2v2zm0-4.5h-2v-2h2v2z",
    clipPath: "url(#confirmationNumber_svg__b)"
  }));
};

SvgConfirmationNumber.displayName = "SvgConfirmationNumber";
SvgConfirmationNumber.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$39() { _extends$39 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$39.apply(this, arguments); }
var Svg$35 = styled("svg")({
  flex: "none"
}, space, color);

var SvgContactMail = function SvgContactMail(props) {
  return createElement(Svg$35, _extends$39({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 8V7l-3 2-3-2v1l3 2 3-2zm1-5H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2zM8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1zm8-6h-8V6h8v6z"
  }));
};

SvgContactMail.displayName = "SvgContactMail";
SvgContactMail.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3a() { _extends$3a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3a.apply(this, arguments); }
var Svg$36 = styled("svg")({
  flex: "none"
}, space, color);

var SvgContactPhone = function SvgContactPhone(props) {
  return createElement(Svg$36, _extends$3a({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2zM8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1zm3.85-4h1.64L21 16l-1.99 1.99A7.512 7.512 0 0116.28 14c-.18-.64-.28-1.31-.28-2s.1-1.36.28-2a7.474 7.474 0 012.73-3.99L21 8l-1.51 2h-1.64c-.22.63-.35 1.3-.35 2s.13 1.37.35 2z"
  }));
};

SvgContactPhone.displayName = "SvgContactPhone";
SvgContactPhone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3b() { _extends$3b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3b.apply(this, arguments); }
var Svg$37 = styled("svg")({
  flex: "none"
}, space, color);

var SvgContacts = function SvgContacts(props) {
  return createElement(Svg$37, _extends$3b({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 0H4v2h16V0zM4 24h16v-2H4v2zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 2.75c1.24 0 2.25 1.01 2.25 2.25s-1.01 2.25-2.25 2.25S9.75 10.24 9.75 9 10.76 6.75 12 6.75zM17 17H7v-1.5c0-1.67 3.33-2.5 5-2.5s5 .83 5 2.5V17z"
  }));
};

SvgContacts.displayName = "SvgContacts";
SvgContacts.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3c() { _extends$3c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3c.apply(this, arguments); }
var Svg$38 = styled("svg")({
  flex: "none"
}, space, color);

var SvgContentCopy = function SvgContentCopy(props) {
  return createElement(Svg$38, _extends$3c({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z"
  }));
};

SvgContentCopy.displayName = "SvgContentCopy";
SvgContentCopy.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3d() { _extends$3d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3d.apply(this, arguments); }
var Svg$39 = styled("svg")({
  flex: "none"
}, space, color);

var SvgContentCut = function SvgContentCut(props) {
  return createElement(Svg$39, _extends$3d({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("circle", {
    cx: 6,
    cy: 18,
    r: 2,
    fill: "none"
  }), createElement("circle", {
    cx: 12,
    cy: 12,
    r: 0.5,
    fill: "none"
  }), createElement("circle", {
    cx: 6,
    cy: 6,
    r: 2,
    fill: "none"
  }), createElement("path", {
    d: "M9.64 7.64c.23-.5.36-1.05.36-1.64 0-2.21-1.79-4-4-4S2 3.79 2 6s1.79 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1L9.64 7.64zM6 8c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm0 12c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm6-7.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5.5.22.5.5-.22.5-.5.5zM19 3l-6 6 2 2 7-7V3z"
  }));
};

SvgContentCut.displayName = "SvgContentCut";
SvgContentCut.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3e() { _extends$3e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3e.apply(this, arguments); }
var Svg$3a = styled("svg")({
  flex: "none"
}, space, color);

var SvgContentPaste = function SvgContentPaste(props) {
  return createElement(Svg$3a, _extends$3e({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgContentPaste.displayName = "SvgContentPaste";
SvgContentPaste.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3f() { _extends$3f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3f.apply(this, arguments); }
var Svg$3b = styled("svg")({
  flex: "none"
}, space, color);

var SvgControlPoint = function SvgControlPoint(props) {
  return createElement(Svg$3b, _extends$3f({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10 10-4.49 10-10S17.51 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
  }));
};

SvgControlPoint.displayName = "SvgControlPoint";
SvgControlPoint.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3g() { _extends$3g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3g.apply(this, arguments); }
var Svg$3c = styled("svg")({
  flex: "none"
}, space, color);

var SvgControlPointDuplicate = function SvgControlPointDuplicate(props) {
  return createElement(Svg$3c, _extends$3g({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16 8h-2v3h-3v2h3v3h2v-3h3v-2h-3zM2 12c0-2.79 1.64-5.2 4.01-6.32V3.52C2.52 4.76 0 8.09 0 12s2.52 7.24 6.01 8.48v-2.16A6.99 6.99 0 012 12zm13-9c-4.96 0-9 4.04-9 9s4.04 9 9 9 9-4.04 9-9-4.04-9-9-9zm0 16c-3.86 0-7-3.14-7-7s3.14-7 7-7 7 3.14 7 7-3.14 7-7 7z"
  }));
};

SvgControlPointDuplicate.displayName = "SvgControlPointDuplicate";
SvgControlPointDuplicate.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3h() { _extends$3h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3h.apply(this, arguments); }
var Svg$3d = styled("svg")({
  flex: "none"
}, space, color);

var SvgCopyright = function SvgCopyright(props) {
  return createElement(Svg$3d, _extends$3h({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "copyright_svg__a",
    d: "M24 0v24H0V0h24z"
  })), createElement("clipPath", {
    id: "copyright_svg__b"
  }, createElement("use", {
    xlinkHref: "#copyright_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M10.08 10.86c.05-.33.16-.62.3-.87s.34-.46.59-.62c.24-.15.54-.22.91-.23.23.01.44.05.63.13.2.09.38.21.52.36s.25.33.34.53.13.42.14.64h1.79c-.02-.47-.11-.9-.28-1.29s-.4-.73-.7-1.01-.66-.5-1.08-.66-.88-.23-1.39-.23c-.65 0-1.22.11-1.7.34s-.88.53-1.2.92-.56.84-.71 1.36S8 11.29 8 11.87v.27c0 .58.08 1.12.23 1.64s.39.97.71 1.35.72.69 1.2.91 1.05.34 1.7.34c.47 0 .91-.08 1.32-.23s.77-.36 1.08-.63.56-.58.74-.94.29-.74.3-1.15h-1.79c-.01.21-.06.4-.15.58s-.21.33-.36.46-.32.23-.52.3c-.19.07-.39.09-.6.1-.36-.01-.66-.08-.89-.23-.25-.16-.45-.37-.59-.62s-.25-.55-.3-.88-.08-.67-.08-1v-.27c0-.35.03-.68.08-1.01zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z",
    clipPath: "url(#copyright_svg__b)"
  }));
};

SvgCopyright.displayName = "SvgCopyright";
SvgCopyright.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3i() { _extends$3i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3i.apply(this, arguments); }
var Svg$3e = styled("svg")({
  flex: "none"
}, space, color);

var SvgCreate = function SvgCreate(props) {
  return createElement(Svg$3e, _extends$3i({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04a.996.996 0 000-1.41l-2.34-2.34a.996.996 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgCreate.displayName = "SvgCreate";
SvgCreate.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3j() { _extends$3j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3j.apply(this, arguments); }
var Svg$3f = styled("svg")({
  flex: "none"
}, space, color);

var SvgCreateNewFolder = function SvgCreateNewFolder(props) {
  return createElement(Svg$3f, _extends$3j({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M20 6h-8l-2-2H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-1 8h-3v3h-2v-3h-3v-2h3V9h2v3h3v2z"
  }));
};

SvgCreateNewFolder.displayName = "SvgCreateNewFolder";
SvgCreateNewFolder.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3k() { _extends$3k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3k.apply(this, arguments); }
var Svg$3g = styled("svg")({
  flex: "none"
}, space, color);

var SvgCreditCard = function SvgCreditCard(props) {
  return createElement(Svg$3g, _extends$3k({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z"
  }));
};

SvgCreditCard.displayName = "SvgCreditCard";
SvgCreditCard.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3l() { _extends$3l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3l.apply(this, arguments); }
var Svg$3h = styled("svg")({
  flex: "none"
}, space, color);

var SvgCrop = function SvgCrop(props) {
  return createElement(Svg$3h, _extends$3l({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 15h2V7c0-1.1-.9-2-2-2H9v2h8v8zM7 17V1H5v4H1v2h4v10c0 1.1.9 2 2 2h10v4h2v-4h4v-2H7z"
  }));
};

SvgCrop.displayName = "SvgCrop";
SvgCrop.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3m() { _extends$3m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3m.apply(this, arguments); }
var Svg$3i = styled("svg")({
  flex: "none"
}, space, color);

var SvgCrop169 = function SvgCrop169(props) {
  return createElement(Svg$3i, _extends$3m({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 6H5c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H5V8h14v8z"
  }));
};

SvgCrop169.displayName = "SvgCrop169";
SvgCrop169.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3n() { _extends$3n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3n.apply(this, arguments); }
var Svg$3j = styled("svg")({
  flex: "none"
}, space, color);

var SvgCrop32 = function SvgCrop32(props) {
  return createElement(Svg$3j, _extends$3n({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 4H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H5V6h14v12z"
  }));
};

SvgCrop32.displayName = "SvgCrop32";
SvgCrop32.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3o() { _extends$3o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3o.apply(this, arguments); }
var Svg$3k = styled("svg")({
  flex: "none"
}, space, color);

var SvgCrop54 = function SvgCrop54(props) {
  return createElement(Svg$3k, _extends$3o({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 5H5c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 12H5V7h14v10z"
  }));
};

SvgCrop54.displayName = "SvgCrop54";
SvgCrop54.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3p() { _extends$3p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3p.apply(this, arguments); }
var Svg$3l = styled("svg")({
  flex: "none"
}, space, color);

var SvgCrop75 = function SvgCrop75(props) {
  return createElement(Svg$3l, _extends$3p({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 7H5c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm0 8H5V9h14v6z"
  }));
};

SvgCrop75.displayName = "SvgCrop75";
SvgCrop75.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3q() { _extends$3q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3q.apply(this, arguments); }
var Svg$3m = styled("svg")({
  flex: "none"
}, space, color);

var SvgCropDin = function SvgCropDin(props) {
  return createElement(Svg$3m, _extends$3q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"
  }));
};

SvgCropDin.displayName = "SvgCropDin";
SvgCropDin.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3r() { _extends$3r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3r.apply(this, arguments); }
var Svg$3n = styled("svg")({
  flex: "none"
}, space, color);

var SvgCropFree = function SvgCropFree(props) {
  return createElement(Svg$3n, _extends$3r({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5v4h2V5h4V3H5c-1.1 0-2 .9-2 2zm2 10H3v4c0 1.1.9 2 2 2h4v-2H5v-4zm14 4h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zm0-16h-4v2h4v4h2V5c0-1.1-.9-2-2-2z"
  }));
};

SvgCropFree.displayName = "SvgCropFree";
SvgCropFree.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3s() { _extends$3s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3s.apply(this, arguments); }
var Svg$3o = styled("svg")({
  flex: "none"
}, space, color);

var SvgCropLandscape = function SvgCropLandscape(props) {
  return createElement(Svg$3o, _extends$3s({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 5H5c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 12H5V7h14v10z"
  }));
};

SvgCropLandscape.displayName = "SvgCropLandscape";
SvgCropLandscape.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3t() { _extends$3t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3t.apply(this, arguments); }
var Svg$3p = styled("svg")({
  flex: "none"
}, space, color);

var SvgCropOriginal = function SvgCropOriginal(props) {
  return createElement(Svg$3p, _extends$3t({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14zm-5.04-6.71l-2.75 3.54-1.96-2.36L6.5 17h11l-3.54-4.71z"
  }));
};

SvgCropOriginal.displayName = "SvgCropOriginal";
SvgCropOriginal.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3u() { _extends$3u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3u.apply(this, arguments); }
var Svg$3q = styled("svg")({
  flex: "none"
}, space, color);

var SvgCropPortrait = function SvgCropPortrait(props) {
  return createElement(Svg$3q, _extends$3u({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 3H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7V5h10v14z"
  }));
};

SvgCropPortrait.displayName = "SvgCropPortrait";
SvgCropPortrait.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3v() { _extends$3v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3v.apply(this, arguments); }
var Svg$3r = styled("svg")({
  flex: "none"
}, space, color);

var SvgCropRotate = function SvgCropRotate(props) {
  return createElement(Svg$3r, _extends$3v({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7.47 21.49C4.2 19.93 1.86 16.76 1.5 13H0c.51 6.16 5.66 11 11.95 11 .23 0 .44-.02.66-.03L8.8 20.15l-1.33 1.34zM12.05 0c-.23 0-.44.02-.66.04l3.81 3.81 1.33-1.33C19.8 4.07 22.14 7.24 22.5 11H24c-.51-6.16-5.66-11-11.95-11zM16 14h2V8a2 2 0 00-2-2h-6v2h6v6zm-8 2V4H6v2H4v2h2v8a2 2 0 002 2h8v2h2v-2h2v-2H8z"
  }));
};

SvgCropRotate.displayName = "SvgCropRotate";
SvgCropRotate.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3w() { _extends$3w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3w.apply(this, arguments); }
var Svg$3s = styled("svg")({
  flex: "none"
}, space, color);

var SvgCropSquare = function SvgCropSquare(props) {
  return createElement(Svg$3s, _extends$3w({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 4H6c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H6V6h12v12z"
  }));
};

SvgCropSquare.displayName = "SvgCropSquare";
SvgCropSquare.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3x() { _extends$3x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3x.apply(this, arguments); }
var Svg$3t = styled("svg")({
  flex: "none"
}, space, color);

var SvgDashboard = function SvgDashboard(props) {
  return createElement(Svg$3t, _extends$3x({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"
  }));
};

SvgDashboard.displayName = "SvgDashboard";
SvgDashboard.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3y() { _extends$3y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3y.apply(this, arguments); }
var Svg$3u = styled("svg")({
  flex: "none"
}, space, color);

var SvgDataUsage = function SvgDataUsage(props) {
  return createElement(Svg$3u, _extends$3y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 2.05v3.03c3.39.49 6 3.39 6 6.92 0 .9-.18 1.75-.48 2.54l2.6 1.53c.56-1.24.88-2.62.88-4.07 0-5.18-3.95-9.45-9-9.95zM12 19c-3.87 0-7-3.13-7-7 0-3.53 2.61-6.43 6-6.92V2.05c-5.06.5-9 4.76-9 9.95 0 5.52 4.47 10 9.99 10 3.31 0 6.24-1.61 8.06-4.09l-2.6-1.53A6.95 6.95 0 0112 19z"
  }));
};

SvgDataUsage.displayName = "SvgDataUsage";
SvgDataUsage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3z() { _extends$3z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3z.apply(this, arguments); }
var Svg$3v = styled("svg")({
  flex: "none"
}, space, color);

var SvgDateRange = function SvgDateRange(props) {
  return createElement(Svg$3v, _extends$3z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20a2 2 0 002 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgDateRange.displayName = "SvgDateRange";
SvgDateRange.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3A() { _extends$3A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3A.apply(this, arguments); }
var Svg$3w = styled("svg")({
  flex: "none"
}, space, color);

var SvgDehaze = function SvgDehaze(props) {
  return createElement(Svg$3w, _extends$3A({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M2 15.5v2h20v-2H2zm0-5v2h20v-2H2zm0-5v2h20v-2H2z"
  }));
};

SvgDehaze.displayName = "SvgDehaze";
SvgDehaze.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3B() { _extends$3B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3B.apply(this, arguments); }
var Svg$3x = styled("svg")({
  flex: "none"
}, space, color);

var SvgDelete = function SvgDelete(props) {
  return createElement(Svg$3x, _extends$3B({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgDelete.displayName = "SvgDelete";
SvgDelete.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3C() { _extends$3C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3C.apply(this, arguments); }
var Svg$3y = styled("svg")({
  flex: "none"
}, space, color);

var SvgDeleteForever = function SvgDeleteForever(props) {
  return createElement(Svg$3y, _extends$3C({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgDeleteForever.displayName = "SvgDeleteForever";
SvgDeleteForever.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3D() { _extends$3D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3D.apply(this, arguments); }
var Svg$3z = styled("svg")({
  flex: "none"
}, space, color);

var SvgDeleteSweep = function SvgDeleteSweep(props) {
  return createElement(Svg$3z, _extends$3D({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgDeleteSweep.displayName = "SvgDeleteSweep";
SvgDeleteSweep.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3E() { _extends$3E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3E.apply(this, arguments); }
var Svg$3A = styled("svg")({
  flex: "none"
}, space, color);

var SvgDescription = function SvgDescription(props) {
  return createElement(Svg$3A, _extends$3E({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z"
  }));
};

SvgDescription.displayName = "SvgDescription";
SvgDescription.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3F() { _extends$3F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3F.apply(this, arguments); }
var Svg$3B = styled("svg")({
  flex: "none"
}, space, color);

var SvgDesktopMac = function SvgDesktopMac(props) {
  return createElement(Svg$3B, _extends$3F({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7l-2 3v1h8v-1l-2-3h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 12H3V4h18v10z"
  }));
};

SvgDesktopMac.displayName = "SvgDesktopMac";
SvgDesktopMac.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3G() { _extends$3G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3G.apply(this, arguments); }
var Svg$3C = styled("svg")({
  flex: "none"
}, space, color);

var SvgDesktopWindows = function SvgDesktopWindows(props) {
  return createElement(Svg$3C, _extends$3G({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v2H8v2h8v-2h-2v-2h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H3V4h18v12z"
  }));
};

SvgDesktopWindows.displayName = "SvgDesktopWindows";
SvgDesktopWindows.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3H() { _extends$3H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3H.apply(this, arguments); }
var Svg$3D = styled("svg")({
  flex: "none"
}, space, color);

var SvgDetails = function SvgDetails(props) {
  return createElement(Svg$3D, _extends$3H({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 4l9 16 9-16H3zm3.38 2h11.25L12 16 6.38 6z"
  }));
};

SvgDetails.displayName = "SvgDetails";
SvgDetails.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3I() { _extends$3I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3I.apply(this, arguments); }
var Svg$3E = styled("svg")({
  flex: "none"
}, space, color);

var SvgDeveloperBoard = function SvgDeveloperBoard(props) {
  return createElement(Svg$3E, _extends$3I({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M-74 29h48v48h-48V29z"
  }), createElement("path", {
    d: "M22 9V7h-2V5c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-2h2v-2h-2v-2h2v-2h-2V9h2zm-4 10H4V5h14v14zM6 13h5v4H6zm6-6h4v3h-4zM6 7h5v5H6zm6 4h4v6h-4z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0zm0 0h24v24H0z"
  }));
};

SvgDeveloperBoard.displayName = "SvgDeveloperBoard";
SvgDeveloperBoard.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3J() { _extends$3J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3J.apply(this, arguments); }
var Svg$3F = styled("svg")({
  flex: "none"
}, space, color);

var SvgDeveloperMode = function SvgDeveloperMode(props) {
  return createElement(Svg$3F, _extends$3J({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 5h10v2h2V3c0-1.1-.9-1.99-2-1.99L7 1c-1.1 0-2 .9-2 2v4h2V5zm8.41 11.59L20 12l-4.59-4.59L14 8.83 17.17 12 14 15.17l1.41 1.42zM10 15.17L6.83 12 10 8.83 8.59 7.41 4 12l4.59 4.59L10 15.17zM17 19H7v-2H5v4c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2v-4h-2v2z"
  }));
};

SvgDeveloperMode.displayName = "SvgDeveloperMode";
SvgDeveloperMode.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3K() { _extends$3K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3K.apply(this, arguments); }
var Svg$3G = styled("svg")({
  flex: "none"
}, space, color);

var SvgDeviceHub = function SvgDeviceHub(props) {
  return createElement(Svg$3G, _extends$3K({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M17 16l-4-4V8.82C14.16 8.4 15 7.3 15 6c0-1.66-1.34-3-3-3S9 4.34 9 6c0 1.3.84 2.4 2 2.82V12l-4 4H3v5h5v-3.05l4-4.2 4 4.2V21h5v-5h-4z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgDeviceHub.displayName = "SvgDeviceHub";
SvgDeviceHub.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3L() { _extends$3L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3L.apply(this, arguments); }
var Svg$3H = styled("svg")({
  flex: "none"
}, space, color);

var SvgDevices = function SvgDevices(props) {
  return createElement(Svg$3H, _extends$3L({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z"
  }));
};

SvgDevices.displayName = "SvgDevices";
SvgDevices.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3M() { _extends$3M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3M.apply(this, arguments); }
var Svg$3I = styled("svg")({
  flex: "none"
}, space, color);

var SvgDevicesOther = function SvgDevicesOther(props) {
  return createElement(Svg$3I, _extends$3M({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M3 6h18V4H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4v-2H3V6zm10 6H9v1.78c-.61.55-1 1.33-1 2.22s.39 1.67 1 2.22V20h4v-1.78c.61-.55 1-1.34 1-2.22s-.39-1.67-1-2.22V12zm-2 5.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM22 8h-6c-.5 0-1 .5-1 1v10c0 .5.5 1 1 1h6c.5 0 1-.5 1-1V9c0-.5-.5-1-1-1zm-1 10h-4v-8h4v8z"
  }));
};

SvgDevicesOther.displayName = "SvgDevicesOther";
SvgDevicesOther.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3N() { _extends$3N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3N.apply(this, arguments); }
var Svg$3J = styled("svg")({
  flex: "none"
}, space, color);

var SvgDialerSip = function SvgDialerSip(props) {
  return createElement(Svg$3J, _extends$3N({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 3h-1v5h1V3zm-2 2h-2V4h2V3h-3v3h2v1h-2v1h3V5zm3-2v5h1V6h2V3h-3zm2 2h-1V4h1v1zm0 10.5c-1.25 0-2.45-.2-3.57-.57a.998.998 0 00-1.01.24l-2.2 2.2a15.045 15.045 0 01-6.59-6.59l2.2-2.21c.27-.26.35-.65.24-1A11.36 11.36 0 018.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1z"
  }));
};

SvgDialerSip.displayName = "SvgDialerSip";
SvgDialerSip.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3O() { _extends$3O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3O.apply(this, arguments); }
var Svg$3K = styled("svg")({
  flex: "none"
}, space, color);

var SvgDialpad = function SvgDialpad(props) {
  return createElement(Svg$3K, _extends$3O({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 19c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM6 1c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-6 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
  }));
};

SvgDialpad.displayName = "SvgDialpad";
SvgDialpad.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3P() { _extends$3P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3P.apply(this, arguments); }
var Svg$3L = styled("svg")({
  flex: "none"
}, space, color);

var SvgDirections = function SvgDirections(props) {
  return createElement(Svg$3L, _extends$3P({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21.71 11.29l-9-9a.996.996 0 00-1.41 0l-9 9a.996.996 0 000 1.41l9 9c.39.39 1.02.39 1.41 0l9-9a.996.996 0 000-1.41zM14 14.5V12h-4v3H8v-4c0-.55.45-1 1-1h5V7.5l3.5 3.5-3.5 3.5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgDirections.displayName = "SvgDirections";
SvgDirections.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3Q() { _extends$3Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3Q.apply(this, arguments); }
var Svg$3M = styled("svg")({
  flex: "none"
}, space, color);

var SvgDirectionsBike = function SvgDirectionsBike(props) {
  return createElement(Svg$3M, _extends$3Q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M15.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM5 12c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 8.5c-1.9 0-3.5-1.6-3.5-3.5s1.6-3.5 3.5-3.5 3.5 1.6 3.5 3.5-1.6 3.5-3.5 3.5zm5.8-10l2.4-2.4.8.8c1.3 1.3 3 2.1 5.1 2.1V9c-1.5 0-2.7-.6-3.6-1.5l-1.9-1.9c-.5-.4-1-.6-1.6-.6s-1.1.2-1.4.6L7.8 8.4c-.4.4-.6.9-.6 1.4 0 .6.2 1.1.6 1.4L11 14v5h2v-6.2l-2.2-2.3zM19 12c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5zm0 8.5c-1.9 0-3.5-1.6-3.5-3.5s1.6-3.5 3.5-3.5 3.5 1.6 3.5 3.5-1.6 3.5-3.5 3.5z"
  }));
};

SvgDirectionsBike.displayName = "SvgDirectionsBike";
SvgDirectionsBike.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3R() { _extends$3R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3R.apply(this, arguments); }
var Svg$3N = styled("svg")({
  flex: "none"
}, space, color);

var SvgDirectionsBoat = function SvgDirectionsBoat(props) {
  return createElement(Svg$3N, _extends$3R({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v2h2c1.38 0 2.74-.35 4-.99a8.752 8.752 0 008 0c1.26.65 2.62.99 4 .99h2v-2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42a1.007 1.007 0 00-.66 1.28L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z"
  }));
};

SvgDirectionsBoat.displayName = "SvgDirectionsBoat";
SvgDirectionsBoat.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3S() { _extends$3S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3S.apply(this, arguments); }
var Svg$3O = styled("svg")({
  flex: "none"
}, space, color);

var SvgDirectionsBus = function SvgDirectionsBus(props) {
  return createElement(Svg$3O, _extends$3S({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M4 16c0 .88.39 1.67 1 2.22V20c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h8v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1.78c.61-.55 1-1.34 1-2.22V6c0-3.5-3.58-4-8-4s-8 .5-8 4v10zm3.5 1c-.83 0-1.5-.67-1.5-1.5S6.67 14 7.5 14s1.5.67 1.5 1.5S8.33 17 7.5 17zm9 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm1.5-6H6V6h12v5z"
  }));
};

SvgDirectionsBus.displayName = "SvgDirectionsBus";
SvgDirectionsBus.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3T() { _extends$3T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3T.apply(this, arguments); }
var Svg$3P = styled("svg")({
  flex: "none"
}, space, color);

var SvgDirectionsCar = function SvgDirectionsCar(props) {
  return createElement(Svg$3P, _extends$3T({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.92 6.01C18.72 5.42 18.16 5 17.5 5h-11c-.66 0-1.21.42-1.42 1.01L3 12v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8l-2.08-5.99zM6.5 16c-.83 0-1.5-.67-1.5-1.5S5.67 13 6.5 13s1.5.67 1.5 1.5S7.33 16 6.5 16zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM5 11l1.5-4.5h11L19 11H5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgDirectionsCar.displayName = "SvgDirectionsCar";
SvgDirectionsCar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3U() { _extends$3U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3U.apply(this, arguments); }
var Svg$3Q = styled("svg")({
  flex: "none"
}, space, color);

var SvgDirectionsRailway = function SvgDirectionsRailway(props) {
  return createElement(Svg$3Q, _extends$3U({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M4 15.5C4 17.43 5.57 19 7.5 19L6 20.5v.5h12v-.5L16.5 19c1.93 0 3.5-1.57 3.5-3.5V5c0-3.5-3.58-4-8-4s-8 .5-8 4v10.5zm8 1.5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6-7H6V5h12v5z"
  }));
};

SvgDirectionsRailway.displayName = "SvgDirectionsRailway";
SvgDirectionsRailway.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3V() { _extends$3V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3V.apply(this, arguments); }
var Svg$3R = styled("svg")({
  flex: "none"
}, space, color);

var SvgDirectionsRun = function SvgDirectionsRun(props) {
  return createElement(Svg$3R, _extends$3V({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9l1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z"
  }));
};

SvgDirectionsRun.displayName = "SvgDirectionsRun";
SvgDirectionsRun.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3W() { _extends$3W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3W.apply(this, arguments); }
var Svg$3S = styled("svg")({
  flex: "none"
}, space, color);

var SvgDirectionsSubway = function SvgDirectionsSubway(props) {
  return createElement(Svg$3S, _extends$3W({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2c-4.42 0-8 .5-8 4v9.5C4 17.43 5.57 19 7.5 19L6 20.5v.5h12v-.5L16.5 19c1.93 0 3.5-1.57 3.5-3.5V6c0-3.5-3.58-4-8-4zM7.5 17c-.83 0-1.5-.67-1.5-1.5S6.67 14 7.5 14s1.5.67 1.5 1.5S8.33 17 7.5 17zm3.5-6H6V6h5v5zm5.5 6c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm1.5-6h-5V6h5v5z"
  }));
};

SvgDirectionsSubway.displayName = "SvgDirectionsSubway";
SvgDirectionsSubway.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3X() { _extends$3X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3X.apply(this, arguments); }
var Svg$3T = styled("svg")({
  flex: "none"
}, space, color);

var SvgDirectionsTransit = function SvgDirectionsTransit(props) {
  return createElement(Svg$3T, _extends$3X({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2c-4.42 0-8 .5-8 4v9.5C4 17.43 5.57 19 7.5 19L6 20.5v.5h12v-.5L16.5 19c1.93 0 3.5-1.57 3.5-3.5V6c0-3.5-3.58-4-8-4zM7.5 17c-.83 0-1.5-.67-1.5-1.5S6.67 14 7.5 14s1.5.67 1.5 1.5S8.33 17 7.5 17zm3.5-6H6V6h5v5zm5.5 6c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm1.5-6h-5V6h5v5z"
  }));
};

SvgDirectionsTransit.displayName = "SvgDirectionsTransit";
SvgDirectionsTransit.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3Y() { _extends$3Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3Y.apply(this, arguments); }
var Svg$3U = styled("svg")({
  flex: "none"
}, space, color);

var SvgDirectionsWalk = function SvgDirectionsWalk(props) {
  return createElement(Svg$3U, _extends$3Y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M13.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM9.8 8.9L7 23h2.1l1.8-8 2.1 2v6h2v-7.5l-2.1-2 .6-3C14.8 12 16.8 13 19 13v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1L6 8.3V13h2V9.6l1.8-.7"
  }));
};

SvgDirectionsWalk.displayName = "SvgDirectionsWalk";
SvgDirectionsWalk.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3Z() { _extends$3Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3Z.apply(this, arguments); }
var Svg$3V = styled("svg")({
  flex: "none"
}, space, color);

var SvgDiscFull = function SvgDiscFull(props) {
  return createElement(Svg$3V, _extends$3Z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 16h2v-2h-2v2zm0-9v5h2V7h-2zM10 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
  }));
};

SvgDiscFull.displayName = "SvgDiscFull";
SvgDiscFull.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3_() { _extends$3_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3_.apply(this, arguments); }
var Svg$3W = styled("svg")({
  flex: "none"
}, space, color);

var SvgDns = function SvgDns(props) {
  return createElement(Svg$3W, _extends$3_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 13H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zM7 19c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM20 3H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h16c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM7 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
  }));
};

SvgDns.displayName = "SvgDns";
SvgDns.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$3$() { _extends$3$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3$.apply(this, arguments); }
var Svg$3X = styled("svg")({
  flex: "none"
}, space, color);

var SvgDoNotDisturb = function SvgDoNotDisturb(props) {
  return createElement(Svg$3X, _extends$3$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31A7.902 7.902 0 0112 20zm6.31-3.1L7.1 5.69A7.902 7.902 0 0112 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z"
  }));
};

SvgDoNotDisturb.displayName = "SvgDoNotDisturb";
SvgDoNotDisturb.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$40() { _extends$40 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$40.apply(this, arguments); }
var Svg$3Y = styled("svg")({
  flex: "none"
}, space, color);

var SvgDoNotDisturbAlt = function SvgDoNotDisturbAlt(props) {
  return createElement(Svg$3Y, _extends$40({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M-618-1464H782v3600H-618zM0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zM4 12c0-4.4 3.6-8 8-8 1.8 0 3.5.6 4.9 1.7L5.7 16.9C4.6 15.5 4 13.8 4 12zm8 8c-1.8 0-3.5-.6-4.9-1.7L18.3 7.1C19.4 8.5 20 10.2 20 12c0 4.4-3.6 8-8 8z"
  }));
};

SvgDoNotDisturbAlt.displayName = "SvgDoNotDisturbAlt";
SvgDoNotDisturbAlt.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$41() { _extends$41 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$41.apply(this, arguments); }
var Svg$3Z = styled("svg")({
  flex: "none"
}, space, color);

var SvgDoNotDisturbOff = function SvgDoNotDisturbOff(props) {
  return createElement(Svg$3Z, _extends$41({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M17 11v2h-1.46l4.68 4.68A9.92 9.92 0 0022 12c0-5.52-4.48-10-10-10-2.11 0-4.07.66-5.68 1.78L13.54 11H17zM2.27 2.27L1 3.54l2.78 2.78A9.92 9.92 0 002 12c0 5.52 4.48 10 10 10 2.11 0 4.07-.66 5.68-1.78L20.46 23l1.27-1.27L11 11 2.27 2.27zM7 13v-2h1.46l2 2H7z"
  }));
};

SvgDoNotDisturbOff.displayName = "SvgDoNotDisturbOff";
SvgDoNotDisturbOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$42() { _extends$42 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$42.apply(this, arguments); }
var Svg$3_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgDoNotDisturbOn = function SvgDoNotDisturbOn(props) {
  return createElement(Svg$3_, _extends$42({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z"
  }));
};

SvgDoNotDisturbOn.displayName = "SvgDoNotDisturbOn";
SvgDoNotDisturbOn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$43() { _extends$43 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$43.apply(this, arguments); }
var Svg$3$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgDock = function SvgDock(props) {
  return createElement(Svg$3$, _extends$43({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M8 23h8v-2H8v2zm8-21.99L8 1c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM16 15H8V5h8v10z"
  }));
};

SvgDock.displayName = "SvgDock";
SvgDock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$44() { _extends$44 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$44.apply(this, arguments); }
var Svg$40 = styled("svg")({
  flex: "none"
}, space, color);

var SvgDomain = function SvgDomain(props) {
  return createElement(Svg$40, _extends$44({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z"
  }));
};

SvgDomain.displayName = "SvgDomain";
SvgDomain.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$45() { _extends$45 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$45.apply(this, arguments); }
var Svg$41 = styled("svg")({
  flex: "none"
}, space, color);

var SvgDone = function SvgDone(props) {
  return createElement(Svg$41, _extends$45({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"
  }));
};

SvgDone.displayName = "SvgDone";
SvgDone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$46() { _extends$46 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$46.apply(this, arguments); }
var Svg$42 = styled("svg")({
  flex: "none"
}, space, color);

var SvgDoneAll = function SvgDoneAll(props) {
  return createElement(Svg$42, _extends$46({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18 7l-1.41-1.41-6.34 6.34 1.41 1.41L18 7zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12-1.42-1.41zM.41 13.41L6 19l1.41-1.41L1.83 12 .41 13.41z"
  }));
};

SvgDoneAll.displayName = "SvgDoneAll";
SvgDoneAll.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$47() { _extends$47 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$47.apply(this, arguments); }
var Svg$43 = styled("svg")({
  flex: "none"
}, space, color);

var SvgDonutLarge = function SvgDonutLarge(props) {
  return createElement(Svg$43, _extends$47({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "donutLarge_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "donutLarge_svg__b"
  }, createElement("use", {
    xlinkHref: "#donutLarge_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#donutLarge_svg__b)",
    d: "M11 5.08V2c-5 .5-9 4.81-9 10s4 9.5 9 10v-3.08c-3-.48-6-3.4-6-6.92s3-6.44 6-6.92zM18.97 11H22c-.47-5-4-8.53-9-9v3.08C16 5.51 18.54 8 18.97 11zM13 18.92V22c5-.47 8.53-4 9-9h-3.03c-.43 3-2.97 5.49-5.97 5.92z"
  }));
};

SvgDonutLarge.displayName = "SvgDonutLarge";
SvgDonutLarge.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$48() { _extends$48 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$48.apply(this, arguments); }
var Svg$44 = styled("svg")({
  flex: "none"
}, space, color);

var SvgDonutSmall = function SvgDonutSmall(props) {
  return createElement(Svg$44, _extends$48({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 9.16V2c-5 .5-9 4.79-9 10s4 9.5 9 10v-7.16c-1-.41-2-1.52-2-2.84s1-2.43 2-2.84zM14.86 11H22c-.48-4.75-4-8.53-9-9v7.16c1 .3 1.52.98 1.86 1.84zM13 14.84V22c5-.47 8.52-4.25 9-9h-7.14c-.34.86-.86 1.54-1.86 1.84z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgDonutSmall.displayName = "SvgDonutSmall";
SvgDonutSmall.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$49() { _extends$49 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$49.apply(this, arguments); }
var Svg$45 = styled("svg")({
  flex: "none"
}, space, color);

var SvgDrafts = function SvgDrafts(props) {
  return createElement(Svg$45, _extends$49({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zM12 13L3.74 7.84 12 3l8.26 4.84L12 13z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgDrafts.displayName = "SvgDrafts";
SvgDrafts.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4a() { _extends$4a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4a.apply(this, arguments); }
var Svg$46 = styled("svg")({
  flex: "none"
}, space, color);

var SvgDragHandle = function SvgDragHandle(props) {
  return createElement(Svg$46, _extends$4a({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 9H4v2h16V9zM4 15h16v-2H4v2z"
  }));
};

SvgDragHandle.displayName = "SvgDragHandle";
SvgDragHandle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4b() { _extends$4b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4b.apply(this, arguments); }
var Svg$47 = styled("svg")({
  flex: "none"
}, space, color);

var SvgDriveEta = function SvgDriveEta(props) {
  return createElement(Svg$47, _extends$4b({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.92 5.01C18.72 4.42 18.16 4 17.5 4h-11c-.66 0-1.21.42-1.42 1.01L3 11v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8l-2.08-5.99zM6.5 15c-.83 0-1.5-.67-1.5-1.5S5.67 12 6.5 12s1.5.67 1.5 1.5S7.33 15 6.5 15zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM5 10l1.5-4.5h11L19 10H5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgDriveEta.displayName = "SvgDriveEta";
SvgDriveEta.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4c() { _extends$4c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4c.apply(this, arguments); }
var Svg$48 = styled("svg")({
  flex: "none"
}, space, color);

var SvgDvr = function SvgDvr(props) {
  return createElement(Svg$48, _extends$4c({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.1-.9-2-2-2zm0 14H3V5h18v12zm-2-9H8v2h11V8zm0 4H8v2h11v-2zM7 8H5v2h2V8zm0 4H5v2h2v-2z"
  }));
};

SvgDvr.displayName = "SvgDvr";
SvgDvr.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4d() { _extends$4d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4d.apply(this, arguments); }
var Svg$49 = styled("svg")({
  flex: "none"
}, space, color);

var SvgEdit = function SvgEdit(props) {
  return createElement(Svg$49, _extends$4d({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04a.996.996 0 000-1.41l-2.34-2.34a.996.996 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
  }));
};

SvgEdit.displayName = "SvgEdit";
SvgEdit.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4e() { _extends$4e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4e.apply(this, arguments); }
var Svg$4a = styled("svg")({
  flex: "none"
}, space, color);

var SvgEditLocation = function SvgEditLocation(props) {
  return createElement(Svg$4a, _extends$4e({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C8.14 2 5 5.14 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.86-3.14-7-7-7zm-1.56 10H9v-1.44l3.35-3.34 1.43 1.43L10.44 12zm4.45-4.45l-.7.7-1.44-1.44.7-.7a.38.38 0 01.54 0l.9.9c.15.15.15.39 0 .54z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgEditLocation.displayName = "SvgEditLocation";
SvgEditLocation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4f() { _extends$4f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4f.apply(this, arguments); }
var Svg$4b = styled("svg")({
  flex: "none"
}, space, color);

var SvgEject = function SvgEject(props) {
  return createElement(Svg$4b, _extends$4f({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 24V0h24v24H0z"
  }), createElement("path", {
    d: "M5 17h14v2H5zm7-12L5.33 15h13.34z"
  }));
};

SvgEject.displayName = "SvgEject";
SvgEject.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4g() { _extends$4g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4g.apply(this, arguments); }
var Svg$4c = styled("svg")({
  flex: "none"
}, space, color);

var SvgEmail = function SvgEmail(props) {
  return createElement(Svg$4c, _extends$4g({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"
  }));
};

SvgEmail.displayName = "SvgEmail";
SvgEmail.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4h() { _extends$4h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4h.apply(this, arguments); }
var Svg$4d = styled("svg")({
  flex: "none"
}, space, color);

var SvgEnhancedEncryption = function SvgEnhancedEncryption(props) {
  return createElement(Svg$4d, _extends$4h({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H8.9V6zM16 16h-3v3h-2v-3H8v-2h3v-3h2v3h3v2z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgEnhancedEncryption.displayName = "SvgEnhancedEncryption";
SvgEnhancedEncryption.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4i() { _extends$4i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4i.apply(this, arguments); }
var Svg$4e = styled("svg")({
  flex: "none"
}, space, color);

var SvgEqualizer = function SvgEqualizer(props) {
  return createElement(Svg$4e, _extends$4i({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M10 20h4V4h-4v16zm-6 0h4v-8H4v8zM16 9v11h4V9h-4z"
  }));
};

SvgEqualizer.displayName = "SvgEqualizer";
SvgEqualizer.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4j() { _extends$4j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4j.apply(this, arguments); }
var Svg$4f = styled("svg")({
  flex: "none"
}, space, color);

var SvgError = function SvgError(props) {
  return createElement(Svg$4f, _extends$4j({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"
  }));
};

SvgError.displayName = "SvgError";
SvgError.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4k() { _extends$4k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4k.apply(this, arguments); }
var Svg$4g = styled("svg")({
  flex: "none"
}, space, color);

var SvgErrorOutline = function SvgErrorOutline(props) {
  return createElement(Svg$4g, _extends$4k({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }));
};

SvgErrorOutline.displayName = "SvgErrorOutline";
SvgErrorOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4l() { _extends$4l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4l.apply(this, arguments); }
var Svg$4h = styled("svg")({
  flex: "none"
}, space, color);

var SvgEuroSymbol = function SvgEuroSymbol(props) {
  return createElement(Svg$4h, _extends$4l({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15 18.5A6.48 6.48 0 019.24 15H15v-2H8.58c-.05-.33-.08-.66-.08-1s.03-.67.08-1H15V9H9.24A6.491 6.491 0 0115 5.5c1.61 0 3.09.59 4.23 1.57L21 5.3A8.955 8.955 0 0015 3c-3.92 0-7.24 2.51-8.48 6H3v2h3.06a8.262 8.262 0 000 2H3v2h3.52c1.24 3.49 4.56 6 8.48 6 2.31 0 4.41-.87 6-2.3l-1.78-1.77c-1.13.98-2.6 1.57-4.22 1.57z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgEuroSymbol.displayName = "SvgEuroSymbol";
SvgEuroSymbol.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4m() { _extends$4m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4m.apply(this, arguments); }
var Svg$4i = styled("svg")({
  flex: "none"
}, space, color);

var SvgEvStation = function SvgEvStation(props) {
  return createElement(Svg$4i, _extends$4m({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.77 7.23l.01-.01-3.72-3.72L15 4.56l2.11 2.11c-.94.36-1.61 1.26-1.61 2.33a2.5 2.5 0 002.5 2.5c.36 0 .69-.08 1-.21v7.21c0 .55-.45 1-1 1s-1-.45-1-1V14c0-1.1-.9-2-2-2h-1V5c0-1.1-.9-2-2-2H6c-1.1 0-2 .9-2 2v16h10v-7.5h1.5v5a2.5 2.5 0 005 0V9c0-.69-.28-1.32-.73-1.77zM18 10c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM8 18v-4.5H6L10 6v5h2l-4 7z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgEvStation.displayName = "SvgEvStation";
SvgEvStation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4n() { _extends$4n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4n.apply(this, arguments); }
var Svg$4j = styled("svg")({
  flex: "none"
}, space, color);

var SvgEvent = function SvgEvent(props) {
  return createElement(Svg$4j, _extends$4n({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgEvent.displayName = "SvgEvent";
SvgEvent.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4o() { _extends$4o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4o.apply(this, arguments); }
var Svg$4k = styled("svg")({
  flex: "none"
}, space, color);

var SvgEventAvailable = function SvgEventAvailable(props) {
  return createElement(Svg$4k, _extends$4o({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M16.53 11.06L15.47 10l-4.88 4.88-2.12-2.12-1.06 1.06L10.59 17l5.94-5.94zM19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11z"
  }));
};

SvgEventAvailable.displayName = "SvgEventAvailable";
SvgEventAvailable.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4p() { _extends$4p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4p.apply(this, arguments); }
var Svg$4l = styled("svg")({
  flex: "none"
}, space, color);

var SvgEventBusy = function SvgEventBusy(props) {
  return createElement(Svg$4l, _extends$4p({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M9.31 17l2.44-2.44L14.19 17l1.06-1.06-2.44-2.44 2.44-2.44L14.19 10l-2.44 2.44L9.31 10l-1.06 1.06 2.44 2.44-2.44 2.44L9.31 17zM19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11z"
  }));
};

SvgEventBusy.displayName = "SvgEventBusy";
SvgEventBusy.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4q() { _extends$4q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4q.apply(this, arguments); }
var Svg$4m = styled("svg")({
  flex: "none"
}, space, color);

var SvgEventNote = function SvgEventNote(props) {
  return createElement(Svg$4m, _extends$4q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17 10H7v2h10v-2zm2-7h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zm-5-5H7v2h7v-2z"
  }));
};

SvgEventNote.displayName = "SvgEventNote";
SvgEventNote.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4r() { _extends$4r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4r.apply(this, arguments); }
var Svg$4n = styled("svg")({
  flex: "none"
}, space, color);

var SvgEventSeat = function SvgEventSeat(props) {
  return createElement(Svg$4n, _extends$4r({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "eventSeat_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "eventSeat_svg__b"
  }, createElement("use", {
    xlinkHref: "#eventSeat_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M4 18v3h3v-3h10v3h3v-6H4zm15-8h3v3h-3zM2 10h3v3H2zm15 3H7V5c0-1.1.9-2 2-2h6c1.1 0 2 .9 2 2v8z",
    clipPath: "url(#eventSeat_svg__b)"
  }));
};

SvgEventSeat.displayName = "SvgEventSeat";
SvgEventSeat.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4s() { _extends$4s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4s.apply(this, arguments); }
var Svg$4o = styled("svg")({
  flex: "none"
}, space, color);

var SvgExitToApp = function SvgExitToApp(props) {
  return createElement(Svg$4o, _extends$4s({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5a2 2 0 00-2 2v4h2V5h14v14H5v-4H3v4a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
  }));
};

SvgExitToApp.displayName = "SvgExitToApp";
SvgExitToApp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4t() { _extends$4t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4t.apply(this, arguments); }
var Svg$4p = styled("svg")({
  flex: "none"
}, space, color);

var SvgExpandLess = function SvgExpandLess(props) {
  return createElement(Svg$4p, _extends$4t({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
  }));
};

SvgExpandLess.displayName = "SvgExpandLess";
SvgExpandLess.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4u() { _extends$4u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4u.apply(this, arguments); }
var Svg$4q = styled("svg")({
  flex: "none"
}, space, color);

var SvgExpandMore = function SvgExpandMore(props) {
  return createElement(Svg$4q, _extends$4u({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
  }));
};

SvgExpandMore.displayName = "SvgExpandMore";
SvgExpandMore.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4v() { _extends$4v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4v.apply(this, arguments); }
var Svg$4r = styled("svg")({
  flex: "none"
}, space, color);

var SvgExplicit = function SvgExplicit(props) {
  return createElement(Svg$4r, _extends$4v({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h4v2h-4v2h4v2H9V7h6v2z"
  }));
};

SvgExplicit.displayName = "SvgExplicit";
SvgExplicit.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4w() { _extends$4w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4w.apply(this, arguments); }
var Svg$4s = styled("svg")({
  flex: "none"
}, space, color);

var SvgExplore = function SvgExplore(props) {
  return createElement(Svg$4s, _extends$4w({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 10.9c-.61 0-1.1.49-1.1 1.1s.49 1.1 1.1 1.1c.61 0 1.1-.49 1.1-1.1s-.49-1.1-1.1-1.1zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm2.19 12.19L6 18l3.81-8.19L18 6l-3.81 8.19z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgExplore.displayName = "SvgExplore";
SvgExplore.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4x() { _extends$4x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4x.apply(this, arguments); }
var Svg$4t = styled("svg")({
  flex: "none"
}, space, color);

var SvgExposure = function SvgExposure(props) {
  return createElement(Svg$4t, _extends$4x({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15 17v2h2v-2h2v-2h-2v-2h-2v2h-2v2h2zm5-15H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM5 5h6v2H5V5zm15 15H4L20 4v16z"
  }));
};

SvgExposure.displayName = "SvgExposure";
SvgExposure.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4y() { _extends$4y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4y.apply(this, arguments); }
var Svg$4u = styled("svg")({
  flex: "none"
}, space, color);

var SvgExposureNeg1 = function SvgExposureNeg1(props) {
  return createElement(Svg$4u, _extends$4y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 11v2h8v-2H4zm15 7h-2V7.38L14 8.4V6.7L18.7 5h.3v13z"
  }));
};

SvgExposureNeg1.displayName = "SvgExposureNeg1";
SvgExposureNeg1.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4z() { _extends$4z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4z.apply(this, arguments); }
var Svg$4v = styled("svg")({
  flex: "none"
}, space, color);

var SvgExposureNeg2 = function SvgExposureNeg2(props) {
  return createElement(Svg$4v, _extends$4z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.05 16.29l2.86-3.07c.38-.39.72-.79 1.04-1.18.32-.39.59-.78.82-1.17.23-.39.41-.78.54-1.17s.19-.79.19-1.18c0-.53-.09-1.02-.27-1.46-.18-.44-.44-.81-.78-1.11-.34-.31-.77-.54-1.26-.71A5.72 5.72 0 0016.47 5c-.69 0-1.31.11-1.85.32-.54.21-1 .51-1.36.88-.37.37-.65.8-.84 1.3-.18.47-.27.97-.28 1.5h2.14c.01-.31.05-.6.13-.87.09-.29.23-.54.4-.75.18-.21.41-.37.68-.49.27-.12.6-.18.96-.18.31 0 .58.05.81.15.23.1.43.25.59.43.16.18.28.4.37.65.08.25.13.52.13.81 0 .22-.03.43-.08.65-.06.22-.15.45-.29.7-.14.25-.32.53-.56.83-.23.3-.52.65-.88 1.03l-4.17 4.55V18H21v-1.71h-5.95zM2 11v2h8v-2H2z"
  }));
};

SvgExposureNeg2.displayName = "SvgExposureNeg2";
SvgExposureNeg2.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4A() { _extends$4A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4A.apply(this, arguments); }
var Svg$4w = styled("svg")({
  flex: "none"
}, space, color);

var SvgExposurePlus1 = function SvgExposurePlus1(props) {
  return createElement(Svg$4w, _extends$4A({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 7H8v4H4v2h4v4h2v-4h4v-2h-4V7zm10 11h-2V7.38L15 8.4V6.7L19.7 5h.3v13z"
  }));
};

SvgExposurePlus1.displayName = "SvgExposurePlus1";
SvgExposurePlus1.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4B() { _extends$4B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4B.apply(this, arguments); }
var Svg$4x = styled("svg")({
  flex: "none"
}, space, color);

var SvgExposurePlus2 = function SvgExposurePlus2(props) {
  return createElement(Svg$4x, _extends$4B({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16.05 16.29l2.86-3.07c.38-.39.72-.79 1.04-1.18.32-.39.59-.78.82-1.17.23-.39.41-.78.54-1.17.13-.39.19-.79.19-1.18 0-.53-.09-1.02-.27-1.46-.18-.44-.44-.81-.78-1.11-.34-.31-.77-.54-1.26-.71A5.72 5.72 0 0017.47 5c-.69 0-1.31.11-1.85.32-.54.21-1 .51-1.36.88-.37.37-.65.8-.84 1.3-.18.47-.27.97-.28 1.5h2.14c.01-.31.05-.6.13-.87.09-.29.23-.54.4-.75.18-.21.41-.37.68-.49.27-.12.6-.18.96-.18.31 0 .58.05.81.15.23.1.43.25.59.43.16.18.28.4.37.65.08.25.13.52.13.81 0 .22-.03.43-.08.65-.06.22-.15.45-.29.7-.14.25-.32.53-.56.83-.23.3-.52.65-.88 1.03l-4.17 4.55V18H22v-1.71h-5.95zM8 7H6v4H2v2h4v4h2v-4h4v-2H8V7z"
  }));
};

SvgExposurePlus2.displayName = "SvgExposurePlus2";
SvgExposurePlus2.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4C() { _extends$4C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4C.apply(this, arguments); }
var Svg$4y = styled("svg")({
  flex: "none"
}, space, color);

var SvgExposureZero = function SvgExposureZero(props) {
  return createElement(Svg$4y, _extends$4C({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16.14 12.5c0 1-.1 1.85-.3 2.55-.2.7-.48 1.27-.83 1.7-.36.44-.79.75-1.3.95-.51.2-1.07.3-1.7.3-.62 0-1.18-.1-1.69-.3-.51-.2-.95-.51-1.31-.95-.36-.44-.65-1.01-.85-1.7-.2-.7-.3-1.55-.3-2.55v-2.04c0-1 .1-1.85.3-2.55.2-.7.48-1.26.84-1.69.36-.43.8-.74 1.31-.93C10.81 5.1 11.38 5 12 5c.63 0 1.19.1 1.7.29.51.19.95.5 1.31.93.36.43.64.99.84 1.69.2.7.3 1.54.3 2.55v2.04zm-2.11-2.36c0-.64-.05-1.18-.13-1.62-.09-.44-.22-.79-.4-1.06-.17-.27-.39-.46-.64-.58-.25-.13-.54-.19-.86-.19-.32 0-.61.06-.86.18s-.47.31-.64.58c-.17.27-.31.62-.4 1.06s-.13.98-.13 1.62v2.67c0 .64.05 1.18.14 1.62.09.45.23.81.4 1.09s.39.48.64.61.54.19.87.19c.33 0 .62-.06.87-.19s.46-.33.63-.61c.17-.28.3-.64.39-1.09.09-.45.13-.99.13-1.62v-2.66z"
  }));
};

SvgExposureZero.displayName = "SvgExposureZero";
SvgExposureZero.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4D() { _extends$4D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4D.apply(this, arguments); }
var Svg$4z = styled("svg")({
  flex: "none"
}, space, color);

var SvgExtension = function SvgExtension(props) {
  return createElement(Svg$4z, _extends$4D({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20.5 11H19V7c0-1.1-.9-2-2-2h-4V3.5a2.5 2.5 0 00-5 0V5H4c-1.1 0-1.99.9-1.99 2v3.8H3.5c1.49 0 2.7 1.21 2.7 2.7s-1.21 2.7-2.7 2.7H2V20c0 1.1.9 2 2 2h3.8v-1.5c0-1.49 1.21-2.7 2.7-2.7 1.49 0 2.7 1.21 2.7 2.7V22H17c1.1 0 2-.9 2-2v-4h1.5a2.5 2.5 0 000-5z"
  }));
};

SvgExtension.displayName = "SvgExtension";
SvgExtension.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4E() { _extends$4E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4E.apply(this, arguments); }
var Svg$4A = styled("svg")({
  flex: "none"
}, space, color);

var SvgFace = function SvgFace(props) {
  return createElement(Svg$4A, _extends$4E({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 11.75a1.25 1.25 0 100 2.5 1.25 1.25 0 000-2.5zm6 0a1.25 1.25 0 100 2.5 1.25 1.25 0 000-2.5zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37a9.974 9.974 0 0010.41 3.97c.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgFace.displayName = "SvgFace";
SvgFace.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4F() { _extends$4F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4F.apply(this, arguments); }
var Svg$4B = styled("svg")({
  flex: "none"
}, space, color);

var SvgFastForward = function SvgFastForward(props) {
  return createElement(Svg$4B, _extends$4F({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgFastForward.displayName = "SvgFastForward";
SvgFastForward.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4G() { _extends$4G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4G.apply(this, arguments); }
var Svg$4C = styled("svg")({
  flex: "none"
}, space, color);

var SvgFastRewind = function SvgFastRewind(props) {
  return createElement(Svg$4C, _extends$4G({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 18V6l-8.5 6 8.5 6zm.5-6l8.5 6V6l-8.5 6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgFastRewind.displayName = "SvgFastRewind";
SvgFastRewind.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4H() { _extends$4H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4H.apply(this, arguments); }
var Svg$4D = styled("svg")({
  flex: "none"
}, space, color);

var SvgFavorite = function SvgFavorite(props) {
  return createElement(Svg$4D, _extends$4H({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"
  }));
};

SvgFavorite.displayName = "SvgFavorite";
SvgFavorite.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4I() { _extends$4I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4I.apply(this, arguments); }
var Svg$4E = styled("svg")({
  flex: "none"
}, space, color);

var SvgFavoriteBorder = function SvgFavoriteBorder(props) {
  return createElement(Svg$4E, _extends$4I({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
  }));
};

SvgFavoriteBorder.displayName = "SvgFavoriteBorder";
SvgFavoriteBorder.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4J() { _extends$4J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4J.apply(this, arguments); }
var Svg$4F = styled("svg")({
  flex: "none"
}, space, color);

var SvgFeaturedPlayList = function SvgFeaturedPlayList(props) {
  return createElement(Svg$4F, _extends$4J({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 8H3V9h9v2zm0-4H3V5h9v2z"
  }));
};

SvgFeaturedPlayList.displayName = "SvgFeaturedPlayList";
SvgFeaturedPlayList.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4K() { _extends$4K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4K.apply(this, arguments); }
var Svg$4G = styled("svg")({
  flex: "none"
}, space, color);

var SvgFeaturedVideo = function SvgFeaturedVideo(props) {
  return createElement(Svg$4G, _extends$4K({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 9H3V5h9v7z"
  }));
};

SvgFeaturedVideo.displayName = "SvgFeaturedVideo";
SvgFeaturedVideo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4L() { _extends$4L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4L.apply(this, arguments); }
var Svg$4H = styled("svg")({
  flex: "none"
}, space, color);

var SvgFeedback = function SvgFeedback(props) {
  return createElement(Svg$4H, _extends$4L({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 12h-2v-2h2v2zm0-4h-2V6h2v4z"
  }));
};

SvgFeedback.displayName = "SvgFeedback";
SvgFeedback.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4M() { _extends$4M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4M.apply(this, arguments); }
var Svg$4I = styled("svg")({
  flex: "none"
}, space, color);

var SvgFiberDvr = function SvgFiberDvr(props) {
  return createElement(Svg$4I, _extends$4M({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "fiberDvr_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "fiberDvr_svg__b"
  }, createElement("use", {
    xlinkHref: "#fiberDvr_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M17.5 10.5h2v1h-2zm-13 0h2v3h-2zM21 3H3c-1.11 0-2 .89-2 2v14a2 2 0 002 2h18a2 2 0 002-2V5c0-1.11-.89-2-2-2zM8 13.5c0 .85-.65 1.5-1.5 1.5H3V9h3.5c.85 0 1.5.65 1.5 1.5v3zm4.62 1.5h-1.5L9.37 9h1.5l1 3.43 1-3.43h1.5l-1.75 6zM21 11.5c0 .6-.4 1.15-.9 1.4L21 15h-1.5l-.85-2H17.5v2H16V9h3.5c.85 0 1.5.65 1.5 1.5v1z",
    clipPath: "url(#fiberDvr_svg__b)"
  }));
};

SvgFiberDvr.displayName = "SvgFiberDvr";
SvgFiberDvr.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4N() { _extends$4N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4N.apply(this, arguments); }
var Svg$4J = styled("svg")({
  flex: "none"
}, space, color);

var SvgFiberManualRecord = function SvgFiberManualRecord(props) {
  return createElement(Svg$4J, _extends$4N({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M24 24H0V0h24v24z"
  }), createElement("circle", {
    fill: "#010101",
    cx: 12,
    cy: 12,
    r: 8
  }));
};

SvgFiberManualRecord.displayName = "SvgFiberManualRecord";
SvgFiberManualRecord.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4O() { _extends$4O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4O.apply(this, arguments); }
var Svg$4K = styled("svg")({
  flex: "none"
}, space, color);

var SvgFiberNew = function SvgFiberNew(props) {
  return createElement(Svg$4K, _extends$4O({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "fiberNew_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "fiberNew_svg__b"
  }, createElement("use", {
    xlinkHref: "#fiberNew_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#fiberNew_svg__b)",
    d: "M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zM8.5 15H7.3l-2.55-3.5V15H3.5V9h1.25l2.5 3.5V9H8.5v6zm5-4.74H11v1.12h2.5v1.26H11v1.11h2.5V15h-4V9h4v1.26zm7 3.74c0 .55-.45 1-1 1h-4c-.55 0-1-.45-1-1V9h1.25v4.51h1.13V9.99h1.25v3.51h1.12V9h1.25v5z"
  }));
};

SvgFiberNew.displayName = "SvgFiberNew";
SvgFiberNew.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4P() { _extends$4P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4P.apply(this, arguments); }
var Svg$4L = styled("svg")({
  flex: "none"
}, space, color);

var SvgFiberPin = function SvgFiberPin(props) {
  return createElement(Svg$4L, _extends$4P({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M5.5 10.5h2v1h-2zM20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zM9 11.5c0 .85-.65 1.5-1.5 1.5h-2v2H4V9h3.5c.85 0 1.5.65 1.5 1.5v1zm3.5 3.5H11V9h1.5v6zm7.5 0h-1.2l-2.55-3.5V15H15V9h1.25l2.5 3.5V9H20v6z"
  }));
};

SvgFiberPin.displayName = "SvgFiberPin";
SvgFiberPin.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4Q() { _extends$4Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4Q.apply(this, arguments); }
var Svg$4M = styled("svg")({
  flex: "none"
}, space, color);

var SvgFiberSmartRecord = function SvgFiberSmartRecord(props) {
  return createElement(Svg$4M, _extends$4Q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M24 24H0V0h24v24z"
  }), createElement("g", {
    fill: "#010101"
  }, createElement("circle", {
    cx: 9,
    cy: 12,
    r: 8
  }), createElement("path", {
    d: "M17 4.26v2.09a5.99 5.99 0 010 11.3v2.09c3.45-.89 6-4.01 6-7.74s-2.55-6.85-6-7.74z"
  })));
};

SvgFiberSmartRecord.displayName = "SvgFiberSmartRecord";
SvgFiberSmartRecord.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4R() { _extends$4R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4R.apply(this, arguments); }
var Svg$4N = styled("svg")({
  flex: "none"
}, space, color);

var SvgFileDownload = function SvgFileDownload(props) {
  return createElement(Svg$4N, _extends$4R({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgFileDownload.displayName = "SvgFileDownload";
SvgFileDownload.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4S() { _extends$4S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4S.apply(this, arguments); }
var Svg$4O = styled("svg")({
  flex: "none"
}, space, color);

var SvgFileUpload = function SvgFileUpload(props) {
  return createElement(Svg$4O, _extends$4S({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z"
  }));
};

SvgFileUpload.displayName = "SvgFileUpload";
SvgFileUpload.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4T() { _extends$4T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4T.apply(this, arguments); }
var Svg$4P = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter = function SvgFilter(props) {
  return createElement(Svg$4P, _extends$4T({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.96 10.29l-2.75 3.54-1.96-2.36L8.5 15h11l-3.54-4.71zM3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z"
  }));
};

SvgFilter.displayName = "SvgFilter";
SvgFilter.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4U() { _extends$4U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4U.apply(this, arguments); }
var Svg$4Q = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter1 = function SvgFilter1(props) {
  return createElement(Svg$4Q, _extends$4U({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm11 10h2V5h-4v2h2v8zm7-14H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z"
  }));
};

SvgFilter1.displayName = "SvgFilter1";
SvgFilter1.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4V() { _extends$4V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4V.apply(this, arguments); }
var Svg$4R = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter2 = function SvgFilter2(props) {
  return createElement(Svg$4R, _extends$4V({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-4-4h-4v-2h2a2 2 0 002-2V7a2 2 0 00-2-2h-4v2h4v2h-2a2 2 0 00-2 2v4h6v-2z"
  }));
};

SvgFilter2.displayName = "SvgFilter2";
SvgFilter2.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4W() { _extends$4W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4W.apply(this, arguments); }
var Svg$4S = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter3 = function SvgFilter3(props) {
  return createElement(Svg$4S, _extends$4W({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 1H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zM3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm14 8v-1.5c0-.83-.67-1.5-1.5-1.5.83 0 1.5-.67 1.5-1.5V7a2 2 0 00-2-2h-4v2h4v2h-2v2h2v2h-4v2h4a2 2 0 002-2z"
  }));
};

SvgFilter3.displayName = "SvgFilter3";
SvgFilter3.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4X() { _extends$4X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4X.apply(this, arguments); }
var Svg$4T = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter4 = function SvgFilter4(props) {
  return createElement(Svg$4T, _extends$4X({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm12 10h2V5h-2v4h-2V5h-2v6h4v4zm6-14H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z"
  }));
};

SvgFilter4.displayName = "SvgFilter4";
SvgFilter4.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4Y() { _extends$4Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4Y.apply(this, arguments); }
var Svg$4U = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter5 = function SvgFilter5(props) {
  return createElement(Svg$4U, _extends$4Y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 1H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zM3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm14 8v-2a2 2 0 00-2-2h-2V7h4V5h-6v6h4v2h-4v2h4a2 2 0 002-2z"
  }));
};

SvgFilter5.displayName = "SvgFilter5";
SvgFilter5.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4Z() { _extends$4Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4Z.apply(this, arguments); }
var Svg$4V = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter6 = function SvgFilter6(props) {
  return createElement(Svg$4V, _extends$4Z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-8-2h2a2 2 0 002-2v-2a2 2 0 00-2-2h-2V7h4V5h-4a2 2 0 00-2 2v6a2 2 0 002 2zm0-4h2v2h-2v-2z"
  }));
};

SvgFilter6.displayName = "SvgFilter6";
SvgFilter6.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4_() { _extends$4_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4_.apply(this, arguments); }
var Svg$4W = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter7 = function SvgFilter7(props) {
  return createElement(Svg$4W, _extends$4_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-8-2l4-8V5h-6v2h4l-4 8h2z"
  }));
};

SvgFilter7.displayName = "SvgFilter7";
SvgFilter7.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$4$() { _extends$4$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4$.apply(this, arguments); }
var Svg$4X = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter8 = function SvgFilter8(props) {
  return createElement(Svg$4X, _extends$4$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zm-8-2h2a2 2 0 002-2v-1.5c0-.83-.67-1.5-1.5-1.5.83 0 1.5-.67 1.5-1.5V7a2 2 0 00-2-2h-2a2 2 0 00-2 2v1.5c0 .83.67 1.5 1.5 1.5-.83 0-1.5.67-1.5 1.5V13a2 2 0 002 2zm0-8h2v2h-2V7zm0 4h2v2h-2v-2z"
  }));
};

SvgFilter8.displayName = "SvgFilter8";
SvgFilter8.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$50() { _extends$50 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$50.apply(this, arguments); }
var Svg$4Y = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter9 = function SvgFilter9(props) {
  return createElement(Svg$4Y, _extends$50({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14zM15 5h-2a2 2 0 00-2 2v2a2 2 0 002 2h2v2h-4v2h4a2 2 0 002-2V7a2 2 0 00-2-2zm0 4h-2V7h2v2z"
  }));
};

SvgFilter9.displayName = "SvgFilter9";
SvgFilter9.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$51() { _extends$51 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$51.apply(this, arguments); }
var Svg$4Z = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilter9Plus = function SvgFilter9Plus(props) {
  return createElement(Svg$4Z, _extends$51({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm11 7V8a2 2 0 00-2-2h-1a2 2 0 00-2 2v1a2 2 0 002 2h1v1H9v2h3a2 2 0 002-2zm-3-3V8h1v1h-1zm10-8H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 8h-2V7h-2v2h-2v2h2v2h2v-2h2v6H7V3h14v6z"
  }));
};

SvgFilter9Plus.displayName = "SvgFilter9Plus";
SvgFilter9Plus.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$52() { _extends$52 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$52.apply(this, arguments); }
var Svg$4_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilterBAndW = function SvgFilterBAndW(props) {
  return createElement(Svg$4_, _extends$52({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16l-7-8v8H5l7-8V5h7v14z"
  }));
};

SvgFilterBAndW.displayName = "SvgFilterBAndW";
SvgFilterBAndW.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$53() { _extends$53 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$53.apply(this, arguments); }
var Svg$4$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilterCenterFocus = function SvgFilterCenterFocus(props) {
  return createElement(Svg$4$, _extends$53({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5 15H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4zM12 9c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
  }));
};

SvgFilterCenterFocus.displayName = "SvgFilterCenterFocus";
SvgFilterCenterFocus.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$54() { _extends$54 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$54.apply(this, arguments); }
var Svg$50 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilterDrama = function SvgFilterDrama(props) {
  return createElement(Svg$50, _extends$54({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.35 10.04A7.49 7.49 0 0012 4a7.48 7.48 0 00-6.64 4.04A5.996 5.996 0 000 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4h2c0-2.76-1.86-5.08-4.4-5.78C8.61 6.88 10.2 6 12 6c3.03 0 5.5 2.47 5.5 5.5v.5H19c1.65 0 3 1.35 3 3s-1.35 3-3 3z"
  }));
};

SvgFilterDrama.displayName = "SvgFilterDrama";
SvgFilterDrama.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$55() { _extends$55 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$55.apply(this, arguments); }
var Svg$51 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilterFrames = function SvgFilterFrames(props) {
  return createElement(Svg$51, _extends$55({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 4h-4l-4-4-4 4H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H4V6h4.52l3.52-3.5L15.52 6H20v14zM18 8H6v10h12"
  }));
};

SvgFilterFrames.displayName = "SvgFilterFrames";
SvgFilterFrames.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$56() { _extends$56 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$56.apply(this, arguments); }
var Svg$52 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilterHdr = function SvgFilterHdr(props) {
  return createElement(Svg$52, _extends$56({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z"
  }));
};

SvgFilterHdr.displayName = "SvgFilterHdr";
SvgFilterHdr.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$57() { _extends$57 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$57.apply(this, arguments); }
var Svg$53 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilterList = function SvgFilterList(props) {
  return createElement(Svg$53, _extends$57({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgFilterList.displayName = "SvgFilterList";
SvgFilterList.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$58() { _extends$58 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$58.apply(this, arguments); }
var Svg$54 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilterNone = function SvgFilterNone(props) {
  return createElement(Svg$54, _extends$58({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 5H1v16c0 1.1.9 2 2 2h16v-2H3V5zm18-4H7c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 16H7V3h14v14z"
  }));
};

SvgFilterNone.displayName = "SvgFilterNone";
SvgFilterNone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$59() { _extends$59 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$59.apply(this, arguments); }
var Svg$55 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilterTiltShift = function SvgFilterTiltShift(props) {
  return createElement(Svg$55, _extends$59({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 4.07V2.05c-2.01.2-3.84 1-5.32 2.21L7.1 5.69A7.941 7.941 0 0111 4.07zm7.32.19A9.949 9.949 0 0013 2.05v2.02c1.46.18 2.79.76 3.9 1.62l1.42-1.43zM19.93 11h2.02c-.2-2.01-1-3.84-2.21-5.32L18.31 7.1a7.941 7.941 0 011.62 3.9zM5.69 7.1L4.26 5.68A9.949 9.949 0 002.05 11h2.02c.18-1.46.76-2.79 1.62-3.9zM4.07 13H2.05c.2 2.01 1 3.84 2.21 5.32l1.43-1.43A7.868 7.868 0 014.07 13zM15 12c0-1.66-1.34-3-3-3s-3 1.34-3 3 1.34 3 3 3 3-1.34 3-3zm3.31 4.9l1.43 1.43a9.981 9.981 0 002.21-5.32h-2.02a7.945 7.945 0 01-1.62 3.89zM13 19.93v2.02c2.01-.2 3.84-1 5.32-2.21l-1.43-1.43c-1.1.86-2.43 1.44-3.89 1.62zm-7.32-.19A9.981 9.981 0 0011 21.95v-2.02a7.941 7.941 0 01-3.9-1.62l-1.42 1.43z"
  }));
};

SvgFilterTiltShift.displayName = "SvgFilterTiltShift";
SvgFilterTiltShift.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5a() { _extends$5a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5a.apply(this, arguments); }
var Svg$56 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFilterVintage = function SvgFilterVintage(props) {
  return createElement(Svg$56, _extends$5a({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.7 12.4a6.06 6.06 0 00-.86-.4c.29-.11.58-.24.86-.4a6.012 6.012 0 003-5.19 6.007 6.007 0 00-6 0c-.28.16-.54.35-.78.54.05-.31.08-.63.08-.95 0-2.22-1.21-4.15-3-5.19C10.21 1.85 9 3.78 9 6c0 .32.03.64.08.95-.24-.2-.5-.39-.78-.55a6.008 6.008 0 00-6 0 5.97 5.97 0 003 5.19c.28.16.57.29.86.4-.29.11-.58.24-.86.4a6.012 6.012 0 00-3 5.19 6.007 6.007 0 006 0c.28-.16.54-.35.78-.54-.05.32-.08.64-.08.96 0 2.22 1.21 4.15 3 5.19 1.79-1.04 3-2.97 3-5.19 0-.32-.03-.64-.08-.95.24.2.5.38.78.54a6.008 6.008 0 006 0 6.012 6.012 0 00-3-5.19zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"
  }));
};

SvgFilterVintage.displayName = "SvgFilterVintage";
SvgFilterVintage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5b() { _extends$5b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5b.apply(this, arguments); }
var Svg$57 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFindInPage = function SvgFindInPage(props) {
  return createElement(Svg$57, _extends$5b({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 19.59V8l-6-6H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c.45 0 .85-.15 1.19-.4l-4.43-4.43c-.8.52-1.74.83-2.76.83-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5c0 1.02-.31 1.96-.83 2.75L20 19.59zM9 13c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3-3 1.34-3 3z"
  }));
};

SvgFindInPage.displayName = "SvgFindInPage";
SvgFindInPage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5c() { _extends$5c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5c.apply(this, arguments); }
var Svg$58 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFindReplace = function SvgFindReplace(props) {
  return createElement(Svg$58, _extends$5c({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M11 6c1.38 0 2.63.56 3.54 1.46L12 10h6V4l-2.05 2.05A6.976 6.976 0 0011 4c-3.53 0-6.43 2.61-6.92 6H6.1A5 5 0 0111 6zm5.64 9.14A6.89 6.89 0 0017.92 12H15.9a5 5 0 01-4.9 4c-1.38 0-2.63-.56-3.54-1.46L10 12H4v6l2.05-2.05A6.976 6.976 0 0011 18c1.55 0 2.98-.51 4.14-1.36L20 21.49 21.49 20l-4.85-4.86z"
  }));
};

SvgFindReplace.displayName = "SvgFindReplace";
SvgFindReplace.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5d() { _extends$5d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5d.apply(this, arguments); }
var Svg$59 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFingerprint = function SvgFingerprint(props) {
  return createElement(Svg$59, _extends$5d({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17.81 4.47c-.08 0-.16-.02-.23-.06C15.66 3.42 14 3 12.01 3c-1.98 0-3.86.47-5.57 1.41-.24.13-.54.04-.68-.2a.506.506 0 01.2-.68C7.82 2.52 9.86 2 12.01 2c2.13 0 3.99.47 6.03 1.52.25.13.34.43.21.67a.49.49 0 01-.44.28zM3.5 9.72a.499.499 0 01-.41-.79c.99-1.4 2.25-2.5 3.75-3.27C9.98 4.04 14 4.03 17.15 5.65c1.5.77 2.76 1.86 3.75 3.25a.5.5 0 01-.12.7c-.23.16-.54.11-.7-.12a9.388 9.388 0 00-3.39-2.94c-2.87-1.47-6.54-1.47-9.4.01-1.36.7-2.5 1.7-3.4 2.96-.08.14-.23.21-.39.21zm6.25 12.07a.47.47 0 01-.35-.15c-.87-.87-1.34-1.43-2.01-2.64-.69-1.23-1.05-2.73-1.05-4.34 0-2.97 2.54-5.39 5.66-5.39s5.66 2.42 5.66 5.39c0 .28-.22.5-.5.5s-.5-.22-.5-.5c0-2.42-2.09-4.39-4.66-4.39-2.57 0-4.66 1.97-4.66 4.39 0 1.44.32 2.77.93 3.85.64 1.15 1.08 1.64 1.85 2.42.19.2.19.51 0 .71-.11.1-.24.15-.37.15zm7.17-1.85c-1.19 0-2.24-.3-3.1-.89-1.49-1.01-2.38-2.65-2.38-4.39 0-.28.22-.5.5-.5s.5.22.5.5c0 1.41.72 2.74 1.94 3.56.71.48 1.54.71 2.54.71.24 0 .64-.03 1.04-.1.27-.05.53.13.58.41.05.27-.13.53-.41.58-.57.11-1.07.12-1.21.12zM14.91 22c-.04 0-.09-.01-.13-.02-1.59-.44-2.63-1.03-3.72-2.1a7.297 7.297 0 01-2.17-5.22c0-1.62 1.38-2.94 3.08-2.94 1.7 0 3.08 1.32 3.08 2.94 0 1.07.93 1.94 2.08 1.94s2.08-.87 2.08-1.94c0-3.77-3.25-6.83-7.25-6.83-2.84 0-5.44 1.58-6.61 4.03-.39.81-.59 1.76-.59 2.8 0 .78.07 2.01.67 3.61.1.26-.03.55-.29.64-.26.1-.55-.04-.64-.29a11.14 11.14 0 01-.73-3.96c0-1.2.23-2.29.68-3.24 1.33-2.79 4.28-4.6 7.51-4.6 4.55 0 8.25 3.51 8.25 7.83 0 1.62-1.38 2.94-3.08 2.94s-3.08-1.32-3.08-2.94c0-1.07-.93-1.94-2.08-1.94s-2.08.87-2.08 1.94c0 1.71.66 3.31 1.87 4.51.95.94 1.86 1.46 3.27 1.85.27.07.42.35.35.61-.05.23-.26.38-.47.38z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgFingerprint.displayName = "SvgFingerprint";
SvgFingerprint.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5e() { _extends$5e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5e.apply(this, arguments); }
var Svg$5a = styled("svg")({
  flex: "none"
}, space, color);

var SvgFirstPage = function SvgFirstPage(props) {
  return createElement(Svg$5a, _extends$5e({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z"
  }));
};

SvgFirstPage.displayName = "SvgFirstPage";
SvgFirstPage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5f() { _extends$5f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5f.apply(this, arguments); }
var Svg$5b = styled("svg")({
  flex: "none"
}, space, color);

var SvgFitnessCenter = function SvgFitnessCenter(props) {
  return createElement(Svg$5b, _extends$5f({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M20.57 14.86L22 13.43 20.57 12 17 15.57 8.43 7 12 3.43 10.57 2 9.14 3.43 7.71 2 5.57 4.14 4.14 2.71 2.71 4.14l1.43 1.43L2 7.71l1.43 1.43L2 10.57 3.43 12 7 8.43 15.57 17 12 20.57 13.43 22l1.43-1.43L16.29 22l2.14-2.14 1.43 1.43 1.43-1.43-1.43-1.43L22 16.29z"
  }));
};

SvgFitnessCenter.displayName = "SvgFitnessCenter";
SvgFitnessCenter.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5g() { _extends$5g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5g.apply(this, arguments); }
var Svg$5c = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlag = function SvgFlag(props) {
  return createElement(Svg$5c, _extends$5g({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M14.4 6L14 4H5v17h2v-7h5.6l.4 2h7V6z"
  }));
};

SvgFlag.displayName = "SvgFlag";
SvgFlag.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5h() { _extends$5h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5h.apply(this, arguments); }
var Svg$5d = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlare = function SvgFlare(props) {
  return createElement(Svg$5d, _extends$5h({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 11H1v2h6v-2zm2.17-3.24L7.05 5.64 5.64 7.05l2.12 2.12 1.41-1.41zM13 1h-2v6h2V1zm5.36 6.05l-1.41-1.41-2.12 2.12 1.41 1.41 2.12-2.12zM17 11v2h6v-2h-6zm-5-2c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm2.83 7.24l2.12 2.12 1.41-1.41-2.12-2.12-1.41 1.41zm-9.19.71l1.41 1.41 2.12-2.12-1.41-1.41-2.12 2.12zM11 23h2v-6h-2v6z"
  }));
};

SvgFlare.displayName = "SvgFlare";
SvgFlare.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5i() { _extends$5i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5i.apply(this, arguments); }
var Svg$5e = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlashAuto = function SvgFlashAuto(props) {
  return createElement(Svg$5e, _extends$5i({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 2v12h3v9l7-12H9l4-9H3zm16 0h-2l-3.2 9h1.9l.7-2h3.2l.7 2h1.9L19 2zm-2.15 5.65L18 4l1.15 3.65h-2.3z"
  }));
};

SvgFlashAuto.displayName = "SvgFlashAuto";
SvgFlashAuto.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5j() { _extends$5j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5j.apply(this, arguments); }
var Svg$5f = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlashOff = function SvgFlashOff(props) {
  return createElement(Svg$5f, _extends$5j({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3.27 3L2 4.27l5 5V13h3v9l3.58-6.14L17.73 20 19 18.73 3.27 3zM17 10h-4l4-8H7v2.18l8.46 8.46L17 10z"
  }));
};

SvgFlashOff.displayName = "SvgFlashOff";
SvgFlashOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5k() { _extends$5k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5k.apply(this, arguments); }
var Svg$5g = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlashOn = function SvgFlashOn(props) {
  return createElement(Svg$5g, _extends$5k({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 2v11h3v9l7-12h-4l4-8z"
  }));
};

SvgFlashOn.displayName = "SvgFlashOn";
SvgFlashOn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5l() { _extends$5l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5l.apply(this, arguments); }
var Svg$5h = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlight = function SvgFlight(props) {
  return createElement(Svg$5h, _extends$5l({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 16v-2l-8-5V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5V9l-8 5v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-5.5l8 2.5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgFlight.displayName = "SvgFlight";
SvgFlight.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5m() { _extends$5m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5m.apply(this, arguments); }
var Svg$5i = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlightLand = function SvgFlightLand(props) {
  return createElement(Svg$5i, _extends$5m({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "flightLand_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("defs", null, createElement("path", {
    id: "flightLand_svg__c",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "flightLand_svg__b"
  }, createElement("use", {
    xlinkHref: "#flightLand_svg__a",
    overflow: "visible"
  })), createElement("clipPath", {
    id: "flightLand_svg__d",
    clipPath: "url(#flightLand_svg__b)"
  }, createElement("use", {
    xlinkHref: "#flightLand_svg__c",
    overflow: "visible"
  })), createElement("path", {
    d: "M2.5 19h19v2h-19zm7.18-5.73l4.35 1.16 5.31 1.42c.8.21 1.62-.26 1.84-1.06.21-.8-.26-1.62-1.06-1.84l-5.31-1.42-2.76-9.02L10.12 2v8.28L5.15 8.95l-.93-2.32-1.45-.39v5.17l1.6.43 5.31 1.43z",
    clipPath: "url(#flightLand_svg__d)"
  }));
};

SvgFlightLand.displayName = "SvgFlightLand";
SvgFlightLand.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5n() { _extends$5n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5n.apply(this, arguments); }
var Svg$5j = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlightTakeoff = function SvgFlightTakeoff(props) {
  return createElement(Svg$5j, _extends$5n({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "flightTakeoff_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "flightTakeoff_svg__b"
  }, createElement("use", {
    xlinkHref: "#flightTakeoff_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M2.5 19h19v2h-19zm19.57-9.36c-.21-.8-1.04-1.28-1.84-1.06L14.92 10l-6.9-6.43-1.93.51 4.14 7.17-4.97 1.33-1.97-1.54-1.45.39 1.82 3.16.77 1.33 1.6-.43 5.31-1.42 4.35-1.16L21 11.49c.81-.23 1.28-1.05 1.07-1.85z",
    clipPath: "url(#flightTakeoff_svg__b)"
  }), createElement("path", {
    clipPath: "url(#flightTakeoff_svg__b)",
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgFlightTakeoff.displayName = "SvgFlightTakeoff";
SvgFlightTakeoff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5o() { _extends$5o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5o.apply(this, arguments); }
var Svg$5k = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlip = function SvgFlip(props) {
  return createElement(Svg$5k, _extends$5o({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15 21h2v-2h-2v2zm4-12h2V7h-2v2zM3 5v14c0 1.1.9 2 2 2h4v-2H5V5h4V3H5c-1.1 0-2 .9-2 2zm16-2v2h2c0-1.1-.9-2-2-2zm-8 20h2V1h-2v22zm8-6h2v-2h-2v2zM15 5h2V3h-2v2zm4 8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2z"
  }));
};

SvgFlip.displayName = "SvgFlip";
SvgFlip.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5p() { _extends$5p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5p.apply(this, arguments); }
var Svg$5l = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlipToBack = function SvgFlipToBack(props) {
  return createElement(Svg$5l, _extends$5p({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M9 7H7v2h2V7zm0 4H7v2h2v-2zm0-8a2 2 0 00-2 2h2V3zm4 12h-2v2h2v-2zm6-12v2h2c0-1.1-.9-2-2-2zm-6 0h-2v2h2V3zM9 17v-2H7a2 2 0 002 2zm10-4h2v-2h-2v2zm0-4h2V7h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zM5 7H3v12a2 2 0 002 2h12v-2H5V7zm10-2h2V3h-2v2zm0 12h2v-2h-2v2z"
  }));
};

SvgFlipToBack.displayName = "SvgFlipToBack";
SvgFlipToBack.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5q() { _extends$5q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5q.apply(this, arguments); }
var Svg$5m = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlipToFront = function SvgFlipToFront(props) {
  return createElement(Svg$5m, _extends$5q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M3 13h2v-2H3v2zm0 4h2v-2H3v2zm2 4v-2H3a2 2 0 002 2zM3 9h2V7H3v2zm12 12h2v-2h-2v2zm4-18H9a2 2 0 00-2 2v10a2 2 0 002 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2z"
  }));
};

SvgFlipToFront.displayName = "SvgFlipToFront";
SvgFlipToFront.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5r() { _extends$5r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5r.apply(this, arguments); }
var Svg$5n = styled("svg")({
  flex: "none"
}, space, color);

var SvgFolder = function SvgFolder(props) {
  return createElement(Svg$5n, _extends$5r({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgFolder.displayName = "SvgFolder";
SvgFolder.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5s() { _extends$5s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5s.apply(this, arguments); }
var Svg$5o = styled("svg")({
  flex: "none"
}, space, color);

var SvgFolderOpen = function SvgFolderOpen(props) {
  return createElement(Svg$5o, _extends$5s({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z"
  }));
};

SvgFolderOpen.displayName = "SvgFolderOpen";
SvgFolderOpen.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5t() { _extends$5t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5t.apply(this, arguments); }
var Svg$5p = styled("svg")({
  flex: "none"
}, space, color);

var SvgFolderShared = function SvgFolderShared(props) {
  return createElement(Svg$5p, _extends$5t({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-5 3c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm4 8h-8v-1c0-1.33 2.67-2 4-2s4 .67 4 2v1z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgFolderShared.displayName = "SvgFolderShared";
SvgFolderShared.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5u() { _extends$5u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5u.apply(this, arguments); }
var Svg$5q = styled("svg")({
  flex: "none"
}, space, color);

var SvgFolderSpecial = function SvgFolderSpecial(props) {
  return createElement(Svg$5q, _extends$5u({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M20 6h-8l-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-2.06 11L15 15.28 12.06 17l.78-3.33-2.59-2.24 3.41-.29L15 8l1.34 3.14 3.41.29-2.59 2.24.78 3.33z"
  }));
};

SvgFolderSpecial.displayName = "SvgFolderSpecial";
SvgFolderSpecial.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5v() { _extends$5v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5v.apply(this, arguments); }
var Svg$5r = styled("svg")({
  flex: "none"
}, space, color);

var SvgFontDownload = function SvgFontDownload(props) {
  return createElement(Svg$5r, _extends$5v({}, props, {
    baseProfile: "tiny",
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M9.93 13.5h4.14L12 7.98zM20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-4.05 16.5l-1.14-3H9.17l-1.12 3H5.96l5.11-13h1.86l5.11 13h-2.09z"
  }));
};

SvgFontDownload.displayName = "SvgFontDownload";
SvgFontDownload.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5w() { _extends$5w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5w.apply(this, arguments); }
var Svg$5s = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatAlignCenter = function SvgFormatAlignCenter(props) {
  return createElement(Svg$5s, _extends$5w({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z"
  }));
};

SvgFormatAlignCenter.displayName = "SvgFormatAlignCenter";
SvgFormatAlignCenter.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5x() { _extends$5x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5x.apply(this, arguments); }
var Svg$5t = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatAlignJustify = function SvgFormatAlignJustify(props) {
  return createElement(Svg$5t, _extends$5x({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z"
  }));
};

SvgFormatAlignJustify.displayName = "SvgFormatAlignJustify";
SvgFormatAlignJustify.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5y() { _extends$5y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5y.apply(this, arguments); }
var Svg$5u = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatAlignLeft = function SvgFormatAlignLeft(props) {
  return createElement(Svg$5u, _extends$5y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z"
  }));
};

SvgFormatAlignLeft.displayName = "SvgFormatAlignLeft";
SvgFormatAlignLeft.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5z() { _extends$5z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5z.apply(this, arguments); }
var Svg$5v = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatAlignRight = function SvgFormatAlignRight(props) {
  return createElement(Svg$5v, _extends$5z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z"
  }));
};

SvgFormatAlignRight.displayName = "SvgFormatAlignRight";
SvgFormatAlignRight.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5A() { _extends$5A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5A.apply(this, arguments); }
var Svg$5w = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatBold = function SvgFormatBold(props) {
  return createElement(Svg$5w, _extends$5A({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z"
  }));
};

SvgFormatBold.displayName = "SvgFormatBold";
SvgFormatBold.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5B() { _extends$5B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5B.apply(this, arguments); }
var Svg$5x = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatClear = function SvgFormatClear(props) {
  return createElement(Svg$5x, _extends$5B({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3.27 5L2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21 18 19.73 3.55 5.27 3.27 5zM6 5v.18L8.82 8h2.4l-.72 1.68 2.1 2.1L14.21 8H20V5H6z"
  }));
};

SvgFormatClear.displayName = "SvgFormatClear";
SvgFormatClear.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5C() { _extends$5C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5C.apply(this, arguments); }
var Svg$5y = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatColorFill = function SvgFormatColorFill(props) {
  return createElement(Svg$5y, _extends$5C({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15a1.49 1.49 0 000 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z"
  }), createElement("path", {
    fillOpacity: 0.36,
    d: "M0 20h24v4H0z"
  }));
};

SvgFormatColorFill.displayName = "SvgFormatColorFill";
SvgFormatColorFill.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5D() { _extends$5D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5D.apply(this, arguments); }
var Svg$5z = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatColorReset = function SvgFormatColorReset(props) {
  return createElement(Svg$5z, _extends$5D({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 14c0-4-6-10.8-6-10.8s-1.33 1.51-2.73 3.52l8.59 8.59c.09-.42.14-.86.14-1.31zm-.88 3.12L12.5 12.5 5.27 5.27 4 6.55l3.32 3.32C6.55 11.32 6 12.79 6 14c0 3.31 2.69 6 6 6 1.52 0 2.9-.57 3.96-1.5l2.63 2.63 1.27-1.27-2.74-2.74z"
  }));
};

SvgFormatColorReset.displayName = "SvgFormatColorReset";
SvgFormatColorReset.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5E() { _extends$5E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5E.apply(this, arguments); }
var Svg$5A = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatColorText = function SvgFormatColorText(props) {
  return createElement(Svg$5A, _extends$5E({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.36,
    d: "M0 20h24v4H0z"
  }), createElement("path", {
    d: "M11 3L5.5 17h2.25l1.12-3h6.25l1.12 3h2.25L13 3h-2zm-1.38 9L12 5.67 14.38 12H9.62z"
  }));
};

SvgFormatColorText.displayName = "SvgFormatColorText";
SvgFormatColorText.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5F() { _extends$5F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5F.apply(this, arguments); }
var Svg$5B = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatIndentDecrease = function SvgFormatIndentDecrease(props) {
  return createElement(Svg$5B, _extends$5F({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 17h10v-2H11v2zm-8-5l4 4V8l-4 4zm0 9h18v-2H3v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z"
  }));
};

SvgFormatIndentDecrease.displayName = "SvgFormatIndentDecrease";
SvgFormatIndentDecrease.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5G() { _extends$5G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5G.apply(this, arguments); }
var Svg$5C = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatIndentIncrease = function SvgFormatIndentIncrease(props) {
  return createElement(Svg$5C, _extends$5G({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 21h18v-2H3v2zM3 8v8l4-4-4-4zm8 9h10v-2H11v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z"
  }));
};

SvgFormatIndentIncrease.displayName = "SvgFormatIndentIncrease";
SvgFormatIndentIncrease.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5H() { _extends$5H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5H.apply(this, arguments); }
var Svg$5D = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatItalic = function SvgFormatItalic(props) {
  return createElement(Svg$5D, _extends$5H({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z"
  }));
};

SvgFormatItalic.displayName = "SvgFormatItalic";
SvgFormatItalic.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5I() { _extends$5I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5I.apply(this, arguments); }
var Svg$5E = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatLineSpacing = function SvgFormatLineSpacing(props) {
  return createElement(Svg$5E, _extends$5I({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 7h2.5L5 3.5 1.5 7H4v10H1.5L5 20.5 8.5 17H6V7zm4-2v2h12V5H10zm0 14h12v-2H10v2zm0-6h12v-2H10v2z"
  }));
};

SvgFormatLineSpacing.displayName = "SvgFormatLineSpacing";
SvgFormatLineSpacing.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5J() { _extends$5J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5J.apply(this, arguments); }
var Svg$5F = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatListBulleted = function SvgFormatListBulleted(props) {
  return createElement(Svg$5F, _extends$5J({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z"
  }));
};

SvgFormatListBulleted.displayName = "SvgFormatListBulleted";
SvgFormatListBulleted.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5K() { _extends$5K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5K.apply(this, arguments); }
var Svg$5G = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatListNumbered = function SvgFormatListNumbered(props) {
  return createElement(Svg$5G, _extends$5K({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z"
  }));
};

SvgFormatListNumbered.displayName = "SvgFormatListNumbered";
SvgFormatListNumbered.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5L() { _extends$5L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5L.apply(this, arguments); }
var Svg$5H = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatPaint = function SvgFormatPaint(props) {
  return createElement(Svg$5H, _extends$5L({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 4V3c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6h1v4H9v11c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-9h8V4h-3z"
  }));
};

SvgFormatPaint.displayName = "SvgFormatPaint";
SvgFormatPaint.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5M() { _extends$5M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5M.apply(this, arguments); }
var Svg$5I = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatQuote = function SvgFormatQuote(props) {
  return createElement(Svg$5I, _extends$5M({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z"
  }));
};

SvgFormatQuote.displayName = "SvgFormatQuote";
SvgFormatQuote.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5N() { _extends$5N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5N.apply(this, arguments); }
var Svg$5J = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatShapes = function SvgFormatShapes(props) {
  return createElement(Svg$5J, _extends$5N({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M23 7V1h-6v2H7V1H1v6h2v10H1v6h6v-2h10v2h6v-6h-2V7h2zM3 3h2v2H3V3zm2 18H3v-2h2v2zm12-2H7v-2H5V7h2V5h10v2h2v10h-2v2zm4 2h-2v-2h2v2zM19 5V3h2v2h-2zm-5.27 9h-3.49l-.73 2H7.89l3.4-9h1.4l3.41 9h-1.63l-.74-2zm-3.04-1.26h2.61L12 8.91l-1.31 3.83z"
  }));
};

SvgFormatShapes.displayName = "SvgFormatShapes";
SvgFormatShapes.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5O() { _extends$5O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5O.apply(this, arguments); }
var Svg$5K = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatSize = function SvgFormatSize(props) {
  return createElement(Svg$5K, _extends$5O({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 4v3h5v12h3V7h5V4H9zm-6 8h3v7h3v-7h3V9H3v3z"
  }));
};

SvgFormatSize.displayName = "SvgFormatSize";
SvgFormatSize.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5P() { _extends$5P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5P.apply(this, arguments); }
var Svg$5L = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatStrikethrough = function SvgFormatStrikethrough(props) {
  return createElement(Svg$5L, _extends$5P({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 19h4v-3h-4v3zM5 4v3h5v3h4V7h5V4H5zM3 14h18v-2H3v2z"
  }));
};

SvgFormatStrikethrough.displayName = "SvgFormatStrikethrough";
SvgFormatStrikethrough.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5Q() { _extends$5Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5Q.apply(this, arguments); }
var Svg$5M = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatTextdirectionLToR = function SvgFormatTextdirectionLToR(props) {
  return createElement(Svg$5M, _extends$5Q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 10v5h2V4h2v11h2V4h2V2H9C6.79 2 5 3.79 5 6s1.79 4 4 4zm12 8l-4-4v3H5v2h12v3l4-4z"
  }));
};

SvgFormatTextdirectionLToR.displayName = "SvgFormatTextdirectionLToR";
SvgFormatTextdirectionLToR.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5R() { _extends$5R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5R.apply(this, arguments); }
var Svg$5N = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatTextdirectionRToL = function SvgFormatTextdirectionRToL(props) {
  return createElement(Svg$5N, _extends$5R({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 10v5h2V4h2v11h2V4h2V2h-8C7.79 2 6 3.79 6 6s1.79 4 4 4zm-2 7v-3l-4 4 4 4v-3h12v-2H8z"
  }));
};

SvgFormatTextdirectionRToL.displayName = "SvgFormatTextdirectionRToL";
SvgFormatTextdirectionRToL.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5S() { _extends$5S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5S.apply(this, arguments); }
var Svg$5O = styled("svg")({
  flex: "none"
}, space, color);

var SvgFormatUnderlined = function SvgFormatUnderlined(props) {
  return createElement(Svg$5O, _extends$5S({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z"
  }));
};

SvgFormatUnderlined.displayName = "SvgFormatUnderlined";
SvgFormatUnderlined.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5T() { _extends$5T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5T.apply(this, arguments); }
var Svg$5P = styled("svg")({
  flex: "none"
}, space, color);

var SvgForum = function SvgForum(props) {
  return createElement(Svg$5P, _extends$5T({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z"
  }));
};

SvgForum.displayName = "SvgForum";
SvgForum.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5U() { _extends$5U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5U.apply(this, arguments); }
var Svg$5Q = styled("svg")({
  flex: "none"
}, space, color);

var SvgForward = function SvgForward(props) {
  return createElement(Svg$5Q, _extends$5U({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 8V4l8 8-8 8v-4H4V8z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgForward.displayName = "SvgForward";
SvgForward.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5V() { _extends$5V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5V.apply(this, arguments); }
var Svg$5R = styled("svg")({
  flex: "none"
}, space, color);

var SvgForward10 = function SvgForward10(props) {
  return createElement(Svg$5R, _extends$5V({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "forward10_svg__a",
    d: "M24 24H0V0h24v24z"
  })), createElement("clipPath", {
    id: "forward10_svg__b"
  }, createElement("use", {
    xlinkHref: "#forward10_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8zm6.8 3H10v-3.3L9 13v-.7l1.8-.6h.1V16zm4.3-1.8c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.8-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z",
    clipPath: "url(#forward10_svg__b)"
  }));
};

SvgForward10.displayName = "SvgForward10";
SvgForward10.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5W() { _extends$5W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5W.apply(this, arguments); }
var Svg$5S = styled("svg")({
  flex: "none"
}, space, color);

var SvgForward30 = function SvgForward30(props) {
  return createElement(Svg$5S, _extends$5W({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "forward30_svg__a",
    d: "M24 24H0V0h24v24z"
  })), createElement("clipPath", {
    id: "forward30_svg__b"
  }, createElement("use", {
    xlinkHref: "#forward30_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M9.6 13.5h.4c.2 0 .4-.1.5-.2s.2-.2.2-.4v-.2s-.1-.1-.1-.2-.1-.1-.2-.1h-.5s-.1.1-.2.1-.1.1-.1.2v.2h-1c0-.2 0-.3.1-.5s.2-.3.3-.4.3-.2.4-.2.4-.1.5-.1c.2 0 .4 0 .6.1s.3.1.5.2.2.2.3.4.1.3.1.5v.3s-.1.2-.1.3-.1.2-.2.2-.2.1-.3.2c.2.1.4.2.5.4s.2.4.2.6c0 .2 0 .4-.1.5s-.2.3-.3.4-.3.2-.5.2-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.4-.1-.6h.8v.2s.1.1.1.2.1.1.2.1h.5s.1-.1.2-.1.1-.1.1-.2v-.5s-.1-.1-.1-.2-.1-.1-.2-.1h-.6v-.7zm5.7.7c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.9-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5zM4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8z",
    clipPath: "url(#forward30_svg__b)"
  }));
};

SvgForward30.displayName = "SvgForward30";
SvgForward30.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5X() { _extends$5X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5X.apply(this, arguments); }
var Svg$5T = styled("svg")({
  flex: "none"
}, space, color);

var SvgForward5 = function SvgForward5(props) {
  return createElement(Svg$5T, _extends$5X({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "forward5_svg__a",
    d: "M24 24H0V0h24v24z"
  })), createElement("clipPath", {
    id: "forward5_svg__b"
  }, createElement("use", {
    xlinkHref: "#forward5_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M4 13c0 4.4 3.6 8 8 8s8-3.6 8-8h-2c0 3.3-2.7 6-6 6s-6-2.7-6-6 2.7-6 6-6v4l5-5-5-5v4c-4.4 0-8 3.6-8 8zm6.7.9l.2-2.2h2.4v.7h-1.7l-.1.9s.1 0 .1-.1.1 0 .1-.1.1 0 .2 0h.2c.2 0 .4 0 .5.1s.3.2.4.3.2.3.3.5.1.4.1.6c0 .2 0 .4-.1.5s-.1.3-.3.5-.3.2-.5.3-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.3-.1-.5h.8c0 .2.1.3.2.4s.2.1.4.1c.1 0 .2 0 .3-.1l.2-.2s.1-.2.1-.3v-.6l-.1-.2-.2-.2s-.2-.1-.3-.1h-.2s-.1 0-.2.1-.1 0-.1.1-.1.1-.1.1h-.6z",
    clipPath: "url(#forward5_svg__b)"
  }));
};

SvgForward5.displayName = "SvgForward5";
SvgForward5.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5Y() { _extends$5Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5Y.apply(this, arguments); }
var Svg$5U = styled("svg")({
  flex: "none"
}, space, color);

var SvgFreeBreakfast = function SvgFreeBreakfast(props) {
  return createElement(Svg$5U, _extends$5Y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M20 3H4v10c0 2.21 1.79 4 4 4h6c2.21 0 4-1.79 4-4v-3h2a2 2 0 002-2V5c0-1.11-.89-2-2-2zm0 5h-2V5h2v3zM4 19h16v2H4z"
  }));
};

SvgFreeBreakfast.displayName = "SvgFreeBreakfast";
SvgFreeBreakfast.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5Z() { _extends$5Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5Z.apply(this, arguments); }
var Svg$5V = styled("svg")({
  flex: "none"
}, space, color);

var SvgFullscreen = function SvgFullscreen(props) {
  return createElement(Svg$5V, _extends$5Z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"
  }));
};

SvgFullscreen.displayName = "SvgFullscreen";
SvgFullscreen.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5_() { _extends$5_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5_.apply(this, arguments); }
var Svg$5W = styled("svg")({
  flex: "none"
}, space, color);

var SvgFullscreenExit = function SvgFullscreenExit(props) {
  return createElement(Svg$5W, _extends$5_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z"
  }));
};

SvgFullscreenExit.displayName = "SvgFullscreenExit";
SvgFullscreenExit.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$5$() { _extends$5$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5$.apply(this, arguments); }
var Svg$5X = styled("svg")({
  flex: "none"
}, space, color);

var SvgFunctions = function SvgFunctions(props) {
  return createElement(Svg$5X, _extends$5$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 4H6v2l6.5 6L6 18v2h12v-3h-7l5-5-5-5h7z"
  }));
};

SvgFunctions.displayName = "SvgFunctions";
SvgFunctions.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$60() { _extends$60 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$60.apply(this, arguments); }
var Svg$5Y = styled("svg")({
  flex: "none"
}, space, color);

var SvgGTranslate = function SvgGTranslate(props) {
  return createElement(Svg$5Y, _extends$60({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0zm20 6h-8.82L15 19l-2 2h7c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"
  }), createElement("path", {
    d: "M20 5h-9.12L10 2H4c-1.1 0-2 .9-2 2v13c0 1.1.9 2 2 2h7l1 3h8c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zM7.17 14.59c-2.25 0-4.09-1.83-4.09-4.09s1.83-4.09 4.09-4.09c1.04 0 1.99.37 2.74 1.07l.07.06-1.23 1.18-.06-.05c-.29-.27-.78-.59-1.52-.59-1.31 0-2.38 1.09-2.38 2.42s1.07 2.42 2.38 2.42c1.37 0 1.96-.87 2.12-1.46H7.08V9.91h3.95l.01.07c.04.21.05.4.05.61 0 2.35-1.61 4-3.92 4zm6.03-1.71c.33.6.74 1.18 1.19 1.7l-.54.53-.65-2.23zm.77-.76h-.99l-.31-1.04h3.99s-.34 1.31-1.56 2.74c-.52-.62-.89-1.23-1.13-1.7zM21 20c0 .55-.45 1-1 1h-7l2-2-.81-2.77.92-.92L17.79 18l.73-.73-2.71-2.68c.9-1.03 1.6-2.25 1.92-3.51H19v-1.04h-3.64V9h-1.04v1.04h-1.96L11.18 6H20c.55 0 1 .45 1 1v13z"
  }));
};

SvgGTranslate.displayName = "SvgGTranslate";
SvgGTranslate.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$61() { _extends$61 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$61.apply(this, arguments); }
var Svg$5Z = styled("svg")({
  flex: "none"
}, space, color);

var SvgGamepad = function SvgGamepad(props) {
  return createElement(Svg$5Z, _extends$61({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M15 7.5V2H9v5.5l3 3 3-3zM7.5 9H2v6h5.5l3-3-3-3zM9 16.5V22h6v-5.5l-3-3-3 3zM16.5 9l-3 3 3 3H22V9h-5.5z"
  }));
};

SvgGamepad.displayName = "SvgGamepad";
SvgGamepad.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$62() { _extends$62 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$62.apply(this, arguments); }
var Svg$5_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgGames = function SvgGames(props) {
  return createElement(Svg$5_, _extends$62({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M15 7.5V2H9v5.5l3 3 3-3zM7.5 9H2v6h5.5l3-3-3-3zM9 16.5V22h6v-5.5l-3-3-3 3zM16.5 9l-3 3 3 3H22V9h-5.5z"
  }));
};

SvgGames.displayName = "SvgGames";
SvgGames.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$63() { _extends$63 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$63.apply(this, arguments); }
var Svg$5$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgGavel = function SvgGavel(props) {
  return createElement(Svg$5$, _extends$63({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "gavel_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "gavel_svg__b"
  }, createElement("use", {
    xlinkHref: "#gavel_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M1 21h12v2H1zM5.245 8.07l2.83-2.827 14.14 14.142-2.828 2.828zM12.317 1l5.657 5.656-2.83 2.83-5.654-5.66zM3.825 9.485l5.657 5.657-2.828 2.828-5.657-5.657z",
    clipPath: "url(#gavel_svg__b)"
  }));
};

SvgGavel.displayName = "SvgGavel";
SvgGavel.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$64() { _extends$64 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$64.apply(this, arguments); }
var Svg$60 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGesture = function SvgGesture(props) {
  return createElement(Svg$60, _extends$64({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4.59 6.89c.7-.71 1.4-1.35 1.71-1.22.5.2 0 1.03-.3 1.52-.25.42-2.86 3.89-2.86 6.31 0 1.28.48 2.34 1.34 2.98.75.56 1.74.73 2.64.46 1.07-.31 1.95-1.4 3.06-2.77 1.21-1.49 2.83-3.44 4.08-3.44 1.63 0 1.65 1.01 1.76 1.79-3.78.64-5.38 3.67-5.38 5.37 0 1.7 1.44 3.09 3.21 3.09 1.63 0 4.29-1.33 4.69-6.1H21v-2.5h-2.47c-.15-1.65-1.09-4.2-4.03-4.2-2.25 0-4.18 1.91-4.94 2.84-.58.73-2.06 2.48-2.29 2.72-.25.3-.68.84-1.11.84-.45 0-.72-.83-.36-1.92.35-1.09 1.4-2.86 1.85-3.52.78-1.14 1.3-1.92 1.3-3.28C8.95 3.69 7.31 3 6.44 3 5.12 3 3.97 4 3.72 4.25c-.36.36-.66.66-.88.93l1.75 1.71zm9.29 11.66c-.31 0-.74-.26-.74-.72 0-.6.73-2.2 2.87-2.76-.3 2.69-1.43 3.48-2.13 3.48z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgGesture.displayName = "SvgGesture";
SvgGesture.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$65() { _extends$65 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$65.apply(this, arguments); }
var Svg$61 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGetApp = function SvgGetApp(props) {
  return createElement(Svg$61, _extends$65({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgGetApp.displayName = "SvgGetApp";
SvgGetApp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$66() { _extends$66 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$66.apply(this, arguments); }
var Svg$62 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGif = function SvgGif(props) {
  return createElement(Svg$62, _extends$66({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "gif_svg__a",
    d: "M24 24H0V0h24v24z"
  })), createElement("clipPath", {
    id: "gif_svg__b"
  }, createElement("use", {
    xlinkHref: "#gif_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M11.5 9H13v6h-1.5zM9 9H6c-.6 0-1 .5-1 1v4c0 .5.4 1 1 1h3c.6 0 1-.5 1-1v-2H8.5v1.5h-2v-3H10V10c0-.5-.4-1-1-1zm10 1.5V9h-4.5v6H16v-2h2v-1.5h-2v-1z",
    clipPath: "url(#gif_svg__b)"
  }));
};

SvgGif.displayName = "SvgGif";
SvgGif.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$67() { _extends$67 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$67.apply(this, arguments); }
var Svg$63 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGolfCourse = function SvgGolfCourse(props) {
  return createElement(Svg$63, _extends$67({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("circle", {
    cx: 19.5,
    cy: 19.5,
    r: 1.5
  }), createElement("path", {
    d: "M17 5.92L9 2v18H7v-1.73c-1.79.35-3 .99-3 1.73 0 1.1 2.69 2 6 2s6-.9 6-2c0-.99-2.16-1.81-5-1.97V8.98l6-3.06z"
  }));
};

SvgGolfCourse.displayName = "SvgGolfCourse";
SvgGolfCourse.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$68() { _extends$68 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$68.apply(this, arguments); }
var Svg$64 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGpsFixed = function SvgGpsFixed(props) {
  return createElement(Svg$64, _extends$68({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3A8.994 8.994 0 0013 3.06V1h-2v2.06A8.994 8.994 0 003.06 11H1v2h2.06A8.994 8.994 0 0011 20.94V23h2v-2.06A8.994 8.994 0 0020.94 13H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
  }));
};

SvgGpsFixed.displayName = "SvgGpsFixed";
SvgGpsFixed.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$69() { _extends$69 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$69.apply(this, arguments); }
var Svg$65 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGpsNotFixed = function SvgGpsNotFixed(props) {
  return createElement(Svg$65, _extends$69({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20.94 11A8.994 8.994 0 0013 3.06V1h-2v2.06A8.994 8.994 0 003.06 11H1v2h2.06A8.994 8.994 0 0011 20.94V23h2v-2.06A8.994 8.994 0 0020.94 13H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
  }));
};

SvgGpsNotFixed.displayName = "SvgGpsNotFixed";
SvgGpsNotFixed.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6a() { _extends$6a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6a.apply(this, arguments); }
var Svg$66 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGpsOff = function SvgGpsOff(props) {
  return createElement(Svg$66, _extends$6a({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20.94 11A8.994 8.994 0 0013 3.06V1h-2v2.06c-1.13.12-2.19.46-3.16.97l1.5 1.5A6.995 6.995 0 0119 12c0 .94-.19 1.84-.52 2.65l1.5 1.5c.5-.96.84-2.02.97-3.15H23v-2h-2.06zM3 4.27l2.04 2.04A8.914 8.914 0 003.06 11H1v2h2.06A8.994 8.994 0 0011 20.94V23h2v-2.06c1.77-.2 3.38-.91 4.69-1.98L19.73 21 21 19.73 4.27 3 3 4.27zm13.27 13.27a6.995 6.995 0 01-9.81-9.81l9.81 9.81z"
  }));
};

SvgGpsOff.displayName = "SvgGpsOff";
SvgGpsOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6b() { _extends$6b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6b.apply(this, arguments); }
var Svg$67 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGrade = function SvgGrade(props) {
  return createElement(Svg$67, _extends$6b({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgGrade.displayName = "SvgGrade";
SvgGrade.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6c() { _extends$6c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6c.apply(this, arguments); }
var Svg$68 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGradient = function SvgGradient(props) {
  return createElement(Svg$68, _extends$6c({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 9h2v2h-2zm-2 2h2v2H9zm4 0h2v2h-2zm2-2h2v2h-2zM7 9h2v2H7zm12-6H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 18H7v-2h2v2zm4 0h-2v-2h2v2zm4 0h-2v-2h2v2zm2-7h-2v2h2v2h-2v-2h-2v2h-2v-2h-2v2H9v-2H7v2H5v-2h2v-2H5V5h14v6z"
  }));
};

SvgGradient.displayName = "SvgGradient";
SvgGradient.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6d() { _extends$6d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6d.apply(this, arguments); }
var Svg$69 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGrain = function SvgGrain(props) {
  return createElement(Svg$69, _extends$6d({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM6 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-4 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-4-4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
  }));
};

SvgGrain.displayName = "SvgGrain";
SvgGrain.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6e() { _extends$6e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6e.apply(this, arguments); }
var Svg$6a = styled("svg")({
  flex: "none"
}, space, color);

var SvgGraphicEq = function SvgGraphicEq(props) {
  return createElement(Svg$6a, _extends$6e({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 18h2V6H7v12zm4 4h2V2h-2v20zm-8-8h2v-4H3v4zm12 4h2V6h-2v12zm4-8v4h2v-4h-2z"
  }));
};

SvgGraphicEq.displayName = "SvgGraphicEq";
SvgGraphicEq.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6f() { _extends$6f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6f.apply(this, arguments); }
var Svg$6b = styled("svg")({
  flex: "none"
}, space, color);

var SvgGridOff = function SvgGridOff(props) {
  return createElement(Svg$6b, _extends$6f({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M8 4v1.45l2 2V4h4v4h-3.45l2 2H14v1.45l2 2V10h4v4h-3.45l2 2H20v1.45l2 2V4c0-1.1-.9-2-2-2H4.55l2 2H8zm8 0h4v4h-4V4zM1.27 1.27L0 2.55l2 2V20c0 1.1.9 2 2 2h15.46l2 2 1.27-1.27L1.27 1.27zM10 12.55L11.45 14H10v-1.45zm-6-6L5.45 8H4V6.55zM8 20H4v-4h4v4zm0-6H4v-4h3.45l.55.55V14zm6 6h-4v-4h3.45l.55.54V20zm2 0v-1.46L17.46 20H16z"
  }));
};

SvgGridOff.displayName = "SvgGridOff";
SvgGridOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6g() { _extends$6g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6g.apply(this, arguments); }
var Svg$6c = styled("svg")({
  flex: "none"
}, space, color);

var SvgGridOn = function SvgGridOn(props) {
  return createElement(Svg$6c, _extends$6g({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z"
  }));
};

SvgGridOn.displayName = "SvgGridOn";
SvgGridOn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6h() { _extends$6h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6h.apply(this, arguments); }
var Svg$6d = styled("svg")({
  flex: "none"
}, space, color);

var SvgGroup = function SvgGroup(props) {
  return createElement(Svg$6d, _extends$6h({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z"
  }));
};

SvgGroup.displayName = "SvgGroup";
SvgGroup.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6i() { _extends$6i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6i.apply(this, arguments); }
var Svg$6e = styled("svg")({
  flex: "none"
}, space, color);

var SvgGroupAdd = function SvgGroupAdd(props) {
  return createElement(Svg$6e, _extends$6i({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M8 10H5V7H3v3H0v2h3v3h2v-3h3v-2zm10 1c1.66 0 2.99-1.34 2.99-3S19.66 5 18 5c-.32 0-.63.05-.91.14.57.81.9 1.79.9 2.86s-.34 2.04-.9 2.86c.28.09.59.14.91.14zm-5 0c1.66 0 2.99-1.34 2.99-3S14.66 5 13 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm6.62 2.16c.83.73 1.38 1.66 1.38 2.84v2h3v-2c0-1.54-2.37-2.49-4.38-2.84zM13 13c-2 0-6 1-6 3v2h12v-2c0-2-4-3-6-3z"
  }));
};

SvgGroupAdd.displayName = "SvgGroupAdd";
SvgGroupAdd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6j() { _extends$6j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6j.apply(this, arguments); }
var Svg$6f = styled("svg")({
  flex: "none"
}, space, color);

var SvgGroupWork = function SvgGroupWork(props) {
  return createElement(Svg$6f, _extends$6j({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM8 17.5a2.5 2.5 0 010-5 2.5 2.5 0 010 5zM9.5 8a2.5 2.5 0 015 0 2.5 2.5 0 01-5 0zm6.5 9.5a2.5 2.5 0 010-5 2.5 2.5 0 010 5z"
  }));
};

SvgGroupWork.displayName = "SvgGroupWork";
SvgGroupWork.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6k() { _extends$6k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6k.apply(this, arguments); }
var Svg$6g = styled("svg")({
  flex: "none"
}, space, color);

var SvgHd = function SvgHd(props) {
  return createElement(Svg$6g, _extends$6k({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M19 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z"
  }));
};

SvgHd.displayName = "SvgHd";
SvgHd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6l() { _extends$6l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6l.apply(this, arguments); }
var Svg$6h = styled("svg")({
  flex: "none"
}, space, color);

var SvgHdrOff = function SvgHdrOff(props) {
  return createElement(Svg$6h, _extends$6l({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17.5 15v-2h1.1l.9 2H21l-.9-2.1c.5-.2.9-.8.9-1.4v-1c0-.8-.7-1.5-1.5-1.5H16v4.9l1.1 1.1h.4zm0-4.5h2v1h-2v-1zm-4.5 0v.4l1.5 1.5v-1.9c0-.8-.7-1.5-1.5-1.5h-1.9l1.5 1.5h.4zm-3.5-1l-7-7-1.1 1L6.9 9h-.4v2h-2V9H3v6h1.5v-2.5h2V15H8v-4.9l1.5 1.5V15h3.4l7.6 7.6 1.1-1.1-12.1-12z"
  }));
};

SvgHdrOff.displayName = "SvgHdrOff";
SvgHdrOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6m() { _extends$6m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6m.apply(this, arguments); }
var Svg$6i = styled("svg")({
  flex: "none"
}, space, color);

var SvgHdrOn = function SvgHdrOn(props) {
  return createElement(Svg$6i, _extends$6m({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 11.5v-1c0-.8-.7-1.5-1.5-1.5H16v6h1.5v-2h1.1l.9 2H21l-.9-2.1c.5-.3.9-.8.9-1.4zm-1.5 0h-2v-1h2v1zm-13-.5h-2V9H3v6h1.5v-2.5h2V15H8V9H6.5v2zM13 9H9.5v6H13c.8 0 1.5-.7 1.5-1.5v-3c0-.8-.7-1.5-1.5-1.5zm0 4.5h-2v-3h2v3z"
  }));
};

SvgHdrOn.displayName = "SvgHdrOn";
SvgHdrOn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6n() { _extends$6n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6n.apply(this, arguments); }
var Svg$6j = styled("svg")({
  flex: "none"
}, space, color);

var SvgHdrStrong = function SvgHdrStrong(props) {
  return createElement(Svg$6j, _extends$6n({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 6c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zM5 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
  }));
};

SvgHdrStrong.displayName = "SvgHdrStrong";
SvgHdrStrong.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6o() { _extends$6o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6o.apply(this, arguments); }
var Svg$6k = styled("svg")({
  flex: "none"
}, space, color);

var SvgHdrWeak = function SvgHdrWeak(props) {
  return createElement(Svg$6k, _extends$6o({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm12-2c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"
  }));
};

SvgHdrWeak.displayName = "SvgHdrWeak";
SvgHdrWeak.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6p() { _extends$6p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6p.apply(this, arguments); }
var Svg$6l = styled("svg")({
  flex: "none"
}, space, color);

var SvgHeadset = function SvgHeadset(props) {
  return createElement(Svg$6l, _extends$6p({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    opacity: 0.1,
    fill: "none"
  }), createElement("path", {
    d: "M12 1a9 9 0 00-9 9v7c0 1.66 1.34 3 3 3h3v-8H5v-2c0-3.87 3.13-7 7-7s7 3.13 7 7v2h-4v8h3c1.66 0 3-1.34 3-3v-7a9 9 0 00-9-9z"
  }));
};

SvgHeadset.displayName = "SvgHeadset";
SvgHeadset.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6q() { _extends$6q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6q.apply(this, arguments); }
var Svg$6m = styled("svg")({
  flex: "none"
}, space, color);

var SvgHeadsetMic = function SvgHeadsetMic(props) {
  return createElement(Svg$6m, _extends$6q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    opacity: 0.1,
    fill: "none"
  }), createElement("path", {
    d: "M12 1a9 9 0 00-9 9v7c0 1.66 1.34 3 3 3h3v-8H5v-2c0-3.87 3.13-7 7-7s7 3.13 7 7v2h-4v8h4v1h-7v2h6c1.66 0 3-1.34 3-3V10a9 9 0 00-9-9z"
  }));
};

SvgHeadsetMic.displayName = "SvgHeadsetMic";
SvgHeadsetMic.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6r() { _extends$6r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6r.apply(this, arguments); }
var Svg$6n = styled("svg")({
  flex: "none"
}, space, color);

var SvgHealing = function SvgHealing(props) {
  return createElement(Svg$6n, _extends$6r({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17.73 12.02l3.98-3.98a.996.996 0 000-1.41l-4.34-4.34a.996.996 0 00-1.41 0l-3.98 3.98L8 2.29a1.001 1.001 0 00-1.41 0L2.25 6.63a.996.996 0 000 1.41l3.98 3.98L2.25 16a.996.996 0 000 1.41l4.34 4.34c.39.39 1.02.39 1.41 0l3.98-3.98 3.98 3.98c.2.2.45.29.71.29.26 0 .51-.1.71-.29l4.34-4.34a.996.996 0 000-1.41l-3.99-3.98zM12 9c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-4.71 1.96L3.66 7.34l3.63-3.63 3.62 3.62-3.62 3.63zM10 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm2 2c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm2-4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2.66 9.34l-3.63-3.62 3.63-3.63 3.62 3.62-3.62 3.63z"
  }));
};

SvgHealing.displayName = "SvgHealing";
SvgHealing.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6s() { _extends$6s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6s.apply(this, arguments); }
var Svg$6o = styled("svg")({
  flex: "none"
}, space, color);

var SvgHearing = function SvgHearing(props) {
  return createElement(Svg$6o, _extends$6s({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 20c-.29 0-.56-.06-.76-.15-.71-.37-1.21-.88-1.71-2.38-.51-1.56-1.47-2.29-2.39-3-.79-.61-1.61-1.24-2.32-2.53C9.29 10.98 9 9.93 9 9c0-2.8 2.2-5 5-5s5 2.2 5 5h2c0-3.93-3.07-7-7-7S7 5.07 7 9c0 1.26.38 2.65 1.07 3.9.91 1.65 1.98 2.48 2.85 3.15.81.62 1.39 1.07 1.71 2.05.6 1.82 1.37 2.84 2.73 3.55A3.999 3.999 0 0021 18h-2c0 1.1-.9 2-2 2zM7.64 2.64L6.22 1.22C4.23 3.21 3 5.96 3 9s1.23 5.79 3.22 7.78l1.41-1.41C6.01 13.74 5 11.49 5 9s1.01-4.74 2.64-6.36zM11.5 9a2.5 2.5 0 005 0 2.5 2.5 0 00-5 0z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgHearing.displayName = "SvgHearing";
SvgHearing.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6t() { _extends$6t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6t.apply(this, arguments); }
var Svg$6p = styled("svg")({
  flex: "none"
}, space, color);

var SvgHelp = function SvgHelp(props) {
  return createElement(Svg$6p, _extends$6t({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z"
  }));
};

SvgHelp.displayName = "SvgHelp";
SvgHelp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6u() { _extends$6u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6u.apply(this, arguments); }
var Svg$6q = styled("svg")({
  flex: "none"
}, space, color);

var SvgHelpOutline = function SvgHelpOutline(props) {
  return createElement(Svg$6q, _extends$6u({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"
  }));
};

SvgHelpOutline.displayName = "SvgHelpOutline";
SvgHelpOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6v() { _extends$6v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6v.apply(this, arguments); }
var Svg$6r = styled("svg")({
  flex: "none"
}, space, color);

var SvgHighQuality = function SvgHighQuality(props) {
  return createElement(Svg$6r, _extends$6v({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 4H5a2 2 0 00-2 2v12a2 2 0 002 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 11H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm7-1c0 .55-.45 1-1 1h-.75v1.5h-1.5V15H14c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v4zm-3.5-.5h2v-3h-2v3z"
  }));
};

SvgHighQuality.displayName = "SvgHighQuality";
SvgHighQuality.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6w() { _extends$6w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6w.apply(this, arguments); }
var Svg$6s = styled("svg")({
  flex: "none"
}, space, color);

var SvgHighlight = function SvgHighlight(props) {
  return createElement(Svg$6s, _extends$6w({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 14l3 3v5h6v-5l3-3V9H6zm5-12h2v3h-2zM3.5 5.875L4.914 4.46l2.12 2.122L5.62 7.997zm13.46.71l2.123-2.12 1.414 1.414L18.375 8z"
  }));
};

SvgHighlight.displayName = "SvgHighlight";
SvgHighlight.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6x() { _extends$6x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6x.apply(this, arguments); }
var Svg$6t = styled("svg")({
  flex: "none"
}, space, color);

var SvgHighlightOff = function SvgHighlightOff(props) {
  return createElement(Svg$6t, _extends$6x({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
  }));
};

SvgHighlightOff.displayName = "SvgHighlightOff";
SvgHighlightOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6y() { _extends$6y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6y.apply(this, arguments); }
var Svg$6u = styled("svg")({
  flex: "none"
}, space, color);

var SvgHistory = function SvgHistory(props) {
  return createElement(Svg$6u, _extends$6y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M13 3a9 9 0 00-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42A8.954 8.954 0 0013 21a9 9 0 000-18zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z"
  }));
};

SvgHistory.displayName = "SvgHistory";
SvgHistory.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6z() { _extends$6z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6z.apply(this, arguments); }
var Svg$6v = styled("svg")({
  flex: "none"
}, space, color);

var SvgHome = function SvgHome(props) {
  return createElement(Svg$6v, _extends$6z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgHome.displayName = "SvgHome";
SvgHome.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6A() { _extends$6A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6A.apply(this, arguments); }
var Svg$6w = styled("svg")({
  flex: "none"
}, space, color);

var SvgHotTub = function SvgHotTub(props) {
  return createElement(Svg$6w, _extends$6A({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 7,
    cy: 6,
    r: 2
  }), createElement("path", {
    d: "M11.15 12c-.31-.22-.59-.46-.82-.72l-1.4-1.55c-.19-.21-.43-.38-.69-.5-.29-.14-.62-.23-.96-.23h-.03C6.01 9 5 10.01 5 11.25V12H2v8c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-8H11.15zM7 20H5v-6h2v6zm4 0H9v-6h2v6zm4 0h-2v-6h2v6zm4 0h-2v-6h2v6zm-.35-14.14l-.07-.07c-.57-.62-.82-1.41-.67-2.2L18 3h-1.89l-.06.43c-.2 1.36.27 2.71 1.3 3.72l.07.06c.57.62.82 1.41.67 2.2l-.11.59h1.91l.06-.43c.21-1.36-.27-2.71-1.3-3.71zm-4 0l-.07-.07c-.57-.62-.82-1.41-.67-2.2L14 3h-1.89l-.06.43c-.2 1.36.27 2.71 1.3 3.72l.07.06c.57.62.82 1.41.67 2.2l-.11.59h1.91l.06-.43c.21-1.36-.27-2.71-1.3-3.71z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgHotTub.displayName = "SvgHotTub";
SvgHotTub.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6B() { _extends$6B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6B.apply(this, arguments); }
var Svg$6x = styled("svg")({
  flex: "none"
}, space, color);

var SvgHotel = function SvgHotel(props) {
  return createElement(Svg$6x, _extends$6B({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7 13c1.66 0 3-1.34 3-3S8.66 7 7 7s-3 1.34-3 3 1.34 3 3 3zm12-6h-8v7H3V5H1v15h2v-3h18v3h2v-9c0-2.21-1.79-4-4-4z"
  }));
};

SvgHotel.displayName = "SvgHotel";
SvgHotel.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6C() { _extends$6C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6C.apply(this, arguments); }
var Svg$6y = styled("svg")({
  flex: "none"
}, space, color);

var SvgHourglassEmpty = function SvgHourglassEmpty(props) {
  return createElement(Svg$6y, _extends$6C({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6zm10 14.5V20H8v-3.5l4-4 4 4zm-4-5l-4-4V4h8v3.5l-4 4z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgHourglassEmpty.displayName = "SvgHourglassEmpty";
SvgHourglassEmpty.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6D() { _extends$6D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6D.apply(this, arguments); }
var Svg$6z = styled("svg")({
  flex: "none"
}, space, color);

var SvgHourglassFull = function SvgHourglassFull(props) {
  return createElement(Svg$6z, _extends$6D({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 2v6h.01L6 8.01 10 12l-4 4 .01.01H6V22h12v-5.99h-.01L18 16l-4-4 4-3.99-.01-.01H18V2H6z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgHourglassFull.displayName = "SvgHourglassFull";
SvgHourglassFull.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6E() { _extends$6E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6E.apply(this, arguments); }
var Svg$6A = styled("svg")({
  flex: "none"
}, space, color);

var SvgHttp = function SvgHttp(props) {
  return createElement(Svg$6A, _extends$6E({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4.5 11h-2V9H1v6h1.5v-2.5h2V15H6V9H4.5v2zm2.5-.5h1.5V15H10v-4.5h1.5V9H7v1.5zm5.5 0H14V15h1.5v-4.5H17V9h-4.5v1.5zm9-1.5H18v6h1.5v-2h2c.8 0 1.5-.7 1.5-1.5v-1c0-.8-.7-1.5-1.5-1.5zm0 2.5h-2v-1h2v1z"
  }), createElement("path", {
    fill: "none",
    d: "M24 24H0V0h24v24z"
  }));
};

SvgHttp.displayName = "SvgHttp";
SvgHttp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6F() { _extends$6F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6F.apply(this, arguments); }
var Svg$6B = styled("svg")({
  flex: "none"
}, space, color);

var SvgHttps = function SvgHttps(props) {
  return createElement(Svg$6B, _extends$6F({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"
  }));
};

SvgHttps.displayName = "SvgHttps";
SvgHttps.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6G() { _extends$6G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6G.apply(this, arguments); }
var Svg$6C = styled("svg")({
  flex: "none"
}, space, color);

var SvgImage = function SvgImage(props) {
  return createElement(Svg$6C, _extends$6G({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"
  }));
};

SvgImage.displayName = "SvgImage";
SvgImage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6H() { _extends$6H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6H.apply(this, arguments); }
var Svg$6D = styled("svg")({
  flex: "none"
}, space, color);

var SvgImageAspectRatio = function SvgImageAspectRatio(props) {
  return createElement(Svg$6D, _extends$6H({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16 10h-2v2h2v-2zm0 4h-2v2h2v-2zm-8-4H6v2h2v-2zm4 0h-2v2h2v-2zm8-6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V6h16v12z"
  }));
};

SvgImageAspectRatio.displayName = "SvgImageAspectRatio";
SvgImageAspectRatio.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6I() { _extends$6I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6I.apply(this, arguments); }
var Svg$6E = styled("svg")({
  flex: "none"
}, space, color);

var SvgImportContacts = function SvgImportContacts(props) {
  return createElement(Svg$6E, _extends$6I({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 5c-1.11-.35-2.33-.5-3.5-.5-1.95 0-4.05.4-5.5 1.5-1.45-1.1-3.55-1.5-5.5-1.5S2.45 4.9 1 6v14.65c0 .25.25.5.5.5.1 0 .15-.05.25-.05C3.1 20.45 5.05 20 6.5 20c1.95 0 4.05.4 5.5 1.5 1.35-.85 3.8-1.5 5.5-1.5 1.65 0 3.35.3 4.75 1.05.1.05.15.05.25.05.25 0 .5-.25.5-.5V6c-.6-.45-1.25-.75-2-1zm0 13.5c-1.1-.35-2.3-.5-3.5-.5-1.7 0-4.15.65-5.5 1.5V8c1.35-.85 3.8-1.5 5.5-1.5 1.2 0 2.4.15 3.5.5v11.5z"
  }));
};

SvgImportContacts.displayName = "SvgImportContacts";
SvgImportContacts.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6J() { _extends$6J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6J.apply(this, arguments); }
var Svg$6F = styled("svg")({
  flex: "none"
}, space, color);

var SvgImportExport = function SvgImportExport(props) {
  return createElement(Svg$6F, _extends$6J({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 3L5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z"
  }));
};

SvgImportExport.displayName = "SvgImportExport";
SvgImportExport.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6K() { _extends$6K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6K.apply(this, arguments); }
var Svg$6G = styled("svg")({
  flex: "none"
}, space, color);

var SvgImportantDevices = function SvgImportantDevices(props) {
  return createElement(Svg$6G, _extends$6K({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M23 11.01L18 11c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-9c0-.55-.45-.99-1-.99zM23 20h-5v-7h5v7zM20 2H2C.89 2 0 2.89 0 4v12a2 2 0 002 2h7v2H7v2h8v-2h-2v-2h2v-2H2V4h18v5h2V4a2 2 0 00-2-2zm-8.03 7L11 6l-.97 3H7l2.47 1.76-.94 2.91 2.47-1.8 2.47 1.8-.94-2.91L15 9h-3.03z"
  }));
};

SvgImportantDevices.displayName = "SvgImportantDevices";
SvgImportantDevices.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6L() { _extends$6L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6L.apply(this, arguments); }
var Svg$6H = styled("svg")({
  flex: "none"
}, space, color);

var SvgInbox = function SvgInbox(props) {
  return createElement(Svg$6H, _extends$6L({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5a2 2 0 00-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgInbox.displayName = "SvgInbox";
SvgInbox.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6M() { _extends$6M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6M.apply(this, arguments); }
var Svg$6I = styled("svg")({
  flex: "none"
}, space, color);

var SvgIndeterminateCheckBox = function SvgIndeterminateCheckBox(props) {
  return createElement(Svg$6I, _extends$6M({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "indeterminateCheckBox_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "indeterminateCheckBox_svg__b"
  }, createElement("use", {
    xlinkHref: "#indeterminateCheckBox_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#indeterminateCheckBox_svg__b)",
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
  }));
};

SvgIndeterminateCheckBox.displayName = "SvgIndeterminateCheckBox";
SvgIndeterminateCheckBox.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6N() { _extends$6N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6N.apply(this, arguments); }
var Svg$6J = styled("svg")({
  flex: "none"
}, space, color);

var SvgInfo = function SvgInfo(props) {
  return createElement(Svg$6J, _extends$6N({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
  }));
};

SvgInfo.displayName = "SvgInfo";
SvgInfo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6O() { _extends$6O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6O.apply(this, arguments); }
var Svg$6K = styled("svg")({
  flex: "none"
}, space, color);

var SvgInfoOutline = function SvgInfoOutline(props) {
  return createElement(Svg$6K, _extends$6O({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z"
  }));
};

SvgInfoOutline.displayName = "SvgInfoOutline";
SvgInfoOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6P() { _extends$6P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6P.apply(this, arguments); }
var Svg$6L = styled("svg")({
  flex: "none"
}, space, color);

var SvgInput = function SvgInput(props) {
  return createElement(Svg$6L, _extends$6P({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14a2 2 0 00-2-2zM11 16l4-4-4-4v3H1v2h10v3z"
  }));
};

SvgInput.displayName = "SvgInput";
SvgInput.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6Q() { _extends$6Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6Q.apply(this, arguments); }
var Svg$6M = styled("svg")({
  flex: "none"
}, space, color);

var SvgInsertChart = function SvgInsertChart(props) {
  return createElement(Svg$6M, _extends$6Q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"
  }));
};

SvgInsertChart.displayName = "SvgInsertChart";
SvgInsertChart.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6R() { _extends$6R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6R.apply(this, arguments); }
var Svg$6N = styled("svg")({
  flex: "none"
}, space, color);

var SvgInsertComment = function SvgInsertComment(props) {
  return createElement(Svg$6N, _extends$6R({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"
  }));
};

SvgInsertComment.displayName = "SvgInsertComment";
SvgInsertComment.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6S() { _extends$6S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6S.apply(this, arguments); }
var Svg$6O = styled("svg")({
  flex: "none"
}, space, color);

var SvgInsertDriveFile = function SvgInsertDriveFile(props) {
  return createElement(Svg$6O, _extends$6S({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z"
  }));
};

SvgInsertDriveFile.displayName = "SvgInsertDriveFile";
SvgInsertDriveFile.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6T() { _extends$6T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6T.apply(this, arguments); }
var Svg$6P = styled("svg")({
  flex: "none"
}, space, color);

var SvgInsertEmoticon = function SvgInsertEmoticon(props) {
  return createElement(Svg$6P, _extends$6T({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"
  }));
};

SvgInsertEmoticon.displayName = "SvgInsertEmoticon";
SvgInsertEmoticon.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6U() { _extends$6U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6U.apply(this, arguments); }
var Svg$6Q = styled("svg")({
  flex: "none"
}, space, color);

var SvgInsertInvitation = function SvgInsertInvitation(props) {
  return createElement(Svg$6Q, _extends$6U({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z"
  }));
};

SvgInsertInvitation.displayName = "SvgInsertInvitation";
SvgInsertInvitation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6V() { _extends$6V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6V.apply(this, arguments); }
var Svg$6R = styled("svg")({
  flex: "none"
}, space, color);

var SvgInsertLink = function SvgInsertLink(props) {
  return createElement(Svg$6R, _extends$6V({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"
  }));
};

SvgInsertLink.displayName = "SvgInsertLink";
SvgInsertLink.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6W() { _extends$6W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6W.apply(this, arguments); }
var Svg$6S = styled("svg")({
  flex: "none"
}, space, color);

var SvgInsertPhoto = function SvgInsertPhoto(props) {
  return createElement(Svg$6S, _extends$6W({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"
  }));
};

SvgInsertPhoto.displayName = "SvgInsertPhoto";
SvgInsertPhoto.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6X() { _extends$6X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6X.apply(this, arguments); }
var Svg$6T = styled("svg")({
  flex: "none"
}, space, color);

var SvgInvertColors = function SvgInvertColors(props) {
  return createElement(Svg$6T, _extends$6X({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M24 0H0v24h24z",
    fill: "none"
  }), createElement("path", {
    d: "M17.66 7.93L12 2.27 6.34 7.93c-3.12 3.12-3.12 8.19 0 11.31A7.98 7.98 0 0012 21.58c2.05 0 4.1-.78 5.66-2.34 3.12-3.12 3.12-8.19 0-11.31zM12 19.59c-1.6 0-3.11-.62-4.24-1.76C6.62 16.69 6 15.19 6 13.59s.62-3.11 1.76-4.24L12 5.1v14.49z"
  }));
};

SvgInvertColors.displayName = "SvgInvertColors";
SvgInvertColors.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6Y() { _extends$6Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6Y.apply(this, arguments); }
var Svg$6U = styled("svg")({
  flex: "none"
}, space, color);

var SvgInvertColorsOff = function SvgInvertColorsOff(props) {
  return createElement(Svg$6U, _extends$6Y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20.65 20.87l-2.35-2.35-6.3-6.29-3.56-3.57-1.42-1.41L4.27 4.5 3 5.77l2.78 2.78a8.005 8.005 0 00.56 10.69A7.98 7.98 0 0012 21.58c1.79 0 3.57-.59 5.03-1.78l2.7 2.7L21 21.23l-.35-.36zM12 19.59c-1.6 0-3.11-.62-4.24-1.76A5.945 5.945 0 016 13.59c0-1.32.43-2.57 1.21-3.6L12 14.77v4.82zM12 5.1v4.58l7.25 7.26c1.37-2.96.84-6.57-1.6-9.01L12 2.27l-3.7 3.7 1.41 1.41L12 5.1z"
  }));
};

SvgInvertColorsOff.displayName = "SvgInvertColorsOff";
SvgInvertColorsOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6Z() { _extends$6Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6Z.apply(this, arguments); }
var Svg$6V = styled("svg")({
  flex: "none"
}, space, color);

var SvgIso = function SvgIso(props) {
  return createElement(Svg$6V, _extends$6Z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5.5 7.5h2v-2H9v2h2V9H9v2H7.5V9h-2V7.5zM19 19H5L19 5v14zm-2-2v-1.5h-5V17h5z"
  }));
};

SvgIso.displayName = "SvgIso";
SvgIso.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6_() { _extends$6_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6_.apply(this, arguments); }
var Svg$6W = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboard = function SvgKeyboard(props) {
  return createElement(Svg$6W, _extends$6_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 5H4c-1.1 0-1.99.9-1.99 2L2 17c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-9 3h2v2h-2V8zm0 3h2v2h-2v-2zM8 8h2v2H8V8zm0 3h2v2H8v-2zm-1 2H5v-2h2v2zm0-3H5V8h2v2zm9 7H8v-2h8v2zm0-4h-2v-2h2v2zm0-3h-2V8h2v2zm3 3h-2v-2h2v2zm0-3h-2V8h2v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0zm0 0h24v24H0z",
    fill: "none"
  }));
};

SvgKeyboard.displayName = "SvgKeyboard";
SvgKeyboard.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$6$() { _extends$6$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6$.apply(this, arguments); }
var Svg$6X = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboardArrowDown = function SvgKeyboardArrowDown(props) {
  return createElement(Svg$6X, _extends$6$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"
  }), createElement("path", {
    d: "M0-.75h24v24H0z",
    fill: "none"
  }));
};

SvgKeyboardArrowDown.displayName = "SvgKeyboardArrowDown";
SvgKeyboardArrowDown.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$70() { _extends$70 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$70.apply(this, arguments); }
var Svg$6Y = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboardArrowLeft = function SvgKeyboardArrowLeft(props) {
  return createElement(Svg$6Y, _extends$70({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
  }), createElement("path", {
    d: "M0-.5h24v24H0z",
    fill: "none"
  }));
};

SvgKeyboardArrowLeft.displayName = "SvgKeyboardArrowLeft";
SvgKeyboardArrowLeft.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$71() { _extends$71 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$71.apply(this, arguments); }
var Svg$6Z = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboardArrowRight = function SvgKeyboardArrowRight(props) {
  return createElement(Svg$6Z, _extends$71({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
  }), createElement("path", {
    d: "M0-.25h24v24H0z",
    fill: "none"
  }));
};

SvgKeyboardArrowRight.displayName = "SvgKeyboardArrowRight";
SvgKeyboardArrowRight.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$72() { _extends$72 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$72.apply(this, arguments); }
var Svg$6_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboardArrowUp = function SvgKeyboardArrowUp(props) {
  return createElement(Svg$6_, _extends$72({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgKeyboardArrowUp.displayName = "SvgKeyboardArrowUp";
SvgKeyboardArrowUp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$73() { _extends$73 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$73.apply(this, arguments); }
var Svg$6$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboardBackspace = function SvgKeyboardBackspace(props) {
  return createElement(Svg$6$, _extends$73({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 11H6.83l3.58-3.59L9 6l-6 6 6 6 1.41-1.41L6.83 13H21z"
  }));
};

SvgKeyboardBackspace.displayName = "SvgKeyboardBackspace";
SvgKeyboardBackspace.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$74() { _extends$74 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$74.apply(this, arguments); }
var Svg$70 = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboardCapslock = function SvgKeyboardCapslock(props) {
  return createElement(Svg$70, _extends$74({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 8.41L16.59 13 18 11.59l-6-6-6 6L7.41 13 12 8.41zM6 18h12v-2H6v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgKeyboardCapslock.displayName = "SvgKeyboardCapslock";
SvgKeyboardCapslock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$75() { _extends$75 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$75.apply(this, arguments); }
var Svg$71 = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboardHide = function SvgKeyboardHide(props) {
  return createElement(Svg$71, _extends$75({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 3H4c-1.1 0-1.99.9-1.99 2L2 15c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 3h2v2h-2V6zm0 3h2v2h-2V9zM8 6h2v2H8V6zm0 3h2v2H8V9zm-1 2H5V9h2v2zm0-3H5V6h2v2zm9 7H8v-2h8v2zm0-4h-2V9h2v2zm0-3h-2V6h2v2zm3 3h-2V9h2v2zm0-3h-2V6h2v2zm-7 15l4-4H8l4 4z"
  }));
};

SvgKeyboardHide.displayName = "SvgKeyboardHide";
SvgKeyboardHide.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$76() { _extends$76 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$76.apply(this, arguments); }
var Svg$72 = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboardReturn = function SvgKeyboardReturn(props) {
  return createElement(Svg$72, _extends$76({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"
  }));
};

SvgKeyboardReturn.displayName = "SvgKeyboardReturn";
SvgKeyboardReturn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$77() { _extends$77 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$77.apply(this, arguments); }
var Svg$73 = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboardTab = function SvgKeyboardTab(props) {
  return createElement(Svg$73, _extends$77({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M11.59 7.41L15.17 11H1v2h14.17l-3.59 3.59L13 18l6-6-6-6-1.41 1.41zM20 6v12h2V6h-2z"
  }));
};

SvgKeyboardTab.displayName = "SvgKeyboardTab";
SvgKeyboardTab.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$78() { _extends$78 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$78.apply(this, arguments); }
var Svg$74 = styled("svg")({
  flex: "none"
}, space, color);

var SvgKeyboardVoice = function SvgKeyboardVoice(props) {
  return createElement(Svg$74, _extends$78({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 15c1.66 0 2.99-1.34 2.99-3L15 6c0-1.66-1.34-3-3-3S9 4.34 9 6v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 15 6.7 12H5c0 3.42 2.72 6.23 6 6.72V22h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgKeyboardVoice.displayName = "SvgKeyboardVoice";
SvgKeyboardVoice.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$79() { _extends$79 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$79.apply(this, arguments); }
var Svg$75 = styled("svg")({
  flex: "none"
}, space, color);

var SvgKitchen = function SvgKitchen(props) {
  return createElement(Svg$75, _extends$79({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M18 2.01L6 2a2 2 0 00-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.11-.9-1.99-2-1.99zM18 20H6v-9.02h12V20zm0-11H6V4h12v5zM8 5h2v3H8zm0 7h2v5H8z"
  }));
};

SvgKitchen.displayName = "SvgKitchen";
SvgKitchen.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7a() { _extends$7a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7a.apply(this, arguments); }
var Svg$76 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLabel = function SvgLabel(props) {
  return createElement(Svg$76, _extends$7a({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16z"
  }));
};

SvgLabel.displayName = "SvgLabel";
SvgLabel.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7b() { _extends$7b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7b.apply(this, arguments); }
var Svg$77 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLabelOutline = function SvgLabelOutline(props) {
  return createElement(Svg$77, _extends$7b({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17.63 5.84C17.27 5.33 16.67 5 16 5L5 5.01C3.9 5.01 3 5.9 3 7v10c0 1.1.9 1.99 2 1.99L16 19c.67 0 1.27-.33 1.63-.84L22 12l-4.37-6.16zM16 17H5V7h11l3.55 5L16 17z"
  }));
};

SvgLabelOutline.displayName = "SvgLabelOutline";
SvgLabelOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7c() { _extends$7c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7c.apply(this, arguments); }
var Svg$78 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLandscape = function SvgLandscape(props) {
  return createElement(Svg$78, _extends$7c({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z"
  }));
};

SvgLandscape.displayName = "SvgLandscape";
SvgLandscape.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7d() { _extends$7d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7d.apply(this, arguments); }
var Svg$79 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLanguage = function SvgLanguage(props) {
  return createElement(Svg$79, _extends$7d({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95a15.65 15.65 0 00-1.38-3.56A8.03 8.03 0 0118.92 8zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56A7.987 7.987 0 015.08 16zm2.95-8H5.08a7.987 7.987 0 014.33-3.56A15.65 15.65 0 008.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95a8.03 8.03 0 01-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"
  }));
};

SvgLanguage.displayName = "SvgLanguage";
SvgLanguage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7e() { _extends$7e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7e.apply(this, arguments); }
var Svg$7a = styled("svg")({
  flex: "none"
}, space, color);

var SvgLaptop = function SvgLaptop(props) {
  return createElement(Svg$7a, _extends$7e({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "laptop_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "laptop_svg__b"
  }, createElement("use", {
    xlinkHref: "#laptop_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#laptop_svg__b)",
    d: "M20 18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z"
  }));
};

SvgLaptop.displayName = "SvgLaptop";
SvgLaptop.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7f() { _extends$7f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7f.apply(this, arguments); }
var Svg$7b = styled("svg")({
  flex: "none"
}, space, color);

var SvgLaptopChromebook = function SvgLaptopChromebook(props) {
  return createElement(Svg$7b, _extends$7f({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M22 18V3H2v15H0v2h24v-2h-2zm-8 0h-4v-1h4v1zm6-3H4V5h16v10z"
  }));
};

SvgLaptopChromebook.displayName = "SvgLaptopChromebook";
SvgLaptopChromebook.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7g() { _extends$7g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7g.apply(this, arguments); }
var Svg$7c = styled("svg")({
  flex: "none"
}, space, color);

var SvgLaptopMac = function SvgLaptopMac(props) {
  return createElement(Svg$7c, _extends$7g({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 18c1.1 0 1.99-.9 1.99-2L22 5c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2H0c0 1.1.9 2 2 2h20c1.1 0 2-.9 2-2h-4zM4 5h16v11H4V5zm8 14c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
  }));
};

SvgLaptopMac.displayName = "SvgLaptopMac";
SvgLaptopMac.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7h() { _extends$7h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7h.apply(this, arguments); }
var Svg$7d = styled("svg")({
  flex: "none"
}, space, color);

var SvgLaptopWindows = function SvgLaptopWindows(props) {
  return createElement(Svg$7d, _extends$7h({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 18v-1c1.1 0 1.99-.9 1.99-2L22 5c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2v1H0v2h24v-2h-4zM4 5h16v10H4V5z"
  }));
};

SvgLaptopWindows.displayName = "SvgLaptopWindows";
SvgLaptopWindows.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7i() { _extends$7i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7i.apply(this, arguments); }
var Svg$7e = styled("svg")({
  flex: "none"
}, space, color);

var SvgLastPage = function SvgLastPage(props) {
  return createElement(Svg$7e, _extends$7i({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z"
  }));
};

SvgLastPage.displayName = "SvgLastPage";
SvgLastPage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7j() { _extends$7j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7j.apply(this, arguments); }
var Svg$7f = styled("svg")({
  flex: "none"
}, space, color);

var SvgLaunch = function SvgLaunch(props) {
  return createElement(Svg$7f, _extends$7j({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 19H5V5h7V3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"
  }));
};

SvgLaunch.displayName = "SvgLaunch";
SvgLaunch.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7k() { _extends$7k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7k.apply(this, arguments); }
var Svg$7g = styled("svg")({
  flex: "none"
}, space, color);

var SvgLayers = function SvgLayers(props) {
  return createElement(Svg$7g, _extends$7k({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M11.99 18.54l-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27-7.38 5.74zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16z"
  }));
};

SvgLayers.displayName = "SvgLayers";
SvgLayers.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7l() { _extends$7l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7l.apply(this, arguments); }
var Svg$7h = styled("svg")({
  flex: "none"
}, space, color);

var SvgLayersClear = function SvgLayersClear(props) {
  return createElement(Svg$7h, _extends$7l({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.81 14.99l1.19-.92-1.43-1.43-1.19.92 1.43 1.43zm-.45-4.72L21 9l-9-7-2.91 2.27 7.87 7.88 2.4-1.88zM3.27 1L2 2.27l4.22 4.22L3 9l1.63 1.27L12 16l2.1-1.63 1.43 1.43L12 18.54l-7.37-5.73L3 14.07l9 7 4.95-3.85L20.73 21 22 19.73 3.27 1z"
  }));
};

SvgLayersClear.displayName = "SvgLayersClear";
SvgLayersClear.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7m() { _extends$7m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7m.apply(this, arguments); }
var Svg$7i = styled("svg")({
  flex: "none"
}, space, color);

var SvgLeakAdd = function SvgLeakAdd(props) {
  return createElement(Svg$7i, _extends$7m({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 3H3v3c1.66 0 3-1.34 3-3zm8 0h-2a9 9 0 01-9 9v2c6.08 0 11-4.93 11-11zm-4 0H8c0 2.76-2.24 5-5 5v2c3.87 0 7-3.13 7-7zm0 18h2a9 9 0 019-9v-2c-6.07 0-11 4.93-11 11zm8 0h3v-3c-1.66 0-3 1.34-3 3zm-4 0h2c0-2.76 2.24-5 5-5v-2c-3.87 0-7 3.13-7 7z"
  }));
};

SvgLeakAdd.displayName = "SvgLeakAdd";
SvgLeakAdd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7n() { _extends$7n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7n.apply(this, arguments); }
var Svg$7j = styled("svg")({
  flex: "none"
}, space, color);

var SvgLeakRemove = function SvgLeakRemove(props) {
  return createElement(Svg$7j, _extends$7n({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 3H8c0 .37-.04.72-.12 1.06l1.59 1.59C9.81 4.84 10 3.94 10 3zM3 4.27l2.84 2.84C5.03 7.67 4.06 8 3 8v2c1.61 0 3.09-.55 4.27-1.46L8.7 9.97A8.99 8.99 0 013 12v2c2.71 0 5.19-.99 7.11-2.62l2.5 2.5A11.044 11.044 0 0010 21h2c0-2.16.76-4.14 2.03-5.69l1.43 1.43A6.922 6.922 0 0014 21h2c0-1.06.33-2.03.89-2.84L19.73 21 21 19.73 4.27 3 3 4.27zM14 3h-2c0 1.5-.37 2.91-1.02 4.16l1.46 1.46C13.42 6.98 14 5.06 14 3zm5.94 13.12c.34-.08.69-.12 1.06-.12v-2c-.94 0-1.84.19-2.66.52l1.6 1.6zm-4.56-4.56l1.46 1.46A8.98 8.98 0 0121 12v-2c-2.06 0-3.98.58-5.62 1.56z"
  }));
};

SvgLeakRemove.displayName = "SvgLeakRemove";
SvgLeakRemove.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7o() { _extends$7o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7o.apply(this, arguments); }
var Svg$7k = styled("svg")({
  flex: "none"
}, space, color);

var SvgLens = function SvgLens(props) {
  return createElement(Svg$7k, _extends$7o({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2z"
  }));
};

SvgLens.displayName = "SvgLens";
SvgLens.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7p() { _extends$7p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7p.apply(this, arguments); }
var Svg$7l = styled("svg")({
  flex: "none"
}, space, color);

var SvgLibraryAdd = function SvgLibraryAdd(props) {
  return createElement(Svg$7l, _extends$7p({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z"
  }));
};

SvgLibraryAdd.displayName = "SvgLibraryAdd";
SvgLibraryAdd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7q() { _extends$7q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7q.apply(this, arguments); }
var Svg$7m = styled("svg")({
  flex: "none"
}, space, color);

var SvgLibraryBooks = function SvgLibraryBooks(props) {
  return createElement(Svg$7m, _extends$7q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9H9V9h10v2zm-4 4H9v-2h6v2zm4-8H9V5h10v2z"
  }));
};

SvgLibraryBooks.displayName = "SvgLibraryBooks";
SvgLibraryBooks.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7r() { _extends$7r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7r.apply(this, arguments); }
var Svg$7n = styled("svg")({
  flex: "none"
}, space, color);

var SvgLibraryMusic = function SvgLibraryMusic(props) {
  return createElement(Svg$7n, _extends$7r({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 5h-3v5.5a2.5 2.5 0 01-5 0 2.5 2.5 0 012.5-2.5c.57 0 1.08.19 1.5.51V5h4v2zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6z"
  }));
};

SvgLibraryMusic.displayName = "SvgLibraryMusic";
SvgLibraryMusic.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7s() { _extends$7s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7s.apply(this, arguments); }
var Svg$7o = styled("svg")({
  flex: "none"
}, space, color);

var SvgLightbulbOutline = function SvgLightbulbOutline(props) {
  return createElement(Svg$7o, _extends$7s({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "lightbulbOutline_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "lightbulbOutline_svg__b"
  }, createElement("use", {
    xlinkHref: "#lightbulbOutline_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6A4.997 4.997 0 017 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z",
    clipPath: "url(#lightbulbOutline_svg__b)"
  }));
};

SvgLightbulbOutline.displayName = "SvgLightbulbOutline";
SvgLightbulbOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7t() { _extends$7t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7t.apply(this, arguments); }
var Svg$7p = styled("svg")({
  flex: "none"
}, space, color);

var SvgLineStyle = function SvgLineStyle(props) {
  return createElement(Svg$7p, _extends$7t({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "lineStyle_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "lineStyle_svg__b"
  }, createElement("use", {
    xlinkHref: "#lineStyle_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#lineStyle_svg__b)",
    d: "M3 16h5v-2H3v2zm6.5 0h5v-2h-5v2zm6.5 0h5v-2h-5v2zM3 20h2v-2H3v2zm4 0h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM3 12h8v-2H3v2zm10 0h8v-2h-8v2zM3 4v4h18V4H3z"
  }));
};

SvgLineStyle.displayName = "SvgLineStyle";
SvgLineStyle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7u() { _extends$7u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7u.apply(this, arguments); }
var Svg$7q = styled("svg")({
  flex: "none"
}, space, color);

var SvgLineWeight = function SvgLineWeight(props) {
  return createElement(Svg$7q, _extends$7u({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "lineWeight_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "lineWeight_svg__b"
  }, createElement("use", {
    xlinkHref: "#lineWeight_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#lineWeight_svg__b)",
    d: "M3 17h18v-2H3v2zm0 3h18v-1H3v1zm0-7h18v-3H3v3zm0-9v4h18V4H3z"
  }));
};

SvgLineWeight.displayName = "SvgLineWeight";
SvgLineWeight.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7v() { _extends$7v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7v.apply(this, arguments); }
var Svg$7r = styled("svg")({
  flex: "none"
}, space, color);

var SvgLinearScale = function SvgLinearScale(props) {
  return createElement(Svg$7r, _extends$7v({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.5 9.5c-1.03 0-1.9.62-2.29 1.5h-2.92c-.39-.88-1.26-1.5-2.29-1.5s-1.9.62-2.29 1.5H6.79c-.39-.88-1.26-1.5-2.29-1.5a2.5 2.5 0 000 5c1.03 0 1.9-.62 2.29-1.5h2.92c.39.88 1.26 1.5 2.29 1.5s1.9-.62 2.29-1.5h2.92c.39.88 1.26 1.5 2.29 1.5a2.5 2.5 0 000-5z"
  }));
};

SvgLinearScale.displayName = "SvgLinearScale";
SvgLinearScale.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7w() { _extends$7w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7w.apply(this, arguments); }
var Svg$7s = styled("svg")({
  flex: "none"
}, space, color);

var SvgLink = function SvgLink(props) {
  return createElement(Svg$7s, _extends$7w({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"
  }));
};

SvgLink.displayName = "SvgLink";
SvgLink.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7x() { _extends$7x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7x.apply(this, arguments); }
var Svg$7t = styled("svg")({
  flex: "none"
}, space, color);

var SvgLinkedCamera = function SvgLinkedCamera(props) {
  return createElement(Svg$7t, _extends$7x({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 12,
    cy: 14,
    r: 3.2
  }), createElement("path", {
    d: "M16 3.33c2.58 0 4.67 2.09 4.67 4.67H22c0-3.31-2.69-6-6-6v1.33M16 6c1.11 0 2 .89 2 2h1.33c0-1.84-1.49-3.33-3.33-3.33V6"
  }), createElement("path", {
    d: "M17 9c0-1.11-.89-2-2-2V4H9L7.17 6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V9h-5zm-5 10c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
  }));
};

SvgLinkedCamera.displayName = "SvgLinkedCamera";
SvgLinkedCamera.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7y() { _extends$7y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7y.apply(this, arguments); }
var Svg$7u = styled("svg")({
  flex: "none"
}, space, color);

var SvgList = function SvgList(props) {
  return createElement(Svg$7u, _extends$7y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgList.displayName = "SvgList";
SvgList.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7z() { _extends$7z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7z.apply(this, arguments); }
var Svg$7v = styled("svg")({
  flex: "none"
}, space, color);

var SvgLiveHelp = function SvgLiveHelp(props) {
  return createElement(Svg$7v, _extends$7z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 2H5a2 2 0 00-2 2v14a2 2 0 002 2h4l3 3 3-3h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 16h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 11.9 13 12.5 13 14h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z"
  }));
};

SvgLiveHelp.displayName = "SvgLiveHelp";
SvgLiveHelp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7A() { _extends$7A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7A.apply(this, arguments); }
var Svg$7w = styled("svg")({
  flex: "none"
}, space, color);

var SvgLiveTv = function SvgLiveTv(props) {
  return createElement(Svg$7w, _extends$7A({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 6h-7.59l3.29-3.29L16 2l-4 4-4-4-.71.71L10.59 6H3a2 2 0 00-2 2v12c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8a2 2 0 00-2-2zm0 14H3V8h18v12zM9 10v8l7-4z"
  }));
};

SvgLiveTv.displayName = "SvgLiveTv";
SvgLiveTv.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7B() { _extends$7B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7B.apply(this, arguments); }
var Svg$7x = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalActivity = function SvgLocalActivity(props) {
  return createElement(Svg$7x, _extends$7B({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 12c0-1.1.9-2 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-1.99.9-1.99 2v4c1.1 0 1.99.9 1.99 2s-.89 2-2 2v4c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-4c-1.1 0-2-.9-2-2zm-4.42 4.8L12 14.5l-3.58 2.3 1.08-4.12-3.29-2.69 4.24-.25L12 5.8l1.54 3.95 4.24.25-3.29 2.69 1.09 4.11z"
  }));
};

SvgLocalActivity.displayName = "SvgLocalActivity";
SvgLocalActivity.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7C() { _extends$7C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7C.apply(this, arguments); }
var Svg$7y = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalAirport = function SvgLocalAirport(props) {
  return createElement(Svg$7y, _extends$7C({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 16v-2l-8-5V3.5c0-.83-.67-1.5-1.5-1.5S10 2.67 10 3.5V9l-8 5v2l8-2.5V19l-2 1.5V22l3.5-1 3.5 1v-1.5L13 19v-5.5l8 2.5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgLocalAirport.displayName = "SvgLocalAirport";
SvgLocalAirport.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7D() { _extends$7D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7D.apply(this, arguments); }
var Svg$7z = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalAtm = function SvgLocalAtm(props) {
  return createElement(Svg$7z, _extends$7D({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M11 17h2v-1h1c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1h-3v-1h4V8h-2V7h-2v1h-1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h3v1H9v2h2v1zm9-13H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4V6h16v12z"
  }));
};

SvgLocalAtm.displayName = "SvgLocalAtm";
SvgLocalAtm.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7E() { _extends$7E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7E.apply(this, arguments); }
var Svg$7A = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalBar = function SvgLocalBar(props) {
  return createElement(Svg$7A, _extends$7E({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 5V3H3v2l8 9v5H6v2h12v-2h-5v-5l8-9zM7.43 7L5.66 5h12.69l-1.78 2H7.43z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgLocalBar.displayName = "SvgLocalBar";
SvgLocalBar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7F() { _extends$7F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7F.apply(this, arguments); }
var Svg$7B = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalCafe = function SvgLocalCafe(props) {
  return createElement(Svg$7B, _extends$7F({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 3H4v10c0 2.21 1.79 4 4 4h6c2.21 0 4-1.79 4-4v-3h2c1.11 0 2-.89 2-2V5c0-1.11-.89-2-2-2zm0 5h-2V5h2v3zM2 21h18v-2H2v2z"
  }));
};

SvgLocalCafe.displayName = "SvgLocalCafe";
SvgLocalCafe.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7G() { _extends$7G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7G.apply(this, arguments); }
var Svg$7C = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalCarWash = function SvgLocalCarWash(props) {
  return createElement(Svg$7C, _extends$7G({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17 5c.83 0 1.5-.67 1.5-1.5 0-1-1.5-2.7-1.5-2.7s-1.5 1.7-1.5 2.7c0 .83.67 1.5 1.5 1.5zm-5 0c.83 0 1.5-.67 1.5-1.5 0-1-1.5-2.7-1.5-2.7s-1.5 1.7-1.5 2.7c0 .83.67 1.5 1.5 1.5zM7 5c.83 0 1.5-.67 1.5-1.5C8.5 2.5 7 .8 7 .8S5.5 2.5 5.5 3.5C5.5 4.33 6.17 5 7 5zm11.92 3.01C18.72 7.42 18.16 7 17.5 7h-11c-.66 0-1.21.42-1.42 1.01L3 14v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8l-2.08-5.99zM6.5 18c-.83 0-1.5-.67-1.5-1.5S5.67 15 6.5 15s1.5.67 1.5 1.5S7.33 18 6.5 18zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM5 13l1.5-4.5h11L19 13H5z"
  }));
};

SvgLocalCarWash.displayName = "SvgLocalCarWash";
SvgLocalCarWash.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7H() { _extends$7H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7H.apply(this, arguments); }
var Svg$7D = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalConvenienceStore = function SvgLocalConvenienceStore(props) {
  return createElement(Svg$7D, _extends$7H({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 7V4H5v3H2v13h8v-4h4v4h8V7h-3zm-8 3H9v1h2v1H8V9h2V8H8V7h3v3zm5 2h-1v-2h-2V7h1v2h1V7h1v5z"
  }));
};

SvgLocalConvenienceStore.displayName = "SvgLocalConvenienceStore";
SvgLocalConvenienceStore.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7I() { _extends$7I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7I.apply(this, arguments); }
var Svg$7E = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalDining = function SvgLocalDining(props) {
  return createElement(Svg$7E, _extends$7I({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M8.1 13.34l2.83-2.83L3.91 3.5a4.008 4.008 0 000 5.66l4.19 4.18zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L3.7 19.87l1.41 1.41L12 14.41l6.88 6.88 1.41-1.41L13.41 13l1.47-1.47z"
  }));
};

SvgLocalDining.displayName = "SvgLocalDining";
SvgLocalDining.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7J() { _extends$7J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7J.apply(this, arguments); }
var Svg$7F = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalDrink = function SvgLocalDrink(props) {
  return createElement(Svg$7F, _extends$7J({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M3 2l2.01 18.23C5.13 21.23 5.97 22 7 22h10c1.03 0 1.87-.77 1.99-1.77L21 2H3zm9 17c-1.66 0-3-1.34-3-3 0-2 3-5.4 3-5.4s3 3.4 3 5.4c0 1.66-1.34 3-3 3zm6.33-11H5.67l-.44-4h13.53l-.43 4z"
  }));
};

SvgLocalDrink.displayName = "SvgLocalDrink";
SvgLocalDrink.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7K() { _extends$7K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7K.apply(this, arguments); }
var Svg$7G = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalFlorist = function SvgLocalFlorist(props) {
  return createElement(Svg$7G, _extends$7K({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 22a9 9 0 009-9 9 9 0 00-9 9zM5.6 10.25a2.5 2.5 0 003.92 2.06l-.02.19a2.5 2.5 0 005 0l-.02-.19c.4.28.89.44 1.42.44a2.5 2.5 0 002.5-2.5c0-1-.59-1.85-1.43-2.25.84-.4 1.43-1.25 1.43-2.25a2.5 2.5 0 00-3.92-2.06l.02-.19a2.5 2.5 0 00-5 0l.02.19c-.4-.28-.89-.44-1.42-.44a2.5 2.5 0 00-2.5 2.5c0 1 .59 1.85 1.43 2.25-.84.4-1.43 1.25-1.43 2.25zM12 5.5a2.5 2.5 0 010 5 2.5 2.5 0 010-5zM3 13a9 9 0 009 9 9 9 0 00-9-9z"
  }));
};

SvgLocalFlorist.displayName = "SvgLocalFlorist";
SvgLocalFlorist.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7L() { _extends$7L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7L.apply(this, arguments); }
var Svg$7H = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalGasStation = function SvgLocalGasStation(props) {
  return createElement(Svg$7H, _extends$7L({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.77 7.23l.01-.01-3.72-3.72L15 4.56l2.11 2.11c-.94.36-1.61 1.26-1.61 2.33a2.5 2.5 0 002.5 2.5c.36 0 .69-.08 1-.21v7.21c0 .55-.45 1-1 1s-1-.45-1-1V14c0-1.1-.9-2-2-2h-1V5c0-1.1-.9-2-2-2H6c-1.1 0-2 .9-2 2v16h10v-7.5h1.5v5a2.5 2.5 0 005 0V9c0-.69-.28-1.32-.73-1.77zM12 10H6V5h6v5zm6 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
  }));
};

SvgLocalGasStation.displayName = "SvgLocalGasStation";
SvgLocalGasStation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7M() { _extends$7M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7M.apply(this, arguments); }
var Svg$7I = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalGroceryStore = function SvgLocalGroceryStore(props) {
  return createElement(Svg$7I, _extends$7M({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49A1.003 1.003 0 0020 4H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgLocalGroceryStore.displayName = "SvgLocalGroceryStore";
SvgLocalGroceryStore.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7N() { _extends$7N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7N.apply(this, arguments); }
var Svg$7J = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalHospital = function SvgLocalHospital(props) {
  return createElement(Svg$7J, _extends$7N({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-1.99.9-1.99 2L3 19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-1 11h-4v4h-4v-4H6v-4h4V6h4v4h4v4z"
  }));
};

SvgLocalHospital.displayName = "SvgLocalHospital";
SvgLocalHospital.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7O() { _extends$7O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7O.apply(this, arguments); }
var Svg$7K = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalHotel = function SvgLocalHotel(props) {
  return createElement(Svg$7K, _extends$7O({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7 13c1.66 0 3-1.34 3-3S8.66 7 7 7s-3 1.34-3 3 1.34 3 3 3zm12-6h-8v7H3V5H1v15h2v-3h18v3h2v-9c0-2.21-1.79-4-4-4z"
  }));
};

SvgLocalHotel.displayName = "SvgLocalHotel";
SvgLocalHotel.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7P() { _extends$7P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7P.apply(this, arguments); }
var Svg$7L = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalLaundryService = function SvgLocalLaundryService(props) {
  return createElement(Svg$7L, _extends$7P({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9.17 16.83a4.008 4.008 0 005.66 0 4.008 4.008 0 000-5.66l-5.66 5.66zM18 2.01L6 2c-1.11 0-2 .89-2 2v16c0 1.11.89 2 2 2h12c1.11 0 2-.89 2-2V4c0-1.11-.89-1.99-2-1.99zM10 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM7 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm5 16c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgLocalLaundryService.displayName = "SvgLocalLaundryService";
SvgLocalLaundryService.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7Q() { _extends$7Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7Q.apply(this, arguments); }
var Svg$7M = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalLibrary = function SvgLocalLibrary(props) {
  return createElement(Svg$7M, _extends$7Q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 11.55C9.64 9.35 6.48 8 3 8v11c3.48 0 6.64 1.35 9 3.55 2.36-2.19 5.52-3.55 9-3.55V8c-3.48 0-6.64 1.35-9 3.55zM12 8c1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3 1.34 3 3 3z"
  }));
};

SvgLocalLibrary.displayName = "SvgLocalLibrary";
SvgLocalLibrary.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7R() { _extends$7R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7R.apply(this, arguments); }
var Svg$7N = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalMall = function SvgLocalMall(props) {
  return createElement(Svg$7N, _extends$7R({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 6h-2c0-2.76-2.24-5-5-5S7 3.24 7 6H5c-1.1 0-1.99.9-1.99 2L3 20c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-7-3c1.66 0 3 1.34 3 3H9c0-1.66 1.34-3 3-3zm0 10c-2.76 0-5-2.24-5-5h2c0 1.66 1.34 3 3 3s3-1.34 3-3h2c0 2.76-2.24 5-5 5z"
  }));
};

SvgLocalMall.displayName = "SvgLocalMall";
SvgLocalMall.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7S() { _extends$7S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7S.apply(this, arguments); }
var Svg$7O = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalMovies = function SvgLocalMovies(props) {
  return createElement(Svg$7O, _extends$7S({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 3v2h-2V3H8v2H6V3H4v18h2v-2h2v2h8v-2h2v2h2V3h-2zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgLocalMovies.displayName = "SvgLocalMovies";
SvgLocalMovies.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7T() { _extends$7T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7T.apply(this, arguments); }
var Svg$7P = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalOffer = function SvgLocalOffer(props) {
  return createElement(Svg$7P, _extends$7T({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z"
  }));
};

SvgLocalOffer.displayName = "SvgLocalOffer";
SvgLocalOffer.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7U() { _extends$7U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7U.apply(this, arguments); }
var Svg$7Q = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalParking = function SvgLocalParking(props) {
  return createElement(Svg$7Q, _extends$7U({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M13 3H6v18h4v-6h3c3.31 0 6-2.69 6-6s-2.69-6-6-6zm.2 8H10V7h3.2c1.1 0 2 .9 2 2s-.9 2-2 2z"
  }));
};

SvgLocalParking.displayName = "SvgLocalParking";
SvgLocalParking.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7V() { _extends$7V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7V.apply(this, arguments); }
var Svg$7R = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalPharmacy = function SvgLocalPharmacy(props) {
  return createElement(Svg$7R, _extends$7V({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 5h-2.64l1.14-3.14L17.15 1l-1.46 4H3v2l2 6-2 6v2h18v-2l-2-6 2-6V5zm-5 9h-3v3h-2v-3H8v-2h3V9h2v3h3v2z"
  }));
};

SvgLocalPharmacy.displayName = "SvgLocalPharmacy";
SvgLocalPharmacy.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7W() { _extends$7W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7W.apply(this, arguments); }
var Svg$7S = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalPhone = function SvgLocalPhone(props) {
  return createElement(Svg$7S, _extends$7W({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"
  }));
};

SvgLocalPhone.displayName = "SvgLocalPhone";
SvgLocalPhone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7X() { _extends$7X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7X.apply(this, arguments); }
var Svg$7T = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalPizza = function SvgLocalPizza(props) {
  return createElement(Svg$7T, _extends$7X({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C8.43 2 5.23 3.54 3.01 6L12 22l8.99-16C18.78 3.55 15.57 2 12 2zM7 7c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2zm5 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
  }));
};

SvgLocalPizza.displayName = "SvgLocalPizza";
SvgLocalPizza.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7Y() { _extends$7Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7Y.apply(this, arguments); }
var Svg$7U = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalPlay = function SvgLocalPlay(props) {
  return createElement(Svg$7U, _extends$7Y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 12c0-1.1.9-2 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-1.99.9-1.99 2v4c1.1 0 1.99.9 1.99 2s-.89 2-2 2v4c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-4c-1.1 0-2-.9-2-2zm-4.42 4.8L12 14.5l-3.58 2.3 1.08-4.12-3.29-2.69 4.24-.25L12 5.8l1.54 3.95 4.24.25-3.29 2.69 1.09 4.11z"
  }));
};

SvgLocalPlay.displayName = "SvgLocalPlay";
SvgLocalPlay.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7Z() { _extends$7Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7Z.apply(this, arguments); }
var Svg$7V = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalPostOffice = function SvgLocalPostOffice(props) {
  return createElement(Svg$7V, _extends$7Z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgLocalPostOffice.displayName = "SvgLocalPostOffice";
SvgLocalPostOffice.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7_() { _extends$7_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7_.apply(this, arguments); }
var Svg$7W = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalPrintshop = function SvgLocalPrintshop(props) {
  return createElement(Svg$7W, _extends$7_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgLocalPrintshop.displayName = "SvgLocalPrintshop";
SvgLocalPrintshop.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$7$() { _extends$7$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7$.apply(this, arguments); }
var Svg$7X = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalSee = function SvgLocalSee(props) {
  return createElement(Svg$7X, _extends$7$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 12,
    cy: 12,
    r: 3.2
  }), createElement("path", {
    d: "M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgLocalSee.displayName = "SvgLocalSee";
SvgLocalSee.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$80() { _extends$80 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$80.apply(this, arguments); }
var Svg$7Y = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalShipping = function SvgLocalShipping(props) {
  return createElement(Svg$7Y, _extends$80({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 8h-3V4H3c-1.1 0-2 .9-2 2v11h2c0 1.66 1.34 3 3 3s3-1.34 3-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3h2v-5l-3-4zM6 18.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm13.5-9l1.96 2.5H17V9.5h2.5zm-1.5 9c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
  }));
};

SvgLocalShipping.displayName = "SvgLocalShipping";
SvgLocalShipping.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$81() { _extends$81 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$81.apply(this, arguments); }
var Svg$7Z = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocalTaxi = function SvgLocalTaxi(props) {
  return createElement(Svg$7Z, _extends$81({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18.92 6.01C18.72 5.42 18.16 5 17.5 5H15V3H9v2H6.5c-.66 0-1.21.42-1.42 1.01L3 12v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8l-2.08-5.99zM6.5 16c-.83 0-1.5-.67-1.5-1.5S5.67 13 6.5 13s1.5.67 1.5 1.5S7.33 16 6.5 16zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM5 11l1.5-4.5h11L19 11H5z"
  }));
};

SvgLocalTaxi.displayName = "SvgLocalTaxi";
SvgLocalTaxi.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$82() { _extends$82 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$82.apply(this, arguments); }
var Svg$7_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocationCity = function SvgLocationCity(props) {
  return createElement(Svg$7_, _extends$82({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15 11V5l-3-3-3 3v2H3v14h18V11h-6zm-8 8H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V9h2v2zm6 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V9h2v2zm0-4h-2V5h2v2zm6 12h-2v-2h2v2zm0-4h-2v-2h2v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgLocationCity.displayName = "SvgLocationCity";
SvgLocationCity.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$83() { _extends$83 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$83.apply(this, arguments); }
var Svg$7$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocationDisabled = function SvgLocationDisabled(props) {
  return createElement(Svg$7$, _extends$83({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20.94 11A8.994 8.994 0 0013 3.06V1h-2v2.06c-1.13.12-2.19.46-3.16.97l1.5 1.5A6.995 6.995 0 0119 12c0 .94-.19 1.84-.52 2.65l1.5 1.5c.5-.96.84-2.02.97-3.15H23v-2h-2.06zM3 4.27l2.04 2.04A8.914 8.914 0 003.06 11H1v2h2.06A8.994 8.994 0 0011 20.94V23h2v-2.06c1.77-.2 3.38-.91 4.69-1.98L19.73 21 21 19.73 4.27 3 3 4.27zm13.27 13.27a6.995 6.995 0 01-9.81-9.81l9.81 9.81z"
  }));
};

SvgLocationDisabled.displayName = "SvgLocationDisabled";
SvgLocationDisabled.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$84() { _extends$84 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$84.apply(this, arguments); }
var Svg$80 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocationOff = function SvgLocationOff(props) {
  return createElement(Svg$80, _extends$84({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 6.5A2.5 2.5 0 0114.5 9c0 .74-.33 1.39-.83 1.85l3.63 3.63c.98-1.86 1.7-3.8 1.7-5.48 0-3.87-3.13-7-7-7a7 7 0 00-5.04 2.15l3.19 3.19c.46-.52 1.11-.84 1.85-.84zm4.37 9.6l-4.63-4.63-.11-.11L3.27 3 2 4.27l3.18 3.18C5.07 7.95 5 8.47 5 9c0 5.25 7 13 7 13s1.67-1.85 3.38-4.35L18.73 21 20 19.73l-3.63-3.63z"
  }));
};

SvgLocationOff.displayName = "SvgLocationOff";
SvgLocationOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$85() { _extends$85 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$85.apply(this, arguments); }
var Svg$81 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocationOn = function SvgLocationOn(props) {
  return createElement(Svg$81, _extends$85({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5a2.5 2.5 0 010-5 2.5 2.5 0 010 5z"
  }));
};

SvgLocationOn.displayName = "SvgLocationOn";
SvgLocationOn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$86() { _extends$86 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$86.apply(this, arguments); }
var Svg$82 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLocationSearching = function SvgLocationSearching(props) {
  return createElement(Svg$82, _extends$86({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20.94 11A8.994 8.994 0 0013 3.06V1h-2v2.06A8.994 8.994 0 003.06 11H1v2h2.06A8.994 8.994 0 0011 20.94V23h2v-2.06A8.994 8.994 0 0020.94 13H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
  }));
};

SvgLocationSearching.displayName = "SvgLocationSearching";
SvgLocationSearching.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$87() { _extends$87 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$87.apply(this, arguments); }
var Svg$83 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLock = function SvgLock(props) {
  return createElement(Svg$83, _extends$87({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"
  }));
};

SvgLock.displayName = "SvgLock";
SvgLock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$88() { _extends$88 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$88.apply(this, arguments); }
var Svg$84 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLockOpen = function SvgLockOpen(props) {
  return createElement(Svg$84, _extends$88({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z"
  }));
};

SvgLockOpen.displayName = "SvgLockOpen";
SvgLockOpen.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$89() { _extends$89 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$89.apply(this, arguments); }
var Svg$85 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLockOutline = function SvgLockOutline(props) {
  return createElement(Svg$85, _extends$89({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "lockOutline_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "lockOutline_svg__b"
  }, createElement("use", {
    xlinkHref: "#lockOutline_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#lockOutline_svg__b)",
    d: "M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H8.9V6zM18 20H6V10h12v10z"
  }));
};

SvgLockOutline.displayName = "SvgLockOutline";
SvgLockOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8a() { _extends$8a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8a.apply(this, arguments); }
var Svg$86 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLooks = function SvgLooks(props) {
  return createElement(Svg$86, _extends$8a({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 10c-3.86 0-7 3.14-7 7h2c0-2.76 2.24-5 5-5s5 2.24 5 5h2c0-3.86-3.14-7-7-7zm0-4C5.93 6 1 10.93 1 17h2c0-4.96 4.04-9 9-9s9 4.04 9 9h2c0-6.07-4.93-11-11-11z"
  }));
};

SvgLooks.displayName = "SvgLooks";
SvgLooks.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8b() { _extends$8b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8b.apply(this, arguments); }
var Svg$87 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLooks3 = function SvgLooks3(props) {
  return createElement(Svg$87, _extends$8b({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.01 3h-14c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 7.5c0 .83-.67 1.5-1.5 1.5.83 0 1.5.67 1.5 1.5V15a2 2 0 01-2 2h-4v-2h4v-2h-2v-2h2V9h-4V7h4a2 2 0 012 2v1.5z"
  }));
};

SvgLooks3.displayName = "SvgLooks3";
SvgLooks3.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8c() { _extends$8c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8c.apply(this, arguments); }
var Svg$88 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLooks4 = function SvgLooks4(props) {
  return createElement(Svg$88, _extends$8c({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 14h-2v-4H9V7h2v4h2V7h2v10z"
  }));
};

SvgLooks4.displayName = "SvgLooks4";
SvgLooks4.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8d() { _extends$8d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8d.apply(this, arguments); }
var Svg$89 = styled("svg")({
  flex: "none"
}, space, color);

var SvgLooks5 = function SvgLooks5(props) {
  return createElement(Svg$89, _extends$8d({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h2a2 2 0 012 2v2a2 2 0 01-2 2H9v-2h4v-2H9V7h6v2z"
  }));
};

SvgLooks5.displayName = "SvgLooks5";
SvgLooks5.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8e() { _extends$8e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8e.apply(this, arguments); }
var Svg$8a = styled("svg")({
  flex: "none"
}, space, color);

var SvgLooks6 = function SvgLooks6(props) {
  return createElement(Svg$8a, _extends$8e({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 15h2v-2h-2v2zm8-12H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V9a2 2 0 012-2h4v2z"
  }));
};

SvgLooks6.displayName = "SvgLooks6";
SvgLooks6.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8f() { _extends$8f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8f.apply(this, arguments); }
var Svg$8b = styled("svg")({
  flex: "none"
}, space, color);

var SvgLooksOne = function SvgLooksOne(props) {
  return createElement(Svg$8b, _extends$8f({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14h-2V9h-2V7h4v10z"
  }));
};

SvgLooksOne.displayName = "SvgLooksOne";
SvgLooksOne.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8g() { _extends$8g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8g.apply(this, arguments); }
var Svg$8c = styled("svg")({
  flex: "none"
}, space, color);

var SvgLooksTwo = function SvgLooksTwo(props) {
  return createElement(Svg$8c, _extends$8g({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 8a2 2 0 01-2 2h-2v2h4v2H9v-4a2 2 0 012-2h2V9H9V7h4a2 2 0 012 2v2z"
  }));
};

SvgLooksTwo.displayName = "SvgLooksTwo";
SvgLooksTwo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8h() { _extends$8h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8h.apply(this, arguments); }
var Svg$8d = styled("svg")({
  flex: "none"
}, space, color);

var SvgLoop = function SvgLoop(props) {
  return createElement(Svg$8d, _extends$8h({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46A7.93 7.93 0 0020 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74A7.93 7.93 0 004 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgLoop.displayName = "SvgLoop";
SvgLoop.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8i() { _extends$8i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8i.apply(this, arguments); }
var Svg$8e = styled("svg")({
  flex: "none"
}, space, color);

var SvgLoupe = function SvgLoupe(props) {
  return createElement(Svg$8e, _extends$8i({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.49 2 2 6.49 2 12s4.49 10 10 10h8c1.1 0 2-.9 2-2v-8c0-5.51-4.49-10-10-10zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
  }));
};

SvgLoupe.displayName = "SvgLoupe";
SvgLoupe.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8j() { _extends$8j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8j.apply(this, arguments); }
var Svg$8f = styled("svg")({
  flex: "none"
}, space, color);

var SvgLowPriority = function SvgLowPriority(props) {
  return createElement(Svg$8f, _extends$8j({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14 5h8v2h-8zm0 5.5h8v2h-8zm0 5.5h8v2h-8zM2 11.5C2 15.08 4.92 18 8.5 18H9v2l3-3-3-3v2h-.5C6.02 16 4 13.98 4 11.5S6.02 7 8.5 7H12V5H8.5C4.92 5 2 7.92 2 11.5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgLowPriority.displayName = "SvgLowPriority";
SvgLowPriority.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8k() { _extends$8k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8k.apply(this, arguments); }
var Svg$8g = styled("svg")({
  flex: "none"
}, space, color);

var SvgLoyalty = function SvgLoyalty(props) {
  return createElement(Svg$8g, _extends$8k({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7zm11.77 8.27L13 19.54l-4.27-4.27A2.5 2.5 0 0110.5 11c.69 0 1.32.28 1.77.74l.73.72.73-.73a2.5 2.5 0 013.54 3.54z"
  }));
};

SvgLoyalty.displayName = "SvgLoyalty";
SvgLoyalty.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8l() { _extends$8l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8l.apply(this, arguments); }
var Svg$8h = styled("svg")({
  flex: "none"
}, space, color);

var SvgMail = function SvgMail(props) {
  return createElement(Svg$8h, _extends$8l({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgMail.displayName = "SvgMail";
SvgMail.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8m() { _extends$8m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8m.apply(this, arguments); }
var Svg$8i = styled("svg")({
  flex: "none"
}, space, color);

var SvgMailOutline = function SvgMailOutline(props) {
  return createElement(Svg$8i, _extends$8m({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z"
  }));
};

SvgMailOutline.displayName = "SvgMailOutline";
SvgMailOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8n() { _extends$8n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8n.apply(this, arguments); }
var Svg$8j = styled("svg")({
  flex: "none"
}, space, color);

var SvgMap = function SvgMap(props) {
  return createElement(Svg$8j, _extends$8n({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20.5 3l-.16.03L15 5.1 9 3 3.36 4.9c-.21.07-.36.25-.36.48V20.5c0 .28.22.5.5.5l.16-.03L9 18.9l6 2.1 5.64-1.9c.21-.07.36-.25.36-.48V3.5c0-.28-.22-.5-.5-.5zM15 19l-6-2.11V5l6 2.11V19z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgMap.displayName = "SvgMap";
SvgMap.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8o() { _extends$8o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8o.apply(this, arguments); }
var Svg$8k = styled("svg")({
  flex: "none"
}, space, color);

var SvgMarkunread = function SvgMarkunread(props) {
  return createElement(Svg$8k, _extends$8o({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgMarkunread.displayName = "SvgMarkunread";
SvgMarkunread.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8p() { _extends$8p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8p.apply(this, arguments); }
var Svg$8l = styled("svg")({
  flex: "none"
}, space, color);

var SvgMarkunreadMailbox = function SvgMarkunreadMailbox(props) {
  return createElement(Svg$8l, _extends$8p({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M-618-3000H782V600H-618zM0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 6H10v6H8V4h6V0H6v6H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2z"
  }));
};

SvgMarkunreadMailbox.displayName = "SvgMarkunreadMailbox";
SvgMarkunreadMailbox.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8q() { _extends$8q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8q.apply(this, arguments); }
var Svg$8m = styled("svg")({
  flex: "none"
}, space, color);

var SvgMemory = function SvgMemory(props) {
  return createElement(Svg$8m, _extends$8q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M15 9H9v6h6V9zm-2 4h-2v-2h2v2zm8-2V9h-2V7c0-1.1-.9-2-2-2h-2V3h-2v2h-2V3H9v2H7c-1.1 0-2 .9-2 2v2H3v2h2v2H3v2h2v2c0 1.1.9 2 2 2h2v2h2v-2h2v2h2v-2h2c1.1 0 2-.9 2-2v-2h2v-2h-2v-2h2zm-4 6H7V7h10v10z"
  }));
};

SvgMemory.displayName = "SvgMemory";
SvgMemory.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8r() { _extends$8r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8r.apply(this, arguments); }
var Svg$8n = styled("svg")({
  flex: "none"
}, space, color);

var SvgMenu = function SvgMenu(props) {
  return createElement(Svg$8n, _extends$8r({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
  }));
};

SvgMenu.displayName = "SvgMenu";
SvgMenu.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8s() { _extends$8s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8s.apply(this, arguments); }
var Svg$8o = styled("svg")({
  flex: "none"
}, space, color);

var SvgMergeType = function SvgMergeType(props) {
  return createElement(Svg$8o, _extends$8s({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 20.41L18.41 19 15 15.59 13.59 17 17 20.41zM7.5 8H11v5.59L5.59 19 7 20.41l6-6V8h3.5L12 3.5 7.5 8z"
  }));
};

SvgMergeType.displayName = "SvgMergeType";
SvgMergeType.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8t() { _extends$8t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8t.apply(this, arguments); }
var Svg$8p = styled("svg")({
  flex: "none"
}, space, color);

var SvgMessage = function SvgMessage(props) {
  return createElement(Svg$8p, _extends$8t({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"
  }));
};

SvgMessage.displayName = "SvgMessage";
SvgMessage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8u() { _extends$8u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8u.apply(this, arguments); }
var Svg$8q = styled("svg")({
  flex: "none"
}, space, color);

var SvgMic = function SvgMic(props) {
  return createElement(Svg$8q, _extends$8u({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.3-3c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgMic.displayName = "SvgMic";
SvgMic.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8v() { _extends$8v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8v.apply(this, arguments); }
var Svg$8r = styled("svg")({
  flex: "none"
}, space, color);

var SvgMicNone = function SvgMicNone(props) {
  return createElement(Svg$8r, _extends$8v({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 14c1.66 0 2.99-1.34 2.99-3L15 5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1.2-9.1c0-.66.54-1.2 1.2-1.2.66 0 1.2.54 1.2 1.2l-.01 6.2c0 .66-.53 1.2-1.19 1.2-.66 0-1.2-.54-1.2-1.2V4.9zm6.5 6.1c0 3-2.54 5.1-5.3 5.1S6.7 14 6.7 11H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c3.28-.48 6-3.3 6-6.72h-1.7z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgMicNone.displayName = "SvgMicNone";
SvgMicNone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8w() { _extends$8w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8w.apply(this, arguments); }
var Svg$8s = styled("svg")({
  flex: "none"
}, space, color);

var SvgMicOff = function SvgMicOff(props) {
  return createElement(Svg$8s, _extends$8w({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0zm0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 11h-1.7c0 .74-.16 1.43-.43 2.05l1.23 1.23c.56-.98.9-2.09.9-3.28zm-4.02.17c0-.06.02-.11.02-.17V5c0-1.66-1.34-3-3-3S9 3.34 9 5v.18l5.98 5.99zM4.27 3L3 4.27l6.01 6.01V11c0 1.66 1.33 3 2.99 3 .22 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.54-.9L19.73 21 21 19.73 4.27 3z"
  }));
};

SvgMicOff.displayName = "SvgMicOff";
SvgMicOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8x() { _extends$8x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8x.apply(this, arguments); }
var Svg$8t = styled("svg")({
  flex: "none"
}, space, color);

var SvgMms = function SvgMms(props) {
  return createElement(Svg$8t, _extends$8x({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM5 14l3.5-4.5 2.5 3.01L14.5 8l4.5 6H5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgMms.displayName = "SvgMms";
SvgMms.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8y() { _extends$8y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8y.apply(this, arguments); }
var Svg$8u = styled("svg")({
  flex: "none"
}, space, color);

var SvgModeComment = function SvgModeComment(props) {
  return createElement(Svg$8u, _extends$8y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21.99 4c0-1.1-.89-2-1.99-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4-.01-18z"
  }));
};

SvgModeComment.displayName = "SvgModeComment";
SvgModeComment.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8z() { _extends$8z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8z.apply(this, arguments); }
var Svg$8v = styled("svg")({
  flex: "none"
}, space, color);

var SvgModeEdit = function SvgModeEdit(props) {
  return createElement(Svg$8v, _extends$8z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04a.996.996 0 000-1.41l-2.34-2.34a.996.996 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
  }));
};

SvgModeEdit.displayName = "SvgModeEdit";
SvgModeEdit.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8A() { _extends$8A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8A.apply(this, arguments); }
var Svg$8w = styled("svg")({
  flex: "none"
}, space, color);

var SvgMonetizationOn = function SvgMonetizationOn(props) {
  return createElement(Svg$8w, _extends$8A({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1.41 16.09V20h-2.67v-1.93c-1.71-.36-3.16-1.46-3.27-3.4h1.96c.1 1.05.82 1.87 2.65 1.87 1.96 0 2.4-.98 2.4-1.59 0-.83-.44-1.61-2.67-2.14-2.48-.6-4.18-1.62-4.18-3.67 0-1.72 1.39-2.84 3.11-3.21V4h2.67v1.95c1.86.45 2.79 1.86 2.85 3.39H14.3c-.05-1.11-.64-1.87-2.22-1.87-1.5 0-2.4.68-2.4 1.64 0 .84.65 1.39 2.67 1.91s4.18 1.39 4.18 3.91c-.01 1.83-1.38 2.83-3.12 3.16z"
  }));
};

SvgMonetizationOn.displayName = "SvgMonetizationOn";
SvgMonetizationOn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8B() { _extends$8B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8B.apply(this, arguments); }
var Svg$8x = styled("svg")({
  flex: "none"
}, space, color);

var SvgMoneyOff = function SvgMoneyOff(props) {
  return createElement(Svg$8x, _extends$8B({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12.5 6.9c1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-.53.12-1.03.3-1.48.54l1.47 1.47c.41-.17.91-.27 1.51-.27zM5.33 4.06L4.06 5.33 7.5 8.77c0 2.08 1.56 3.21 3.91 3.91l3.51 3.51c-.34.48-1.05.91-2.42.91-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c.96-.18 1.82-.55 2.45-1.12l2.22 2.22 1.27-1.27L5.33 4.06z"
  }));
};

SvgMoneyOff.displayName = "SvgMoneyOff";
SvgMoneyOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8C() { _extends$8C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8C.apply(this, arguments); }
var Svg$8y = styled("svg")({
  flex: "none"
}, space, color);

var SvgMonochromePhotos = function SvgMonochromePhotos(props) {
  return createElement(Svg$8y, _extends$8C({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 5h-3.2L15 3H9L7.2 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 14h-8v-1c-2.8 0-5-2.2-5-5s2.2-5 5-5V7h8v12zm-3-6c0-2.8-2.2-5-5-5v1.8c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2V18c2.8 0 5-2.2 5-5zm-8.2 0c0 1.8 1.4 3.2 3.2 3.2V9.8c-1.8 0-3.2 1.4-3.2 3.2z"
  }));
};

SvgMonochromePhotos.displayName = "SvgMonochromePhotos";
SvgMonochromePhotos.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8D() { _extends$8D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8D.apply(this, arguments); }
var Svg$8z = styled("svg")({
  flex: "none"
}, space, color);

var SvgMood = function SvgMood(props) {
  return createElement(Svg$8z, _extends$8D({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"
  }));
};

SvgMood.displayName = "SvgMood";
SvgMood.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8E() { _extends$8E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8E.apply(this, arguments); }
var Svg$8A = styled("svg")({
  flex: "none"
}, space, color);

var SvgMoodBad = function SvgMoodBad(props) {
  return createElement(Svg$8A, _extends$8E({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 3c-2.33 0-4.31 1.46-5.11 3.5h10.22c-.8-2.04-2.78-3.5-5.11-3.5z"
  }));
};

SvgMoodBad.displayName = "SvgMoodBad";
SvgMoodBad.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8F() { _extends$8F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8F.apply(this, arguments); }
var Svg$8B = styled("svg")({
  flex: "none"
}, space, color);

var SvgMore = function SvgMore(props) {
  return createElement(Svg$8B, _extends$8F({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.97.89 1.66.89H22c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 13.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm5 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm5 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
  }));
};

SvgMore.displayName = "SvgMore";
SvgMore.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8G() { _extends$8G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8G.apply(this, arguments); }
var Svg$8C = styled("svg")({
  flex: "none"
}, space, color);

var SvgMoreHoriz = function SvgMoreHoriz(props) {
  return createElement(Svg$8C, _extends$8G({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
  }));
};

SvgMoreHoriz.displayName = "SvgMoreHoriz";
SvgMoreHoriz.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8H() { _extends$8H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8H.apply(this, arguments); }
var Svg$8D = styled("svg")({
  flex: "none"
}, space, color);

var SvgMoreVert = function SvgMoreVert(props) {
  return createElement(Svg$8D, _extends$8H({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
  }));
};

SvgMoreVert.displayName = "SvgMoreVert";
SvgMoreVert.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8I() { _extends$8I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8I.apply(this, arguments); }
var Svg$8E = styled("svg")({
  flex: "none"
}, space, color);

var SvgMotorcycle = function SvgMotorcycle(props) {
  return createElement(Svg$8E, _extends$8I({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "motorcycle_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "motorcycle_svg__b"
  }, createElement("use", {
    xlinkHref: "#motorcycle_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#motorcycle_svg__b)",
    d: "M19.44 9.03L15.41 5H11v2h3.59l2 2H5c-2.8 0-5 2.2-5 5s2.2 5 5 5c2.46 0 4.45-1.69 4.9-4h1.65l2.77-2.77c-.21.54-.32 1.14-.32 1.77 0 2.8 2.2 5 5 5s5-2.2 5-5c0-2.65-1.97-4.77-4.56-4.97zM7.82 15C7.4 16.15 6.28 17 5 17c-1.63 0-3-1.37-3-3s1.37-3 3-3c1.28 0 2.4.85 2.82 2H5v2h2.82zM19 17c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"
  }));
};

SvgMotorcycle.displayName = "SvgMotorcycle";
SvgMotorcycle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8J() { _extends$8J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8J.apply(this, arguments); }
var Svg$8F = styled("svg")({
  flex: "none"
}, space, color);

var SvgMouse = function SvgMouse(props) {
  return createElement(Svg$8F, _extends$8J({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M13 1.07V9h7c0-4.08-3.05-7.44-7-7.93zM4 15c0 4.42 3.58 8 8 8s8-3.58 8-8v-4H4v4zm7-13.93C7.05 1.56 4 4.92 4 9h7V1.07z"
  }));
};

SvgMouse.displayName = "SvgMouse";
SvgMouse.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8K() { _extends$8K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8K.apply(this, arguments); }
var Svg$8G = styled("svg")({
  flex: "none"
}, space, color);

var SvgMoveToInbox = function SvgMoveToInbox(props) {
  return createElement(Svg$8G, _extends$8K({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H4.99c-1.11 0-1.98.9-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10zm-3-5h-2V7h-4v3H8l4 4 4-4z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgMoveToInbox.displayName = "SvgMoveToInbox";
SvgMoveToInbox.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8L() { _extends$8L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8L.apply(this, arguments); }
var Svg$8H = styled("svg")({
  flex: "none"
}, space, color);

var SvgMovie = function SvgMovie(props) {
  return createElement(Svg$8H, _extends$8L({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 4l2 4h-3l-2-4h-2l2 4h-3l-2-4H8l2 4H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgMovie.displayName = "SvgMovie";
SvgMovie.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8M() { _extends$8M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8M.apply(this, arguments); }
var Svg$8I = styled("svg")({
  flex: "none"
}, space, color);

var SvgMovieCreation = function SvgMovieCreation(props) {
  return createElement(Svg$8I, _extends$8M({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 4l2 4h-3l-2-4h-2l2 4h-3l-2-4H8l2 4H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4z"
  }));
};

SvgMovieCreation.displayName = "SvgMovieCreation";
SvgMovieCreation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8N() { _extends$8N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8N.apply(this, arguments); }
var Svg$8J = styled("svg")({
  flex: "none"
}, space, color);

var SvgMovieFilter = function SvgMovieFilter(props) {
  return createElement(Svg$8J, _extends$8N({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 4l2 3h-3l-2-3h-2l2 3h-3l-2-3H8l2 3H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4zm-6.75 11.25L10 18l-1.25-2.75L6 14l2.75-1.25L10 10l1.25 2.75L14 14l-2.75 1.25zm5.69-3.31L16 14l-.94-2.06L13 11l2.06-.94L16 8l.94 2.06L19 11l-2.06.94z"
  }));
};

SvgMovieFilter.displayName = "SvgMovieFilter";
SvgMovieFilter.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8O() { _extends$8O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8O.apply(this, arguments); }
var Svg$8K = styled("svg")({
  flex: "none"
}, space, color);

var SvgMultilineChart = function SvgMultilineChart(props) {
  return createElement(Svg$8K, _extends$8O({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 6.92l-1.41-1.41-2.85 3.21C15.68 6.4 12.83 5 9.61 5 6.72 5 4.07 6.16 2 8l1.42 1.42C5.12 7.93 7.27 7 9.61 7c2.74 0 5.09 1.26 6.77 3.24l-2.88 3.24-4-4L2 16.99l1.5 1.5 6-6.01 4 4 4.05-4.55c.75 1.35 1.25 2.9 1.44 4.55H21c-.22-2.3-.95-4.39-2.04-6.14L22 6.92z"
  }));
};

SvgMultilineChart.displayName = "SvgMultilineChart";
SvgMultilineChart.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8P() { _extends$8P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8P.apply(this, arguments); }
var Svg$8L = styled("svg")({
  flex: "none"
}, space, color);

var SvgMusicNote = function SvgMusicNote(props) {
  return createElement(Svg$8L, _extends$8P({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 3v10.55c-.59-.34-1.27-.55-2-.55-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4V7h4V3h-6z"
  }));
};

SvgMusicNote.displayName = "SvgMusicNote";
SvgMusicNote.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8Q() { _extends$8Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8Q.apply(this, arguments); }
var Svg$8M = styled("svg")({
  flex: "none"
}, space, color);

var SvgMusicVideo = function SvgMusicVideo(props) {
  return createElement(Svg$8M, _extends$8Q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h18v14zM8 15c0-1.66 1.34-3 3-3 .35 0 .69.07 1 .18V6h5v2h-3v7.03A3.003 3.003 0 0111 18c-1.66 0-3-1.34-3-3z"
  }));
};

SvgMusicVideo.displayName = "SvgMusicVideo";
SvgMusicVideo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8R() { _extends$8R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8R.apply(this, arguments); }
var Svg$8N = styled("svg")({
  flex: "none"
}, space, color);

var SvgMyLocation = function SvgMyLocation(props) {
  return createElement(Svg$8N, _extends$8R({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm8.94 3A8.994 8.994 0 0013 3.06V1h-2v2.06A8.994 8.994 0 003.06 11H1v2h2.06A8.994 8.994 0 0011 20.94V23h2v-2.06A8.994 8.994 0 0020.94 13H23v-2h-2.06zM12 19c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
  }));
};

SvgMyLocation.displayName = "SvgMyLocation";
SvgMyLocation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8S() { _extends$8S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8S.apply(this, arguments); }
var Svg$8O = styled("svg")({
  flex: "none"
}, space, color);

var SvgNature = function SvgNature(props) {
  return createElement(Svg$8O, _extends$8S({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 16.12a7 7 0 006.17-6.95c0-3.87-3.13-7-7-7s-7 3.13-7 7A6.98 6.98 0 0011 16.06V20H5v2h14v-2h-6v-3.88z"
  }));
};

SvgNature.displayName = "SvgNature";
SvgNature.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8T() { _extends$8T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8T.apply(this, arguments); }
var Svg$8P = styled("svg")({
  flex: "none"
}, space, color);

var SvgNaturePeople = function SvgNaturePeople(props) {
  return createElement(Svg$8P, _extends$8T({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22.17 9.17c0-3.87-3.13-7-7-7s-7 3.13-7 7A6.98 6.98 0 0014 16.06V20H6v-3h1v-4c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4h1v5h16v-2h-3v-3.88a7 7 0 006.17-6.95zM4.5 11c.83 0 1.5-.67 1.5-1.5S5.33 8 4.5 8 3 8.67 3 9.5 3.67 11 4.5 11z"
  }));
};

SvgNaturePeople.displayName = "SvgNaturePeople";
SvgNaturePeople.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8U() { _extends$8U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8U.apply(this, arguments); }
var Svg$8Q = styled("svg")({
  flex: "none"
}, space, color);

var SvgNavigateBefore = function SvgNavigateBefore(props) {
  return createElement(Svg$8Q, _extends$8U({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
  }));
};

SvgNavigateBefore.displayName = "SvgNavigateBefore";
SvgNavigateBefore.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8V() { _extends$8V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8V.apply(this, arguments); }
var Svg$8R = styled("svg")({
  flex: "none"
}, space, color);

var SvgNavigateNext = function SvgNavigateNext(props) {
  return createElement(Svg$8R, _extends$8V({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
  }));
};

SvgNavigateNext.displayName = "SvgNavigateNext";
SvgNavigateNext.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8W() { _extends$8W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8W.apply(this, arguments); }
var Svg$8S = styled("svg")({
  flex: "none"
}, space, color);

var SvgNavigation = function SvgNavigation(props) {
  return createElement(Svg$8S, _extends$8W({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2L4.5 20.29l.71.71L12 18l6.79 3 .71-.71z"
  }));
};

SvgNavigation.displayName = "SvgNavigation";
SvgNavigation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8X() { _extends$8X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8X.apply(this, arguments); }
var Svg$8T = styled("svg")({
  flex: "none"
}, space, color);

var SvgNearMe = function SvgNearMe(props) {
  return createElement(Svg$8T, _extends$8X({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 3L3 10.53v.98l6.84 2.65L12.48 21h.98L21 3z"
  }));
};

SvgNearMe.displayName = "SvgNearMe";
SvgNearMe.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8Y() { _extends$8Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8Y.apply(this, arguments); }
var Svg$8U = styled("svg")({
  flex: "none"
}, space, color);

var SvgNetworkCell = function SvgNetworkCell(props) {
  return createElement(Svg$8U, _extends$8Y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M2 22h20V2z"
  }), createElement("path", {
    d: "M17 7L2 22h15z"
  }));
};

SvgNetworkCell.displayName = "SvgNetworkCell";
SvgNetworkCell.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8Z() { _extends$8Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8Z.apply(this, arguments); }
var Svg$8V = styled("svg")({
  flex: "none"
}, space, color);

var SvgNetworkCheck = function SvgNetworkCheck(props) {
  return createElement(Svg$8V, _extends$8Z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M15.9 5c-.17 0-.32.09-.41.23l-.07.15-5.18 11.65c-.16.29-.26.61-.26.96 0 1.11.9 2.01 2.01 2.01.96 0 1.77-.68 1.96-1.59l.01-.03L16.4 5.5c0-.28-.22-.5-.5-.5zM1 9l2 2c2.88-2.88 6.79-4.08 10.53-3.62l1.19-2.68C9.89 3.84 4.74 5.27 1 9zm20 2l2-2a15.367 15.367 0 00-5.59-3.57l-.53 2.82c1.5.62 2.9 1.53 4.12 2.75zm-4 4l2-2c-.8-.8-1.7-1.42-2.66-1.89l-.55 2.92c.42.27.83.59 1.21.97zM5 13l2 2a7.1 7.1 0 014.03-2l1.28-2.88c-2.63-.08-5.3.87-7.31 2.88z"
  }));
};

SvgNetworkCheck.displayName = "SvgNetworkCheck";
SvgNetworkCheck.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8_() { _extends$8_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8_.apply(this, arguments); }
var Svg$8W = styled("svg")({
  flex: "none"
}, space, color);

var SvgNetworkLocked = function SvgNetworkLocked(props) {
  return createElement(Svg$8W, _extends$8_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0zm0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.5 10c.17 0 .33.03.5.05V1L1 20h13v-3c0-.89.39-1.68 1-2.23v-.27c0-2.48 2.02-4.5 4.5-4.5zm2.5 6v-1.5a2.5 2.5 0 00-5 0V16c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm-1 0h-3v-1.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V16z"
  }));
};

SvgNetworkLocked.displayName = "SvgNetworkLocked";
SvgNetworkLocked.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$8$() { _extends$8$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8$.apply(this, arguments); }
var Svg$8X = styled("svg")({
  flex: "none"
}, space, color);

var SvgNetworkWifi = function SvgNetworkWifi(props) {
  return createElement(Svg$8X, _extends$8$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"
  }), createElement("path", {
    d: "M3.53 10.95l8.46 10.54.01.01.01-.01 8.46-10.54C20.04 10.62 16.81 8 12 8c-4.81 0-8.04 2.62-8.47 2.95z"
  }));
};

SvgNetworkWifi.displayName = "SvgNetworkWifi";
SvgNetworkWifi.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$90() { _extends$90 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$90.apply(this, arguments); }
var Svg$8Y = styled("svg")({
  flex: "none"
}, space, color);

var SvgNewReleases = function SvgNewReleases(props) {
  return createElement(Svg$8Y, _extends$90({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M23 12l-2.44-2.78.34-3.68-3.61-.82-1.89-3.18L12 3 8.6 1.54 6.71 4.72l-3.61.81.34 3.68L1 12l2.44 2.78-.34 3.69 3.61.82 1.89 3.18L12 21l3.4 1.46 1.89-3.18 3.61-.82-.34-3.68L23 12zm-10 5h-2v-2h2v2zm0-4h-2V7h2v6z"
  }));
};

SvgNewReleases.displayName = "SvgNewReleases";
SvgNewReleases.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$91() { _extends$91 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$91.apply(this, arguments); }
var Svg$8Z = styled("svg")({
  flex: "none"
}, space, color);

var SvgNextWeek = function SvgNextWeek(props) {
  return createElement(Svg$8Z, _extends$91({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "nextWeek_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "nextWeek_svg__b"
  }, createElement("use", {
    xlinkHref: "#nextWeek_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#nextWeek_svg__b)",
    fill: "#010101",
    d: "M20 7h-4V5c0-.55-.22-1.05-.59-1.41C15.05 3.22 14.55 3 14 3h-4c-1.1 0-2 .9-2 2v2H4c-1.1 0-2 .9-2 2v11c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zM10 5h4v2h-4V5zm1 13.5l-1-1 3-3-3-3 1-1 4 4-4 4z"
  }));
};

SvgNextWeek.displayName = "SvgNextWeek";
SvgNextWeek.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$92() { _extends$92 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$92.apply(this, arguments); }
var Svg$8_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgNfc = function SvgNfc(props) {
  return createElement(Svg$8_, _extends$92({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 18H4V4h16v16zM18 6h-5c-1.1 0-2 .9-2 2v2.28c-.6.35-1 .98-1 1.72 0 1.1.9 2 2 2s2-.9 2-2c0-.74-.4-1.38-1-1.72V8h3v8H8V8h2V6H6v12h12V6z"
  }));
};

SvgNfc.displayName = "SvgNfc";
SvgNfc.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$93() { _extends$93 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$93.apply(this, arguments); }
var Svg$8$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgNoEncryption = function SvgNoEncryption(props) {
  return createElement(Svg$8$, _extends$93({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0V0zm0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 21.78L4.22 5 3 6.22l2.04 2.04C4.42 8.6 4 9.25 4 10v10c0 1.1.9 2 2 2h12c.23 0 .45-.05.66-.12L19.78 23 21 21.78zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H9.66L20 18.34V10c0-1.1-.9-2-2-2h-1V6c0-2.76-2.24-5-5-5-2.56 0-4.64 1.93-4.94 4.4L8.9 7.24V6z"
  }));
};

SvgNoEncryption.displayName = "SvgNoEncryption";
SvgNoEncryption.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$94() { _extends$94 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$94.apply(this, arguments); }
var Svg$90 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNoSim = function SvgNoSim(props) {
  return createElement(Svg$90, _extends$94({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.99 5c0-1.1-.89-2-1.99-2h-7L7.66 5.34 19 16.68 18.99 5zM3.65 3.88L2.38 5.15 5 7.77V19c0 1.1.9 2 2 2h10.01c.35 0 .67-.1.96-.26l1.88 1.88 1.27-1.27L3.65 3.88z"
  }));
};

SvgNoSim.displayName = "SvgNoSim";
SvgNoSim.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$95() { _extends$95 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$95.apply(this, arguments); }
var Svg$91 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNotInterested = function SvgNotInterested(props) {
  return createElement(Svg$91, _extends$95({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31A7.902 7.902 0 0112 20zm6.31-3.1L7.1 5.69A7.902 7.902 0 0112 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z"
  }));
};

SvgNotInterested.displayName = "SvgNotInterested";
SvgNotInterested.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$96() { _extends$96 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$96.apply(this, arguments); }
var Svg$92 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNote = function SvgNote(props) {
  return createElement(Svg$92, _extends$96({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 10l-6-6H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99l16-.01c1.1 0 2-.89 2-1.99v-8zm-7-4.5l5.5 5.5H15V5.5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgNote.displayName = "SvgNote";
SvgNote.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$97() { _extends$97 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$97.apply(this, arguments); }
var Svg$93 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNoteAdd = function SvgNoteAdd(props) {
  return createElement(Svg$93, _extends$97({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3v2zm-3-7V3.5L18.5 9H13z"
  }));
};

SvgNoteAdd.displayName = "SvgNoteAdd";
SvgNoteAdd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$98() { _extends$98 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$98.apply(this, arguments); }
var Svg$94 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNotifications = function SvgNotifications(props) {
  return createElement(Svg$94, _extends$98({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 22c1.1 0 2-.9 2-2h-4a2 2 0 002 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z"
  }));
};

SvgNotifications.displayName = "SvgNotifications";
SvgNotifications.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$99() { _extends$99 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$99.apply(this, arguments); }
var Svg$95 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNotificationsActive = function SvgNotificationsActive(props) {
  return createElement(Svg$95, _extends$99({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7.58 4.08L6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2a8.445 8.445 0 013.55-6.42zm12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43a8.495 8.495 0 013.54 6.42zM18 11c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2v-5zm-6 11c.14 0 .27-.01.4-.04.65-.14 1.18-.58 1.44-1.18.1-.24.15-.5.15-.78h-4c.01 1.1.9 2 2.01 2z"
  }));
};

SvgNotificationsActive.displayName = "SvgNotificationsActive";
SvgNotificationsActive.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9a() { _extends$9a = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9a.apply(this, arguments); }
var Svg$96 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNotificationsNone = function SvgNotificationsNone(props) {
  return createElement(Svg$96, _extends$9a({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6z"
  }));
};

SvgNotificationsNone.displayName = "SvgNotificationsNone";
SvgNotificationsNone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9b() { _extends$9b = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9b.apply(this, arguments); }
var Svg$97 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNotificationsOff = function SvgNotificationsOff(props) {
  return createElement(Svg$97, _extends$9b({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 18.69L7.84 6.14 5.27 3.49 4 4.76l2.8 2.8v.01c-.52.99-.8 2.16-.8 3.42v5l-2 2v1h13.73l2 2L21 19.72l-1-1.03zM12 22c1.11 0 2-.89 2-2h-4c0 1.11.89 2 2 2zm6-7.32V11c0-3.08-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68c-.15.03-.29.08-.42.12-.1.03-.2.07-.3.11h-.01c-.01 0-.01 0-.02.01-.23.09-.46.2-.68.31 0 0-.01 0-.01.01L18 14.68z"
  }));
};

SvgNotificationsOff.displayName = "SvgNotificationsOff";
SvgNotificationsOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9c() { _extends$9c = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9c.apply(this, arguments); }
var Svg$98 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNotificationsPaused = function SvgNotificationsPaused(props) {
  return createElement(Svg$98, _extends$9c({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 22c1.1 0 2-.9 2-2h-4a2 2 0 002 2zm6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.93 6 11v5l-2 2v1h16v-1l-2-2zm-3.5-6.2l-2.8 3.4h2.8V15h-5v-1.8l2.8-3.4H9.5V8h5v1.8z"
  }));
};

SvgNotificationsPaused.displayName = "SvgNotificationsPaused";
SvgNotificationsPaused.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9d() { _extends$9d = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9d.apply(this, arguments); }
var Svg$99 = styled("svg")({
  flex: "none"
}, space, color);

var SvgOfflinePin = function SvgOfflinePin(props) {
  return createElement(Svg$99, _extends$9d({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "offlinePin_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "offlinePin_svg__b"
  }, createElement("use", {
    xlinkHref: "#offlinePin_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#offlinePin_svg__b)",
    d: "M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm5 16H7v-2h10v2zm-6.7-4L7 10.7l1.4-1.4 1.9 1.9 5.3-5.3L17 7.3 10.3 14z"
  }));
};

SvgOfflinePin.displayName = "SvgOfflinePin";
SvgOfflinePin.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9e() { _extends$9e = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9e.apply(this, arguments); }
var Svg$9a = styled("svg")({
  flex: "none"
}, space, color);

var SvgOndemandVideo = function SvgOndemandVideo(props) {
  return createElement(Svg$9a, _extends$9e({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 3H3c-1.11 0-2 .89-2 2v12a2 2 0 002 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5a2 2 0 00-2-2zm0 14H3V5h18v12zm-5-6l-7 4V7z"
  }));
};

SvgOndemandVideo.displayName = "SvgOndemandVideo";
SvgOndemandVideo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9f() { _extends$9f = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9f.apply(this, arguments); }
var Svg$9b = styled("svg")({
  flex: "none"
}, space, color);

var SvgOpacity = function SvgOpacity(props) {
  return createElement(Svg$9b, _extends$9f({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M24 0H0v24h24V0zm0 0H0v24h24V0zM0 24h24V0H0v24z"
  }), createElement("path", {
    d: "M17.66 8L12 2.35 6.34 8A8.02 8.02 0 004 13.64c0 2 .78 4.11 2.34 5.67a7.99 7.99 0 0011.32 0c1.56-1.56 2.34-3.67 2.34-5.67S19.22 9.56 17.66 8zM6 14c.01-2 .62-3.27 1.76-4.4L12 5.27l4.24 4.38C17.38 10.77 17.99 12 18 14H6z"
  }));
};

SvgOpacity.displayName = "SvgOpacity";
SvgOpacity.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9g() { _extends$9g = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9g.apply(this, arguments); }
var Svg$9c = styled("svg")({
  flex: "none"
}, space, color);

var SvgOpenInBrowser = function SvgOpenInBrowser(props) {
  return createElement(Svg$9c, _extends$9g({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 4H5a2 2 0 00-2 2v12a2 2 0 002 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6a2 2 0 00-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z"
  }));
};

SvgOpenInBrowser.displayName = "SvgOpenInBrowser";
SvgOpenInBrowser.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9h() { _extends$9h = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9h.apply(this, arguments); }
var Svg$9d = styled("svg")({
  flex: "none"
}, space, color);

var SvgOpenInNew = function SvgOpenInNew(props) {
  return createElement(Svg$9d, _extends$9h({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 19H5V5h7V3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z"
  }));
};

SvgOpenInNew.displayName = "SvgOpenInNew";
SvgOpenInNew.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9i() { _extends$9i = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9i.apply(this, arguments); }
var Svg$9e = styled("svg")({
  flex: "none"
}, space, color);

var SvgOpenWith = function SvgOpenWith(props) {
  return createElement(Svg$9e, _extends$9i({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 9h4V6h3l-5-5-5 5h3v3zm-1 1H6V7l-5 5 5 5v-3h3v-4zm14 2l-5-5v3h-3v4h3v3l5-5zm-9 3h-4v3H7l5 5 5-5h-3v-3z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgOpenWith.displayName = "SvgOpenWith";
SvgOpenWith.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9j() { _extends$9j = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9j.apply(this, arguments); }
var Svg$9f = styled("svg")({
  flex: "none"
}, space, color);

var SvgPages = function SvgPages(props) {
  return createElement(Svg$9f, _extends$9j({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M3 5v6h5L7 7l4 1V3H5c-1.1 0-2 .9-2 2zm5 8H3v6c0 1.1.9 2 2 2h6v-5l-4 1 1-4zm9 4l-4-1v5h6c1.1 0 2-.9 2-2v-6h-5l1 4zm2-14h-6v5l4-1-1 4h5V5c0-1.1-.9-2-2-2z"
  }));
};

SvgPages.displayName = "SvgPages";
SvgPages.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9k() { _extends$9k = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9k.apply(this, arguments); }
var Svg$9g = styled("svg")({
  flex: "none"
}, space, color);

var SvgPageview = function SvgPageview(props) {
  return createElement(Svg$9g, _extends$9k({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M11.5 9a2.5 2.5 0 000 5 2.5 2.5 0 000-5zM20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-3.21 14.21l-2.91-2.91c-.69.44-1.51.7-2.39.7C9.01 16 7 13.99 7 11.5S9.01 7 11.5 7 16 9.01 16 11.5c0 .88-.26 1.69-.7 2.39l2.91 2.9-1.42 1.42z"
  }));
};

SvgPageview.displayName = "SvgPageview";
SvgPageview.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9l() { _extends$9l = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9l.apply(this, arguments); }
var Svg$9h = styled("svg")({
  flex: "none"
}, space, color);

var SvgPalette = function SvgPalette(props) {
  return createElement(Svg$9h, _extends$9l({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 3a9 9 0 000 18c.83 0 1.5-.67 1.5-1.5 0-.39-.15-.74-.39-1.01-.23-.26-.38-.61-.38-.99 0-.83.67-1.5 1.5-1.5H16c2.76 0 5-2.24 5-5 0-4.42-4.03-8-9-8zm-5.5 9c-.83 0-1.5-.67-1.5-1.5S5.67 9 6.5 9 8 9.67 8 10.5 7.33 12 6.5 12zm3-4C8.67 8 8 7.33 8 6.5S8.67 5 9.5 5s1.5.67 1.5 1.5S10.33 8 9.5 8zm5 0c-.83 0-1.5-.67-1.5-1.5S13.67 5 14.5 5s1.5.67 1.5 1.5S15.33 8 14.5 8zm3 4c-.83 0-1.5-.67-1.5-1.5S16.67 9 17.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
  }));
};

SvgPalette.displayName = "SvgPalette";
SvgPalette.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9m() { _extends$9m = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9m.apply(this, arguments); }
var Svg$9i = styled("svg")({
  flex: "none"
}, space, color);

var SvgPanTool = function SvgPanTool(props) {
  return createElement(Svg$9i, _extends$9m({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "panTool_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "panTool_svg__b"
  }, createElement("use", {
    xlinkHref: "#panTool_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#panTool_svg__b)",
    d: "M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"
  }));
};

SvgPanTool.displayName = "SvgPanTool";
SvgPanTool.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9n() { _extends$9n = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9n.apply(this, arguments); }
var Svg$9j = styled("svg")({
  flex: "none"
}, space, color);

var SvgPanorama = function SvgPanorama(props) {
  return createElement(Svg$9j, _extends$9n({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M23 18V6c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zM8.5 12.5l2.5 3.01L14.5 11l4.5 6H5l3.5-4.5z"
  }));
};

SvgPanorama.displayName = "SvgPanorama";
SvgPanorama.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9o() { _extends$9o = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9o.apply(this, arguments); }
var Svg$9k = styled("svg")({
  flex: "none"
}, space, color);

var SvgPanoramaFishEye = function SvgPanoramaFishEye(props) {
  return createElement(Svg$9k, _extends$9o({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
  }));
};

SvgPanoramaFishEye.displayName = "SvgPanoramaFishEye";
SvgPanoramaFishEye.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9p() { _extends$9p = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9p.apply(this, arguments); }
var Svg$9l = styled("svg")({
  flex: "none"
}, space, color);

var SvgPanoramaHorizontal = function SvgPanoramaHorizontal(props) {
  return createElement(Svg$9l, _extends$9p({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 6.54v10.91c-2.6-.77-5.28-1.16-8-1.16-2.72 0-5.4.39-8 1.16V6.54c2.6.77 5.28 1.16 8 1.16 2.72.01 5.4-.38 8-1.16M21.43 4c-.1 0-.2.02-.31.06C18.18 5.16 15.09 5.7 12 5.7c-3.09 0-6.18-.55-9.12-1.64A.94.94 0 002.57 4c-.34 0-.57.23-.57.63v14.75c0 .39.23.62.57.62.1 0 .2-.02.31-.06 2.94-1.1 6.03-1.64 9.12-1.64 3.09 0 6.18.55 9.12 1.64.11.04.21.06.31.06.33 0 .57-.23.57-.63V4.63c0-.4-.24-.63-.57-.63z"
  }));
};

SvgPanoramaHorizontal.displayName = "SvgPanoramaHorizontal";
SvgPanoramaHorizontal.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9q() { _extends$9q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9q.apply(this, arguments); }
var Svg$9m = styled("svg")({
  flex: "none"
}, space, color);

var SvgPanoramaVertical = function SvgPanoramaVertical(props) {
  return createElement(Svg$9m, _extends$9q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.94 21.12c-1.1-2.94-1.64-6.03-1.64-9.12 0-3.09.55-6.18 1.64-9.12a.94.94 0 00.06-.31c0-.34-.23-.57-.63-.57H4.63c-.4 0-.63.23-.63.57 0 .1.02.2.06.31C5.16 5.82 5.71 8.91 5.71 12c0 3.09-.55 6.18-1.64 9.12-.05.11-.07.22-.07.31 0 .33.23.57.63.57h14.75c.39 0 .63-.24.63-.57-.01-.1-.03-.2-.07-.31zM6.54 20c.77-2.6 1.16-5.28 1.16-8 0-2.72-.39-5.4-1.16-8h10.91c-.77 2.6-1.16 5.28-1.16 8 0 2.72.39 5.4 1.16 8H6.54z"
  }));
};

SvgPanoramaVertical.displayName = "SvgPanoramaVertical";
SvgPanoramaVertical.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9r() { _extends$9r = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9r.apply(this, arguments); }
var Svg$9n = styled("svg")({
  flex: "none"
}, space, color);

var SvgPanoramaWideAngle = function SvgPanoramaWideAngle(props) {
  return createElement(Svg$9n, _extends$9r({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 6c2.45 0 4.71.2 7.29.64A21 21 0 0120 12a21 21 0 01-.71 5.36c-2.58.44-4.84.64-7.29.64s-4.71-.2-7.29-.64A21 21 0 014 12a21 21 0 01.71-5.36C7.29 6.2 9.55 6 12 6m0-2c-2.73 0-5.22.24-7.95.72l-.93.16-.25.9C2.29 7.85 2 9.93 2 12s.29 4.15.87 6.22l.25.89.93.16c2.73.49 5.22.73 7.95.73s5.22-.24 7.95-.72l.93-.16.25-.89c.58-2.08.87-4.16.87-6.23s-.29-4.15-.87-6.22l-.25-.89-.93-.16C17.22 4.24 14.73 4 12 4z"
  }));
};

SvgPanoramaWideAngle.displayName = "SvgPanoramaWideAngle";
SvgPanoramaWideAngle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9s() { _extends$9s = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9s.apply(this, arguments); }
var Svg$9o = styled("svg")({
  flex: "none"
}, space, color);

var SvgPartyMode = function SvgPartyMode(props) {
  return createElement(Svg$9o, _extends$9s({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-8 3c1.63 0 3.06.79 3.98 2H12c-1.66 0-3 1.34-3 3 0 .35.07.69.18 1H7.1A5.002 5.002 0 0112 7zm0 10c-1.63 0-3.06-.79-3.98-2H12c1.66 0 3-1.34 3-3 0-.35-.07-.69-.18-1h2.08a5.002 5.002 0 01-4.9 6z"
  }));
};

SvgPartyMode.displayName = "SvgPartyMode";
SvgPartyMode.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9t() { _extends$9t = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9t.apply(this, arguments); }
var Svg$9p = styled("svg")({
  flex: "none"
}, space, color);

var SvgPause = function SvgPause(props) {
  return createElement(Svg$9p, _extends$9t({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 19h4V5H6v14zm8-14v14h4V5h-4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPause.displayName = "SvgPause";
SvgPause.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9u() { _extends$9u = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9u.apply(this, arguments); }
var Svg$9q = styled("svg")({
  flex: "none"
}, space, color);

var SvgPauseCircleFilled = function SvgPauseCircleFilled(props) {
  return createElement(Svg$9q, _extends$9u({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 14H9V8h2v8zm4 0h-2V8h2v8z"
  }));
};

SvgPauseCircleFilled.displayName = "SvgPauseCircleFilled";
SvgPauseCircleFilled.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9v() { _extends$9v = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9v.apply(this, arguments); }
var Svg$9r = styled("svg")({
  flex: "none"
}, space, color);

var SvgPauseCircleOutline = function SvgPauseCircleOutline(props) {
  return createElement(Svg$9r, _extends$9v({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M9 16h2V8H9v8zm3-14C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm1-4h2V8h-2v8z"
  }));
};

SvgPauseCircleOutline.displayName = "SvgPauseCircleOutline";
SvgPauseCircleOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9w() { _extends$9w = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9w.apply(this, arguments); }
var Svg$9s = styled("svg")({
  flex: "none"
}, space, color);

var SvgPayment = function SvgPayment(props) {
  return createElement(Svg$9s, _extends$9w({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z"
  }));
};

SvgPayment.displayName = "SvgPayment";
SvgPayment.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9x() { _extends$9x = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9x.apply(this, arguments); }
var Svg$9t = styled("svg")({
  flex: "none"
}, space, color);

var SvgPeople = function SvgPeople(props) {
  return createElement(Svg$9t, _extends$9x({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z"
  }));
};

SvgPeople.displayName = "SvgPeople";
SvgPeople.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9y() { _extends$9y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9y.apply(this, arguments); }
var Svg$9u = styled("svg")({
  flex: "none"
}, space, color);

var SvgPeopleOutline = function SvgPeopleOutline(props) {
  return createElement(Svg$9u, _extends$9y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M16.5 13c-1.2 0-3.07.34-4.5 1-1.43-.67-3.3-1-4.5-1C5.33 13 1 14.08 1 16.25V19h22v-2.75c0-2.17-4.33-3.25-6.5-3.25zm-4 4.5h-10v-1.25c0-.54 2.56-1.75 5-1.75s5 1.21 5 1.75v1.25zm9 0H14v-1.25c0-.46-.2-.86-.52-1.22.88-.3 1.96-.53 3.02-.53 2.44 0 5 1.21 5 1.75v1.25zM7.5 12c1.93 0 3.5-1.57 3.5-3.5S9.43 5 7.5 5 4 6.57 4 8.5 5.57 12 7.5 12zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 5.5c1.93 0 3.5-1.57 3.5-3.5S18.43 5 16.5 5 13 6.57 13 8.5s1.57 3.5 3.5 3.5zm0-5.5c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2z"
  }));
};

SvgPeopleOutline.displayName = "SvgPeopleOutline";
SvgPeopleOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9z() { _extends$9z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9z.apply(this, arguments); }
var Svg$9v = styled("svg")({
  flex: "none"
}, space, color);

var SvgPermCameraMic = function SvgPermCameraMic(props) {
  return createElement(Svg$9v, _extends$9z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 5h-3.17L15 3H9L7.17 5H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v-2.09c-2.83-.48-5-2.94-5-5.91h2c0 2.21 1.79 4 4 4s4-1.79 4-4h2c0 2.97-2.17 5.43-5 5.91V21h7c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-6 8c0 1.1-.9 2-2 2s-2-.9-2-2V9c0-1.1.9-2 2-2s2 .9 2 2v4z"
  }));
};

SvgPermCameraMic.displayName = "SvgPermCameraMic";
SvgPermCameraMic.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9A() { _extends$9A = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9A.apply(this, arguments); }
var Svg$9w = styled("svg")({
  flex: "none"
}, space, color);

var SvgPermContactCalendar = function SvgPermContactCalendar(props) {
  return createElement(Svg$9w, _extends$9A({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3h-1V1h-2v2H8V1H6v2H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPermContactCalendar.displayName = "SvgPermContactCalendar";
SvgPermContactCalendar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9B() { _extends$9B = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9B.apply(this, arguments); }
var Svg$9x = styled("svg")({
  flex: "none"
}, space, color);

var SvgPermDataSetting = function SvgPermDataSetting(props) {
  return createElement(Svg$9x, _extends$9B({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18.99 11.5c.34 0 .67.03 1 .07L20 0 0 20h11.56c-.04-.33-.07-.66-.07-1 0-4.14 3.36-7.5 7.5-7.5zm3.71 7.99c.02-.16.04-.32.04-.49 0-.17-.01-.33-.04-.49l1.06-.83a.26.26 0 00.06-.32l-1-1.73c-.06-.11-.19-.15-.31-.11l-1.24.5c-.26-.2-.54-.37-.85-.49l-.19-1.32c-.01-.12-.12-.21-.24-.21h-2c-.12 0-.23.09-.25.21l-.19 1.32c-.3.13-.59.29-.85.49l-1.24-.5c-.11-.04-.24 0-.31.11l-1 1.73c-.06.11-.04.24.06.32l1.06.83a3.908 3.908 0 000 .98l-1.06.83a.26.26 0 00-.06.32l1 1.73c.06.11.19.15.31.11l1.24-.5c.26.2.54.37.85.49l.19 1.32c.02.12.12.21.25.21h2c.12 0 .23-.09.25-.21l.19-1.32c.3-.13.59-.29.84-.49l1.25.5c.11.04.24 0 .31-.11l1-1.73a.26.26 0 00-.06-.32l-1.07-.83zm-3.71 1.01c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
  }));
};

SvgPermDataSetting.displayName = "SvgPermDataSetting";
SvgPermDataSetting.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9C() { _extends$9C = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9C.apply(this, arguments); }
var Svg$9y = styled("svg")({
  flex: "none"
}, space, color);

var SvgPermDeviceInformation = function SvgPermDeviceInformation(props) {
  return createElement(Svg$9y, _extends$9C({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M13 7h-2v2h2V7zm0 4h-2v6h2v-6zm4-9.99L7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z"
  }));
};

SvgPermDeviceInformation.displayName = "SvgPermDeviceInformation";
SvgPermDeviceInformation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9D() { _extends$9D = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9D.apply(this, arguments); }
var Svg$9z = styled("svg")({
  flex: "none"
}, space, color);

var SvgPermIdentity = function SvgPermIdentity(props) {
  return createElement(Svg$9z, _extends$9D({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 5.9a2.1 2.1 0 110 4.2 2.1 2.1 0 010-4.2m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPermIdentity.displayName = "SvgPermIdentity";
SvgPermIdentity.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9E() { _extends$9E = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9E.apply(this, arguments); }
var Svg$9A = styled("svg")({
  flex: "none"
}, space, color);

var SvgPermMedia = function SvgPermMedia(props) {
  return createElement(Svg$9A, _extends$9E({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M2 6H0v5h.01L0 20c0 1.1.9 2 2 2h18v-2H2V6zm20-2h-8l-2-2H6c-1.1 0-1.99.9-1.99 2L4 16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7 15l4.5-6 3.5 4.51 2.5-3.01L21 15H7z"
  }));
};

SvgPermMedia.displayName = "SvgPermMedia";
SvgPermMedia.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9F() { _extends$9F = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9F.apply(this, arguments); }
var Svg$9B = styled("svg")({
  flex: "none"
}, space, color);

var SvgPermPhoneMsg = function SvgPermPhoneMsg(props) {
  return createElement(Svg$9B, _extends$9F({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 15.5c-1.25 0-2.45-.2-3.57-.57a1.02 1.02 0 00-1.02.24l-2.2 2.2a15.074 15.074 0 01-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01A11.36 11.36 0 018.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM12 3v10l3-3h6V3h-9z"
  }));
};

SvgPermPhoneMsg.displayName = "SvgPermPhoneMsg";
SvgPermPhoneMsg.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9G() { _extends$9G = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9G.apply(this, arguments); }
var Svg$9C = styled("svg")({
  flex: "none"
}, space, color);

var SvgPermScanWifi = function SvgPermScanWifi(props) {
  return createElement(Svg$9C, _extends$9G({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 3C6.95 3 3.15 4.85 0 7.23L12 22 24 7.25C20.85 4.87 17.05 3 12 3zm1 13h-2v-6h2v6zm-2-8V6h2v2h-2z"
  }));
};

SvgPermScanWifi.displayName = "SvgPermScanWifi";
SvgPermScanWifi.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9H() { _extends$9H = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9H.apply(this, arguments); }
var Svg$9D = styled("svg")({
  flex: "none"
}, space, color);

var SvgPerson = function SvgPerson(props) {
  return createElement(Svg$9D, _extends$9H({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPerson.displayName = "SvgPerson";
SvgPerson.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9I() { _extends$9I = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9I.apply(this, arguments); }
var Svg$9E = styled("svg")({
  flex: "none"
}, space, color);

var SvgPersonAdd = function SvgPersonAdd(props) {
  return createElement(Svg$9E, _extends$9I({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm-9-2V7H4v3H1v2h3v3h2v-3h3v-2H6zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
  }));
};

SvgPersonAdd.displayName = "SvgPersonAdd";
SvgPersonAdd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9J() { _extends$9J = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9J.apply(this, arguments); }
var Svg$9F = styled("svg")({
  flex: "none"
}, space, color);

var SvgPersonOutline = function SvgPersonOutline(props) {
  return createElement(Svg$9F, _extends$9J({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 5.9a2.1 2.1 0 110 4.2 2.1 2.1 0 010-4.2m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPersonOutline.displayName = "SvgPersonOutline";
SvgPersonOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9K() { _extends$9K = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9K.apply(this, arguments); }
var Svg$9G = styled("svg")({
  flex: "none"
}, space, color);

var SvgPersonPin = function SvgPersonPin(props) {
  return createElement(Svg$9G, _extends$9K({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 2H5a2 2 0 00-2 2v14a2 2 0 002 2h4l3 3 3-3h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 3.3c1.49 0 2.7 1.21 2.7 2.7 0 1.49-1.21 2.7-2.7 2.7-1.49 0-2.7-1.21-2.7-2.7 0-1.49 1.21-2.7 2.7-2.7zM18 16H6v-.9c0-2 4-3.1 6-3.1s6 1.1 6 3.1v.9z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPersonPin.displayName = "SvgPersonPin";
SvgPersonPin.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9L() { _extends$9L = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9L.apply(this, arguments); }
var Svg$9H = styled("svg")({
  flex: "none"
}, space, color);

var SvgPersonPinCircle = function SvgPersonPinCircle(props) {
  return createElement(Svg$9H, _extends$9L({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "personPinCircle_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "personPinCircle_svg__b"
  }, createElement("use", {
    xlinkHref: "#personPinCircle_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#personPinCircle_svg__b)",
    d: "M12 2C8.14 2 5 5.14 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.86-3.14-7-7-7zm0 2a2 2 0 11.001 4.001A2 2 0 0112 4zm0 10c-1.67 0-3.14-.85-4-2.15.02-1.32 2.67-2.05 4-2.05s3.98.73 4 2.05A4.783 4.783 0 0112 14z"
  }));
};

SvgPersonPinCircle.displayName = "SvgPersonPinCircle";
SvgPersonPinCircle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9M() { _extends$9M = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9M.apply(this, arguments); }
var Svg$9I = styled("svg")({
  flex: "none"
}, space, color);

var SvgPersonalVideo = function SvgPersonalVideo(props) {
  return createElement(Svg$9I, _extends$9M({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 3H3c-1.11 0-2 .89-2 2v12a2 2 0 002 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5a2 2 0 00-2-2zm0 14H3V5h18v12z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgPersonalVideo.displayName = "SvgPersonalVideo";
SvgPersonalVideo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9N() { _extends$9N = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9N.apply(this, arguments); }
var Svg$9J = styled("svg")({
  flex: "none"
}, space, color);

var SvgPets = function SvgPets(props) {
  return createElement(Svg$9J, _extends$9N({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 4.5,
    cy: 9.5,
    r: 2.5
  }), createElement("circle", {
    cx: 9,
    cy: 5.5,
    r: 2.5
  }), createElement("circle", {
    cx: 15,
    cy: 5.5,
    r: 2.5
  }), createElement("circle", {
    cx: 19.5,
    cy: 9.5,
    r: 2.5
  }), createElement("path", {
    d: "M17.34 14.86c-.87-1.02-1.6-1.89-2.48-2.91-.46-.54-1.05-1.08-1.75-1.32-.11-.04-.22-.07-.33-.09-.25-.04-.52-.04-.78-.04s-.53 0-.79.05c-.11.02-.22.05-.33.09-.7.24-1.28.78-1.75 1.32-.87 1.02-1.6 1.89-2.48 2.91-1.31 1.31-2.92 2.76-2.62 4.79.29 1.02 1.02 2.03 2.33 2.32.73.15 3.06-.44 5.54-.44h.18c2.48 0 4.81.58 5.54.44 1.31-.29 2.04-1.31 2.33-2.32.31-2.04-1.3-3.49-2.61-4.8z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgPets.displayName = "SvgPets";
SvgPets.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9O() { _extends$9O = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9O.apply(this, arguments); }
var Svg$9K = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhone = function SvgPhone(props) {
  return createElement(Svg$9K, _extends$9O({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"
  }));
};

SvgPhone.displayName = "SvgPhone";
SvgPhone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9P() { _extends$9P = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9P.apply(this, arguments); }
var Svg$9L = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhoneAndroid = function SvgPhoneAndroid(props) {
  return createElement(Svg$9L, _extends$9P({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16 1H8C6.34 1 5 2.34 5 4v16c0 1.66 1.34 3 3 3h8c1.66 0 3-1.34 3-3V4c0-1.66-1.34-3-3-3zm-2 20h-4v-1h4v1zm3.25-3H6.75V4h10.5v14z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPhoneAndroid.displayName = "SvgPhoneAndroid";
SvgPhoneAndroid.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9Q() { _extends$9Q = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9Q.apply(this, arguments); }
var Svg$9M = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhoneBluetoothSpeaker = function SvgPhoneBluetoothSpeaker(props) {
  return createElement(Svg$9M, _extends$9Q({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M14.71 9.5L17 7.21V11h.5l2.85-2.85L18.21 6l2.15-2.15L17.5 1H17v3.79L14.71 2.5l-.71.71L16.79 6 14 8.79l.71.71zM18 2.91l.94.94-.94.94V2.91zm0 4.3l.94.94-.94.94V7.21zm2 8.29c-1.25 0-2.45-.2-3.57-.57a1.02 1.02 0 00-1.02.24l-2.2 2.2a15.045 15.045 0 01-6.59-6.59l2.2-2.21a.96.96 0 00.25-1A11.36 11.36 0 018.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1z"
  }));
};

SvgPhoneBluetoothSpeaker.displayName = "SvgPhoneBluetoothSpeaker";
SvgPhoneBluetoothSpeaker.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9R() { _extends$9R = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9R.apply(this, arguments); }
var Svg$9N = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhoneForwarded = function SvgPhoneForwarded(props) {
  return createElement(Svg$9N, _extends$9R({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18 11l5-5-5-5v3h-4v4h4v3zm2 4.5c-1.25 0-2.45-.2-3.57-.57a1.02 1.02 0 00-1.02.24l-2.2 2.2a15.045 15.045 0 01-6.59-6.59l2.2-2.21a.96.96 0 00.25-1A11.36 11.36 0 018.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1z"
  }));
};

SvgPhoneForwarded.displayName = "SvgPhoneForwarded";
SvgPhoneForwarded.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9S() { _extends$9S = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9S.apply(this, arguments); }
var Svg$9O = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhoneInTalk = function SvgPhoneInTalk(props) {
  return createElement(Svg$9O, _extends$9S({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 15.5c-1.25 0-2.45-.2-3.57-.57a1.02 1.02 0 00-1.02.24l-2.2 2.2a15.045 15.045 0 01-6.59-6.59l2.2-2.21a.96.96 0 00.25-1A11.36 11.36 0 018.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM19 12h2a9 9 0 00-9-9v2c3.87 0 7 3.13 7 7zm-4 0h2c0-2.76-2.24-5-5-5v2c1.66 0 3 1.34 3 3z"
  }));
};

SvgPhoneInTalk.displayName = "SvgPhoneInTalk";
SvgPhoneInTalk.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9T() { _extends$9T = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9T.apply(this, arguments); }
var Svg$9P = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhoneIphone = function SvgPhoneIphone(props) {
  return createElement(Svg$9P, _extends$9T({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.5 1h-8A2.5 2.5 0 005 3.5v17A2.5 2.5 0 007.5 23h8a2.5 2.5 0 002.5-2.5v-17A2.5 2.5 0 0015.5 1zm-4 21c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5-4H7V4h9v14z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPhoneIphone.displayName = "SvgPhoneIphone";
SvgPhoneIphone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9U() { _extends$9U = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9U.apply(this, arguments); }
var Svg$9Q = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhoneLocked = function SvgPhoneLocked(props) {
  return createElement(Svg$9Q, _extends$9U({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 15.5c-1.25 0-2.45-.2-3.57-.57a1.02 1.02 0 00-1.02.24l-2.2 2.2a15.045 15.045 0 01-6.59-6.59l2.2-2.21a.96.96 0 00.25-1A11.36 11.36 0 018.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM20 4v-.5a2.5 2.5 0 00-5 0V4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-.8 0h-3.4v-.5c0-.94.76-1.7 1.7-1.7s1.7.76 1.7 1.7V4z"
  }));
};

SvgPhoneLocked.displayName = "SvgPhoneLocked";
SvgPhoneLocked.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9V() { _extends$9V = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9V.apply(this, arguments); }
var Svg$9R = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhoneMissed = function SvgPhoneMissed(props) {
  return createElement(Svg$9R, _extends$9V({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M6.5 5.5L12 11l7-7-1-1-6 6-4.5-4.5H11V3H5v6h1.5V5.5zm17.21 11.17A16.971 16.971 0 0012 12C7.46 12 3.34 13.78.29 16.67c-.18.18-.29.43-.29.71s.11.53.29.71l2.48 2.48c.18.18.43.29.71.29.27 0 .52-.11.7-.28.79-.74 1.69-1.36 2.66-1.85.33-.16.56-.5.56-.9v-3.1c1.45-.48 3-.73 4.6-.73 1.6 0 3.15.25 4.6.72v3.1c0 .39.23.74.56.9.98.49 1.87 1.12 2.67 1.85.18.18.43.28.7.28.28 0 .53-.11.71-.29l2.48-2.48c.18-.18.29-.43.29-.71s-.12-.52-.3-.7z"
  }));
};

SvgPhoneMissed.displayName = "SvgPhoneMissed";
SvgPhoneMissed.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9W() { _extends$9W = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9W.apply(this, arguments); }
var Svg$9S = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhonePaused = function SvgPhonePaused(props) {
  return createElement(Svg$9S, _extends$9W({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17 3h-2v7h2V3zm3 12.5c-1.25 0-2.45-.2-3.57-.57a1.02 1.02 0 00-1.02.24l-2.2 2.2a15.045 15.045 0 01-6.59-6.59l2.2-2.21a.96.96 0 00.25-1A11.36 11.36 0 018.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM19 3v7h2V3h-2z"
  }));
};

SvgPhonePaused.displayName = "SvgPhonePaused";
SvgPhonePaused.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9X() { _extends$9X = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9X.apply(this, arguments); }
var Svg$9T = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhonelink = function SvgPhonelink(props) {
  return createElement(Svg$9T, _extends$9X({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M4 6h18V4H4c-1.1 0-2 .9-2 2v11H0v3h14v-3H4V6zm19 2h-6c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-1 9h-4v-7h4v7z"
  }));
};

SvgPhonelink.displayName = "SvgPhonelink";
SvgPhonelink.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9Y() { _extends$9Y = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9Y.apply(this, arguments); }
var Svg$9U = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhonelinkErase = function SvgPhonelinkErase(props) {
  return createElement(Svg$9U, _extends$9Y({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 8.2l-1-1-4 4-4-4-1 1 4 4-4 4 1 1 4-4 4 4 1-1-4-4 4-4zM19 1H9c-1.1 0-2 .9-2 2v3h2V4h10v16H9v-2H7v3c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z"
  }));
};

SvgPhonelinkErase.displayName = "SvgPhonelinkErase";
SvgPhonelinkErase.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9Z() { _extends$9Z = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9Z.apply(this, arguments); }
var Svg$9V = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhonelinkLock = function SvgPhonelinkLock(props) {
  return createElement(Svg$9V, _extends$9Z({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 1H9c-1.1 0-2 .9-2 2v3h2V4h10v16H9v-2H7v3c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm-8.2 10V9.5C10.8 8.1 9.4 7 8 7S5.2 8.1 5.2 9.5V11c-.6 0-1.2.6-1.2 1.2v3.5c0 .7.6 1.3 1.2 1.3h5.5c.7 0 1.3-.6 1.3-1.2v-3.5c0-.7-.6-1.3-1.2-1.3zm-1.3 0h-3V9.5c0-.8.7-1.3 1.5-1.3s1.5.5 1.5 1.3V11z"
  }));
};

SvgPhonelinkLock.displayName = "SvgPhonelinkLock";
SvgPhonelinkLock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9_() { _extends$9_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9_.apply(this, arguments); }
var Svg$9W = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhonelinkOff = function SvgPhonelinkOff(props) {
  return createElement(Svg$9W, _extends$9_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0zm0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M22 6V4H6.82l2 2H22zM1.92 1.65L.65 2.92l1.82 1.82C2.18 5.08 2 5.52 2 6v11H0v3h17.73l2.35 2.35 1.27-1.27L3.89 3.62 1.92 1.65zM4 6.27L14.73 17H4V6.27zM23 8h-6c-.55 0-1 .45-1 1v4.18l2 2V10h4v7h-2.18l3 3H23c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1z"
  }));
};

SvgPhonelinkOff.displayName = "SvgPhonelinkOff";
SvgPhonelinkOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$9$() { _extends$9$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9$.apply(this, arguments); }
var Svg$9X = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhonelinkRing = function SvgPhonelinkRing(props) {
  return createElement(Svg$9X, _extends$9$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20.1 7.7l-1 1c1.8 1.8 1.8 4.6 0 6.5l1 1c2.5-2.3 2.5-6.1 0-8.5zM18 9.8l-1 1c.5.7.5 1.6 0 2.3l1 1c1.2-1.2 1.2-3 0-4.3zM14 1H4c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 19H4V4h10v16z"
  }));
};

SvgPhonelinkRing.displayName = "SvgPhonelinkRing";
SvgPhonelinkRing.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a0() { _extends$a0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a0.apply(this, arguments); }
var Svg$9Y = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhonelinkSetup = function SvgPhonelinkSetup(props) {
  return createElement(Svg$9Y, _extends$a0({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11.8 12.5v-1l1.1-.8c.1-.1.1-.2.1-.3l-1-1.7c-.1-.1-.2-.2-.3-.1l-1.3.4c-.3-.2-.6-.4-.9-.5l-.2-1.3c0-.1-.1-.2-.3-.2H7c-.1 0-.2.1-.3.2l-.2 1.3c-.3.1-.6.3-.9.5l-1.3-.5c-.1 0-.2 0-.3.1l-1 1.7c-.1.1 0 .2.1.3l1.1.8v1l-1.1.8c-.1.2-.1.3-.1.4l1 1.7c.1.1.2.2.3.1l1.4-.4c.3.2.6.4.9.5l.2 1.3c-.1.1.1.2.2.2h2c.1 0 .2-.1.3-.2l.2-1.3c.3-.1.6-.3.9-.5l1.3.5c.1 0 .2 0 .3-.1l1-1.7c.1-.1 0-.2-.1-.3l-1.1-.9zM8 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM19 1H9c-1.1 0-2 .9-2 2v3h2V4h10v16H9v-2H7v3c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2z"
  }));
};

SvgPhonelinkSetup.displayName = "SvgPhonelinkSetup";
SvgPhonelinkSetup.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a1() { _extends$a1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a1.apply(this, arguments); }
var Svg$9Z = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhoto = function SvgPhoto(props) {
  return createElement(Svg$9Z, _extends$a1({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"
  }));
};

SvgPhoto.displayName = "SvgPhoto";
SvgPhoto.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a2() { _extends$a2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a2.apply(this, arguments); }
var Svg$9_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhotoAlbum = function SvgPhotoAlbum(props) {
  return createElement(Svg$9_, _extends$a2({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4zm0 15l3-3.86 2.14 2.58 3-3.86L18 19H6z"
  }));
};

SvgPhotoAlbum.displayName = "SvgPhotoAlbum";
SvgPhotoAlbum.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a3() { _extends$a3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a3.apply(this, arguments); }
var Svg$9$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhotoCamera = function SvgPhotoCamera(props) {
  return createElement(Svg$9$, _extends$a3({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 12,
    cy: 12,
    r: 3.2
  }), createElement("path", {
    d: "M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
  }));
};

SvgPhotoCamera.displayName = "SvgPhotoCamera";
SvgPhotoCamera.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a4() { _extends$a4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a4.apply(this, arguments); }
var Svg$a0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhotoFilter = function SvgPhotoFilter(props) {
  return createElement(Svg$a0, _extends$a4({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.02 10v9H5V5h9V3H5.02c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-9h-2zM17 10l.94-2.06L20 7l-2.06-.94L17 4l-.94 2.06L14 7l2.06.94zm-3.75.75L12 8l-1.25 2.75L8 12l2.75 1.25L12 16l1.25-2.75L16 12z"
  }));
};

SvgPhotoFilter.displayName = "SvgPhotoFilter";
SvgPhotoFilter.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a5() { _extends$a5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a5.apply(this, arguments); }
var Svg$a1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhotoLibrary = function SvgPhotoLibrary(props) {
  return createElement(Svg$a1, _extends$a5({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 16V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2zm-11-4l2.03 2.71L16 11l4 5H8l3-4zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z"
  }));
};

SvgPhotoLibrary.displayName = "SvgPhotoLibrary";
SvgPhotoLibrary.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a6() { _extends$a6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a6.apply(this, arguments); }
var Svg$a2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhotoSizeSelectActual = function SvgPhotoSizeSelectActual(props) {
  return createElement(Svg$a2, _extends$a6({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 3H3C2 3 1 4 1 5v14c0 1.1.9 2 2 2h18c1 0 2-1 2-2V5c0-1-1-2-2-2zM5 17l3.5-4.5 2.5 3.01L14.5 11l4.5 6H5z"
  }));
};

SvgPhotoSizeSelectActual.displayName = "SvgPhotoSizeSelectActual";
SvgPhotoSizeSelectActual.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a7() { _extends$a7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a7.apply(this, arguments); }
var Svg$a3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhotoSizeSelectLarge = function SvgPhotoSizeSelectLarge(props) {
  return createElement(Svg$a3, _extends$a7({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 15h2v2h-2v-2zm0-4h2v2h-2v-2zm2 8h-2v2c1 0 2-1 2-2zM13 3h2v2h-2V3zm8 4h2v2h-2V7zm0-4v2h2c0-1-1-2-2-2zM1 7h2v2H1V7zm16-4h2v2h-2V3zm0 16h2v2h-2v-2zM3 3C2 3 1 4 1 5h2V3zm6 0h2v2H9V3zM5 3h2v2H5V3zm-4 8v8c0 1.1.9 2 2 2h12V11H1zm2 8l2.5-3.21 1.79 2.15 2.5-3.22L13 19H3z"
  }));
};

SvgPhotoSizeSelectLarge.displayName = "SvgPhotoSizeSelectLarge";
SvgPhotoSizeSelectLarge.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a8() { _extends$a8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a8.apply(this, arguments); }
var Svg$a4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgPhotoSizeSelectSmall = function SvgPhotoSizeSelectSmall(props) {
  return createElement(Svg$a4, _extends$a8({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M23 15h-2v2h2v-2zm0-4h-2v2h2v-2zm0 8h-2v2c1 0 2-1 2-2zM15 3h-2v2h2V3zm8 4h-2v2h2V7zm-2-4v2h2c0-1-1-2-2-2zM3 21h8v-6H1v4c0 1.1.9 2 2 2zM3 7H1v2h2V7zm12 12h-2v2h2v-2zm4-16h-2v2h2V3zm0 16h-2v2h2v-2zM3 3C2 3 1 4 1 5h2V3zm0 8H1v2h2v-2zm8-8H9v2h2V3zM7 3H5v2h2V3z"
  }));
};

SvgPhotoSizeSelectSmall.displayName = "SvgPhotoSizeSelectSmall";
SvgPhotoSizeSelectSmall.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a9() { _extends$a9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a9.apply(this, arguments); }
var Svg$a5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgPictureAsPdf = function SvgPictureAsPdf(props) {
  return createElement(Svg$a5, _extends$a9({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z"
  }));
};

SvgPictureAsPdf.displayName = "SvgPictureAsPdf";
SvgPictureAsPdf.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aa() { _extends$aa = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aa.apply(this, arguments); }
var Svg$a6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgPictureInPicture = function SvgPictureInPicture(props) {
  return createElement(Svg$a6, _extends$aa({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 7h-8v6h8V7zm2-4H3c-1.1 0-2 .9-2 2v14c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98V5c0-1.1-.9-2-2-2zm0 16.01H3V4.98h18v14.03z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPictureInPicture.displayName = "SvgPictureInPicture";
SvgPictureInPicture.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ab() { _extends$ab = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ab.apply(this, arguments); }
var Svg$a7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgPictureInPictureAlt = function SvgPictureInPictureAlt(props) {
  return createElement(Svg$a7, _extends$ab({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 11h-8v6h8v-6zm4 8V4.98C23 3.88 22.1 3 21 3H3c-1.1 0-2 .88-2 1.98V19c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H3V4.97h18v14.05z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgPictureInPictureAlt.displayName = "SvgPictureInPictureAlt";
SvgPictureInPictureAlt.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ac() { _extends$ac = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ac.apply(this, arguments); }
var Svg$a8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgPieChart = function SvgPieChart(props) {
  return createElement(Svg$a8, _extends$ac({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 2v20c-5.07-.5-9-4.79-9-10s3.93-9.5 9-10zm2.03 0v8.99H22c-.47-4.74-4.24-8.52-8.97-8.99zm0 11.01V22c4.74-.47 8.5-4.25 8.97-8.99h-8.97z"
  }));
};

SvgPieChart.displayName = "SvgPieChart";
SvgPieChart.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ad() { _extends$ad = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ad.apply(this, arguments); }
var Svg$a9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgPieChartOutlined = function SvgPieChartOutlined(props) {
  return createElement(Svg$a9, _extends$ad({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm1 2.07c3.61.45 6.48 3.33 6.93 6.93H13V4.07zM4 12c0-4.06 3.07-7.44 7-7.93v15.87c-3.93-.5-7-3.88-7-7.94zm9 7.93V13h6.93A8.002 8.002 0 0113 19.93z"
  }));
};

SvgPieChartOutlined.displayName = "SvgPieChartOutlined";
SvgPieChartOutlined.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ae() { _extends$ae = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ae.apply(this, arguments); }
var Svg$aa = styled("svg")({
  flex: "none"
}, space, color);

var SvgPinDrop = function SvgPinDrop(props) {
  return createElement(Svg$aa, _extends$ae({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 8c0-3.31-2.69-6-6-6S6 4.69 6 8c0 4.5 6 11 6 11s6-6.5 6-11zm-8 0c0-1.1.9-2 2-2s2 .9 2 2a2 2 0 11-4 0zM5 20v2h14v-2H5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPinDrop.displayName = "SvgPinDrop";
SvgPinDrop.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$af() { _extends$af = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$af.apply(this, arguments); }
var Svg$ab = styled("svg")({
  flex: "none"
}, space, color);

var SvgPlace = function SvgPlace(props) {
  return createElement(Svg$ab, _extends$af({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5a2.5 2.5 0 010-5 2.5 2.5 0 010 5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPlace.displayName = "SvgPlace";
SvgPlace.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ag() { _extends$ag = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ag.apply(this, arguments); }
var Svg$ac = styled("svg")({
  flex: "none"
}, space, color);

var SvgPlayArrow = function SvgPlayArrow(props) {
  return createElement(Svg$ac, _extends$ag({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M8 5v14l11-7z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPlayArrow.displayName = "SvgPlayArrow";
SvgPlayArrow.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ah() { _extends$ah = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ah.apply(this, arguments); }
var Svg$ad = styled("svg")({
  flex: "none"
}, space, color);

var SvgPlayCircleFilled = function SvgPlayCircleFilled(props) {
  return createElement(Svg$ad, _extends$ah({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z"
  }));
};

SvgPlayCircleFilled.displayName = "SvgPlayCircleFilled";
SvgPlayCircleFilled.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ai() { _extends$ai = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ai.apply(this, arguments); }
var Svg$ae = styled("svg")({
  flex: "none"
}, space, color);

var SvgPlayCircleOutline = function SvgPlayCircleOutline(props) {
  return createElement(Svg$ae, _extends$ai({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
  }));
};

SvgPlayCircleOutline.displayName = "SvgPlayCircleOutline";
SvgPlayCircleOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aj() { _extends$aj = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aj.apply(this, arguments); }
var Svg$af = styled("svg")({
  flex: "none"
}, space, color);

var SvgPlayForWork = function SvgPlayForWork(props) {
  return createElement(Svg$af, _extends$aj({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z"
  }));
};

SvgPlayForWork.displayName = "SvgPlayForWork";
SvgPlayForWork.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ak() { _extends$ak = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ak.apply(this, arguments); }
var Svg$ag = styled("svg")({
  flex: "none"
}, space, color);

var SvgPlaylistAdd = function SvgPlaylistAdd(props) {
  return createElement(Svg$ag, _extends$ak({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M14 10H2v2h12v-2zm0-4H2v2h12V6zm4 8v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM2 16h8v-2H2v2z"
  }));
};

SvgPlaylistAdd.displayName = "SvgPlaylistAdd";
SvgPlaylistAdd.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$al() { _extends$al = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$al.apply(this, arguments); }
var Svg$ah = styled("svg")({
  flex: "none"
}, space, color);

var SvgPlaylistAddCheck = function SvgPlaylistAddCheck(props) {
  return createElement(Svg$ah, _extends$al({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "playlistAddCheck_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "playlistAddCheck_svg__b"
  }, createElement("use", {
    xlinkHref: "#playlistAddCheck_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#playlistAddCheck_svg__b)",
    d: "M14 10H2v2h12v-2zm0-4H2v2h12V6zM2 16h8v-2H2v2zm19.5-4.5L23 13l-6.99 7-4.51-4.5L13 14l3.01 3 5.49-5.5z"
  }));
};

SvgPlaylistAddCheck.displayName = "SvgPlaylistAddCheck";
SvgPlaylistAddCheck.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$am() { _extends$am = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$am.apply(this, arguments); }
var Svg$ai = styled("svg")({
  flex: "none"
}, space, color);

var SvgPlaylistPlay = function SvgPlaylistPlay(props) {
  return createElement(Svg$ai, _extends$am({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M4 10h12v2H4zM4 6h12v2H4zM4 14h8v2H4zM14 14v6l5-3z"
  }));
};

SvgPlaylistPlay.displayName = "SvgPlaylistPlay";
SvgPlaylistPlay.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$an() { _extends$an = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$an.apply(this, arguments); }
var Svg$aj = styled("svg")({
  flex: "none"
}, space, color);

var SvgPlusOne = function SvgPlusOne(props) {
  return createElement(Svg$aj, _extends$an({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M10 8H8v4H4v2h4v4h2v-4h4v-2h-4zm4.5-1.92V7.9l2.5-.5V18h2V5z"
  }));
};

SvgPlusOne.displayName = "SvgPlusOne";
SvgPlusOne.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ao() { _extends$ao = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ao.apply(this, arguments); }
var Svg$ak = styled("svg")({
  flex: "none"
}, space, color);

var SvgPoll = function SvgPoll(props) {
  return createElement(Svg$ak, _extends$ao({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPoll.displayName = "SvgPoll";
SvgPoll.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ap() { _extends$ap = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ap.apply(this, arguments); }
var Svg$al = styled("svg")({
  flex: "none"
}, space, color);

var SvgPolymer = function SvgPolymer(props) {
  return createElement(Svg$al, _extends$ap({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 4h-4L7.11 16.63 4.5 12 9 4H5L.5 12 5 20h4l7.89-12.63L19.5 12 15 20h4l4.5-8z"
  }));
};

SvgPolymer.displayName = "SvgPolymer";
SvgPolymer.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aq() { _extends$aq = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aq.apply(this, arguments); }
var Svg$am = styled("svg")({
  flex: "none"
}, space, color);

var SvgPool = function SvgPool(props) {
  return createElement(Svg$am, _extends$aq({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 21c-1.11 0-1.73-.37-2.18-.64-.37-.22-.6-.36-1.15-.36-.56 0-.78.13-1.15.36-.46.27-1.07.64-2.18.64s-1.73-.37-2.18-.64c-.37-.22-.6-.36-1.15-.36-.56 0-.78.13-1.15.36-.46.27-1.08.64-2.19.64-1.11 0-1.73-.37-2.18-.64-.37-.23-.6-.36-1.15-.36s-.78.13-1.15.36c-.46.27-1.08.64-2.19.64v-2c.56 0 .78-.13 1.15-.36.46-.27 1.08-.64 2.19-.64s1.73.37 2.18.64c.37.23.59.36 1.15.36.56 0 .78-.13 1.15-.36.46-.27 1.08-.64 2.19-.64 1.11 0 1.73.37 2.18.64.37.22.6.36 1.15.36s.78-.13 1.15-.36c.45-.27 1.07-.64 2.18-.64s1.73.37 2.18.64c.37.23.59.36 1.15.36v2zm0-4.5c-1.11 0-1.73-.37-2.18-.64-.37-.22-.6-.36-1.15-.36-.56 0-.78.13-1.15.36-.45.27-1.07.64-2.18.64s-1.73-.37-2.18-.64c-.37-.22-.6-.36-1.15-.36-.56 0-.78.13-1.15.36-.45.27-1.07.64-2.18.64s-1.73-.37-2.18-.64c-.37-.22-.6-.36-1.15-.36s-.78.13-1.15.36c-.47.27-1.09.64-2.2.64v-2c.56 0 .78-.13 1.15-.36.45-.27 1.07-.64 2.18-.64s1.73.37 2.18.64c.37.22.6.36 1.15.36.56 0 .78-.13 1.15-.36.45-.27 1.07-.64 2.18-.64s1.73.37 2.18.64c.37.22.6.36 1.15.36s.78-.13 1.15-.36c.45-.27 1.07-.64 2.18-.64s1.73.37 2.18.64c.37.22.6.36 1.15.36v2zM8.67 12c.56 0 .78-.13 1.15-.36.46-.27 1.08-.64 2.19-.64 1.11 0 1.73.37 2.18.64.37.22.6.36 1.15.36s.78-.13 1.15-.36c.12-.07.26-.15.41-.23L10.48 5C8.93 3.45 7.5 2.99 5 3v2.5c1.82-.01 2.89.39 4 1.5l1 1-3.25 3.25c.31.12.56.27.77.39.37.23.59.36 1.15.36z"
  }), createElement("circle", {
    cx: 16.5,
    cy: 5.5,
    r: 2.5
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgPool.displayName = "SvgPool";
SvgPool.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ar() { _extends$ar = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ar.apply(this, arguments); }
var Svg$an = styled("svg")({
  flex: "none"
}, space, color);

var SvgPortableWifiOff = function SvgPortableWifiOff(props) {
  return createElement(Svg$an, _extends$ar({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17.56 14.24c.28-.69.44-1.45.44-2.24 0-3.31-2.69-6-6-6-.79 0-1.55.16-2.24.44l1.62 1.62c.2-.03.41-.06.62-.06a3.999 3.999 0 013.95 4.63l1.61 1.61zM12 4c4.42 0 8 3.58 8 8 0 1.35-.35 2.62-.95 3.74l1.47 1.47A9.86 9.86 0 0022 12c0-5.52-4.48-10-10-10-1.91 0-3.69.55-5.21 1.47l1.46 1.46C9.37 4.34 10.65 4 12 4zM3.27 2.5L2 3.77l2.1 2.1C2.79 7.57 2 9.69 2 12c0 3.7 2.01 6.92 4.99 8.65l1-1.73C5.61 17.53 4 14.96 4 12c0-1.76.57-3.38 1.53-4.69l1.43 1.44C6.36 9.68 6 10.8 6 12c0 2.22 1.21 4.15 3 5.19l1-1.74c-1.19-.7-2-1.97-2-3.45 0-.65.17-1.25.44-1.79l1.58 1.58L10 12c0 1.1.9 2 2 2l.21-.02.01.01 7.51 7.51L21 20.23 4.27 3.5l-1-1z"
  }));
};

SvgPortableWifiOff.displayName = "SvgPortableWifiOff";
SvgPortableWifiOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$as() { _extends$as = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$as.apply(this, arguments); }
var Svg$ao = styled("svg")({
  flex: "none"
}, space, color);

var SvgPortrait = function SvgPortrait(props) {
  return createElement(Svg$ao, _extends$as({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 12.25c1.24 0 2.25-1.01 2.25-2.25S13.24 7.75 12 7.75 9.75 8.76 9.75 10s1.01 2.25 2.25 2.25zm4.5 4c0-1.5-3-2.25-4.5-2.25s-4.5.75-4.5 2.25V17h9v-.75zM19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"
  }));
};

SvgPortrait.displayName = "SvgPortrait";
SvgPortrait.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$at() { _extends$at = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$at.apply(this, arguments); }
var Svg$ap = styled("svg")({
  flex: "none"
}, space, color);

var SvgPower = function SvgPower(props) {
  return createElement(Svg$ap, _extends$at({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16.01 7L16 3h-2v4h-4V3H8v4h-.01C7 6.99 6 7.99 6 8.99v5.49L9.5 18v3h5v-3l3.5-3.51v-5.5c0-1-1-2-1.99-1.99z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgPower.displayName = "SvgPower";
SvgPower.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$au() { _extends$au = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$au.apply(this, arguments); }
var Svg$aq = styled("svg")({
  flex: "none"
}, space, color);

var SvgPowerInput = function SvgPowerInput(props) {
  return createElement(Svg$aq, _extends$au({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M2 9v2h19V9H2zm0 6h5v-2H2v2zm7 0h5v-2H9v2zm7 0h5v-2h-5v2z"
  }));
};

SvgPowerInput.displayName = "SvgPowerInput";
SvgPowerInput.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$av() { _extends$av = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$av.apply(this, arguments); }
var Svg$ar = styled("svg")({
  flex: "none"
}, space, color);

var SvgPowerSettingsNew = function SvgPowerSettingsNew(props) {
  return createElement(Svg$ar, _extends$av({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M13 3h-2v10h2V3zm4.83 2.17l-1.42 1.42A6.92 6.92 0 0119 12c0 3.87-3.13 7-7 7A6.995 6.995 0 017.58 6.58L6.17 5.17A8.932 8.932 0 003 12a9 9 0 0018 0c0-2.74-1.23-5.18-3.17-6.83z"
  }));
};

SvgPowerSettingsNew.displayName = "SvgPowerSettingsNew";
SvgPowerSettingsNew.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aw() { _extends$aw = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aw.apply(this, arguments); }
var Svg$as = styled("svg")({
  flex: "none"
}, space, color);

var SvgPregnantWoman = function SvgPregnantWoman(props) {
  return createElement(Svg$as, _extends$aw({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "pregnantWoman_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "pregnantWoman_svg__b"
  }, createElement("use", {
    xlinkHref: "#pregnantWoman_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#pregnantWoman_svg__b)",
    d: "M9 4c0-1.11.89-2 2-2s2 .89 2 2-.89 2-2 2-2-.89-2-2zm7 9a3.285 3.285 0 00-2-3c0-1.66-1.34-3-3-3s-3 1.34-3 3v7h2v5h3v-5h3v-4z"
  }));
};

SvgPregnantWoman.displayName = "SvgPregnantWoman";
SvgPregnantWoman.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ax() { _extends$ax = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ax.apply(this, arguments); }
var Svg$at = styled("svg")({
  flex: "none"
}, space, color);

var SvgPresentToAll = function SvgPresentToAll(props) {
  return createElement(Svg$at, _extends$ax({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 3H3c-1.11 0-2 .89-2 2v14c0 1.11.89 2 2 2h18c1.11 0 2-.89 2-2V5c0-1.11-.89-2-2-2zm0 16.02H3V4.98h18v14.04zM10 12H8l4-4 4 4h-2v4h-4v-4z"
  }));
};

SvgPresentToAll.displayName = "SvgPresentToAll";
SvgPresentToAll.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ay() { _extends$ay = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ay.apply(this, arguments); }
var Svg$au = styled("svg")({
  flex: "none"
}, space, color);

var SvgPrint = function SvgPrint(props) {
  return createElement(Svg$au, _extends$ay({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgPrint.displayName = "SvgPrint";
SvgPrint.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$az() { _extends$az = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$az.apply(this, arguments); }
var Svg$av = styled("svg")({
  flex: "none"
}, space, color);

var SvgPriorityHigh = function SvgPriorityHigh(props) {
  return createElement(Svg$av, _extends$az({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 12,
    cy: 19,
    r: 2
  }), createElement("path", {
    d: "M10 3h4v12h-4z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgPriorityHigh.displayName = "SvgPriorityHigh";
SvgPriorityHigh.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aA() { _extends$aA = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aA.apply(this, arguments); }
var Svg$aw = styled("svg")({
  flex: "none"
}, space, color);

var SvgPublic = function SvgPublic(props) {
  return createElement(Svg$aw, _extends$aA({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z"
  }));
};

SvgPublic.displayName = "SvgPublic";
SvgPublic.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aB() { _extends$aB = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aB.apply(this, arguments); }
var Svg$ax = styled("svg")({
  flex: "none"
}, space, color);

var SvgPublish = function SvgPublish(props) {
  return createElement(Svg$ax, _extends$aB({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z"
  }));
};

SvgPublish.displayName = "SvgPublish";
SvgPublish.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aC() { _extends$aC = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aC.apply(this, arguments); }
var Svg$ay = styled("svg")({
  flex: "none"
}, space, color);

var SvgQueryBuilder = function SvgQueryBuilder(props) {
  return createElement(Svg$ay, _extends$aC({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  }));
};

SvgQueryBuilder.displayName = "SvgQueryBuilder";
SvgQueryBuilder.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aD() { _extends$aD = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aD.apply(this, arguments); }
var Svg$az = styled("svg")({
  flex: "none"
}, space, color);

var SvgQuestionAnswer = function SvgQuestionAnswer(props) {
  return createElement(Svg$az, _extends$aD({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 6h-2v9H6v2c0 .55.45 1 1 1h11l4 4V7c0-.55-.45-1-1-1zm-4 6V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v14l4-4h10c.55 0 1-.45 1-1z"
  }));
};

SvgQuestionAnswer.displayName = "SvgQuestionAnswer";
SvgQuestionAnswer.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aE() { _extends$aE = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aE.apply(this, arguments); }
var Svg$aA = styled("svg")({
  flex: "none"
}, space, color);

var SvgQueue = function SvgQueue(props) {
  return createElement(Svg$aA, _extends$aE({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9h-4v4h-2v-4H9V9h4V5h2v4h4v2z"
  }));
};

SvgQueue.displayName = "SvgQueue";
SvgQueue.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aF() { _extends$aF = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aF.apply(this, arguments); }
var Svg$aB = styled("svg")({
  flex: "none"
}, space, color);

var SvgQueueMusic = function SvgQueueMusic(props) {
  return createElement(Svg$aB, _extends$aF({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M15 6H3v2h12V6zm0 4H3v2h12v-2zM3 16h8v-2H3v2zM17 6v8.18c-.31-.11-.65-.18-1-.18-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3V8h3V6h-5z"
  }));
};

SvgQueueMusic.displayName = "SvgQueueMusic";
SvgQueueMusic.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aG() { _extends$aG = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aG.apply(this, arguments); }
var Svg$aC = styled("svg")({
  flex: "none"
}, space, color);

var SvgQueuePlayNext = function SvgQueuePlayNext(props) {
  return createElement(Svg$aC, _extends$aG({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "queuePlayNext_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "queuePlayNext_svg__b"
  }, createElement("use", {
    xlinkHref: "#queuePlayNext_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#queuePlayNext_svg__b)",
    d: "M21 3H3c-1.11 0-2 .89-2 2v12a2 2 0 002 2h5v2h8v-2h2v-2H3V5h18v8h2V5a2 2 0 00-2-2zm-8 7V7h-2v3H8v2h3v3h2v-3h3v-2h-3zm11 8l-4.5 4.5L18 21l3-3-3-3 1.5-1.5L24 18z"
  }));
};

SvgQueuePlayNext.displayName = "SvgQueuePlayNext";
SvgQueuePlayNext.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aH() { _extends$aH = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aH.apply(this, arguments); }
var Svg$aD = styled("svg")({
  flex: "none"
}, space, color);

var SvgRadio = function SvgRadio(props) {
  return createElement(Svg$aD, _extends$aH({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3.24 6.15C2.51 6.43 2 7.17 2 8v12a2 2 0 002 2h16a2 2 0 002-2V8c0-1.11-.89-2-2-2H8.3l8.26-3.34L15.88 1 3.24 6.15zM7 20c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm13-8h-2v-2h-2v2H4V8h16v4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgRadio.displayName = "SvgRadio";
SvgRadio.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aI() { _extends$aI = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aI.apply(this, arguments); }
var Svg$aE = styled("svg")({
  flex: "none"
}, space, color);

var SvgRadioButtonChecked = function SvgRadioButtonChecked(props) {
  return createElement(Svg$aE, _extends$aI({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgRadioButtonChecked.displayName = "SvgRadioButtonChecked";
SvgRadioButtonChecked.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aJ() { _extends$aJ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aJ.apply(this, arguments); }
var Svg$aF = styled("svg")({
  flex: "none"
}, space, color);

var SvgRadioButtonUnchecked = function SvgRadioButtonUnchecked(props) {
  return createElement(Svg$aF, _extends$aJ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgRadioButtonUnchecked.displayName = "SvgRadioButtonUnchecked";
SvgRadioButtonUnchecked.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aK() { _extends$aK = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aK.apply(this, arguments); }
var Svg$aG = styled("svg")({
  flex: "none"
}, space, color);

var SvgRateReview = function SvgRateReview(props) {
  return createElement(Svg$aG, _extends$aK({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0zm15.35 6.41l-1.77-1.77c-.2-.2-.51-.2-.71 0L6 11.53V14h2.47l6.88-6.88c.2-.19.2-.51 0-.71z",
    fill: "none"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 14v-2.47l6.88-6.88c.2-.2.51-.2.71 0l1.77 1.77c.2.2.2.51 0 .71L8.47 14H6zm12 0h-7.5l2-2H18v2z"
  }));
};

SvgRateReview.displayName = "SvgRateReview";
SvgRateReview.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aL() { _extends$aL = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aL.apply(this, arguments); }
var Svg$aH = styled("svg")({
  flex: "none"
}, space, color);

var SvgReceipt = function SvgReceipt(props) {
  return createElement(Svg$aH, _extends$aL({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 17H6v-2h12v2zm0-4H6v-2h12v2zm0-4H6V7h12v2zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2v20z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgReceipt.displayName = "SvgReceipt";
SvgReceipt.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aM() { _extends$aM = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aM.apply(this, arguments); }
var Svg$aI = styled("svg")({
  flex: "none"
}, space, color);

var SvgRecentActors = function SvgRecentActors(props) {
  return createElement(Svg$aI, _extends$aM({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 5v14h2V5h-2zm-4 14h2V5h-2v14zM14 5H2c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM8 7.75c1.24 0 2.25 1.01 2.25 2.25S9.24 12.25 8 12.25 5.75 11.24 5.75 10 6.76 7.75 8 7.75zM12.5 17h-9v-.75c0-1.5 3-2.25 4.5-2.25s4.5.75 4.5 2.25V17z"
  }));
};

SvgRecentActors.displayName = "SvgRecentActors";
SvgRecentActors.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aN() { _extends$aN = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aN.apply(this, arguments); }
var Svg$aJ = styled("svg")({
  flex: "none"
}, space, color);

var SvgRecordVoiceOver = function SvgRecordVoiceOver(props) {
  return createElement(Svg$aJ, _extends$aN({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 9,
    cy: 9,
    r: 4
  }), createElement("path", {
    d: "M9 15c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4zm7.76-9.64l-1.68 1.69c.84 1.18.84 2.71 0 3.89l1.68 1.69c2.02-2.02 2.02-5.07 0-7.27zM20.07 2l-1.63 1.63c2.77 3.02 2.77 7.56 0 10.74L20.07 16c3.9-3.89 3.91-9.95 0-14z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgRecordVoiceOver.displayName = "SvgRecordVoiceOver";
SvgRecordVoiceOver.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aO() { _extends$aO = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aO.apply(this, arguments); }
var Svg$aK = styled("svg")({
  flex: "none"
}, space, color);

var SvgRedeem = function SvgRedeem(props) {
  return createElement(Svg$aK, _extends$aO({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 00-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgRedeem.displayName = "SvgRedeem";
SvgRedeem.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aP() { _extends$aP = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aP.apply(this, arguments); }
var Svg$aL = styled("svg")({
  flex: "none"
}, space, color);

var SvgRedo = function SvgRedo(props) {
  return createElement(Svg$aL, _extends$aP({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16a8.002 8.002 0 017.6-5.5c1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z"
  }));
};

SvgRedo.displayName = "SvgRedo";
SvgRedo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aQ() { _extends$aQ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aQ.apply(this, arguments); }
var Svg$aM = styled("svg")({
  flex: "none"
}, space, color);

var SvgRefresh = function SvgRefresh(props) {
  return createElement(Svg$aM, _extends$aQ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17.65 6.35A7.958 7.958 0 0012 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08A5.99 5.99 0 0112 18c-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"
  }));
};

SvgRefresh.displayName = "SvgRefresh";
SvgRefresh.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aR() { _extends$aR = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aR.apply(this, arguments); }
var Svg$aN = styled("svg")({
  flex: "none"
}, space, color);

var SvgRemove = function SvgRemove(props) {
  return createElement(Svg$aN, _extends$aR({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 13H5v-2h14v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgRemove.displayName = "SvgRemove";
SvgRemove.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aS() { _extends$aS = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aS.apply(this, arguments); }
var Svg$aO = styled("svg")({
  flex: "none"
}, space, color);

var SvgRemoveCircle = function SvgRemoveCircle(props) {
  return createElement(Svg$aO, _extends$aS({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z"
  }));
};

SvgRemoveCircle.displayName = "SvgRemoveCircle";
SvgRemoveCircle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aT() { _extends$aT = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aT.apply(this, arguments); }
var Svg$aP = styled("svg")({
  flex: "none"
}, space, color);

var SvgRemoveCircleOutline = function SvgRemoveCircleOutline(props) {
  return createElement(Svg$aP, _extends$aT({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"
  }));
};

SvgRemoveCircleOutline.displayName = "SvgRemoveCircleOutline";
SvgRemoveCircleOutline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aU() { _extends$aU = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aU.apply(this, arguments); }
var Svg$aQ = styled("svg")({
  flex: "none"
}, space, color);

var SvgRemoveFromQueue = function SvgRemoveFromQueue(props) {
  return createElement(Svg$aQ, _extends$aU({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "removeFromQueue_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "removeFromQueue_svg__b"
  }, createElement("use", {
    xlinkHref: "#removeFromQueue_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#removeFromQueue_svg__b)",
    d: "M21 3H3c-1.11 0-2 .89-2 2v12a2 2 0 002 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5a2 2 0 00-2-2zm0 14H3V5h18v12zm-5-7v2H8v-2h8z"
  }));
};

SvgRemoveFromQueue.displayName = "SvgRemoveFromQueue";
SvgRemoveFromQueue.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aV() { _extends$aV = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aV.apply(this, arguments); }
var Svg$aR = styled("svg")({
  flex: "none"
}, space, color);

var SvgRemoveRedEye = function SvgRemoveRedEye(props) {
  return createElement(Svg$aR, _extends$aV({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
  }));
};

SvgRemoveRedEye.displayName = "SvgRemoveRedEye";
SvgRemoveRedEye.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aW() { _extends$aW = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aW.apply(this, arguments); }
var Svg$aS = styled("svg")({
  flex: "none"
}, space, color);

var SvgRemoveShoppingCart = function SvgRemoveShoppingCart(props) {
  return createElement(Svg$aS, _extends$aW({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22.73 22.73L2.77 2.77 2 2l-.73-.73L0 2.54l4.39 4.39 2.21 4.66-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h7.46l1.38 1.38A1.997 1.997 0 0017 22c.67 0 1.26-.33 1.62-.84L21.46 24l1.27-1.27zM7.42 15c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h2.36l2 2H7.42zm8.13-2c.75 0 1.41-.41 1.75-1.03l3.58-6.49A1.003 1.003 0 0020 4H6.54l9.01 9zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgRemoveShoppingCart.displayName = "SvgRemoveShoppingCart";
SvgRemoveShoppingCart.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aX() { _extends$aX = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aX.apply(this, arguments); }
var Svg$aT = styled("svg")({
  flex: "none"
}, space, color);

var SvgReorder = function SvgReorder(props) {
  return createElement(Svg$aT, _extends$aX({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M3 15h18v-2H3v2zm0 4h18v-2H3v2zm0-8h18V9H3v2zm0-6v2h18V5H3z"
  }));
};

SvgReorder.displayName = "SvgReorder";
SvgReorder.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aY() { _extends$aY = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aY.apply(this, arguments); }
var Svg$aU = styled("svg")({
  flex: "none"
}, space, color);

var SvgRepeat = function SvgRepeat(props) {
  return createElement(Svg$aU, _extends$aY({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4z"
  }));
};

SvgRepeat.displayName = "SvgRepeat";
SvgRepeat.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$aZ() { _extends$aZ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$aZ.apply(this, arguments); }
var Svg$aV = styled("svg")({
  flex: "none"
}, space, color);

var SvgRepeatOne = function SvgRepeatOne(props) {
  return createElement(Svg$aV, _extends$aZ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7 7h10v3l4-4-4-4v3H5v6h2V7zm10 10H7v-3l-4 4 4 4v-3h12v-6h-2v4zm-4-2V9h-1l-2 1v1h1.5v4H13z"
  }));
};

SvgRepeatOne.displayName = "SvgRepeatOne";
SvgRepeatOne.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a_() { _extends$a_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a_.apply(this, arguments); }
var Svg$aW = styled("svg")({
  flex: "none"
}, space, color);

var SvgReplay = function SvgReplay(props) {
  return createElement(Svg$aW, _extends$a_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z"
  }));
};

SvgReplay.displayName = "SvgReplay";
SvgReplay.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$a$() { _extends$a$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a$.apply(this, arguments); }
var Svg$aX = styled("svg")({
  flex: "none"
}, space, color);

var SvgReplay10 = function SvgReplay10(props) {
  return createElement(Svg$aX, _extends$a$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "replay10_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "replay10_svg__b"
  }, createElement("use", {
    xlinkHref: "#replay10_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-1.1 11H10v-3.3L9 13v-.7l1.8-.6h.1V16zm4.3-1.8c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1c.2.1.3.2.5.3s.2.3.3.6.1.5.1.8v.7zm-.9-.8v-.5s-.1-.2-.1-.3-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z",
    clipPath: "url(#replay10_svg__b)"
  }));
};

SvgReplay10.displayName = "SvgReplay10";
SvgReplay10.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b0() { _extends$b0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b0.apply(this, arguments); }
var Svg$aY = styled("svg")({
  flex: "none"
}, space, color);

var SvgReplay30 = function SvgReplay30(props) {
  return createElement(Svg$aY, _extends$b0({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "replay30_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "replay30_svg__b"
  }, createElement("use", {
    xlinkHref: "#replay30_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-2.4 8.5h.4c.2 0 .4-.1.5-.2s.2-.2.2-.4v-.2s-.1-.1-.1-.2-.1-.1-.2-.1h-.5s-.1.1-.2.1-.1.1-.1.2v.2h-1c0-.2 0-.3.1-.5s.2-.3.3-.4.3-.2.4-.2.4-.1.5-.1c.2 0 .4 0 .6.1s.3.1.5.2.2.2.3.4.1.3.1.5v.3s-.1.2-.1.3-.1.2-.2.2-.2.1-.3.2c.2.1.4.2.5.4s.2.4.2.6c0 .2 0 .4-.1.5s-.2.3-.3.4-.3.2-.5.2-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.4-.1-.6h.8v.2s.1.1.1.2.1.1.2.1h.5s.1-.1.2-.1.1-.1.1-.2v-.5s-.1-.1-.1-.2-.1-.1-.2-.1h-.6v-.7zm5.7.7c0 .3 0 .6-.1.8l-.3.6s-.3.3-.5.3-.4.1-.6.1-.4 0-.6-.1-.3-.2-.5-.3-.2-.3-.3-.6-.1-.5-.1-.8v-.7c0-.3 0-.6.1-.8l.3-.6s.3-.3.5-.3.4-.1.6-.1.4 0 .6.1.3.2.5.3.2.3.3.6.1.5.1.8v.7zm-.8-.8v-.5c0-.1-.1-.2-.1-.3s-.1-.1-.2-.2-.2-.1-.3-.1-.2 0-.3.1l-.2.2s-.1.2-.1.3v2s.1.2.1.3.1.1.2.2.2.1.3.1.2 0 .3-.1l.2-.2s.1-.2.1-.3v-1.5z",
    clipPath: "url(#replay30_svg__b)"
  }));
};

SvgReplay30.displayName = "SvgReplay30";
SvgReplay30.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b1() { _extends$b1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b1.apply(this, arguments); }
var Svg$aZ = styled("svg")({
  flex: "none"
}, space, color);

var SvgReplay5 = function SvgReplay5(props) {
  return createElement(Svg$aZ, _extends$b1({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "replay5_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "replay5_svg__b"
  }, createElement("use", {
    xlinkHref: "#replay5_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M12 5V1L7 6l5 5V7c3.3 0 6 2.7 6 6s-2.7 6-6 6-6-2.7-6-6H4c0 4.4 3.6 8 8 8s8-3.6 8-8-3.6-8-8-8zm-1.3 8.9l.2-2.2h2.4v.7h-1.7l-.1.9s.1 0 .1-.1.1 0 .1-.1.1 0 .2 0h.2c.2 0 .4 0 .5.1s.3.2.4.3.2.3.3.5.1.4.1.6c0 .2 0 .4-.1.5s-.1.3-.3.5-.3.2-.4.3-.4.1-.6.1c-.2 0-.4 0-.5-.1s-.3-.1-.5-.2-.2-.2-.3-.4-.1-.3-.1-.5h.8c0 .2.1.3.2.4s.2.1.4.1c.1 0 .2 0 .3-.1l.2-.2s.1-.2.1-.3v-.6l-.1-.2-.2-.2s-.2-.1-.3-.1h-.2s-.1 0-.2.1-.1 0-.1.1-.1.1-.1.1h-.7z",
    clipPath: "url(#replay5_svg__b)"
  }));
};

SvgReplay5.displayName = "SvgReplay5";
SvgReplay5.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b2() { _extends$b2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b2.apply(this, arguments); }
var Svg$a_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgReply = function SvgReply(props) {
  return createElement(Svg$a_, _extends$b2({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 9V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgReply.displayName = "SvgReply";
SvgReply.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b3() { _extends$b3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b3.apply(this, arguments); }
var Svg$a$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgReplyAll = function SvgReplyAll(props) {
  return createElement(Svg$a$, _extends$b3({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 8V5l-7 7 7 7v-3l-4-4 4-4zm6 1V5l-7 7 7 7v-4.1c5 0 8.5 1.6 11 5.1-1-5-4-10-11-11z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgReplyAll.displayName = "SvgReplyAll";
SvgReplyAll.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b4() { _extends$b4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b4.apply(this, arguments); }
var Svg$b0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgReport = function SvgReport(props) {
  return createElement(Svg$b0, _extends$b4({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.73 3H8.27L3 8.27v7.46L8.27 21h7.46L21 15.73V8.27L15.73 3zM12 17.3c-.72 0-1.3-.58-1.3-1.3 0-.72.58-1.3 1.3-1.3.72 0 1.3.58 1.3 1.3 0 .72-.58 1.3-1.3 1.3zm1-4.3h-2V7h2v6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgReport.displayName = "SvgReport";
SvgReport.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b5() { _extends$b5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b5.apply(this, arguments); }
var Svg$b1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgReportProblem = function SvgReportProblem(props) {
  return createElement(Svg$b1, _extends$b5({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
  }));
};

SvgReportProblem.displayName = "SvgReportProblem";
SvgReportProblem.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b6() { _extends$b6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b6.apply(this, arguments); }
var Svg$b2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgRestaurant = function SvgRestaurant(props) {
  return createElement(Svg$b2, _extends$b6({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 9H9V2H7v7H5V2H3v7c0 2.12 1.66 3.84 3.75 3.97V22h2.5v-9.03C11.34 12.84 13 11.12 13 9V2h-2v7zm5-3v8h2.5v8H21V2c-2.76 0-5 2.24-5 4z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgRestaurant.displayName = "SvgRestaurant";
SvgRestaurant.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b7() { _extends$b7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b7.apply(this, arguments); }
var Svg$b3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgRestaurantMenu = function SvgRestaurantMenu(props) {
  return createElement(Svg$b3, _extends$b7({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M8.1 13.34l2.83-2.83L3.91 3.5a4.008 4.008 0 000 5.66l4.19 4.18zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L3.7 19.87l1.41 1.41L12 14.41l6.88 6.88 1.41-1.41L13.41 13l1.47-1.47z"
  }));
};

SvgRestaurantMenu.displayName = "SvgRestaurantMenu";
SvgRestaurantMenu.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b8() { _extends$b8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b8.apply(this, arguments); }
var Svg$b4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgRestore = function SvgRestore(props) {
  return createElement(Svg$b4, _extends$b8({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M13 3a9 9 0 00-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42A8.954 8.954 0 0013 21a9 9 0 000-18zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z"
  }));
};

SvgRestore.displayName = "SvgRestore";
SvgRestore.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b9() { _extends$b9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b9.apply(this, arguments); }
var Svg$b5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgRestorePage = function SvgRestorePage(props) {
  return createElement(Svg$b5, _extends$b9({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm-2 16c-2.05 0-3.81-1.24-4.58-3h1.71c.63.9 1.68 1.5 2.87 1.5 1.93 0 3.5-1.57 3.5-3.5S13.93 9.5 12 9.5a3.5 3.5 0 00-3.1 1.9l1.6 1.6h-4V9l1.3 1.3C8.69 8.92 10.23 8 12 8c2.76 0 5 2.24 5 5s-2.24 5-5 5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgRestorePage.displayName = "SvgRestorePage";
SvgRestorePage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ba() { _extends$ba = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ba.apply(this, arguments); }
var Svg$b6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgRingVolume = function SvgRingVolume(props) {
  return createElement(Svg$b6, _extends$ba({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M23.71 16.67A16.971 16.971 0 0012 12C7.46 12 3.34 13.78.29 16.67c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2.48 2.48c.18.18.43.29.71.29.27 0 .52-.11.7-.28.79-.74 1.69-1.36 2.66-1.85.33-.16.56-.5.56-.9v-3.1c1.45-.48 3-.73 4.6-.73s3.15.25 4.6.72v3.1c0 .39.23.74.56.9.98.49 1.87 1.12 2.66 1.85.18.18.43.28.7.28.28 0 .53-.11.71-.29l2.48-2.48c.18-.18.29-.43.29-.71a.99.99 0 00-.29-.7zM21.16 6.26l-1.41-1.41-3.56 3.55 1.41 1.41s3.45-3.52 3.56-3.55zM13 2h-2v5h2V2zM6.4 9.81L7.81 8.4 4.26 4.84 2.84 6.26c.11.03 3.56 3.55 3.56 3.55z"
  }));
};

SvgRingVolume.displayName = "SvgRingVolume";
SvgRingVolume.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bb() { _extends$bb = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bb.apply(this, arguments); }
var Svg$b7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgRoom = function SvgRoom(props) {
  return createElement(Svg$b7, _extends$bb({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5a2.5 2.5 0 010-5 2.5 2.5 0 010 5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgRoom.displayName = "SvgRoom";
SvgRoom.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bc() { _extends$bc = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bc.apply(this, arguments); }
var Svg$b8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgRoomService = function SvgRoomService(props) {
  return createElement(Svg$b8, _extends$bc({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M2 17h20v2H2zm11.84-9.21A2.006 2.006 0 0012 5a2.006 2.006 0 00-1.84 2.79C6.25 8.6 3.27 11.93 3 16h18c-.27-4.07-3.25-7.4-7.16-8.21z"
  }));
};

SvgRoomService.displayName = "SvgRoomService";
SvgRoomService.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bd() { _extends$bd = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bd.apply(this, arguments); }
var Svg$b9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgRotate90DegreesCcw = function SvgRotate90DegreesCcw(props) {
  return createElement(Svg$b9, _extends$bd({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7.34 6.41L.86 12.9l6.49 6.48 6.49-6.48-6.5-6.49zM3.69 12.9l3.66-3.66L11 12.9l-3.66 3.66-3.65-3.66zm15.67-6.26A8.95 8.95 0 0013 4V.76L8.76 5 13 9.24V6c1.79 0 3.58.68 4.95 2.05a7.007 7.007 0 010 9.9 6.973 6.973 0 01-7.79 1.44l-1.49 1.49C10.02 21.62 11.51 22 13 22c2.3 0 4.61-.88 6.36-2.64a8.98 8.98 0 000-12.72z"
  }));
};

SvgRotate90DegreesCcw.displayName = "SvgRotate90DegreesCcw";
SvgRotate90DegreesCcw.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$be() { _extends$be = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$be.apply(this, arguments); }
var Svg$ba = styled("svg")({
  flex: "none"
}, space, color);

var SvgRotateLeft = function SvgRotateLeft(props) {
  return createElement(Svg$ba, _extends$be({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7.11 8.53L5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z"
  }));
};

SvgRotateLeft.displayName = "SvgRotateLeft";
SvgRotateLeft.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bf() { _extends$bf = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bf.apply(this, arguments); }
var Svg$bb = styled("svg")({
  flex: "none"
}, space, color);

var SvgRotateRight = function SvgRotateRight(props) {
  return createElement(Svg$bb, _extends$bf({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.55 5.55L11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10l4.55-4.45zM19.93 11a7.906 7.906 0 00-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47h2.02zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03zm3.89-2.42l1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48z"
  }));
};

SvgRotateRight.displayName = "SvgRotateRight";
SvgRotateRight.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bg() { _extends$bg = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bg.apply(this, arguments); }
var Svg$bc = styled("svg")({
  flex: "none"
}, space, color);

var SvgRoundedCorner = function SvgRoundedCorner(props) {
  return createElement(Svg$bc, _extends$bg({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "roundedCorner_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "roundedCorner_svg__b"
  }, createElement("use", {
    xlinkHref: "#roundedCorner_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#roundedCorner_svg__b)",
    d: "M19 19h2v2h-2v-2zm0-2h2v-2h-2v2zM3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm0-4h2V3H3v2zm4 0h2V3H7v2zm8 16h2v-2h-2v2zm-4 0h2v-2h-2v2zm4 0h2v-2h-2v2zm-8 0h2v-2H7v2zm-4 0h2v-2H3v2zM21 8c0-2.76-2.24-5-5-5h-5v2h5c1.65 0 3 1.35 3 3v5h2V8z"
  }));
};

SvgRoundedCorner.displayName = "SvgRoundedCorner";
SvgRoundedCorner.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bh() { _extends$bh = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bh.apply(this, arguments); }
var Svg$bd = styled("svg")({
  flex: "none"
}, space, color);

var SvgRouter = function SvgRouter(props) {
  return createElement(Svg$bd, _extends$bh({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M20.2 5.9l.8-.8C19.6 3.7 17.8 3 16 3s-3.6.7-5 2.1l.8.8C13 4.8 14.5 4.2 16 4.2s3 .6 4.2 1.7zm-.9.8c-.9-.9-2.1-1.4-3.3-1.4s-2.4.5-3.3 1.4l.8.8c.7-.7 1.6-1 2.5-1 .9 0 1.8.3 2.5 1l.8-.8zM19 13h-2V9h-2v4H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-4c0-1.1-.9-2-2-2zM8 18H6v-2h2v2zm3.5 0h-2v-2h2v2zm3.5 0h-2v-2h2v2z"
  }));
};

SvgRouter.displayName = "SvgRouter";
SvgRouter.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bi() { _extends$bi = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bi.apply(this, arguments); }
var Svg$be = styled("svg")({
  flex: "none"
}, space, color);

var SvgRowing = function SvgRowing(props) {
  return createElement(Svg$be, _extends$bi({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "rowing_svg__a",
    d: "M24 24H0V0h24v24z"
  })), createElement("clipPath", {
    id: "rowing_svg__b"
  }, createElement("use", {
    xlinkHref: "#rowing_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#rowing_svg__b)",
    d: "M8.5 14.5L4 19l1.5 1.5L9 17h2l-2.5-2.5zM15 1c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 20.01L18 24l-2.99-3.01V19.5l-7.1-7.09c-.31.05-.61.07-.91.07v-2.16c1.66.03 3.61-.87 4.67-2.04l1.4-1.55c.19-.21.43-.38.69-.5.29-.14.62-.23.96-.23h.03C15.99 6.01 17 7.02 17 8.26v5.75c0 .84-.35 1.61-.92 2.16l-3.58-3.58v-2.27c-.63.52-1.43 1.02-2.29 1.39L16.5 18H18l3 3.01z"
  }));
};

SvgRowing.displayName = "SvgRowing";
SvgRowing.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bj() { _extends$bj = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bj.apply(this, arguments); }
var Svg$bf = styled("svg")({
  flex: "none"
}, space, color);

var SvgRssFeed = function SvgRssFeed(props) {
  return createElement(Svg$bf, _extends$bj({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("circle", {
    cx: 6.18,
    cy: 17.82,
    r: 2.18
  }), createElement("path", {
    d: "M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z"
  }));
};

SvgRssFeed.displayName = "SvgRssFeed";
SvgRssFeed.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bk() { _extends$bk = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bk.apply(this, arguments); }
var Svg$bg = styled("svg")({
  flex: "none"
}, space, color);

var SvgRvHookup = function SvgRvHookup(props) {
  return createElement(Svg$bg, _extends$bk({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M14 11h4v3h-4z"
  }), createElement("path", {
    d: "M20 17v-6c0-1.1-.9-2-2-2H7V7l-3 3 3 3v-2h4v3H4v3c0 1.1.9 2 2 2h2c0 1.66 1.34 3 3 3s3-1.34 3-3h8v-2h-2zm-9 3c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm7-6h-4v-3h4v3zM17 2v2H9v2h8v2l3-3z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgRvHookup.displayName = "SvgRvHookup";
SvgRvHookup.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bl() { _extends$bl = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bl.apply(this, arguments); }
var Svg$bh = styled("svg")({
  flex: "none"
}, space, color);

var SvgSatellite = function SvgSatellite(props) {
  return createElement(Svg$bh, _extends$bl({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5 4.99h3C8 6.65 6.66 8 5 8V4.99zM5 12v-2c2.76 0 5-2.25 5-5.01h2C12 8.86 8.87 12 5 12zm0 6l3.5-4.5 2.5 3.01L14.5 12l4.5 6H5z"
  }));
};

SvgSatellite.displayName = "SvgSatellite";
SvgSatellite.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bm() { _extends$bm = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bm.apply(this, arguments); }
var Svg$bi = styled("svg")({
  flex: "none"
}, space, color);

var SvgSave = function SvgSave(props) {
  return createElement(Svg$bi, _extends$bm({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17 3H5a2 2 0 00-2 2v14a2 2 0 002 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z"
  }));
};

SvgSave.displayName = "SvgSave";
SvgSave.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bn() { _extends$bn = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bn.apply(this, arguments); }
var Svg$bj = styled("svg")({
  flex: "none"
}, space, color);

var SvgScanner = function SvgScanner(props) {
  return createElement(Svg$bj, _extends$bn({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.8 10.7L4.2 5l-.7 1.9L17.6 12H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-5.5c0-.8-.5-1.6-1.2-1.8zM7 17H5v-2h2v2zm12 0H9v-2h10v2z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgScanner.displayName = "SvgScanner";
SvgScanner.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bo() { _extends$bo = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bo.apply(this, arguments); }
var Svg$bk = styled("svg")({
  flex: "none"
}, space, color);

var SvgSchedule = function SvgSchedule(props) {
  return createElement(Svg$bk, _extends$bo({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"
  }));
};

SvgSchedule.displayName = "SvgSchedule";
SvgSchedule.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bp() { _extends$bp = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bp.apply(this, arguments); }
var Svg$bl = styled("svg")({
  flex: "none"
}, space, color);

var SvgSchool = function SvgSchool(props) {
  return createElement(Svg$bl, _extends$bp({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82zM12 3L1 9l11 6 9-4.91V17h2V9L12 3z"
  }));
};

SvgSchool.displayName = "SvgSchool";
SvgSchool.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bq() { _extends$bq = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bq.apply(this, arguments); }
var Svg$bm = styled("svg")({
  flex: "none"
}, space, color);

var SvgScreenLockLandscape = function SvgScreenLockLandscape(props) {
  return createElement(Svg$bm, _extends$bq({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 5H3c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-2 12H5V7h14v10zm-9-1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1v-1a2 2 0 10-4 0v1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1zm.8-6c0-.66.54-1.2 1.2-1.2.66 0 1.2.54 1.2 1.2v1h-2.4v-1z"
  }));
};

SvgScreenLockLandscape.displayName = "SvgScreenLockLandscape";
SvgScreenLockLandscape.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$br() { _extends$br = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$br.apply(this, arguments); }
var Svg$bn = styled("svg")({
  flex: "none"
}, space, color);

var SvgScreenLockPortrait = function SvgScreenLockPortrait(props) {
  return createElement(Svg$bn, _extends$br({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 16h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1v-1a2 2 0 10-4 0v1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1zm.8-6c0-.66.54-1.2 1.2-1.2.66 0 1.2.54 1.2 1.2v1h-2.4v-1zM17 1H7c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-2-2-2zm0 18H7V5h10v14z"
  }));
};

SvgScreenLockPortrait.displayName = "SvgScreenLockPortrait";
SvgScreenLockPortrait.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bs() { _extends$bs = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bs.apply(this, arguments); }
var Svg$bo = styled("svg")({
  flex: "none"
}, space, color);

var SvgScreenLockRotation = function SvgScreenLockRotation(props) {
  return createElement(Svg$bo, _extends$bs({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M23.25 12.77l-2.57-2.57-1.41 1.41 2.22 2.22-5.66 5.66L4.51 8.17l5.66-5.66 2.1 2.1 1.41-1.41L11.23.75a1.49 1.49 0 00-2.12 0L2.75 7.11a1.49 1.49 0 000 2.12l12.02 12.02c.59.59 1.54.59 2.12 0l6.36-6.36c.59-.59.59-1.54 0-2.12zM8.47 20.48A10.487 10.487 0 012.5 12H1c.51 6.16 5.66 11 11.95 11l.66-.03-3.81-3.82-1.33 1.33zM16 9h5c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1v-.5a2.5 2.5 0 00-5 0V3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm.8-6.5c0-.94.76-1.7 1.7-1.7s1.7.76 1.7 1.7V3h-3.4v-.5z"
  }));
};

SvgScreenLockRotation.displayName = "SvgScreenLockRotation";
SvgScreenLockRotation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bt() { _extends$bt = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bt.apply(this, arguments); }
var Svg$bp = styled("svg")({
  flex: "none"
}, space, color);

var SvgScreenRotation = function SvgScreenRotation(props) {
  return createElement(Svg$bp, _extends$bt({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16.48 2.52c3.27 1.55 5.61 4.72 5.97 8.48h1.5C23.44 4.84 18.29 0 12 0l-.66.03 3.81 3.81 1.33-1.32zm-6.25-.77a1.49 1.49 0 00-2.12 0L1.75 8.11a1.49 1.49 0 000 2.12l12.02 12.02c.59.59 1.54.59 2.12 0l6.36-6.36c.59-.59.59-1.54 0-2.12L10.23 1.75zm4.6 19.44L2.81 9.17l6.36-6.36 12.02 12.02-6.36 6.36zm-7.31.29A10.487 10.487 0 011.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32z"
  }));
};

SvgScreenRotation.displayName = "SvgScreenRotation";
SvgScreenRotation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bu() { _extends$bu = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bu.apply(this, arguments); }
var Svg$bq = styled("svg")({
  flex: "none"
}, space, color);

var SvgScreenShare = function SvgScreenShare(props) {
  return createElement(Svg$bq, _extends$bu({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 18c1.1 0 1.99-.9 1.99-2L22 6a2 2 0 00-2-2H4c-1.11 0-2 .89-2 2v10a2 2 0 002 2H0v2h24v-2h-4zm-7-3.53v-2.19c-2.78 0-4.61.85-6 2.72.56-2.67 2.11-5.33 6-5.87V7l4 3.73-4 3.74z"
  }));
};

SvgScreenShare.displayName = "SvgScreenShare";
SvgScreenShare.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bv() { _extends$bv = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bv.apply(this, arguments); }
var Svg$br = styled("svg")({
  flex: "none"
}, space, color);

var SvgSdCard = function SvgSdCard(props) {
  return createElement(Svg$br, _extends$bv({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18 2h-8L4.02 8 4 20c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 6h-2V4h2v4zm3 0h-2V4h2v4zm3 0h-2V4h2v4z"
  }));
};

SvgSdCard.displayName = "SvgSdCard";
SvgSdCard.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bw() { _extends$bw = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bw.apply(this, arguments); }
var Svg$bs = styled("svg")({
  flex: "none"
}, space, color);

var SvgSdStorage = function SvgSdStorage(props) {
  return createElement(Svg$bs, _extends$bw({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 2h-8L4.02 8 4 20c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 6h-2V4h2v4zm3 0h-2V4h2v4zm3 0h-2V4h2v4z"
  }));
};

SvgSdStorage.displayName = "SvgSdStorage";
SvgSdStorage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bx() { _extends$bx = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bx.apply(this, arguments); }
var Svg$bt = styled("svg")({
  flex: "none"
}, space, color);

var SvgSearch = function SvgSearch(props) {
  return createElement(Svg$bt, _extends$bx({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSearch.displayName = "SvgSearch";
SvgSearch.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$by() { _extends$by = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$by.apply(this, arguments); }
var Svg$bu = styled("svg")({
  flex: "none"
}, space, color);

var SvgSecurity = function SvgSecurity(props) {
  return createElement(Svg$bu, _extends$by({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11v8.8z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSecurity.displayName = "SvgSecurity";
SvgSecurity.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bz() { _extends$bz = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bz.apply(this, arguments); }
var Svg$bv = styled("svg")({
  flex: "none"
}, space, color);

var SvgSelectAll = function SvgSelectAll(props) {
  return createElement(Svg$bv, _extends$bz({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2zM7 17h10V7H7v10zm2-8h6v6H9V9z"
  }));
};

SvgSelectAll.displayName = "SvgSelectAll";
SvgSelectAll.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bA() { _extends$bA = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bA.apply(this, arguments); }
var Svg$bw = styled("svg")({
  flex: "none"
}, space, color);

var SvgSend = function SvgSend(props) {
  return createElement(Svg$bw, _extends$bA({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSend.displayName = "SvgSend";
SvgSend.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bB() { _extends$bB = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bB.apply(this, arguments); }
var Svg$bx = styled("svg")({
  flex: "none"
}, space, color);

var SvgSentimentDissatisfied = function SvgSentimentDissatisfied(props) {
  return createElement(Svg$bx, _extends$bB({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("circle", {
    cx: 15.5,
    cy: 9.5,
    r: 1.5
  }), createElement("circle", {
    cx: 8.5,
    cy: 9.5,
    r: 1.5
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-6c-2.33 0-4.32 1.45-5.12 3.5h1.67c.69-1.19 1.97-2 3.45-2s2.75.81 3.45 2h1.67c-.8-2.05-2.79-3.5-5.12-3.5z"
  }));
};

SvgSentimentDissatisfied.displayName = "SvgSentimentDissatisfied";
SvgSentimentDissatisfied.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bC() { _extends$bC = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bC.apply(this, arguments); }
var Svg$by = styled("svg")({
  flex: "none"
}, space, color);

var SvgSentimentNeutral = function SvgSentimentNeutral(props) {
  return createElement(Svg$by, _extends$bC({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 14h6v1.5H9z"
  }), createElement("circle", {
    cx: 15.5,
    cy: 9.5,
    r: 1.5
  }), createElement("circle", {
    cx: 8.5,
    cy: 9.5,
    r: 1.5
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgSentimentNeutral.displayName = "SvgSentimentNeutral";
SvgSentimentNeutral.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bD() { _extends$bD = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bD.apply(this, arguments); }
var Svg$bz = styled("svg")({
  flex: "none"
}, space, color);

var SvgSentimentSatisfied = function SvgSentimentSatisfied(props) {
  return createElement(Svg$bz, _extends$bD({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("circle", {
    cx: 15.5,
    cy: 9.5,
    r: 1.5
  }), createElement("circle", {
    cx: 8.5,
    cy: 9.5,
    r: 1.5
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-4c-1.48 0-2.75-.81-3.45-2H6.88a5.495 5.495 0 0010.24 0h-1.67c-.7 1.19-1.97 2-3.45 2z"
  }));
};

SvgSentimentSatisfied.displayName = "SvgSentimentSatisfied";
SvgSentimentSatisfied.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bE() { _extends$bE = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bE.apply(this, arguments); }
var Svg$bA = styled("svg")({
  flex: "none"
}, space, color);

var SvgSentimentVeryDissatisfied = function SvgSentimentVeryDissatisfied(props) {
  return createElement(Svg$bA, _extends$bE({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.47 2 12s4.47 10 9.99 10S22 17.53 22 12 17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm4.18-12.24l-1.06 1.06-1.06-1.06L13 8.82l1.06 1.06L13 10.94 14.06 12l1.06-1.06L16.18 12l1.06-1.06-1.06-1.06 1.06-1.06zM7.82 12l1.06-1.06L9.94 12 11 10.94 9.94 9.88 11 8.82 9.94 7.76 8.88 8.82 7.82 7.76 6.76 8.82l1.06 1.06-1.06 1.06zM12 14c-2.33 0-4.31 1.46-5.11 3.5h10.22c-.8-2.04-2.78-3.5-5.11-3.5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgSentimentVeryDissatisfied.displayName = "SvgSentimentVeryDissatisfied";
SvgSentimentVeryDissatisfied.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bF() { _extends$bF = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bF.apply(this, arguments); }
var Svg$bB = styled("svg")({
  flex: "none"
}, space, color);

var SvgSentimentVerySatisfied = function SvgSentimentVerySatisfied(props) {
  return createElement(Svg$bB, _extends$bF({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.47 2 12s4.47 10 9.99 10S22 17.53 22 12 17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm1-10.06L14.06 11l1.06-1.06L16.18 11l1.06-1.06-2.12-2.12zm-4.12 0L9.94 11 11 9.94 8.88 7.82 6.76 9.94 7.82 11zM12 17.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgSentimentVerySatisfied.displayName = "SvgSentimentVerySatisfied";
SvgSentimentVerySatisfied.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bG() { _extends$bG = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bG.apply(this, arguments); }
var Svg$bC = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettings = function SvgSettings(props) {
  return createElement(Svg$bC, _extends$bG({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65A.488.488 0 0014 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z"
  }));
};

SvgSettings.displayName = "SvgSettings";
SvgSettings.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bH() { _extends$bH = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bH.apply(this, arguments); }
var Svg$bD = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsApplications = function SvgSettingsApplications(props) {
  return createElement(Svg$bD, _extends$bH({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7-7H5a2 2 0 00-2 2v14a2 2 0 002 2h14a2 2 0 002-2V5a2 2 0 00-2-2zm-1.75 9c0 .23-.02.46-.05.68l1.48 1.16c.13.11.17.3.08.45l-1.4 2.42c-.09.15-.27.21-.43.15l-1.74-.7c-.36.28-.76.51-1.18.69l-.26 1.85c-.03.17-.18.3-.35.3h-2.8c-.17 0-.32-.13-.35-.29l-.26-1.85c-.43-.18-.82-.41-1.18-.69l-1.74.7c-.16.06-.34 0-.43-.15l-1.4-2.42a.353.353 0 01.08-.45l1.48-1.16c-.03-.23-.05-.46-.05-.69 0-.23.02-.46.05-.68l-1.48-1.16a.353.353 0 01-.08-.45l1.4-2.42c.09-.15.27-.21.43-.15l1.74.7c.36-.28.76-.51 1.18-.69l.26-1.85c.03-.17.18-.3.35-.3h2.8c.17 0 .32.13.35.29l.26 1.85c.43.18.82.41 1.18.69l1.74-.7c.16-.06.34 0 .43.15l1.4 2.42c.09.15.05.34-.08.45l-1.48 1.16c.03.23.05.46.05.69z"
  }));
};

SvgSettingsApplications.displayName = "SvgSettingsApplications";
SvgSettingsApplications.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bI() { _extends$bI = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bI.apply(this, arguments); }
var Svg$bE = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsBackupRestore = function SvgSettingsBackupRestore(props) {
  return createElement(Svg$bE, _extends$bI({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M14 12c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2 2-.9 2-2zm-2-9a9 9 0 00-9 9H0l4 4 4-4H5c0-3.87 3.13-7 7-7s7 3.13 7 7a6.995 6.995 0 01-11.06 5.7l-1.42 1.44A9 9 0 1012 3z"
  }));
};

SvgSettingsBackupRestore.displayName = "SvgSettingsBackupRestore";
SvgSettingsBackupRestore.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bJ() { _extends$bJ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bJ.apply(this, arguments); }
var Svg$bF = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsBluetooth = function SvgSettingsBluetooth(props) {
  return createElement(Svg$bF, _extends$bJ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M11 24h2v-2h-2v2zm-4 0h2v-2H7v2zm8 0h2v-2h-2v2zm2.71-18.29L12 0h-1v7.59L6.41 3 5 4.41 10.59 10 5 15.59 6.41 17 11 12.41V20h1l5.71-5.71-4.3-4.29 4.3-4.29zM13 3.83l1.88 1.88L13 7.59V3.83zm1.88 10.46L13 16.17v-3.76l1.88 1.88z"
  }));
};

SvgSettingsBluetooth.displayName = "SvgSettingsBluetooth";
SvgSettingsBluetooth.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bK() { _extends$bK = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bK.apply(this, arguments); }
var Svg$bG = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsBrightness = function SvgSettingsBrightness(props) {
  return createElement(Svg$bG, _extends$bK({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02zM8 16h2.5l1.5 1.5 1.5-1.5H16v-2.5l1.5-1.5-1.5-1.5V8h-2.5L12 6.5 10.5 8H8v2.5L6.5 12 8 13.5V16zm4-7c1.66 0 3 1.34 3 3s-1.34 3-3 3V9z"
  }));
};

SvgSettingsBrightness.displayName = "SvgSettingsBrightness";
SvgSettingsBrightness.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bL() { _extends$bL = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bL.apply(this, arguments); }
var Svg$bH = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsCell = function SvgSettingsCell(props) {
  return createElement(Svg$bH, _extends$bL({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm4 0h2v-2h-2v2zM16 .01L8 0C6.9 0 6 .9 6 2v16c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V2c0-1.1-.9-1.99-2-1.99zM16 16H8V4h8v12z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSettingsCell.displayName = "SvgSettingsCell";
SvgSettingsCell.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bM() { _extends$bM = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bM.apply(this, arguments); }
var Svg$bI = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsEthernet = function SvgSettingsEthernet(props) {
  return createElement(Svg$bI, _extends$bM({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7.77 6.76L6.23 5.48.82 12l5.41 6.52 1.54-1.28L3.42 12l4.35-5.24zM7 13h2v-2H7v2zm10-2h-2v2h2v-2zm-6 2h2v-2h-2v2zm6.77-7.52l-1.54 1.28L20.58 12l-4.35 5.24 1.54 1.28L23.18 12l-5.41-6.52z"
  }));
};

SvgSettingsEthernet.displayName = "SvgSettingsEthernet";
SvgSettingsEthernet.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bN() { _extends$bN = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bN.apply(this, arguments); }
var Svg$bJ = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsInputAntenna = function SvgSettingsInputAntenna(props) {
  return createElement(Svg$bJ, _extends$bN({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 5c-3.87 0-7 3.13-7 7h2c0-2.76 2.24-5 5-5s5 2.24 5 5h2c0-3.87-3.13-7-7-7zm1 9.29c.88-.39 1.5-1.26 1.5-2.29a2.5 2.5 0 00-5 0c0 1.02.62 1.9 1.5 2.29v3.3L7.59 21 9 22.41l3-3 3 3L16.41 21 13 17.59v-3.3zM12 1C5.93 1 1 5.93 1 12h2a9 9 0 0118 0h2c0-6.07-4.93-11-11-11z"
  }));
};

SvgSettingsInputAntenna.displayName = "SvgSettingsInputAntenna";
SvgSettingsInputAntenna.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bO() { _extends$bO = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bO.apply(this, arguments); }
var Svg$bK = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsInputComponent = function SvgSettingsInputComponent(props) {
  return createElement(Svg$bK, _extends$bO({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z"
  }));
};

SvgSettingsInputComponent.displayName = "SvgSettingsInputComponent";
SvgSettingsInputComponent.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bP() { _extends$bP = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bP.apply(this, arguments); }
var Svg$bL = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsInputComposite = function SvgSettingsInputComposite(props) {
  return createElement(Svg$bL, _extends$bP({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M5 2c0-.55-.45-1-1-1s-1 .45-1 1v4H1v6h6V6H5V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2H9v2zm-8 0c0 1.3.84 2.4 2 2.82V23h2v-4.18C6.16 18.4 7 17.3 7 16v-2H1v2zM21 6V2c0-.55-.45-1-1-1s-1 .45-1 1v4h-2v6h6V6h-2zm-8-4c0-.55-.45-1-1-1s-1 .45-1 1v4H9v6h6V6h-2V2zm4 14c0 1.3.84 2.4 2 2.82V23h2v-4.18c1.16-.41 2-1.51 2-2.82v-2h-6v2z"
  }));
};

SvgSettingsInputComposite.displayName = "SvgSettingsInputComposite";
SvgSettingsInputComposite.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bQ() { _extends$bQ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bQ.apply(this, arguments); }
var Svg$bM = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsInputHdmi = function SvgSettingsInputHdmi(props) {
  return createElement(Svg$bM, _extends$bQ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18 7V4c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v3H5v6l3 6v3h8v-3l3-6V7h-1zM8 4h8v3h-2V5h-1v2h-2V5h-1v2H8V4z"
  }));
};

SvgSettingsInputHdmi.displayName = "SvgSettingsInputHdmi";
SvgSettingsInputHdmi.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bR() { _extends$bR = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bR.apply(this, arguments); }
var Svg$bN = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsInputSvideo = function SvgSettingsInputSvideo(props) {
  return createElement(Svg$bN, _extends$bR({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M8 11.5c0-.83-.67-1.5-1.5-1.5S5 10.67 5 11.5 5.67 13 6.5 13 8 12.33 8 11.5zm7-5c0-.83-.67-1.5-1.5-1.5h-3C9.67 5 9 5.67 9 6.5S9.67 8 10.5 8h3c.83 0 1.5-.67 1.5-1.5zM8.5 15c-.83 0-1.5.67-1.5 1.5S7.67 18 8.5 18s1.5-.67 1.5-1.5S9.33 15 8.5 15zM12 1C5.93 1 1 5.93 1 12s4.93 11 11 11 11-4.93 11-11S18.07 1 12 1zm0 20c-4.96 0-9-4.04-9-9s4.04-9 9-9 9 4.04 9 9-4.04 9-9 9zm5.5-11c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-2 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
  }));
};

SvgSettingsInputSvideo.displayName = "SvgSettingsInputSvideo";
SvgSettingsInputSvideo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bS() { _extends$bS = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bS.apply(this, arguments); }
var Svg$bO = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsOverscan = function SvgSettingsOverscan(props) {
  return createElement(Svg$bO, _extends$bS({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12.01 5.5L10 8h4l-1.99-2.5zM18 10v4l2.5-1.99L18 10zM6 10l-2.5 2.01L6 14v-4zm8 6h-4l2.01 2.5L14 16zm7-13H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z"
  }));
};

SvgSettingsOverscan.displayName = "SvgSettingsOverscan";
SvgSettingsOverscan.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bT() { _extends$bT = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bT.apply(this, arguments); }
var Svg$bP = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsPhone = function SvgSettingsPhone(props) {
  return createElement(Svg$bP, _extends$bT({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M13 9h-2v2h2V9zm4 0h-2v2h2V9zm3 6.5c-1.25 0-2.45-.2-3.57-.57a1.02 1.02 0 00-1.02.24l-2.2 2.2a15.074 15.074 0 01-6.59-6.58l2.2-2.21c.28-.27.36-.66.25-1.01A11.36 11.36 0 018.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM19 9v2h2V9h-2z"
  }));
};

SvgSettingsPhone.displayName = "SvgSettingsPhone";
SvgSettingsPhone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bU() { _extends$bU = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bU.apply(this, arguments); }
var Svg$bQ = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsPower = function SvgSettingsPower(props) {
  return createElement(Svg$bQ, _extends$bU({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7 24h2v-2H7v2zm4 0h2v-2h-2v2zm2-22h-2v10h2V2zm3.56 2.44l-1.45 1.45A5.969 5.969 0 0118 11c0 3.31-2.69 6-6 6s-6-2.69-6-6c0-2.17 1.16-4.06 2.88-5.12L7.44 4.44A7.961 7.961 0 004 11c0 4.42 3.58 8 8 8s8-3.58 8-8c0-2.72-1.36-5.12-3.44-6.56zM15 24h2v-2h-2v2z"
  }));
};

SvgSettingsPower.displayName = "SvgSettingsPower";
SvgSettingsPower.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bV() { _extends$bV = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bV.apply(this, arguments); }
var Svg$bR = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsRemote = function SvgSettingsRemote(props) {
  return createElement(Svg$bR, _extends$bV({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M15 9H9c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V10c0-.55-.45-1-1-1zm-3 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM7.05 6.05l1.41 1.41a5.022 5.022 0 017.08 0l1.41-1.41C15.68 4.78 13.93 4 12 4s-3.68.78-4.95 2.05zM12 0C8.96 0 6.21 1.23 4.22 3.22l1.41 1.41C7.26 3.01 9.51 2 12 2s4.74 1.01 6.36 2.64l1.41-1.41C17.79 1.23 15.04 0 12 0z"
  }));
};

SvgSettingsRemote.displayName = "SvgSettingsRemote";
SvgSettingsRemote.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bW() { _extends$bW = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bW.apply(this, arguments); }
var Svg$bS = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsSystemDaydream = function SvgSettingsSystemDaydream(props) {
  return createElement(Svg$bS, _extends$bW({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M9 16h6.5a2.5 2.5 0 000-5h-.05c-.24-1.69-1.69-3-3.45-3-1.4 0-2.6.83-3.16 2.02h-.16A2.994 2.994 0 006 13c0 1.66 1.34 3 3 3zM21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16.01H3V4.99h18v14.02z"
  }));
};

SvgSettingsSystemDaydream.displayName = "SvgSettingsSystemDaydream";
SvgSettingsSystemDaydream.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bX() { _extends$bX = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bX.apply(this, arguments); }
var Svg$bT = styled("svg")({
  flex: "none"
}, space, color);

var SvgSettingsVoice = function SvgSettingsVoice(props) {
  return createElement(Svg$bT, _extends$bX({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 24h2v-2H7v2zm5-11c1.66 0 2.99-1.34 2.99-3L15 4c0-1.66-1.34-3-3-3S9 2.34 9 4v6c0 1.66 1.34 3 3 3zm-1 11h2v-2h-2v2zm4 0h2v-2h-2v2zm4-14h-1.7c0 3-2.54 5.1-5.3 5.1S6.7 13 6.7 10H5c0 3.41 2.72 6.23 6 6.72V20h2v-3.28c3.28-.49 6-3.31 6-6.72z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSettingsVoice.displayName = "SvgSettingsVoice";
SvgSettingsVoice.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bY() { _extends$bY = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bY.apply(this, arguments); }
var Svg$bU = styled("svg")({
  flex: "none"
}, space, color);

var SvgShare = function SvgShare(props) {
  return createElement(Svg$bU, _extends$bY({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z"
  }));
};

SvgShare.displayName = "SvgShare";
SvgShare.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$bZ() { _extends$bZ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$bZ.apply(this, arguments); }
var Svg$bV = styled("svg")({
  flex: "none"
}, space, color);

var SvgShop = function SvgShop(props) {
  return createElement(Svg$bV, _extends$bZ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M16 6V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H2v13c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6h-6zm-6-2h4v2h-4V4zM9 18V9l7.5 4L9 18z"
  }));
};

SvgShop.displayName = "SvgShop";
SvgShop.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b_() { _extends$b_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b_.apply(this, arguments); }
var Svg$bW = styled("svg")({
  flex: "none"
}, space, color);

var SvgShopTwo = function SvgShopTwo(props) {
  return createElement(Svg$bW, _extends$b_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 9H1v11c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2H3V9zm15-4V3c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H5v11c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2V5h-5zm-6-2h4v2h-4V3zm0 12V8l5.5 3-5.5 4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgShopTwo.displayName = "SvgShopTwo";
SvgShopTwo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$b$() { _extends$b$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b$.apply(this, arguments); }
var Svg$bX = styled("svg")({
  flex: "none"
}, space, color);

var SvgShoppingBasket = function SvgShoppingBasket(props) {
  return createElement(Svg$bX, _extends$b$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17.21 9l-4.38-6.56a.993.993 0 00-.83-.42c-.32 0-.64.14-.83.43L6.79 9H2c-.55 0-1 .45-1 1 0 .09.01.18.04.27l2.54 9.27c.23.84 1 1.46 1.92 1.46h13c.92 0 1.69-.62 1.93-1.46l2.54-9.27L23 10c0-.55-.45-1-1-1h-4.79zM9 9l3-4.4L15 9H9zm3 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
  }));
};

SvgShoppingBasket.displayName = "SvgShoppingBasket";
SvgShoppingBasket.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c0() { _extends$c0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c0.apply(this, arguments); }
var Svg$bY = styled("svg")({
  flex: "none"
}, space, color);

var SvgShoppingCart = function SvgShoppingCart(props) {
  return createElement(Svg$bY, _extends$c0({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49A1.003 1.003 0 0020 4H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgShoppingCart.displayName = "SvgShoppingCart";
SvgShoppingCart.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c1() { _extends$c1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c1.apply(this, arguments); }
var Svg$bZ = styled("svg")({
  flex: "none"
}, space, color);

var SvgShortText = function SvgShortText(props) {
  return createElement(Svg$bZ, _extends$c1({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 9h16v2H4zm0 4h10v2H4z"
  }));
};

SvgShortText.displayName = "SvgShortText";
SvgShortText.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c2() { _extends$c2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c2.apply(this, arguments); }
var Svg$b_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgShowChart = function SvgShowChart(props) {
  return createElement(Svg$b_, _extends$c2({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3.5 18.49l6-6.01 4 4L22 6.92l-1.41-1.41-7.09 7.97-4-4L2 16.99z"
  }));
};

SvgShowChart.displayName = "SvgShowChart";
SvgShowChart.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c3() { _extends$c3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c3.apply(this, arguments); }
var Svg$b$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgShuffle = function SvgShuffle(props) {
  return createElement(Svg$b$, _extends$c3({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z"
  }));
};

SvgShuffle.displayName = "SvgShuffle";
SvgShuffle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c4() { _extends$c4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c4.apply(this, arguments); }
var Svg$c0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellular0Bar = function SvgSignalCellular0Bar(props) {
  return createElement(Svg$c0, _extends$c4({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M2 22h20V2z"
  }));
};

SvgSignalCellular0Bar.displayName = "SvgSignalCellular0Bar";
SvgSignalCellular0Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c5() { _extends$c5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c5.apply(this, arguments); }
var Svg$c1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellular1Bar = function SvgSignalCellular1Bar(props) {
  return createElement(Svg$c1, _extends$c5({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M2 22h20V2z"
  }), createElement("path", {
    d: "M12 12L2 22h10z"
  }));
};

SvgSignalCellular1Bar.displayName = "SvgSignalCellular1Bar";
SvgSignalCellular1Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c6() { _extends$c6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c6.apply(this, arguments); }
var Svg$c2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellular2Bar = function SvgSignalCellular2Bar(props) {
  return createElement(Svg$c2, _extends$c6({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M2 22h20V2z"
  }), createElement("path", {
    d: "M14 10L2 22h12z"
  }));
};

SvgSignalCellular2Bar.displayName = "SvgSignalCellular2Bar";
SvgSignalCellular2Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c7() { _extends$c7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c7.apply(this, arguments); }
var Svg$c3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellular3Bar = function SvgSignalCellular3Bar(props) {
  return createElement(Svg$c3, _extends$c7({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M2 22h20V2z"
  }), createElement("path", {
    d: "M17 7L2 22h15z"
  }));
};

SvgSignalCellular3Bar.displayName = "SvgSignalCellular3Bar";
SvgSignalCellular3Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c8() { _extends$c8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c8.apply(this, arguments); }
var Svg$c4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellular4Bar = function SvgSignalCellular4Bar(props) {
  return createElement(Svg$c4, _extends$c8({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M2 22h20V2z"
  }));
};

SvgSignalCellular4Bar.displayName = "SvgSignalCellular4Bar";
SvgSignalCellular4Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c9() { _extends$c9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c9.apply(this, arguments); }
var Svg$c5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellularConnectedNoInternet0Bar = function SvgSignalCellularConnectedNoInternet0Bar(props) {
  return createElement(Svg$c5, _extends$c9({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M22 8V2L2 22h16V8z"
  }), createElement("path", {
    d: "M20 22h2v-2h-2v2zm0-12v8h2v-8h-2z"
  }));
};

SvgSignalCellularConnectedNoInternet0Bar.displayName = "SvgSignalCellularConnectedNoInternet0Bar";
SvgSignalCellularConnectedNoInternet0Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ca() { _extends$ca = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ca.apply(this, arguments); }
var Svg$c6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellularConnectedNoInternet1Bar = function SvgSignalCellularConnectedNoInternet1Bar(props) {
  return createElement(Svg$c6, _extends$ca({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M22 8V2L2 22h16V8z"
  }), createElement("path", {
    d: "M20 10v8h2v-8h-2zm-8 12V12L2 22h10zm8 0h2v-2h-2v2z"
  }));
};

SvgSignalCellularConnectedNoInternet1Bar.displayName = "SvgSignalCellularConnectedNoInternet1Bar";
SvgSignalCellularConnectedNoInternet1Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cb() { _extends$cb = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cb.apply(this, arguments); }
var Svg$c7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellularConnectedNoInternet2Bar = function SvgSignalCellularConnectedNoInternet2Bar(props) {
  return createElement(Svg$c7, _extends$cb({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M22 8V2L2 22h16V8z"
  }), createElement("path", {
    d: "M14 22V10L2 22h12zm6-12v8h2v-8h-2zm0 12h2v-2h-2v2z"
  }));
};

SvgSignalCellularConnectedNoInternet2Bar.displayName = "SvgSignalCellularConnectedNoInternet2Bar";
SvgSignalCellularConnectedNoInternet2Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cc() { _extends$cc = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cc.apply(this, arguments); }
var Svg$c8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellularConnectedNoInternet3Bar = function SvgSignalCellularConnectedNoInternet3Bar(props) {
  return createElement(Svg$c8, _extends$cc({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M22 8V2L2 22h16V8z"
  }), createElement("path", {
    d: "M17 22V7L2 22h15zm3-12v8h2v-8h-2zm0 12h2v-2h-2v2z"
  }));
};

SvgSignalCellularConnectedNoInternet3Bar.displayName = "SvgSignalCellularConnectedNoInternet3Bar";
SvgSignalCellularConnectedNoInternet3Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cd() { _extends$cd = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cd.apply(this, arguments); }
var Svg$c9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellularConnectedNoInternet4Bar = function SvgSignalCellularConnectedNoInternet4Bar(props) {
  return createElement(Svg$c9, _extends$cd({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 18h2v-8h-2v8zm0 4h2v-2h-2v2zM2 22h16V8h4V2L2 22z"
  }));
};

SvgSignalCellularConnectedNoInternet4Bar.displayName = "SvgSignalCellularConnectedNoInternet4Bar";
SvgSignalCellularConnectedNoInternet4Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ce() { _extends$ce = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ce.apply(this, arguments); }
var Svg$ca = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellularNoSim = function SvgSignalCellularNoSim(props) {
  return createElement(Svg$ca, _extends$ce({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.99 5c0-1.1-.89-2-1.99-2h-7L7.66 5.34 19 16.68 18.99 5zM3.65 3.88L2.38 5.15 5 7.77V19c0 1.1.9 2 2 2h10.01c.35 0 .67-.1.96-.26l1.88 1.88 1.27-1.27L3.65 3.88z"
  }));
};

SvgSignalCellularNoSim.displayName = "SvgSignalCellularNoSim";
SvgSignalCellularNoSim.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cf() { _extends$cf = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cf.apply(this, arguments); }
var Svg$cb = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellularNull = function SvgSignalCellularNull(props) {
  return createElement(Svg$cb, _extends$cf({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 6.83V20H6.83L20 6.83M22 2L2 22h20V2z"
  }));
};

SvgSignalCellularNull.displayName = "SvgSignalCellularNull";
SvgSignalCellularNull.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cg() { _extends$cg = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cg.apply(this, arguments); }
var Svg$cc = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalCellularOff = function SvgSignalCellularOff(props) {
  return createElement(Svg$cc, _extends$cg({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 1l-8.59 8.59L21 18.18V1zM4.77 4.5L3.5 5.77l6.36 6.36L1 21h17.73l2 2L22 21.73 4.77 4.5z"
  }));
};

SvgSignalCellularOff.displayName = "SvgSignalCellularOff";
SvgSignalCellularOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ch() { _extends$ch = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ch.apply(this, arguments); }
var Svg$cd = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifi0Bar = function SvgSignalWifi0Bar(props) {
  return createElement(Svg$cd, _extends$ch({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"
  }));
};

SvgSignalWifi0Bar.displayName = "SvgSignalWifi0Bar";
SvgSignalWifi0Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ci() { _extends$ci = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ci.apply(this, arguments); }
var Svg$ce = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifi1Bar = function SvgSignalWifi1Bar(props) {
  return createElement(Svg$ce, _extends$ci({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"
  }), createElement("path", {
    d: "M6.67 14.86L12 21.49v.01l.01-.01 5.33-6.63C17.06 14.65 15.03 13 12 13s-5.06 1.65-5.33 1.86z"
  }));
};

SvgSignalWifi1Bar.displayName = "SvgSignalWifi1Bar";
SvgSignalWifi1Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cj() { _extends$cj = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cj.apply(this, arguments); }
var Svg$cf = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifi1BarLock = function SvgSignalWifi1BarLock(props) {
  return createElement(Svg$cf, _extends$cj({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M23 16v-1.5c0-1.4-1.1-2.5-2.5-2.5S18 13.1 18 14.5V16c-.5 0-1 .5-1 1v4c0 .5.5 1 1 1h5c.5 0 1-.5 1-1v-4c0-.5-.5-1-1-1zm-1 0h-3v-1.5c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5V16z"
  }), createElement("path", {
    d: "M15.5 14.5c0-2.8 2.2-5 5-5 .4 0 .7 0 1 .1L23.6 7c-.4-.3-4.9-4-11.6-4C5.3 3 .8 6.7.4 7L12 21.5l3.5-4.3v-2.7z",
    opacity: 0.3
  }), createElement("path", {
    d: "M6.7 14.9l5.3 6.6 3.5-4.3v-2.6c0-.2 0-.5.1-.7-.9-.5-2.2-.9-3.6-.9-3 0-5.1 1.7-5.3 1.9z"
  }));
};

SvgSignalWifi1BarLock.displayName = "SvgSignalWifi1BarLock";
SvgSignalWifi1BarLock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ck() { _extends$ck = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ck.apply(this, arguments); }
var Svg$cg = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifi2Bar = function SvgSignalWifi2Bar(props) {
  return createElement(Svg$cg, _extends$ck({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"
  }), createElement("path", {
    d: "M4.79 12.52l7.2 8.98H12l.01-.01 7.2-8.98C18.85 12.24 16.1 10 12 10s-6.85 2.24-7.21 2.52z"
  }));
};

SvgSignalWifi2Bar.displayName = "SvgSignalWifi2Bar";
SvgSignalWifi2Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cl() { _extends$cl = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cl.apply(this, arguments); }
var Svg$ch = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifi2BarLock = function SvgSignalWifi2BarLock(props) {
  return createElement(Svg$ch, _extends$cl({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M23 16v-1.5c0-1.4-1.1-2.5-2.5-2.5S18 13.1 18 14.5V16c-.5 0-1 .5-1 1v4c0 .5.5 1 1 1h5c.5 0 1-.5 1-1v-4c0-.5-.5-1-1-1zm-1 0h-3v-1.5c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5V16z"
  }), createElement("path", {
    d: "M15.5 14.5c0-2.8 2.2-5 5-5 .4 0 .7 0 1 .1L23.6 7c-.4-.3-4.9-4-11.6-4C5.3 3 .8 6.7.4 7L12 21.5l3.5-4.3v-2.7z",
    opacity: 0.3
  }), createElement("path", {
    d: "M4.8 12.5l7.2 9 3.5-4.4v-2.6c0-1.3.5-2.5 1.4-3.4C15.6 10.5 14 10 12 10c-4.1 0-6.8 2.2-7.2 2.5z"
  }));
};

SvgSignalWifi2BarLock.displayName = "SvgSignalWifi2BarLock";
SvgSignalWifi2BarLock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cm() { _extends$cm = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cm.apply(this, arguments); }
var Svg$ci = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifi3Bar = function SvgSignalWifi3Bar(props) {
  return createElement(Svg$ci, _extends$cm({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"
  }), createElement("path", {
    d: "M3.53 10.95l8.46 10.54.01.01.01-.01 8.46-10.54C20.04 10.62 16.81 8 12 8c-4.81 0-8.04 2.62-8.47 2.95z"
  }));
};

SvgSignalWifi3Bar.displayName = "SvgSignalWifi3Bar";
SvgSignalWifi3Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cn() { _extends$cn = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cn.apply(this, arguments); }
var Svg$cj = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifi3BarLock = function SvgSignalWifi3BarLock(props) {
  return createElement(Svg$cj, _extends$cn({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    opacity: 0.3,
    d: "M12 3C5.3 3 .8 6.7.4 7l3.2 3.9L12 21.5l3.5-4.3v-2.6c0-2.2 1.4-4 3.3-4.7.3-.1.5-.2.8-.2.3-.1.6-.1.9-.1.4 0 .7 0 1 .1L23.6 7c-.4-.3-4.9-4-11.6-4z"
  }), createElement("path", {
    d: "M23 16v-1.5c0-1.4-1.1-2.5-2.5-2.5S18 13.1 18 14.5V16c-.5 0-1 .5-1 1v4c0 .5.5 1 1 1h5c.5 0 1-.5 1-1v-4c0-.5-.5-1-1-1zm-1 0h-3v-1.5c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5V16zm-10 5.5l3.5-4.3v-2.6c0-2.2 1.4-4 3.3-4.7C17.3 9 14.9 8 12 8c-4.8 0-8 2.6-8.5 2.9"
  }));
};

SvgSignalWifi3BarLock.displayName = "SvgSignalWifi3BarLock";
SvgSignalWifi3BarLock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$co() { _extends$co = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$co.apply(this, arguments); }
var Svg$ck = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifi4Bar = function SvgSignalWifi4Bar(props) {
  return createElement(Svg$ck, _extends$co({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12.01 21.49L23.64 7c-.45-.34-4.93-4-11.64-4C5.28 3 .81 6.66.36 7l11.63 14.49.01.01.01-.01z"
  }));
};

SvgSignalWifi4Bar.displayName = "SvgSignalWifi4Bar";
SvgSignalWifi4Bar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cp() { _extends$cp = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cp.apply(this, arguments); }
var Svg$cl = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifi4BarLock = function SvgSignalWifi4BarLock(props) {
  return createElement(Svg$cl, _extends$cp({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M23 16v-1.5c0-1.4-1.1-2.5-2.5-2.5S18 13.1 18 14.5V16c-.5 0-1 .5-1 1v4c0 .5.5 1 1 1h5c.5 0 1-.5 1-1v-4c0-.5-.5-1-1-1zm-1 0h-3v-1.5c0-.8.7-1.5 1.5-1.5s1.5.7 1.5 1.5V16zm-6.5-1.5c0-2.8 2.2-5 5-5 .4 0 .7 0 1 .1L23.6 7c-.4-.3-4.9-4-11.6-4C5.3 3 .8 6.7.4 7L12 21.5l3.5-4.4v-2.6z"
  }));
};

SvgSignalWifi4BarLock.displayName = "SvgSignalWifi4BarLock";
SvgSignalWifi4BarLock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cq() { _extends$cq = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cq.apply(this, arguments); }
var Svg$cm = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiOff = function SvgSignalWifiOff(props) {
  return createElement(Svg$cm, _extends$cq({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M23.64 7c-.45-.34-4.93-4-11.64-4-1.5 0-2.89.19-4.15.48L18.18 13.8 23.64 7zm-6.6 8.22L3.27 1.44 2 2.72l2.05 2.06C1.91 5.76.59 6.82.36 7l11.63 14.49.01.01.01-.01 3.9-4.86 3.32 3.32 1.27-1.27-3.46-3.46z"
  }));
};

SvgSignalWifiOff.displayName = "SvgSignalWifiOff";
SvgSignalWifiOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cr() { _extends$cr = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cr.apply(this, arguments); }
var Svg$cn = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbar1Bar26X24Px = function SvgSignalWifiStatusbar1Bar26X24Px(props) {
  return createElement(Svg$cn, _extends$cr({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 21.99l5.66-7.05C18.44 14.78 16.27 13 13 13s-5.44 1.78-5.66 1.95L13 21.99z"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M13.01 21.99L25.58 6.32C25.1 5.96 20.26 2 13 2S.9 5.96.42 6.32l12.57 15.66.01.02.01-.01z"
  }));
};

SvgSignalWifiStatusbar1Bar26X24Px.displayName = "SvgSignalWifiStatusbar1Bar26X24Px";
SvgSignalWifiStatusbar1Bar26X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cs() { _extends$cs = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cs.apply(this, arguments); }
var Svg$co = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbar2Bar26X24Px = function SvgSignalWifiStatusbar2Bar26X24Px(props) {
  return createElement(Svg$co, _extends$cs({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M13.01 21.99L25.58 6.32C25.1 5.96 20.26 2 13 2S.9 5.96.42 6.32l12.57 15.66.01.02.01-.01z"
  }), createElement("path", {
    d: "M13.01 21.99l7.54-9.4C20.26 12.38 17.36 10 13 10c-4.36 0-7.26 2.38-7.55 2.59l7.54 9.4h.02z"
  }));
};

SvgSignalWifiStatusbar2Bar26X24Px.displayName = "SvgSignalWifiStatusbar2Bar26X24Px";
SvgSignalWifiStatusbar2Bar26X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ct() { _extends$ct = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ct.apply(this, arguments); }
var Svg$cp = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbar3Bar26X24Px = function SvgSignalWifiStatusbar3Bar26X24Px(props) {
  return createElement(Svg$cp, _extends$ct({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13.01 21.99l9.43-11.75C22.07 9.97 18.44 7 13 7c-5.44 0-9.07 2.97-9.44 3.24l9.43 11.75h.02z"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M13.01 21.99L25.58 6.32C25.1 5.96 20.26 2 13 2S.9 5.96.42 6.32l12.57 15.66.01.02.01-.01z"
  }));
};

SvgSignalWifiStatusbar3Bar26X24Px.displayName = "SvgSignalWifiStatusbar3Bar26X24Px";
SvgSignalWifiStatusbar3Bar26X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cu() { _extends$cu = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cu.apply(this, arguments); }
var Svg$cq = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbar4Bar26X24Px = function SvgSignalWifiStatusbar4Bar26X24Px(props) {
  return createElement(Svg$cq, _extends$cu({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13.01 21.99L25.58 6.32C25.1 5.96 20.26 2 13 2S.9 5.96.42 6.32l12.57 15.66.01.02.01-.01z"
  }));
};

SvgSignalWifiStatusbar4Bar26X24Px.displayName = "SvgSignalWifiStatusbar4Bar26X24Px";
SvgSignalWifiStatusbar4Bar26X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cv() { _extends$cv = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cv.apply(this, arguments); }
var Svg$cr = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbarConnectedNoInternet126X24Px = function SvgSignalWifiStatusbarConnectedNoInternet126X24Px(props) {
  return createElement(Svg$cr, _extends$cv({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M24.24 8l1.35-1.68C25.1 5.96 20.26 2 13 2S.9 5.96.42 6.32l12.57 15.66.01.02.01-.01L20 13.28V8h4.24z"
  }), createElement("path", {
    d: "M7.34 14.95L13 21.99V22v-.01l5.66-7.05C18.44 14.78 16.27 13 13 13s-5.44 1.78-5.66 1.95zM22 22h2v-2h-2v2zm0-12v8h2v-8h-2z"
  }));
};

SvgSignalWifiStatusbarConnectedNoInternet126X24Px.displayName = "SvgSignalWifiStatusbarConnectedNoInternet126X24Px";
SvgSignalWifiStatusbarConnectedNoInternet126X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cw() { _extends$cw = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cw.apply(this, arguments); }
var Svg$cs = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbarConnectedNoInternet226X24Px = function SvgSignalWifiStatusbarConnectedNoInternet226X24Px(props) {
  return createElement(Svg$cs, _extends$cw({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M24.24 8l1.35-1.68C25.1 5.96 20.26 2 13 2S.9 5.96.42 6.32l12.57 15.66.01.02.01-.01L20 13.28V8h4.24z"
  }), createElement("path", {
    d: "M5.45 12.59l7.54 9.4.01.01.01-.01L20 13.28v-1.09c-1.07-.73-3.59-2.19-7-2.19-4.36 0-7.26 2.38-7.55 2.59zM22 10v8h2v-8h-2zm0 12h2v-2h-2v2z"
  }));
};

SvgSignalWifiStatusbarConnectedNoInternet226X24Px.displayName = "SvgSignalWifiStatusbarConnectedNoInternet226X24Px";
SvgSignalWifiStatusbarConnectedNoInternet226X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cx() { _extends$cx = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cx.apply(this, arguments); }
var Svg$ct = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbarConnectedNoInternet26X24Px = function SvgSignalWifiStatusbarConnectedNoInternet26X24Px(props) {
  return createElement(Svg$ct, _extends$cx({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M24.24 8l1.35-1.68C25.1 5.96 20.26 2 13 2S.9 5.96.42 6.32l12.57 15.66.01.02.01-.01L20 13.28V8h4.24z"
  }), createElement("path", {
    d: "M22 22h2v-2h-2v2zm0-12v8h2v-8h-2z"
  }));
};

SvgSignalWifiStatusbarConnectedNoInternet26X24Px.displayName = "SvgSignalWifiStatusbarConnectedNoInternet26X24Px";
SvgSignalWifiStatusbarConnectedNoInternet26X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cy() { _extends$cy = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cy.apply(this, arguments); }
var Svg$cu = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbarConnectedNoInternet326X24Px = function SvgSignalWifiStatusbarConnectedNoInternet326X24Px(props) {
  return createElement(Svg$cu, _extends$cy({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M24.24 8l1.35-1.68C25.1 5.96 20.26 2 13 2S.9 5.96.42 6.32l12.57 15.66.01.02.01-.01L20 13.28V8h4.24z"
  }), createElement("path", {
    d: "M20 13.28V8.71C18.35 7.87 15.94 7 13 7c-5.44 0-9.07 2.97-9.44 3.24l9.43 11.75.01.01.01-.01L20 13.28zM22 20h2v2h-2zm0-10h2v8h-2z"
  }));
};

SvgSignalWifiStatusbarConnectedNoInternet326X24Px.displayName = "SvgSignalWifiStatusbarConnectedNoInternet326X24Px";
SvgSignalWifiStatusbarConnectedNoInternet326X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cz() { _extends$cz = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cz.apply(this, arguments); }
var Svg$cv = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbarConnectedNoInternet426X24Px = function SvgSignalWifiStatusbarConnectedNoInternet426X24Px(props) {
  return createElement(Svg$cv, _extends$cz({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 22h2v-2h-2v2zM13 2C5.74 2 .9 5.96.42 6.32l12.57 15.66.01.02.01-.01L20 13.28V8h4.24l1.35-1.68C25.1 5.96 20.26 2 13 2zm9 16h2v-8h-2v8z"
  }));
};

SvgSignalWifiStatusbarConnectedNoInternet426X24Px.displayName = "SvgSignalWifiStatusbarConnectedNoInternet426X24Px";
SvgSignalWifiStatusbarConnectedNoInternet426X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cA() { _extends$cA = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cA.apply(this, arguments); }
var Svg$cw = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbarNotConnected26X24Px = function SvgSignalWifiStatusbarNotConnected26X24Px(props) {
  return createElement(Svg$cw, _extends$cA({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fillOpacity: 0.3,
    d: "M21 8.5c.85 0 1.64.23 2.34.62l2.24-2.79C25.1 5.96 20.26 2 13 2S.9 5.96.42 6.32l12.57 15.66.01.02.01-.01 4.21-5.24c-.76-.87-1.22-2-1.22-3.25 0-2.76 2.24-5 5-5z"
  }), createElement("path", {
    d: "M21 10c-1.93 0-3.5 1.57-3.5 3.5h1.75c0-.97.78-1.75 1.75-1.75s1.75.78 1.75 1.75c0 .48-.2.92-.51 1.24l-1.09 1.1c-.63.63-1.02 1.51-1.02 2.47v.44h1.75c0-1.31.39-1.84 1.03-2.47l.78-.8c.5-.5.82-1.2.82-1.97C24.5 11.57 22.93 10 21 10zm-.95 11.95h1.9v-1.9h-1.9v1.9z"
  }));
};

SvgSignalWifiStatusbarNotConnected26X24Px.displayName = "SvgSignalWifiStatusbarNotConnected26X24Px";
SvgSignalWifiStatusbarNotConnected26X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cB() { _extends$cB = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cB.apply(this, arguments); }
var Svg$cx = styled("svg")({
  flex: "none"
}, space, color);

var SvgSignalWifiStatusbarNull26X24Px = function SvgSignalWifiStatusbarNull26X24Px(props) {
  return createElement(Svg$cx, _extends$cB({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 4c4.25 0 7.62 1.51 9.68 2.75L13 18.8 3.33 6.75C5.38 5.51 8.75 4 13 4m0-2C5.74 2 .9 5.96.42 6.32l12.57 15.66.01.02.01-.01L25.58 6.32C25.1 5.96 20.26 2 13 2z"
  }));
};

SvgSignalWifiStatusbarNull26X24Px.displayName = "SvgSignalWifiStatusbarNull26X24Px";
SvgSignalWifiStatusbarNull26X24Px.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cC() { _extends$cC = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cC.apply(this, arguments); }
var Svg$cy = styled("svg")({
  flex: "none"
}, space, color);

var SvgSimCard = function SvgSimCard(props) {
  return createElement(Svg$cy, _extends$cC({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.99 4c0-1.1-.89-2-1.99-2h-8L4 8v12c0 1.1.9 2 2 2h12.01c1.1 0 1.99-.9 1.99-2l-.01-16zM9 19H7v-2h2v2zm8 0h-2v-2h2v2zm-8-4H7v-4h2v4zm4 4h-2v-4h2v4zm0-6h-2v-2h2v2zm4 2h-2v-4h2v4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSimCard.displayName = "SvgSimCard";
SvgSimCard.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cD() { _extends$cD = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cD.apply(this, arguments); }
var Svg$cz = styled("svg")({
  flex: "none"
}, space, color);

var SvgSimCardAlert = function SvgSimCardAlert(props) {
  return createElement(Svg$cz, _extends$cD({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M18 2h-8L4.02 8 4 20c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-5 15h-2v-2h2v2zm0-4h-2V8h2v5z"
  }));
};

SvgSimCardAlert.displayName = "SvgSimCardAlert";
SvgSimCardAlert.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cE() { _extends$cE = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cE.apply(this, arguments); }
var Svg$cA = styled("svg")({
  flex: "none"
}, space, color);

var SvgSkipNext = function SvgSkipNext(props) {
  return createElement(Svg$cA, _extends$cE({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSkipNext.displayName = "SvgSkipNext";
SvgSkipNext.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cF() { _extends$cF = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cF.apply(this, arguments); }
var Svg$cB = styled("svg")({
  flex: "none"
}, space, color);

var SvgSkipPrevious = function SvgSkipPrevious(props) {
  return createElement(Svg$cB, _extends$cF({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6 6h2v12H6zm3.5 6l8.5 6V6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSkipPrevious.displayName = "SvgSkipPrevious";
SvgSkipPrevious.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cG() { _extends$cG = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cG.apply(this, arguments); }
var Svg$cC = styled("svg")({
  flex: "none"
}, space, color);

var SvgSlideshow = function SvgSlideshow(props) {
  return createElement(Svg$cC, _extends$cG({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 8v8l5-4-5-4zm9-5H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"
  }));
};

SvgSlideshow.displayName = "SvgSlideshow";
SvgSlideshow.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cH() { _extends$cH = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cH.apply(this, arguments); }
var Svg$cD = styled("svg")({
  flex: "none"
}, space, color);

var SvgSlowMotionVideo = function SvgSlowMotionVideo(props) {
  return createElement(Svg$cD, _extends$cH({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M13.05 9.79L10 7.5v9l3.05-2.29L16 12zm0 0L10 7.5v9l3.05-2.29L16 12zm0 0L10 7.5v9l3.05-2.29L16 12zM11 4.07V2.05c-2.01.2-3.84 1-5.32 2.21L7.1 5.69A7.941 7.941 0 0111 4.07zM5.69 7.1L4.26 5.68A9.949 9.949 0 002.05 11h2.02c.18-1.46.76-2.79 1.62-3.9zM4.07 13H2.05c.2 2.01 1 3.84 2.21 5.32l1.43-1.43A7.868 7.868 0 014.07 13zm1.61 6.74A9.981 9.981 0 0011 21.95v-2.02a7.941 7.941 0 01-3.9-1.62l-1.42 1.43zM22 12c0 5.16-3.92 9.42-8.95 9.95v-2.02C16.97 19.41 20 16.05 20 12s-3.03-7.41-6.95-7.93V2.05C18.08 2.58 22 6.84 22 12z"
  }));
};

SvgSlowMotionVideo.displayName = "SvgSlowMotionVideo";
SvgSlowMotionVideo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cI() { _extends$cI = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cI.apply(this, arguments); }
var Svg$cE = styled("svg")({
  flex: "none"
}, space, color);

var SvgSmartphone = function SvgSmartphone(props) {
  return createElement(Svg$cE, _extends$cI({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17 1.01L7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z"
  }));
};

SvgSmartphone.displayName = "SvgSmartphone";
SvgSmartphone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cJ() { _extends$cJ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cJ.apply(this, arguments); }
var Svg$cF = styled("svg")({
  flex: "none"
}, space, color);

var SvgSmokeFree = function SvgSmokeFree(props) {
  return createElement(Svg$cF, _extends$cJ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M2 6l6.99 7H2v3h9.99l7 7 1.26-1.25-17-17zm18.5 7H22v3h-1.5zM18 13h1.5v3H18zm.85-8.12c.62-.61 1-1.45 1-2.38h-1.5c0 1.02-.83 1.85-1.85 1.85v1.5c2.24 0 4 1.83 4 4.07V12H22V9.92c0-2.23-1.28-4.15-3.15-5.04zM14.5 8.7h1.53c1.05 0 1.97.74 1.97 2.05V12h1.5v-1.59c0-1.8-1.6-3.16-3.47-3.16H14.5c-1.02 0-1.85-.98-1.85-2s.83-1.75 1.85-1.75V2a3.35 3.35 0 000 6.7zm2.5 7.23V13h-2.93z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgSmokeFree.displayName = "SvgSmokeFree";
SvgSmokeFree.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cK() { _extends$cK = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cK.apply(this, arguments); }
var Svg$cG = styled("svg")({
  flex: "none"
}, space, color);

var SvgSmokingRooms = function SvgSmokingRooms(props) {
  return createElement(Svg$cG, _extends$cK({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M2 16h15v3H2zm18.5 0H22v3h-1.5zM18 16h1.5v3H18zm.85-8.27c.62-.61 1-1.45 1-2.38C19.85 3.5 18.35 2 16.5 2v1.5c1.02 0 1.85.83 1.85 1.85S17.52 7.2 16.5 7.2v1.5c2.24 0 4 1.83 4 4.07V15H22v-2.24c0-2.22-1.28-4.14-3.15-5.03zm-2.82 2.47H14.5c-1.02 0-1.85-.98-1.85-2s.83-1.75 1.85-1.75v-1.5a3.35 3.35 0 000 6.7h1.53c1.05 0 1.97.74 1.97 2.05V15h1.5v-1.64c0-1.81-1.6-3.16-3.47-3.16z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgSmokingRooms.displayName = "SvgSmokingRooms";
SvgSmokingRooms.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cL() { _extends$cL = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cL.apply(this, arguments); }
var Svg$cH = styled("svg")({
  flex: "none"
}, space, color);

var SvgSms = function SvgSms(props) {
  return createElement(Svg$cH, _extends$cL({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM9 11H7V9h2v2zm4 0h-2V9h2v2zm4 0h-2V9h2v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSms.displayName = "SvgSms";
SvgSms.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cM() { _extends$cM = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cM.apply(this, arguments); }
var Svg$cI = styled("svg")({
  flex: "none"
}, space, color);

var SvgSmsFailed = function SvgSmsFailed(props) {
  return createElement(Svg$cI, _extends$cM({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 12h-2v-2h2v2zm0-4h-2V6h2v4z"
  }));
};

SvgSmsFailed.displayName = "SvgSmsFailed";
SvgSmsFailed.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cN() { _extends$cN = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cN.apply(this, arguments); }
var Svg$cJ = styled("svg")({
  flex: "none"
}, space, color);

var SvgSnooze = function SvgSnooze(props) {
  return createElement(Svg$cJ, _extends$cN({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9a9 9 0 000-18zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm-3-9h3.63L9 15.2V17h6v-2h-3.63L15 10.8V9H9v2z"
  }));
};

SvgSnooze.displayName = "SvgSnooze";
SvgSnooze.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cO() { _extends$cO = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cO.apply(this, arguments); }
var Svg$cK = styled("svg")({
  flex: "none"
}, space, color);

var SvgSort = function SvgSort(props) {
  return createElement(Svg$cK, _extends$cO({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 18h6v-2H3v2zM3 6v2h18V6H3zm0 7h12v-2H3v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSort.displayName = "SvgSort";
SvgSort.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cP() { _extends$cP = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cP.apply(this, arguments); }
var Svg$cL = styled("svg")({
  flex: "none"
}, space, color);

var SvgSortByAlpha = function SvgSortByAlpha(props) {
  return createElement(Svg$cL, _extends$cP({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0zm0 0h24v24H0V0zm.75.75h22.5v22.5H.75z"
  }), createElement("path", {
    d: "M14.94 4.66h-4.72l2.36-2.36zm-4.69 14.71h4.66l-2.33 2.33zM6.1 6.27L1.6 17.73h1.84l.92-2.45h5.11l.92 2.45h1.84L7.74 6.27H6.1zm-1.13 7.37l1.94-5.18 1.94 5.18H4.97zm10.76 2.5h6.12v1.59h-8.53v-1.29l5.92-8.56h-5.88v-1.6h8.3v1.26l-5.93 8.6z"
  }));
};

SvgSortByAlpha.displayName = "SvgSortByAlpha";
SvgSortByAlpha.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cQ() { _extends$cQ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cQ.apply(this, arguments); }
var Svg$cM = styled("svg")({
  flex: "none"
}, space, color);

var SvgSpa = function SvgSpa(props) {
  return createElement(Svg$cM, _extends$cQ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0zm13.97 21.49c-.63.23-1.29.4-1.97.51.68-.12 1.33-.29 1.97-.51zM12 22z"
  }), createElement("path", {
    fill: "#607D8B",
    d: "M8.55 12zm10.43-1.61z"
  }), createElement("path", {
    d: "M15.49 9.63c-.18-2.79-1.31-5.51-3.43-7.63a12.188 12.188 0 00-3.55 7.63c1.28.68 2.46 1.56 3.49 2.63 1.03-1.06 2.21-1.94 3.49-2.63zm-6.5 2.65c-.14-.1-.3-.19-.45-.29.15.11.31.19.45.29zm6.42-.25c-.13.09-.27.16-.4.26.13-.1.27-.17.4-.26zM12 15.45C9.85 12.17 6.18 10 2 10c0 5.32 3.36 9.82 8.03 11.49.63.23 1.29.4 1.97.51.68-.12 1.33-.29 1.97-.51C18.64 19.82 22 15.32 22 10c-4.18 0-7.85 2.17-10 5.45z"
  }));
};

SvgSpa.displayName = "SvgSpa";
SvgSpa.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cR() { _extends$cR = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cR.apply(this, arguments); }
var Svg$cN = styled("svg")({
  flex: "none"
}, space, color);

var SvgSpaceBar = function SvgSpaceBar(props) {
  return createElement(Svg$cN, _extends$cR({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 9v4H6V9H4v6h16V9z"
  }));
};

SvgSpaceBar.displayName = "SvgSpaceBar";
SvgSpaceBar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cS() { _extends$cS = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cS.apply(this, arguments); }
var Svg$cO = styled("svg")({
  flex: "none"
}, space, color);

var SvgSpeaker = function SvgSpeaker(props) {
  return createElement(Svg$cO, _extends$cS({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17 2H7c-1.1 0-2 .9-2 2v16c0 1.1.9 1.99 2 1.99L17 22c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-5 2c1.1 0 2 .9 2 2s-.9 2-2 2a2 2 0 110-4zm0 16c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
  }));
};

SvgSpeaker.displayName = "SvgSpeaker";
SvgSpeaker.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cT() { _extends$cT = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cT.apply(this, arguments); }
var Svg$cP = styled("svg")({
  flex: "none"
}, space, color);

var SvgSpeakerGroup = function SvgSpeakerGroup(props) {
  return createElement(Svg$cP, _extends$cT({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.2 1H9.8C8.81 1 8 1.81 8 2.8v14.4c0 .99.81 1.79 1.8 1.79l8.4.01c.99 0 1.8-.81 1.8-1.8V2.8c0-.99-.81-1.8-1.8-1.8zM14 3c1.1 0 2 .89 2 2s-.9 2-2 2-2-.89-2-2 .9-2 2-2zm0 13.5c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"
  }), createElement("circle", {
    cx: 14,
    cy: 12.5,
    r: 2.5
  }), createElement("path", {
    d: "M6 5H4v16a2 2 0 002 2h10v-2H6V5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgSpeakerGroup.displayName = "SvgSpeakerGroup";
SvgSpeakerGroup.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cU() { _extends$cU = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cU.apply(this, arguments); }
var Svg$cQ = styled("svg")({
  flex: "none"
}, space, color);

var SvgSpeakerNotes = function SvgSpeakerNotes(props) {
  return createElement(Svg$cQ, _extends$cU({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 14H6v-2h2v2zm0-3H6V9h2v2zm0-3H6V6h2v2zm7 6h-5v-2h5v2zm3-3h-8V9h8v2zm0-3h-8V6h8v2z"
  }));
};

SvgSpeakerNotes.displayName = "SvgSpeakerNotes";
SvgSpeakerNotes.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cV() { _extends$cV = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cV.apply(this, arguments); }
var Svg$cR = styled("svg")({
  flex: "none"
}, space, color);

var SvgSpeakerNotesOff = function SvgSpeakerNotesOff(props) {
  return createElement(Svg$cR, _extends$cV({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10.54 11l-.54-.54L7.54 8 6 6.46 2.38 2.84 1.27 1.73 0 3l2.01 2.01L2 22l4-4h9l5.73 5.73L22 22.46 17.54 18l-7-7zM8 14H6v-2h2v2zm-2-3V9l2 2H6zm14-9H4.08L10 7.92V6h8v2h-7.92l1 1H18v2h-4.92l6.99 6.99C21.14 17.95 22 17.08 22 16V4c0-1.1-.9-2-2-2z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgSpeakerNotesOff.displayName = "SvgSpeakerNotesOff";
SvgSpeakerNotesOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cW() { _extends$cW = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cW.apply(this, arguments); }
var Svg$cS = styled("svg")({
  flex: "none"
}, space, color);

var SvgSpeakerPhone = function SvgSpeakerPhone(props) {
  return createElement(Svg$cS, _extends$cW({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 7.07L8.43 8.5c.91-.91 2.18-1.48 3.57-1.48s2.66.57 3.57 1.48L17 7.07C15.72 5.79 13.95 5 12 5s-3.72.79-5 2.07zM12 1C8.98 1 6.24 2.23 4.25 4.21l1.41 1.41C7.28 4 9.53 3 12 3s4.72 1 6.34 2.62l1.41-1.41A10.963 10.963 0 0012 1zm2.86 9.01L9.14 10C8.51 10 8 10.51 8 11.14v9.71c0 .63.51 1.14 1.14 1.14h5.71c.63 0 1.14-.51 1.14-1.14v-9.71c.01-.63-.5-1.13-1.13-1.13zM15 20H9v-8h6v8z"
  }));
};

SvgSpeakerPhone.displayName = "SvgSpeakerPhone";
SvgSpeakerPhone.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cX() { _extends$cX = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cX.apply(this, arguments); }
var Svg$cT = styled("svg")({
  flex: "none"
}, space, color);

var SvgSpellcheck = function SvgSpellcheck(props) {
  return createElement(Svg$cT, _extends$cX({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12.45 16h2.09L9.43 3H7.57L2.46 16h2.09l1.12-3h5.64l1.14 3zm-6.02-5L8.5 5.48 10.57 11H6.43zm15.16.59l-8.09 8.09L9.83 16l-1.41 1.41 5.09 5.09L23 13l-1.41-1.41z"
  }));
};

SvgSpellcheck.displayName = "SvgSpellcheck";
SvgSpellcheck.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cY() { _extends$cY = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cY.apply(this, arguments); }
var Svg$cU = styled("svg")({
  flex: "none"
}, space, color);

var SvgStar = function SvgStar(props) {
  return createElement(Svg$cU, _extends$cY({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgStar.displayName = "SvgStar";
SvgStar.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$cZ() { _extends$cZ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$cZ.apply(this, arguments); }
var Svg$cV = styled("svg")({
  flex: "none"
}, space, color);

var SvgStarBorder = function SvgStarBorder(props) {
  return createElement(Svg$cV, _extends$cZ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgStarBorder.displayName = "SvgStarBorder";
SvgStarBorder.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c_() { _extends$c_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c_.apply(this, arguments); }
var Svg$cW = styled("svg")({
  flex: "none"
}, space, color);

var SvgStarHalf = function SvgStarHalf(props) {
  return createElement(Svg$cW, _extends$c_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "starHalf_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "starHalf_svg__b"
  }, createElement("use", {
    xlinkHref: "#starHalf_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#starHalf_svg__b)",
    d: "M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4V6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
  }));
};

SvgStarHalf.displayName = "SvgStarHalf";
SvgStarHalf.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$c$() { _extends$c$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c$.apply(this, arguments); }
var Svg$cX = styled("svg")({
  flex: "none"
}, space, color);

var SvgStars = function SvgStars(props) {
  return createElement(Svg$cX, _extends$c$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm4.24 16L12 15.45 7.77 18l1.12-4.81-3.73-3.23 4.92-.42L12 5l1.92 4.53 4.92.42-3.73 3.23L16.23 18z"
  }));
};

SvgStars.displayName = "SvgStars";
SvgStars.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d0() { _extends$d0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d0.apply(this, arguments); }
var Svg$cY = styled("svg")({
  flex: "none"
}, space, color);

var SvgStayCurrentLandscape = function SvgStayCurrentLandscape(props) {
  return createElement(Svg$cY, _extends$d0({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M1.01 7L1 17c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2H3c-1.1 0-1.99.9-1.99 2zM19 7v10H5V7h14z"
  }));
};

SvgStayCurrentLandscape.displayName = "SvgStayCurrentLandscape";
SvgStayCurrentLandscape.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d1() { _extends$d1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d1.apply(this, arguments); }
var Svg$cZ = styled("svg")({
  flex: "none"
}, space, color);

var SvgStayCurrentPortrait = function SvgStayCurrentPortrait(props) {
  return createElement(Svg$cZ, _extends$d1({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 1.01L7 1c-1.1 0-1.99.9-1.99 2v18c0 1.1.89 2 1.99 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z"
  }));
};

SvgStayCurrentPortrait.displayName = "SvgStayCurrentPortrait";
SvgStayCurrentPortrait.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d2() { _extends$d2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d2.apply(this, arguments); }
var Svg$c_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgStayPrimaryLandscape = function SvgStayPrimaryLandscape(props) {
  return createElement(Svg$c_, _extends$d2({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M1.01 7L1 17c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2H3c-1.1 0-1.99.9-1.99 2zM19 7v10H5V7h14z"
  }));
};

SvgStayPrimaryLandscape.displayName = "SvgStayPrimaryLandscape";
SvgStayPrimaryLandscape.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d3() { _extends$d3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d3.apply(this, arguments); }
var Svg$c$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgStayPrimaryPortrait = function SvgStayPrimaryPortrait(props) {
  return createElement(Svg$c$, _extends$d3({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 1.01L7 1c-1.1 0-1.99.9-1.99 2v18c0 1.1.89 2 1.99 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14z"
  }));
};

SvgStayPrimaryPortrait.displayName = "SvgStayPrimaryPortrait";
SvgStayPrimaryPortrait.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d4() { _extends$d4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d4.apply(this, arguments); }
var Svg$d0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgStop = function SvgStop(props) {
  return createElement(Svg$d0, _extends$d4({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M6 6h12v12H6z"
  }));
};

SvgStop.displayName = "SvgStop";
SvgStop.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d5() { _extends$d5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d5.apply(this, arguments); }
var Svg$d1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgStopScreenShare = function SvgStopScreenShare(props) {
  return createElement(Svg$d1, _extends$d5({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21.22 18.02l2 2H24v-2h-2.78zm.77-2l.01-10a2 2 0 00-2-2H7.22l5.23 5.23c.18-.04.36-.07.55-.1V7.02l4 3.73-1.58 1.47 5.54 5.54c.61-.33 1.03-.99 1.03-1.74zM2.39 1.73L1.11 3l1.54 1.54c-.4.36-.65.89-.65 1.48v10a2 2 0 002 2H0v2h18.13l2.71 2.71 1.27-1.27L2.39 1.73zM7 15.02c.31-1.48.92-2.95 2.07-4.06l1.59 1.59c-1.54.38-2.7 1.18-3.66 2.47z"
  }));
};

SvgStopScreenShare.displayName = "SvgStopScreenShare";
SvgStopScreenShare.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d6() { _extends$d6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d6.apply(this, arguments); }
var Svg$d2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgStorage = function SvgStorage(props) {
  return createElement(Svg$d2, _extends$d6({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M2 20h20v-4H2v4zm2-3h2v2H4v-2zM2 4v4h20V4H2zm4 3H4V5h2v2zm-4 7h20v-4H2v4zm2-3h2v2H4v-2z"
  }));
};

SvgStorage.displayName = "SvgStorage";
SvgStorage.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d7() { _extends$d7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d7.apply(this, arguments); }
var Svg$d3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgStore = function SvgStore(props) {
  return createElement(Svg$d3, _extends$d7({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z"
  }));
};

SvgStore.displayName = "SvgStore";
SvgStore.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d8() { _extends$d8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d8.apply(this, arguments); }
var Svg$d4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgStoreMallDirectory = function SvgStoreMallDirectory(props) {
  return createElement(Svg$d4, _extends$d8({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 4H4v2h16V4zm1 10v-2l-1-5H4l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H6v-4h6v4z"
  }));
};

SvgStoreMallDirectory.displayName = "SvgStoreMallDirectory";
SvgStoreMallDirectory.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d9() { _extends$d9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d9.apply(this, arguments); }
var Svg$d5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgStraighten = function SvgStraighten(props) {
  return createElement(Svg$d5, _extends$d9({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H3V8h2v4h2V8h2v4h2V8h2v4h2V8h2v4h2V8h2v8z"
  }));
};

SvgStraighten.displayName = "SvgStraighten";
SvgStraighten.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$da() { _extends$da = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$da.apply(this, arguments); }
var Svg$d6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgStreetview = function SvgStreetview(props) {
  return createElement(Svg$d6, _extends$da({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M12.56 14.33c-.34.27-.56.7-.56 1.17V21h7c1.1 0 2-.9 2-2v-5.98c-.94-.33-1.95-.52-3-.52-2.03 0-3.93.7-5.44 1.83z"
  }), createElement("circle", {
    cx: 18,
    cy: 6,
    r: 5
  }), createElement("path", {
    d: "M11.5 6c0-1.08.27-2.1.74-3H5c-1.1 0-2 .9-2 2v14c0 .55.23 1.05.59 1.41l9.82-9.82A6.435 6.435 0 0111.5 6z"
  }));
};

SvgStreetview.displayName = "SvgStreetview";
SvgStreetview.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$db() { _extends$db = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$db.apply(this, arguments); }
var Svg$d7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgStrikethroughS = function SvgStrikethroughS(props) {
  return createElement(Svg$d7, _extends$db({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "#010101",
    d: "M7.24 8.75c-.26-.48-.39-1.03-.39-1.67 0-.61.13-1.16.4-1.67.26-.5.63-.93 1.11-1.29a5.73 5.73 0 011.7-.83c.66-.19 1.39-.29 2.18-.29.81 0 1.54.11 2.21.34.66.22 1.23.54 1.69.94.47.4.83.88 1.08 1.43.25.55.38 1.15.38 1.81h-3.01c0-.31-.05-.59-.15-.85-.09-.27-.24-.49-.44-.68-.2-.19-.45-.33-.75-.44-.3-.1-.66-.16-1.06-.16-.39 0-.74.04-1.03.13-.29.09-.53.21-.72.36-.19.16-.34.34-.44.55-.1.21-.15.43-.15.66 0 .48.25.88.74 1.21.38.25.77.48 1.41.7H7.39c-.05-.08-.11-.17-.15-.25zM21 12v-2H3v2h9.62c.18.07.4.14.55.2.37.17.66.34.87.51.21.17.35.36.43.57.07.2.11.43.11.69 0 .23-.05.45-.14.66-.09.2-.23.38-.42.53-.19.15-.42.26-.71.35-.29.08-.63.13-1.01.13-.43 0-.83-.04-1.18-.13s-.66-.23-.91-.42c-.25-.19-.45-.44-.59-.75-.14-.31-.25-.76-.25-1.21H6.4c0 .55.08 1.13.24 1.58.16.45.37.85.65 1.21.28.35.6.66.98.92.37.26.78.48 1.22.65.44.17.9.3 1.38.39.48.08.96.13 1.44.13.8 0 1.53-.09 2.18-.28s1.21-.45 1.67-.79c.46-.34.82-.77 1.07-1.27s.38-1.07.38-1.71c0-.6-.1-1.14-.31-1.61-.05-.11-.11-.23-.17-.33H21z"
  }));
};

SvgStrikethroughS.displayName = "SvgStrikethroughS";
SvgStrikethroughS.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dc() { _extends$dc = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dc.apply(this, arguments); }
var Svg$d8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgStyle = function SvgStyle(props) {
  return createElement(Svg$d8, _extends$dc({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M2.53 19.65l1.34.56v-9.03l-2.43 5.86c-.41 1.02.08 2.19 1.09 2.61zm19.5-3.7L17.07 3.98a2.013 2.013 0 00-1.81-1.23c-.26 0-.53.04-.79.15L7.1 5.95a1.999 1.999 0 00-1.08 2.6l4.96 11.97a1.998 1.998 0 002.6 1.08l7.36-3.05a1.994 1.994 0 001.09-2.6zM7.88 8.75c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-2 11c0 1.1.9 2 2 2h1.45l-3.45-8.34v6.34z"
  }));
};

SvgStyle.displayName = "SvgStyle";
SvgStyle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dd() { _extends$dd = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dd.apply(this, arguments); }
var Svg$d9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSubdirectoryArrowLeft = function SvgSubdirectoryArrowLeft(props) {
  return createElement(Svg$d9, _extends$dd({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11 9l1.42 1.42L8.83 14H18V4h2v12H8.83l3.59 3.58L11 21l-6-6 6-6z"
  }));
};

SvgSubdirectoryArrowLeft.displayName = "SvgSubdirectoryArrowLeft";
SvgSubdirectoryArrowLeft.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$de() { _extends$de = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$de.apply(this, arguments); }
var Svg$da = styled("svg")({
  flex: "none"
}, space, color);

var SvgSubdirectoryArrowRight = function SvgSubdirectoryArrowRight(props) {
  return createElement(Svg$da, _extends$de({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 15l-6 6-1.42-1.42L15.17 16H4V4h2v10h9.17l-3.59-3.58L13 9l6 6z"
  }));
};

SvgSubdirectoryArrowRight.displayName = "SvgSubdirectoryArrowRight";
SvgSubdirectoryArrowRight.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$df() { _extends$df = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$df.apply(this, arguments); }
var Svg$db = styled("svg")({
  flex: "none"
}, space, color);

var SvgSubject = function SvgSubject(props) {
  return createElement(Svg$db, _extends$df({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M14 17H4v2h10v-2zm6-8H4v2h16V9zM4 15h16v-2H4v2zM4 5v2h16V5H4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSubject.displayName = "SvgSubject";
SvgSubject.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dg() { _extends$dg = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dg.apply(this, arguments); }
var Svg$dc = styled("svg")({
  flex: "none"
}, space, color);

var SvgSubscriptions = function SvgSubscriptions(props) {
  return createElement(Svg$dc, _extends$dg({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 8H4V6h16v2zm-2-6H6v2h12V2zm4 10v8c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2v-8c0-1.1.9-2 2-2h16c1.1 0 2 .9 2 2zm-6 4l-6-3.27v6.53L16 16z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgSubscriptions.displayName = "SvgSubscriptions";
SvgSubscriptions.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dh() { _extends$dh = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dh.apply(this, arguments); }
var Svg$dd = styled("svg")({
  flex: "none"
}, space, color);

var SvgSubtitles = function SvgSubtitles(props) {
  return createElement(Svg$dd, _extends$dh({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM4 12h4v2H4v-2zm10 6H4v-2h10v2zm6 0h-4v-2h4v2zm0-4H10v-2h10v2z"
  }));
};

SvgSubtitles.displayName = "SvgSubtitles";
SvgSubtitles.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$di() { _extends$di = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$di.apply(this, arguments); }
var Svg$de = styled("svg")({
  flex: "none"
}, space, color);

var SvgSubway = function SvgSubway(props) {
  return createElement(Svg$de, _extends$di({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0v24h24V0H0zm22 22H2V8.86C2 6.05 3.53 3.84 6.2 2.8 8 2.09 10.14 2 12 2c1.86 0 4 .09 5.8.8C20.47 3.84 22 6.05 22 8.86V22z"
  }), createElement("circle", {
    cx: 15.5,
    cy: 16,
    r: 1
  }), createElement("circle", {
    cx: 8.5,
    cy: 16,
    r: 1
  }), createElement("path", {
    d: "M7.01 9h10v5h-10z"
  }), createElement("path", {
    d: "M17.8 2.8C16 2.09 13.86 2 12 2c-1.86 0-4 .09-5.8.8C3.53 3.84 2 6.05 2 8.86V22h20V8.86c0-2.81-1.53-5.02-4.2-6.06zm.2 13.08c0 1.45-1.18 2.62-2.63 2.62l1.13 1.12V20H15l-1.5-1.5h-2.83L9.17 20H7.5v-.38l1.12-1.12C7.18 18.5 6 17.32 6 15.88V9c0-2.63 3-3 6-3 3.32 0 6 .38 6 3v6.88z"
  }));
};

SvgSubway.displayName = "SvgSubway";
SvgSubway.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dj() { _extends$dj = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dj.apply(this, arguments); }
var Svg$df = styled("svg")({
  flex: "none"
}, space, color);

var SvgSupervisorAccount = function SvgSupervisorAccount(props) {
  return createElement(Svg$df, _extends$dj({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M16.5 12c1.38 0 2.49-1.12 2.49-2.5S17.88 7 16.5 7a2.5 2.5 0 000 5zM9 11c1.66 0 2.99-1.34 2.99-3S10.66 5 9 5C7.34 5 6 6.34 6 8s1.34 3 3 3zm7.5 3c-1.83 0-5.5.92-5.5 2.75V19h11v-2.25c0-1.83-3.67-2.75-5.5-2.75zM9 13c-2.33 0-7 1.17-7 3.5V19h7v-2.25c0-.85.33-2.34 2.37-3.47C10.5 13.1 9.66 13 9 13z"
  }));
};

SvgSupervisorAccount.displayName = "SvgSupervisorAccount";
SvgSupervisorAccount.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dk() { _extends$dk = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dk.apply(this, arguments); }
var Svg$dg = styled("svg")({
  flex: "none"
}, space, color);

var SvgSurroundSound = function SvgSurroundSound(props) {
  return createElement(Svg$dg, _extends$dk({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7.76 16.24l-1.41 1.41A7.909 7.909 0 014 12c0-2.05.78-4.1 2.34-5.66l1.41 1.41C6.59 8.93 6 10.46 6 12s.59 3.07 1.76 4.24zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm5.66 1.66l-1.41-1.41C17.41 15.07 18 13.54 18 12s-.59-3.07-1.76-4.24l1.41-1.41A7.909 7.909 0 0120 12c0 2.05-.78 4.1-2.34 5.66zM12 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
  }));
};

SvgSurroundSound.displayName = "SvgSurroundSound";
SvgSurroundSound.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dl() { _extends$dl = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dl.apply(this, arguments); }
var Svg$dh = styled("svg")({
  flex: "none"
}, space, color);

var SvgSwapCalls = function SvgSwapCalls(props) {
  return createElement(Svg$dh, _extends$dl({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 4l-4 4h3v7c0 1.1-.9 2-2 2s-2-.9-2-2V8c0-2.21-1.79-4-4-4S5 5.79 5 8v7H2l4 4 4-4H7V8c0-1.1.9-2 2-2s2 .9 2 2v7c0 2.21 1.79 4 4 4s4-1.79 4-4V8h3l-4-4z"
  }));
};

SvgSwapCalls.displayName = "SvgSwapCalls";
SvgSwapCalls.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dm() { _extends$dm = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dm.apply(this, arguments); }
var Svg$di = styled("svg")({
  flex: "none"
}, space, color);

var SvgSwapHoriz = function SvgSwapHoriz(props) {
  return createElement(Svg$di, _extends$dm({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6.99 11L3 15l3.99 4v-3H14v-2H6.99v-3zM21 9l-3.99-4v3H10v2h7.01v3L21 9z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSwapHoriz.displayName = "SvgSwapHoriz";
SvgSwapHoriz.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dn() { _extends$dn = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dn.apply(this, arguments); }
var Svg$dj = styled("svg")({
  flex: "none"
}, space, color);

var SvgSwapVert = function SvgSwapVert(props) {
  return createElement(Svg$dj, _extends$dn({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16 17.01V10h-2v7.01h-3L15 21l4-3.99h-3zM9 3L5 6.99h3V14h2V6.99h3L9 3z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSwapVert.displayName = "SvgSwapVert";
SvgSwapVert.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$do() { _extends$do = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$do.apply(this, arguments); }
var Svg$dk = styled("svg")({
  flex: "none"
}, space, color);

var SvgSwapVerticalCircle = function SvgSwapVerticalCircle(props) {
  return createElement(Svg$dk, _extends$do({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM6.5 9L10 5.5 13.5 9H11v4H9V9H6.5zm11 6L14 18.5 10.5 15H13v-4h2v4h2.5z"
  }));
};

SvgSwapVerticalCircle.displayName = "SvgSwapVerticalCircle";
SvgSwapVerticalCircle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dp() { _extends$dp = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dp.apply(this, arguments); }
var Svg$dl = styled("svg")({
  flex: "none"
}, space, color);

var SvgSwitchCamera = function SvgSwitchCamera(props) {
  return createElement(Svg$dl, _extends$dp({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 4h-3.17L15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 11.5V13H9v2.5L5.5 12 9 8.5V11h6V8.5l3.5 3.5-3.5 3.5z"
  }));
};

SvgSwitchCamera.displayName = "SvgSwitchCamera";
SvgSwitchCamera.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dq() { _extends$dq = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dq.apply(this, arguments); }
var Svg$dm = styled("svg")({
  flex: "none"
}, space, color);

var SvgSwitchVideo = function SvgSwitchVideo(props) {
  return createElement(Svg$dm, _extends$dq({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 9.5V6c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.5l4 4v-13l-4 4zm-5 6V13H7v2.5L3.5 12 7 8.5V11h6V8.5l3.5 3.5-3.5 3.5z"
  }));
};

SvgSwitchVideo.displayName = "SvgSwitchVideo";
SvgSwitchVideo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dr() { _extends$dr = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dr.apply(this, arguments); }
var Svg$dn = styled("svg")({
  flex: "none"
}, space, color);

var SvgSync = function SvgSync(props) {
  return createElement(Svg$dn, _extends$dr({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46A7.93 7.93 0 0020 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74A7.93 7.93 0 004 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgSync.displayName = "SvgSync";
SvgSync.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ds() { _extends$ds = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ds.apply(this, arguments); }
var Svg$do = styled("svg")({
  flex: "none"
}, space, color);

var SvgSyncDisabled = function SvgSyncDisabled(props) {
  return createElement(Svg$do, _extends$ds({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0zm0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M10 6.35V4.26c-.8.21-1.55.54-2.23.96l1.46 1.46c.25-.12.5-.24.77-.33zm-7.14-.94l2.36 2.36a7.925 7.925 0 001.14 9.87L4 20h6v-6l-2.24 2.24A6.003 6.003 0 016 12c0-1 .25-1.94.68-2.77l8.08 8.08c-.25.13-.5.25-.77.34v2.09c.8-.21 1.55-.54 2.23-.96l2.36 2.36 1.27-1.27L4.14 4.14 2.86 5.41zM20 4h-6v6l2.24-2.24A6.003 6.003 0 0118 12c0 1-.25 1.94-.68 2.77l1.46 1.46a7.925 7.925 0 00-1.14-9.87L20 4z"
  }));
};

SvgSyncDisabled.displayName = "SvgSyncDisabled";
SvgSyncDisabled.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dt() { _extends$dt = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dt.apply(this, arguments); }
var Svg$dp = styled("svg")({
  flex: "none"
}, space, color);

var SvgSyncProblem = function SvgSyncProblem(props) {
  return createElement(Svg$dp, _extends$dt({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M3 12c0 2.21.91 4.2 2.36 5.64L3 20h6v-6l-2.24 2.24A6.003 6.003 0 015 12a5.99 5.99 0 014-5.65V4.26C5.55 5.15 3 8.27 3 12zm8 5h2v-2h-2v2zM21 4h-6v6l2.24-2.24A6.003 6.003 0 0119 12a5.99 5.99 0 01-4 5.65v2.09c3.45-.89 6-4.01 6-7.74 0-2.21-.91-4.2-2.36-5.64L21 4zm-10 9h2V7h-2v6z"
  }));
};

SvgSyncProblem.displayName = "SvgSyncProblem";
SvgSyncProblem.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$du() { _extends$du = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$du.apply(this, arguments); }
var Svg$dq = styled("svg")({
  flex: "none"
}, space, color);

var SvgSystemUpdate = function SvgSystemUpdate(props) {
  return createElement(Svg$dq, _extends$du({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17 1.01L7 1c-1.1 0-2 .9-2 2v18c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99zM17 19H7V5h10v14zm-1-6h-3V8h-2v5H8l4 4 4-4z"
  }));
};

SvgSystemUpdate.displayName = "SvgSystemUpdate";
SvgSystemUpdate.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dv() { _extends$dv = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dv.apply(this, arguments); }
var Svg$dr = styled("svg")({
  flex: "none"
}, space, color);

var SvgSystemUpdateAlt = function SvgSystemUpdateAlt(props) {
  return createElement(Svg$dr, _extends$dv({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 .5h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 16.5l4-4h-3v-9h-2v9H8l4 4zm9-13h-6v1.99h6v14.03H3V5.49h6V3.5H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-14c0-1.1-.9-2-2-2z"
  }));
};

SvgSystemUpdateAlt.displayName = "SvgSystemUpdateAlt";
SvgSystemUpdateAlt.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dw() { _extends$dw = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dw.apply(this, arguments); }
var Svg$ds = styled("svg")({
  flex: "none"
}, space, color);

var SvgTab = function SvgTab(props) {
  return createElement(Svg$ds, _extends$dw({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h10v4h8v10z"
  }));
};

SvgTab.displayName = "SvgTab";
SvgTab.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dx() { _extends$dx = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dx.apply(this, arguments); }
var Svg$dt = styled("svg")({
  flex: "none"
}, space, color);

var SvgTabUnselected = function SvgTabUnselected(props) {
  return createElement(Svg$dt, _extends$dx({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M1 9h2V7H1v2zm0 4h2v-2H1v2zm0-8h2V3c-1.1 0-2 .9-2 2zm8 16h2v-2H9v2zm-8-4h2v-2H1v2zm2 4v-2H1c0 1.1.9 2 2 2zM21 3h-8v6h10V5c0-1.1-.9-2-2-2zm0 14h2v-2h-2v2zM9 5h2V3H9v2zM5 21h2v-2H5v2zM5 5h2V3H5v2zm16 16c1.1 0 2-.9 2-2h-2v2zm0-8h2v-2h-2v2zm-8 8h2v-2h-2v2zm4 0h2v-2h-2v2z"
  }));
};

SvgTabUnselected.displayName = "SvgTabUnselected";
SvgTabUnselected.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dy() { _extends$dy = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dy.apply(this, arguments); }
var Svg$du = styled("svg")({
  flex: "none"
}, space, color);

var SvgTablet = function SvgTablet(props) {
  return createElement(Svg$du, _extends$dy({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 4H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h18c1.1 0 1.99-.9 1.99-2L23 6c0-1.1-.9-2-2-2zm-2 14H5V6h14v12z"
  }));
};

SvgTablet.displayName = "SvgTablet";
SvgTablet.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dz() { _extends$dz = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dz.apply(this, arguments); }
var Svg$dv = styled("svg")({
  flex: "none"
}, space, color);

var SvgTabletAndroid = function SvgTabletAndroid(props) {
  return createElement(Svg$dv, _extends$dz({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "tabletAndroid_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "tabletAndroid_svg__b"
  }, createElement("use", {
    xlinkHref: "#tabletAndroid_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#tabletAndroid_svg__b)",
    d: "M18 0H6C4.34 0 3 1.34 3 3v18c0 1.66 1.34 3 3 3h12c1.66 0 3-1.34 3-3V3c0-1.66-1.34-3-3-3zm-4 22h-4v-1h4v1zm5.25-3H4.75V3h14.5v16z"
  }));
};

SvgTabletAndroid.displayName = "SvgTabletAndroid";
SvgTabletAndroid.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dA() { _extends$dA = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dA.apply(this, arguments); }
var Svg$dw = styled("svg")({
  flex: "none"
}, space, color);

var SvgTabletMac = function SvgTabletMac(props) {
  return createElement(Svg$dw, _extends$dA({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.5 0h-14A2.5 2.5 0 002 2.5v19A2.5 2.5 0 004.5 24h14a2.5 2.5 0 002.5-2.5v-19A2.5 2.5 0 0018.5 0zm-7 23c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm7.5-4H4V3h15v16z"
  }));
};

SvgTabletMac.displayName = "SvgTabletMac";
SvgTabletMac.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dB() { _extends$dB = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dB.apply(this, arguments); }
var Svg$dx = styled("svg")({
  flex: "none"
}, space, color);

var SvgTagFaces = function SvgTagFaces(props) {
  return createElement(Svg$dx, _extends$dB({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"
  }));
};

SvgTagFaces.displayName = "SvgTagFaces";
SvgTagFaces.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dC() { _extends$dC = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dC.apply(this, arguments); }
var Svg$dy = styled("svg")({
  flex: "none"
}, space, color);

var SvgTapAndPlay = function SvgTapAndPlay(props) {
  return createElement(Svg$dy, _extends$dC({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M2 16v2c2.76 0 5 2.24 5 5h2c0-3.87-3.13-7-7-7zm0 4v3h3c0-1.66-1.34-3-3-3zm0-8v2a9 9 0 019 9h2c0-6.08-4.92-11-11-11zM17 1.01L7 1c-1.1 0-2 .9-2 2v7.37c.69.16 1.36.37 2 .64V5h10v13h-3.03c.52 1.25.84 2.59.95 4H17c1.1 0 2-.9 2-2V3c0-1.1-.9-1.99-2-1.99z"
  }));
};

SvgTapAndPlay.displayName = "SvgTapAndPlay";
SvgTapAndPlay.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dD() { _extends$dD = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dD.apply(this, arguments); }
var Svg$dz = styled("svg")({
  flex: "none"
}, space, color);

var SvgTerrain = function SvgTerrain(props) {
  return createElement(Svg$dz, _extends$dD({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M14 6l-3.75 5 2.85 3.8-1.6 1.2C9.81 13.75 7 10 7 10l-6 8h22L14 6z"
  }));
};

SvgTerrain.displayName = "SvgTerrain";
SvgTerrain.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dE() { _extends$dE = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dE.apply(this, arguments); }
var Svg$dA = styled("svg")({
  flex: "none"
}, space, color);

var SvgTextFields = function SvgTextFields(props) {
  return createElement(Svg$dA, _extends$dE({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M2.5 4v3h5v12h3V7h5V4h-13zm19 5h-9v3h3v7h3v-7h3V9z"
  }));
};

SvgTextFields.displayName = "SvgTextFields";
SvgTextFields.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dF() { _extends$dF = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dF.apply(this, arguments); }
var Svg$dB = styled("svg")({
  flex: "none"
}, space, color);

var SvgTextFormat = function SvgTextFormat(props) {
  return createElement(Svg$dB, _extends$dF({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5 17v2h14v-2H5zm4.5-4.2h5l.9 2.2h2.1L12.75 4h-1.5L6.5 15h2.1l.9-2.2zM12 5.98L13.87 11h-3.74L12 5.98z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgTextFormat.displayName = "SvgTextFormat";
SvgTextFormat.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dG() { _extends$dG = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dG.apply(this, arguments); }
var Svg$dC = styled("svg")({
  flex: "none"
}, space, color);

var SvgTextsms = function SvgTextsms(props) {
  return createElement(Svg$dC, _extends$dG({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM9 11H7V9h2v2zm4 0h-2V9h2v2zm4 0h-2V9h2v2z"
  }));
};

SvgTextsms.displayName = "SvgTextsms";
SvgTextsms.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dH() { _extends$dH = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dH.apply(this, arguments); }
var Svg$dD = styled("svg")({
  flex: "none"
}, space, color);

var SvgTexture = function SvgTexture(props) {
  return createElement(Svg$dD, _extends$dH({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.51 3.08L3.08 19.51c.09.34.27.65.51.9.25.24.56.42.9.51L20.93 4.49c-.19-.69-.73-1.23-1.42-1.41zM11.88 3L3 11.88v2.83L14.71 3h-2.83zM5 3c-1.1 0-2 .9-2 2v2l4-4H5zm14 18c.55 0 1.05-.22 1.41-.59.37-.36.59-.86.59-1.41v-2l-4 4h2zm-9.71 0h2.83L21 12.12V9.29L9.29 21z"
  }));
};

SvgTexture.displayName = "SvgTexture";
SvgTexture.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dI() { _extends$dI = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dI.apply(this, arguments); }
var Svg$dE = styled("svg")({
  flex: "none"
}, space, color);

var SvgTheaters = function SvgTheaters(props) {
  return createElement(Svg$dE, _extends$dI({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18 3v2h-2V3H8v2H6V3H4v18h2v-2h2v2h8v-2h2v2h2V3h-2zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgTheaters.displayName = "SvgTheaters";
SvgTheaters.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dJ() { _extends$dJ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dJ.apply(this, arguments); }
var Svg$dF = styled("svg")({
  flex: "none"
}, space, color);

var SvgThreeDRotation = function SvgThreeDRotation(props) {
  return createElement(Svg$dF, _extends$dJ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M7.52 21.48A10.487 10.487 0 011.55 13H.05C.56 19.16 5.71 24 12 24l.66-.03-3.81-3.81-1.33 1.32zm.89-6.52c-.19 0-.37-.03-.52-.08a1.07 1.07 0 01-.4-.24c-.11-.1-.2-.22-.26-.37-.06-.14-.09-.3-.09-.47h-1.3c0 .36.07.68.21.95.14.27.33.5.56.69.24.18.51.32.82.41.3.1.62.15.96.15.37 0 .72-.05 1.03-.15.32-.1.6-.25.83-.44s.42-.43.55-.72c.13-.29.2-.61.2-.97 0-.19-.02-.38-.07-.56a1.67 1.67 0 00-.23-.51c-.1-.16-.24-.3-.4-.43-.17-.13-.37-.23-.61-.31a2.098 2.098 0 00.89-.75c.1-.15.17-.3.22-.46.05-.16.07-.32.07-.48 0-.36-.06-.68-.18-.96a1.78 1.78 0 00-.51-.69c-.2-.19-.47-.33-.77-.43C9.1 8.05 8.76 8 8.39 8c-.36 0-.69.05-1 .16-.3.11-.57.26-.79.45-.21.19-.38.41-.51.67-.12.26-.18.54-.18.85h1.3c0-.17.03-.32.09-.45s.14-.25.25-.34c.11-.09.23-.17.38-.22.15-.05.3-.08.48-.08.4 0 .7.1.89.31.19.2.29.49.29.86 0 .18-.03.34-.08.49a.87.87 0 01-.25.37c-.11.1-.25.18-.41.24-.16.06-.36.09-.58.09H7.5v1.03h.77c.22 0 .42.02.6.07s.33.13.45.23c.12.11.22.24.29.4.07.16.1.35.1.57 0 .41-.12.72-.35.93-.23.23-.55.33-.95.33zm8.55-5.92c-.32-.33-.7-.59-1.14-.77-.43-.18-.92-.27-1.46-.27H12v8h2.3c.55 0 1.06-.09 1.51-.27.45-.18.84-.43 1.16-.76.32-.33.57-.73.74-1.19.17-.47.26-.99.26-1.57v-.4c0-.58-.09-1.1-.26-1.57-.18-.47-.43-.87-.75-1.2zm-.39 3.16c0 .42-.05.79-.14 1.13-.1.33-.24.62-.43.85-.19.23-.43.41-.71.53-.29.12-.62.18-.99.18h-.91V9.12h.97c.72 0 1.27.23 1.64.69.38.46.57 1.12.57 1.99v.4zM12 0l-.66.03 3.81 3.81 1.33-1.33c3.27 1.55 5.61 4.72 5.96 8.48h1.5C23.44 4.84 18.29 0 12 0z"
  }));
};

SvgThreeDRotation.displayName = "SvgThreeDRotation";
SvgThreeDRotation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dK() { _extends$dK = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dK.apply(this, arguments); }
var Svg$dG = styled("svg")({
  flex: "none"
}, space, color);

var SvgThumbDown = function SvgThumbDown(props) {
  return createElement(Svg$dG, _extends$dK({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M15 3H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v1.91l.01.01L1 14c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 23l6.59-6.59c.36-.36.58-.86.58-1.41V5c0-1.1-.9-2-2-2zm4 0v12h4V3h-4z"
  }));
};

SvgThumbDown.displayName = "SvgThumbDown";
SvgThumbDown.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dL() { _extends$dL = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dL.apply(this, arguments); }
var Svg$dH = styled("svg")({
  flex: "none"
}, space, color);

var SvgThumbUp = function SvgThumbUp(props) {
  return createElement(Svg$dH, _extends$dL({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-1.91l-.01-.01L23 10z"
  }));
};

SvgThumbUp.displayName = "SvgThumbUp";
SvgThumbUp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dM() { _extends$dM = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dM.apply(this, arguments); }
var Svg$dI = styled("svg")({
  flex: "none"
}, space, color);

var SvgThumbsUpDown = function SvgThumbsUpDown(props) {
  return createElement(Svg$dI, _extends$dM({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 6c0-.55-.45-1-1-1H5.82l.66-3.18.02-.23c0-.31-.13-.59-.33-.8L5.38 0 .44 4.94C.17 5.21 0 5.59 0 6v6.5c0 .83.67 1.5 1.5 1.5h6.75c.62 0 1.15-.38 1.38-.91l2.26-5.29c.07-.17.11-.36.11-.55V6zm10.5 4h-6.75c-.62 0-1.15.38-1.38.91l-2.26 5.29c-.07.17-.11.36-.11.55V18c0 .55.45 1 1 1h5.18l-.66 3.18-.02.24c0 .31.13.59.33.8l.79.78 4.94-4.94c.27-.27.44-.65.44-1.06v-6.5c0-.83-.67-1.5-1.5-1.5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgThumbsUpDown.displayName = "SvgThumbsUpDown";
SvgThumbsUpDown.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dN() { _extends$dN = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dN.apply(this, arguments); }
var Svg$dJ = styled("svg")({
  flex: "none"
}, space, color);

var SvgTimeToLeave = function SvgTimeToLeave(props) {
  return createElement(Svg$dJ, _extends$dN({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.92 5.01C18.72 4.42 18.16 4 17.5 4h-11c-.66 0-1.21.42-1.42 1.01L3 11v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1h12v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-8l-2.08-5.99zM6.5 15c-.83 0-1.5-.67-1.5-1.5S5.67 12 6.5 12s1.5.67 1.5 1.5S7.33 15 6.5 15zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zM5 10l1.5-4.5h11L19 10H5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgTimeToLeave.displayName = "SvgTimeToLeave";
SvgTimeToLeave.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dO() { _extends$dO = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dO.apply(this, arguments); }
var Svg$dK = styled("svg")({
  flex: "none"
}, space, color);

var SvgTimelapse = function SvgTimelapse(props) {
  return createElement(Svg$dK, _extends$dO({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16.24 7.76A5.974 5.974 0 0012 6v6l-4.24 4.24c2.34 2.34 6.14 2.34 8.49 0a5.99 5.99 0 00-.01-8.48zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }));
};

SvgTimelapse.displayName = "SvgTimelapse";
SvgTimelapse.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dP() { _extends$dP = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dP.apply(this, arguments); }
var Svg$dL = styled("svg")({
  flex: "none"
}, space, color);

var SvgTimeline = function SvgTimeline(props) {
  return createElement(Svg$dL, _extends$dP({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "timeline_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "timeline_svg__b"
  }, createElement("use", {
    xlinkHref: "#timeline_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#timeline_svg__b)",
    d: "M23 8c0 1.1-.9 2-2 2a1.7 1.7 0 01-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56A1.7 1.7 0 0119 8c0-1.1.9-2 2-2s2 .9 2 2z"
  }));
};

SvgTimeline.displayName = "SvgTimeline";
SvgTimeline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dQ() { _extends$dQ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dQ.apply(this, arguments); }
var Svg$dM = styled("svg")({
  flex: "none"
}, space, color);

var SvgTimer = function SvgTimer(props) {
  return createElement(Svg$dM, _extends$dQ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15 1H9v2h6V1zm-4 13h2V8h-2v6zm8.03-6.61l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42A8.962 8.962 0 0012 4c-4.97 0-9 4.03-9 9s4.02 9 9 9a8.994 8.994 0 007.03-14.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
  }));
};

SvgTimer.displayName = "SvgTimer";
SvgTimer.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dR() { _extends$dR = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dR.apply(this, arguments); }
var Svg$dN = styled("svg")({
  flex: "none"
}, space, color);

var SvgTimer10 = function SvgTimer10(props) {
  return createElement(Svg$dN, _extends$dR({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 7.72V9.4l3-1V18h2V6h-.25L0 7.72zm23.78 6.65c-.14-.28-.35-.53-.63-.74-.28-.21-.61-.39-1.01-.53s-.85-.27-1.35-.38a6.64 6.64 0 01-.87-.23 2.61 2.61 0 01-.55-.25.717.717 0 01-.28-.3.978.978 0 01.01-.8c.06-.13.15-.25.27-.34.12-.1.27-.18.45-.24s.4-.09.64-.09c.25 0 .47.04.66.11.19.07.35.17.48.29.13.12.22.26.29.42.06.16.1.32.1.49h1.95a2.517 2.517 0 00-.93-1.97c-.3-.25-.66-.44-1.09-.59C21.49 9.07 21 9 20.46 9c-.51 0-.98.07-1.39.21-.41.14-.77.33-1.06.57-.29.24-.51.52-.67.84-.16.32-.23.65-.23 1.01s.08.69.23.96c.15.28.36.52.64.73.27.21.6.38.98.53.38.14.81.26 1.27.36.39.08.71.17.95.26s.43.19.57.29c.13.1.22.22.27.34.05.12.07.25.07.39 0 .32-.13.57-.4.77-.27.2-.66.29-1.17.29-.22 0-.43-.02-.64-.08-.21-.05-.4-.13-.56-.24a1.333 1.333 0 01-.59-1.11h-1.89c0 .36.08.71.24 1.05.16.34.39.65.7.93.31.27.69.49 1.15.66.46.17.98.25 1.58.25.53 0 1.01-.06 1.44-.19.43-.13.8-.31 1.11-.54.31-.23.54-.51.71-.83.17-.32.25-.67.25-1.06-.02-.4-.09-.74-.24-1.02zm-9.96-7.32c-.34-.4-.75-.7-1.23-.88-.47-.18-1.01-.27-1.59-.27-.58 0-1.11.09-1.59.27-.48.18-.89.47-1.23.88-.34.41-.6.93-.79 1.59-.18.65-.28 1.45-.28 2.39v1.92c0 .94.09 1.74.28 2.39.19.66.45 1.19.8 1.6.34.41.75.71 1.23.89.48.18 1.01.28 1.59.28.59 0 1.12-.09 1.59-.28.48-.18.88-.48 1.22-.89.34-.41.6-.94.78-1.6.18-.65.28-1.45.28-2.39v-1.92c0-.94-.09-1.74-.28-2.39-.18-.66-.44-1.19-.78-1.59zm-.92 6.17c0 .6-.04 1.11-.12 1.53-.08.42-.2.76-.36 1.02-.16.26-.36.45-.59.57-.23.12-.51.18-.82.18-.3 0-.58-.06-.82-.18s-.44-.31-.6-.57c-.16-.26-.29-.6-.38-1.02-.09-.42-.13-.93-.13-1.53v-2.5c0-.6.04-1.11.13-1.52.09-.41.21-.74.38-1 .16-.25.36-.43.6-.55.24-.11.51-.17.81-.17.31 0 .58.06.81.17.24.11.44.29.6.55.16.25.29.58.37.99.08.41.13.92.13 1.52v2.51z"
  }));
};

SvgTimer10.displayName = "SvgTimer10";
SvgTimer10.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dS() { _extends$dS = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dS.apply(this, arguments); }
var Svg$dO = styled("svg")({
  flex: "none"
}, space, color);

var SvgTimer3 = function SvgTimer3(props) {
  return createElement(Svg$dO, _extends$dS({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M11.61 12.97c-.16-.24-.36-.46-.62-.65a3.38 3.38 0 00-.93-.48c.3-.14.57-.3.8-.5.23-.2.42-.41.57-.64.15-.23.27-.46.34-.71.08-.24.11-.49.11-.73 0-.55-.09-1.04-.28-1.46-.18-.42-.44-.77-.78-1.06-.33-.28-.73-.5-1.2-.64-.45-.13-.97-.2-1.53-.2-.55 0-1.06.08-1.52.24-.47.17-.87.4-1.2.69-.33.29-.6.63-.78 1.03-.2.39-.29.83-.29 1.29h1.98c0-.26.05-.49.14-.69.09-.2.22-.38.38-.52.17-.14.36-.25.58-.33.22-.08.46-.12.73-.12.61 0 1.06.16 1.36.47.3.31.44.75.44 1.32 0 .27-.04.52-.12.74-.08.22-.21.41-.38.57-.17.16-.38.28-.63.37-.25.09-.55.13-.89.13H6.72v1.57H7.9c.34 0 .64.04.91.11.27.08.5.19.69.35.19.16.34.36.44.61.1.24.16.54.16.87 0 .62-.18 1.09-.53 1.42-.35.33-.84.49-1.45.49-.29 0-.56-.04-.8-.13-.24-.08-.44-.2-.61-.36-.17-.16-.3-.34-.39-.56-.09-.22-.14-.46-.14-.72H4.19c0 .55.11 1.03.32 1.45.21.42.5.77.86 1.05s.77.49 1.24.63.96.21 1.48.21c.57 0 1.09-.08 1.58-.23.49-.15.91-.38 1.26-.68.36-.3.64-.66.84-1.1.2-.43.3-.93.3-1.48 0-.29-.04-.58-.11-.86-.08-.25-.19-.51-.35-.76zm9.26 1.4c-.14-.28-.35-.53-.63-.74-.28-.21-.61-.39-1.01-.53s-.85-.27-1.35-.38a6.64 6.64 0 01-.87-.23 2.61 2.61 0 01-.55-.25.717.717 0 01-.28-.3c-.05-.11-.08-.24-.08-.39a.946.946 0 01.36-.75c.12-.1.27-.18.45-.24s.4-.09.64-.09c.25 0 .47.04.66.11.19.07.35.17.48.29.13.12.22.26.29.42.06.16.1.32.1.49h1.95a2.517 2.517 0 00-.93-1.97c-.3-.25-.66-.44-1.09-.59-.43-.15-.92-.22-1.46-.22-.51 0-.98.07-1.39.21-.41.14-.77.33-1.06.57-.29.24-.51.52-.67.84-.16.32-.23.65-.23 1.01s.08.68.23.96c.15.28.37.52.64.73.27.21.6.38.98.53.38.14.81.26 1.27.36.39.08.71.17.95.26s.43.19.57.29c.13.1.22.22.27.34.05.12.07.25.07.39 0 .32-.13.57-.4.77-.27.2-.66.29-1.17.29-.22 0-.43-.02-.64-.08-.21-.05-.4-.13-.56-.24a1.333 1.333 0 01-.59-1.11h-1.89c0 .36.08.71.24 1.05.16.34.39.65.7.93.31.27.69.49 1.15.66.46.17.98.25 1.58.25.53 0 1.01-.06 1.44-.19.43-.13.8-.31 1.11-.54.31-.23.54-.51.71-.83.17-.32.25-.67.25-1.06-.02-.4-.09-.74-.24-1.02z"
  }));
};

SvgTimer3.displayName = "SvgTimer3";
SvgTimer3.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dT() { _extends$dT = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dT.apply(this, arguments); }
var Svg$dP = styled("svg")({
  flex: "none"
}, space, color);

var SvgTimerOff = function SvgTimerOff(props) {
  return createElement(Svg$dP, _extends$dT({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.04 4.55l-1.42 1.42a9.012 9.012 0 00-10.57-.49l1.46 1.46C9.53 6.35 10.73 6 12 6c3.87 0 7 3.13 7 7 0 1.27-.35 2.47-.94 3.49l1.45 1.45A8.878 8.878 0 0021 13c0-2.12-.74-4.07-1.97-5.61l1.42-1.42-1.41-1.42zM15 1H9v2h6V1zm-4 8.44l2 2V8h-2v1.44zM3.02 4L1.75 5.27 4.5 8.03A8.905 8.905 0 003 13c0 4.97 4.02 9 9 9 1.84 0 3.55-.55 4.98-1.5l2.5 2.5 1.27-1.27-7.71-7.71L3.02 4zM12 20c-3.87 0-7-3.13-7-7 0-1.28.35-2.48.95-3.52l9.56 9.56c-1.03.61-2.23.96-3.51.96z"
  }));
};

SvgTimerOff.displayName = "SvgTimerOff";
SvgTimerOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dU() { _extends$dU = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dU.apply(this, arguments); }
var Svg$dQ = styled("svg")({
  flex: "none"
}, space, color);

var SvgTitle = function SvgTitle(props) {
  return createElement(Svg$dQ, _extends$dU({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5 4v3h5.5v12h3V7H19V4z"
  }));
};

SvgTitle.displayName = "SvgTitle";
SvgTitle.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dV() { _extends$dV = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dV.apply(this, arguments); }
var Svg$dR = styled("svg")({
  flex: "none"
}, space, color);

var SvgToc = function SvgToc(props) {
  return createElement(Svg$dR, _extends$dV({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgToc.displayName = "SvgToc";
SvgToc.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dW() { _extends$dW = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dW.apply(this, arguments); }
var Svg$dS = styled("svg")({
  flex: "none"
}, space, color);

var SvgToday = function SvgToday(props) {
  return createElement(Svg$dS, _extends$dW({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19a2 2 0 002 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"
  }));
};

SvgToday.displayName = "SvgToday";
SvgToday.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dX() { _extends$dX = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dX.apply(this, arguments); }
var Svg$dT = styled("svg")({
  flex: "none"
}, space, color);

var SvgToll = function SvgToll(props) {
  return createElement(Svg$dT, _extends$dX({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15 4c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M3 12a5.99 5.99 0 014-5.65V4.26C3.55 5.15 1 8.27 1 12s2.55 6.85 6 7.74v-2.09A5.99 5.99 0 013 12z"
  }));
};

SvgToll.displayName = "SvgToll";
SvgToll.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dY() { _extends$dY = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dY.apply(this, arguments); }
var Svg$dU = styled("svg")({
  flex: "none"
}, space, color);

var SvgTonality = function SvgTonality(props) {
  return createElement(Svg$dU, _extends$dY({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.94-.49-7-3.85-7-7.93s3.05-7.44 7-7.93v15.86zm2-15.86c1.03.13 2 .45 2.87.93H13v-.93zM13 7h5.24c.25.31.48.65.68 1H13V7zm0 3h6.74c.08.33.15.66.19 1H13v-1zm0 9.93V19h2.87c-.87.48-1.84.8-2.87.93zM18.24 17H13v-1h5.92c-.2.35-.43.69-.68 1zm1.5-3H13v-1h6.93c-.04.34-.11.67-.19 1z"
  }));
};

SvgTonality.displayName = "SvgTonality";
SvgTonality.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$dZ() { _extends$dZ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$dZ.apply(this, arguments); }
var Svg$dV = styled("svg")({
  flex: "none"
}, space, color);

var SvgTouchApp = function SvgTouchApp(props) {
  return createElement(Svg$dV, _extends$dZ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "touchApp_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "touchApp_svg__b"
  }, createElement("use", {
    xlinkHref: "#touchApp_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M9 11.24V7.5a2.5 2.5 0 015 0v3.74c1.21-.81 2-2.18 2-3.74C16 5.01 13.99 3 11.5 3S7 5.01 7 7.5c0 1.56.79 2.93 2 3.74zm9.84 4.63l-4.54-2.26c-.17-.07-.35-.11-.54-.11H13v-6c0-.83-.67-1.5-1.5-1.5S10 6.67 10 7.5v10.74l-3.43-.72c-.08-.01-.15-.03-.24-.03-.31 0-.59.13-.79.33l-.79.8 4.94 4.94c.27.27.65.44 1.06.44h6.79c.75 0 1.33-.55 1.44-1.28l.75-5.27c.01-.07.02-.14.02-.2 0-.62-.38-1.16-.91-1.38z",
    clipPath: "url(#touchApp_svg__b)"
  }));
};

SvgTouchApp.displayName = "SvgTouchApp";
SvgTouchApp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d_() { _extends$d_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d_.apply(this, arguments); }
var Svg$dW = styled("svg")({
  flex: "none"
}, space, color);

var SvgToys = function SvgToys(props) {
  return createElement(Svg$dW, _extends$d_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 12c0-3 2.5-5.5 5.5-5.5S23 9 23 12H12zm0 0c0 3-2.5 5.5-5.5 5.5S1 15 1 12h11zm0 0c-3 0-5.5-2.5-5.5-5.5S9 1 12 1v11zm0 0c3 0 5.5 2.5 5.5 5.5S15 23 12 23V12z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgToys.displayName = "SvgToys";
SvgToys.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$d$() { _extends$d$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d$.apply(this, arguments); }
var Svg$dX = styled("svg")({
  flex: "none"
}, space, color);

var SvgTrackChanges = function SvgTrackChanges(props) {
  return createElement(Svg$dX, _extends$d$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M19.07 4.93l-1.41 1.41A8.014 8.014 0 0120 12c0 4.42-3.58 8-8 8s-8-3.58-8-8c0-4.08 3.05-7.44 7-7.93v2.02C8.16 6.57 6 9.03 6 12c0 3.31 2.69 6 6 6s6-2.69 6-6c0-1.66-.67-3.16-1.76-4.24l-1.41 1.41C15.55 9.9 16 10.9 16 12c0 2.21-1.79 4-4 4s-4-1.79-4-4c0-1.86 1.28-3.41 3-3.86v2.14c-.6.35-1 .98-1 1.72 0 1.1.9 2 2 2s2-.9 2-2c0-.74-.4-1.38-1-1.72V2h-1C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10c0-2.76-1.12-5.26-2.93-7.07z"
  }));
};

SvgTrackChanges.displayName = "SvgTrackChanges";
SvgTrackChanges.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e0() { _extends$e0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e0.apply(this, arguments); }
var Svg$dY = styled("svg")({
  flex: "none"
}, space, color);

var SvgTraffic = function SvgTraffic(props) {
  return createElement(Svg$dY, _extends$e0({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 10h-3V8.86c1.72-.45 3-2 3-3.86h-3V4c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v1H4c0 1.86 1.28 3.41 3 3.86V10H4c0 1.86 1.28 3.41 3 3.86V15H4c0 1.86 1.28 3.41 3 3.86V20c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-1.14c1.72-.45 3-2 3-3.86h-3v-1.14c1.72-.45 3-2 3-3.86zm-8 9a2 2 0 11-.001-3.999A2 2 0 0112 19zm0-5a2 2 0 11-.001-3.999A2 2 0 0112 14zm0-5a2 2 0 01-2-2c0-1.11.89-2 2-2a2 2 0 110 4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgTraffic.displayName = "SvgTraffic";
SvgTraffic.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e1() { _extends$e1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e1.apply(this, arguments); }
var Svg$dZ = styled("svg")({
  flex: "none"
}, space, color);

var SvgTrain = function SvgTrain(props) {
  return createElement(Svg$dZ, _extends$e1({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 2c-4 0-8 .5-8 4v9.5C4 17.43 5.57 19 7.5 19L6 20.5v.5h2.23l2-2H14l2 2h2v-.5L16.5 19c1.93 0 3.5-1.57 3.5-3.5V6c0-3.5-3.58-4-8-4zM7.5 17c-.83 0-1.5-.67-1.5-1.5S6.67 14 7.5 14s1.5.67 1.5 1.5S8.33 17 7.5 17zm3.5-7H6V6h5v4zm2 0V6h5v4h-5zm3.5 7c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgTrain.displayName = "SvgTrain";
SvgTrain.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e2() { _extends$e2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e2.apply(this, arguments); }
var Svg$d_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgTram = function SvgTram(props) {
  return createElement(Svg$d_, _extends$e2({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19 16.94V8.5c0-2.79-2.61-3.4-6.01-3.49l.76-1.51H17V2H7v1.5h4.75l-.76 1.52C7.86 5.11 5 5.73 5 8.5v8.44c0 1.45 1.19 2.66 2.59 2.97L6 21.5v.5h2.23l2-2H14l2 2h2v-.5L16.5 20h-.08c1.69 0 2.58-1.37 2.58-3.06zm-7 1.56c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm5-4.5H7V9h10v5z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgTram.displayName = "SvgTram";
SvgTram.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e3() { _extends$e3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e3.apply(this, arguments); }
var Svg$d$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgTransferWithinAStation = function SvgTransferWithinAStation(props) {
  return createElement(Svg$d$, _extends$e3({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M16.49 15.5v-1.75L14 16.25l2.49 2.5V17H22v-1.5zM19.51 19.75H14v1.5h5.51V23L22 20.5 19.51 18zM9.5 5.5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM5.75 8.9L3 23h2.1l1.75-8L9 17v6h2v-7.55L8.95 13.4l.6-3C10.85 12 12.8 13 15 13v-2c-1.85 0-3.45-1-4.35-2.45l-.95-1.6C9.35 6.35 8.7 6 8 6c-.25 0-.5.05-.75.15L2 8.3V13h2V9.65l1.75-.75"
  }));
};

SvgTransferWithinAStation.displayName = "SvgTransferWithinAStation";
SvgTransferWithinAStation.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e4() { _extends$e4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e4.apply(this, arguments); }
var Svg$e0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgTransform = function SvgTransform(props) {
  return createElement(Svg$e0, _extends$e4({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 18v-2H8V4h2L7 1 4 4h2v2H2v2h4v8c0 1.1.9 2 2 2h8v2h-2l3 3 3-3h-2v-2h4zM10 8h6v6h2V8c0-1.1-.9-2-2-2h-6v2z"
  }));
};

SvgTransform.displayName = "SvgTransform";
SvgTransform.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e5() { _extends$e5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e5.apply(this, arguments); }
var Svg$e1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgTranslate = function SvgTranslate(props) {
  return createElement(Svg$e1, _extends$e5({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12.87 15.07l-2.54-2.51.03-.03A17.52 17.52 0 0014.07 6H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z"
  }));
};

SvgTranslate.displayName = "SvgTranslate";
SvgTranslate.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e6() { _extends$e6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e6.apply(this, arguments); }
var Svg$e2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgTrendingDown = function SvgTrendingDown(props) {
  return createElement(Svg$e2, _extends$e6({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16 18l2.29-2.29-4.88-4.88-4 4L2 7.41 3.41 6l6 6 4-4 6.3 6.29L22 12v6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgTrendingDown.displayName = "SvgTrendingDown";
SvgTrendingDown.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e7() { _extends$e7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e7.apply(this, arguments); }
var Svg$e3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgTrendingFlat = function SvgTrendingFlat(props) {
  return createElement(Svg$e3, _extends$e7({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 12l-4-4v3H3v2h15v3z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgTrendingFlat.displayName = "SvgTrendingFlat";
SvgTrendingFlat.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e8() { _extends$e8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e8.apply(this, arguments); }
var Svg$e4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgTrendingUp = function SvgTrendingUp(props) {
  return createElement(Svg$e4, _extends$e8({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16 6l2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgTrendingUp.displayName = "SvgTrendingUp";
SvgTrendingUp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e9() { _extends$e9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e9.apply(this, arguments); }
var Svg$e5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgTune = function SvgTune(props) {
  return createElement(Svg$e5, _extends$e9({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z"
  }));
};

SvgTune.displayName = "SvgTune";
SvgTune.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ea() { _extends$ea = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ea.apply(this, arguments); }
var Svg$e6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgTurnedIn = function SvgTurnedIn(props) {
  return createElement(Svg$e6, _extends$ea({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgTurnedIn.displayName = "SvgTurnedIn";
SvgTurnedIn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eb() { _extends$eb = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eb.apply(this, arguments); }
var Svg$e7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgTurnedInNot = function SvgTurnedInNot(props) {
  return createElement(Svg$e7, _extends$eb({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgTurnedInNot.displayName = "SvgTurnedInNot";
SvgTurnedInNot.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ec() { _extends$ec = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ec.apply(this, arguments); }
var Svg$e8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgTv = function SvgTv(props) {
  return createElement(Svg$e8, _extends$ec({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.1-.9-2-2-2zm0 14H3V5h18v12z"
  }));
};

SvgTv.displayName = "SvgTv";
SvgTv.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ed() { _extends$ed = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ed.apply(this, arguments); }
var Svg$e9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgUnarchive = function SvgUnarchive(props) {
  return createElement(Svg$e9, _extends$ed({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "unarchive_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "unarchive_svg__b"
  }, createElement("use", {
    xlinkHref: "#unarchive_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#unarchive_svg__b)",
    d: "M20.55 5.22l-1.39-1.68A1.51 1.51 0 0018 3H6c-.47 0-.88.21-1.15.55L3.46 5.22C3.17 5.57 3 6.01 3 6.5V19a2 2 0 002 2h14c1.1 0 2-.9 2-2V6.5c0-.49-.17-.93-.45-1.28zM12 9.5l5.5 5.5H14v2h-4v-2H6.5L12 9.5zM5.12 5l.82-1h12l.93 1H5.12z"
  }));
};

SvgUnarchive.displayName = "SvgUnarchive";
SvgUnarchive.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ee() { _extends$ee = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ee.apply(this, arguments); }
var Svg$ea = styled("svg")({
  flex: "none"
}, space, color);

var SvgUndo = function SvgUndo(props) {
  return createElement(Svg$ea, _extends$ee({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z"
  }));
};

SvgUndo.displayName = "SvgUndo";
SvgUndo.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ef() { _extends$ef = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ef.apply(this, arguments); }
var Svg$eb = styled("svg")({
  flex: "none"
}, space, color);

var SvgUnfoldLess = function SvgUnfoldLess(props) {
  return createElement(Svg$eb, _extends$ef({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7.41 18.59L8.83 20 12 16.83 15.17 20l1.41-1.41L12 14l-4.59 4.59zm9.18-13.18L15.17 4 12 7.17 8.83 4 7.41 5.41 12 10l4.59-4.59z"
  }));
};

SvgUnfoldLess.displayName = "SvgUnfoldLess";
SvgUnfoldLess.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eg() { _extends$eg = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eg.apply(this, arguments); }
var Svg$ec = styled("svg")({
  flex: "none"
}, space, color);

var SvgUnfoldMore = function SvgUnfoldMore(props) {
  return createElement(Svg$ec, _extends$eg({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 5.83L15.17 9l1.41-1.41L12 3 7.41 7.59 8.83 9 12 5.83zm0 12.34L8.83 15l-1.41 1.41L12 21l4.59-4.59L15.17 15 12 18.17z"
  }));
};

SvgUnfoldMore.displayName = "SvgUnfoldMore";
SvgUnfoldMore.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eh() { _extends$eh = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eh.apply(this, arguments); }
var Svg$ed = styled("svg")({
  flex: "none"
}, space, color);

var SvgUpdate = function SvgUpdate(props) {
  return createElement(Svg$ed, _extends$eh({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "update_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "update_svg__b"
  }, createElement("use", {
    xlinkHref: "#update_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#update_svg__b)",
    d: "M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1a6.875 6.875 0 000 9.79 7.02 7.02 0 009.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58a8.987 8.987 0 0112.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z"
  }));
};

SvgUpdate.displayName = "SvgUpdate";
SvgUpdate.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ei() { _extends$ei = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ei.apply(this, arguments); }
var Svg$ee = styled("svg")({
  flex: "none"
}, space, color);

var SvgUsb = function SvgUsb(props) {
  return createElement(Svg$ee, _extends$ei({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15 7v4h1v2h-3V5h2l-3-4-3 4h2v8H8v-2.07c.7-.37 1.2-1.08 1.2-1.93 0-1.21-.99-2.2-2.2-2.2-1.21 0-2.2.99-2.2 2.2 0 .85.5 1.56 1.2 1.93V13c0 1.11.89 2 2 2h3v3.05c-.71.37-1.2 1.1-1.2 1.95a2.2 2.2 0 004.4 0c0-.85-.49-1.58-1.2-1.95V15h3c1.11 0 2-.89 2-2v-2h1V7h-4z"
  }));
};

SvgUsb.displayName = "SvgUsb";
SvgUsb.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ej() { _extends$ej = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ej.apply(this, arguments); }
var Svg$ef = styled("svg")({
  flex: "none"
}, space, color);

var SvgVerifiedUser = function SvgVerifiedUser(props) {
  return createElement(Svg$ef, _extends$ej({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z"
  }));
};

SvgVerifiedUser.displayName = "SvgVerifiedUser";
SvgVerifiedUser.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ek() { _extends$ek = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ek.apply(this, arguments); }
var Svg$eg = styled("svg")({
  flex: "none"
}, space, color);

var SvgVerticalAlignBottom = function SvgVerticalAlignBottom(props) {
  return createElement(Svg$eg, _extends$ek({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16 13h-3V3h-2v10H8l4 4 4-4zM4 19v2h16v-2H4z"
  }));
};

SvgVerticalAlignBottom.displayName = "SvgVerticalAlignBottom";
SvgVerticalAlignBottom.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$el() { _extends$el = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$el.apply(this, arguments); }
var Svg$eh = styled("svg")({
  flex: "none"
}, space, color);

var SvgVerticalAlignCenter = function SvgVerticalAlignCenter(props) {
  return createElement(Svg$eh, _extends$el({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M8 19h3v4h2v-4h3l-4-4-4 4zm8-14h-3V1h-2v4H8l4 4 4-4zM4 11v2h16v-2H4z"
  }));
};

SvgVerticalAlignCenter.displayName = "SvgVerticalAlignCenter";
SvgVerticalAlignCenter.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$em() { _extends$em = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$em.apply(this, arguments); }
var Svg$ei = styled("svg")({
  flex: "none"
}, space, color);

var SvgVerticalAlignTop = function SvgVerticalAlignTop(props) {
  return createElement(Svg$ei, _extends$em({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M8 11h3v10h2V11h3l-4-4-4 4zM4 3v2h16V3H4z"
  }));
};

SvgVerticalAlignTop.displayName = "SvgVerticalAlignTop";
SvgVerticalAlignTop.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$en() { _extends$en = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$en.apply(this, arguments); }
var Svg$ej = styled("svg")({
  flex: "none"
}, space, color);

var SvgVibration = function SvgVibration(props) {
  return createElement(Svg$ej, _extends$en({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M0 15h2V9H0v6zm3 2h2V7H3v10zm19-8v6h2V9h-2zm-3 8h2V7h-2v10zM16.5 3h-9C6.67 3 6 3.67 6 4.5v15c0 .83.67 1.5 1.5 1.5h9c.83 0 1.5-.67 1.5-1.5v-15c0-.83-.67-1.5-1.5-1.5zM16 19H8V5h8v14z"
  }));
};

SvgVibration.displayName = "SvgVibration";
SvgVibration.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eo() { _extends$eo = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eo.apply(this, arguments); }
var Svg$ek = styled("svg")({
  flex: "none"
}, space, color);

var SvgVideoCall = function SvgVideoCall(props) {
  return createElement(Svg$ek, _extends$eo({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4zM14 13h-3v3H9v-3H6v-2h3V8h2v3h3v2z"
  }));
};

SvgVideoCall.displayName = "SvgVideoCall";
SvgVideoCall.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ep() { _extends$ep = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ep.apply(this, arguments); }
var Svg$el = styled("svg")({
  flex: "none"
}, space, color);

var SvgVideoLabel = function SvgVideoLabel(props) {
  return createElement(Svg$el, _extends$ep({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 13H3V5h18v11z"
  }));
};

SvgVideoLabel.displayName = "SvgVideoLabel";
SvgVideoLabel.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eq() { _extends$eq = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eq.apply(this, arguments); }
var Svg$em = styled("svg")({
  flex: "none"
}, space, color);

var SvgVideoLibrary = function SvgVideoLibrary(props) {
  return createElement(Svg$em, _extends$eq({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8 12.5v-9l6 4.5-6 4.5z"
  }));
};

SvgVideoLibrary.displayName = "SvgVideoLibrary";
SvgVideoLibrary.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$er() { _extends$er = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$er.apply(this, arguments); }
var Svg$en = styled("svg")({
  flex: "none"
}, space, color);

var SvgVideocam = function SvgVideocam(props) {
  return createElement(Svg$en, _extends$er({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z"
  }));
};

SvgVideocam.displayName = "SvgVideocam";
SvgVideocam.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$es() { _extends$es = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$es.apply(this, arguments); }
var Svg$eo = styled("svg")({
  flex: "none"
}, space, color);

var SvgVideocamOff = function SvgVideocamOff(props) {
  return createElement(Svg$eo, _extends$es({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0zm0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M21 6.5l-4 4V7c0-.55-.45-1-1-1H9.82L21 17.18V6.5zM3.27 2L2 3.27 4.73 6H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.21 0 .39-.08.54-.18L19.73 21 21 19.73 3.27 2z"
  }));
};

SvgVideocamOff.displayName = "SvgVideocamOff";
SvgVideocamOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$et() { _extends$et = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$et.apply(this, arguments); }
var Svg$ep = styled("svg")({
  flex: "none"
}, space, color);

var SvgVideogameAsset = function SvgVideogameAsset(props) {
  return createElement(Svg$ep, _extends$et({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0v24h24V0H0zm23 16c0 1.1-.9 2-2 2H3c-1.1 0-2-.9-2-2V8c0-1.1.9-2 2-2h18c1.1 0 2 .9 2 2v8z"
  }), createElement("path", {
    d: "M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-10 7H8v3H6v-3H3v-2h3V8h2v3h3v2zm4.5 2c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4-3c-.83 0-1.5-.67-1.5-1.5S18.67 9 19.5 9s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
  }));
};

SvgVideogameAsset.displayName = "SvgVideogameAsset";
SvgVideogameAsset.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eu() { _extends$eu = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eu.apply(this, arguments); }
var Svg$eq = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewAgenda = function SvgViewAgenda(props) {
  return createElement(Svg$eq, _extends$eu({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 13H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm0-10H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
  }));
};

SvgViewAgenda.displayName = "SvgViewAgenda";
SvgViewAgenda.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ev() { _extends$ev = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ev.apply(this, arguments); }
var Svg$er = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewArray = function SvgViewArray(props) {
  return createElement(Svg$er, _extends$ev({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 18h3V5H4v13zM18 5v13h3V5h-3zM8 18h9V5H8v13z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgViewArray.displayName = "SvgViewArray";
SvgViewArray.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ew() { _extends$ew = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ew.apply(this, arguments); }
var Svg$es = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewCarousel = function SvgViewCarousel(props) {
  return createElement(Svg$es, _extends$ew({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 19h10V4H7v15zm-5-2h4V6H2v11zM18 6v11h4V6h-4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgViewCarousel.displayName = "SvgViewCarousel";
SvgViewCarousel.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ex() { _extends$ex = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ex.apply(this, arguments); }
var Svg$et = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewColumn = function SvgViewColumn(props) {
  return createElement(Svg$et, _extends$ex({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 18h5V5h-5v13zm-6 0h5V5H4v13zM16 5v13h5V5h-5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgViewColumn.displayName = "SvgViewColumn";
SvgViewColumn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ey() { _extends$ey = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ey.apply(this, arguments); }
var Svg$eu = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewComfy = function SvgViewComfy(props) {
  return createElement(Svg$eu, _extends$ey({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 9h4V5H3v4zm0 5h4v-4H3v4zm5 0h4v-4H8v4zm5 0h4v-4h-4v4zM8 9h4V5H8v4zm5-4v4h4V5h-4zm5 9h4v-4h-4v4zM3 19h4v-4H3v4zm5 0h4v-4H8v4zm5 0h4v-4h-4v4zm5 0h4v-4h-4v4zm0-14v4h4V5h-4z"
  }));
};

SvgViewComfy.displayName = "SvgViewComfy";
SvgViewComfy.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$ez() { _extends$ez = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ez.apply(this, arguments); }
var Svg$ev = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewCompact = function SvgViewCompact(props) {
  return createElement(Svg$ev, _extends$ez({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 19h6v-7H3v7zm7 0h12v-7H10v7zM3 5v6h19V5H3z"
  }));
};

SvgViewCompact.displayName = "SvgViewCompact";
SvgViewCompact.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eA() { _extends$eA = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eA.apply(this, arguments); }
var Svg$ew = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewDay = function SvgViewDay(props) {
  return createElement(Svg$ew, _extends$eA({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M2 21h19v-3H2v3zM20 8H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h17c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zM2 3v3h19V3H2z"
  }));
};

SvgViewDay.displayName = "SvgViewDay";
SvgViewDay.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eB() { _extends$eB = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eB.apply(this, arguments); }
var Svg$ex = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewHeadline = function SvgViewHeadline(props) {
  return createElement(Svg$ex, _extends$eB({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }));
};

SvgViewHeadline.displayName = "SvgViewHeadline";
SvgViewHeadline.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eC() { _extends$eC = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eC.apply(this, arguments); }
var Svg$ey = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewList = function SvgViewList(props) {
  return createElement(Svg$ey, _extends$eC({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgViewList.displayName = "SvgViewList";
SvgViewList.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eD() { _extends$eD = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eD.apply(this, arguments); }
var Svg$ez = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewModule = function SvgViewModule(props) {
  return createElement(Svg$ez, _extends$eD({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgViewModule.displayName = "SvgViewModule";
SvgViewModule.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eE() { _extends$eE = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eE.apply(this, arguments); }
var Svg$eA = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewQuilt = function SvgViewQuilt(props) {
  return createElement(Svg$eA, _extends$eE({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M10 18h5v-6h-5v6zm-6 0h5V5H4v13zm12 0h5v-6h-5v6zM10 5v6h11V5H10z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgViewQuilt.displayName = "SvgViewQuilt";
SvgViewQuilt.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eF() { _extends$eF = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eF.apply(this, arguments); }
var Svg$eB = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewStream = function SvgViewStream(props) {
  return createElement(Svg$eB, _extends$eF({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 18h17v-6H4v6zM4 5v6h17V5H4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgViewStream.displayName = "SvgViewStream";
SvgViewStream.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eG() { _extends$eG = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eG.apply(this, arguments); }
var Svg$eC = styled("svg")({
  flex: "none"
}, space, color);

var SvgViewWeek = function SvgViewWeek(props) {
  return createElement(Svg$eC, _extends$eG({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"
  }));
};

SvgViewWeek.displayName = "SvgViewWeek";
SvgViewWeek.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eH() { _extends$eH = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eH.apply(this, arguments); }
var Svg$eD = styled("svg")({
  flex: "none"
}, space, color);

var SvgVignette = function SvgVignette(props) {
  return createElement(Svg$eD, _extends$eH({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 15c-4.42 0-8-2.69-8-6s3.58-6 8-6 8 2.69 8 6-3.58 6-8 6z"
  }));
};

SvgVignette.displayName = "SvgVignette";
SvgVignette.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eI() { _extends$eI = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eI.apply(this, arguments); }
var Svg$eE = styled("svg")({
  flex: "none"
}, space, color);

var SvgVisibility = function SvgVisibility(props) {
  return createElement(Svg$eE, _extends$eI({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
  }));
};

SvgVisibility.displayName = "SvgVisibility";
SvgVisibility.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eJ() { _extends$eJ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eJ.apply(this, arguments); }
var Svg$eF = styled("svg")({
  flex: "none"
}, space, color);

var SvgVisibilityOff = function SvgVisibilityOff(props) {
  return createElement(Svg$eF, _extends$eJ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46A11.804 11.804 0 001 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"
  }));
};

SvgVisibilityOff.displayName = "SvgVisibilityOff";
SvgVisibilityOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eK() { _extends$eK = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eK.apply(this, arguments); }
var Svg$eG = styled("svg")({
  flex: "none"
}, space, color);

var SvgVoiceChat = function SvgVoiceChat(props) {
  return createElement(Svg$eG, _extends$eK({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12l-4-3.2V14H6V6h8v3.2L18 6v8z"
  }));
};

SvgVoiceChat.displayName = "SvgVoiceChat";
SvgVoiceChat.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eL() { _extends$eL = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eL.apply(this, arguments); }
var Svg$eH = styled("svg")({
  flex: "none"
}, space, color);

var SvgVoicemail = function SvgVoicemail(props) {
  return createElement(Svg$eH, _extends$eL({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.5 6C15.46 6 13 8.46 13 11.5c0 1.33.47 2.55 1.26 3.5H9.74c.79-.95 1.26-2.17 1.26-3.5C11 8.46 8.54 6 5.5 6S0 8.46 0 11.5 2.46 17 5.5 17h13c3.04 0 5.5-2.46 5.5-5.5S21.54 6 18.5 6zm-13 9C3.57 15 2 13.43 2 11.5S3.57 8 5.5 8 9 9.57 9 11.5 7.43 15 5.5 15zm13 0c-1.93 0-3.5-1.57-3.5-3.5S16.57 8 18.5 8 22 9.57 22 11.5 20.43 15 18.5 15z"
  }));
};

SvgVoicemail.displayName = "SvgVoicemail";
SvgVoicemail.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eM() { _extends$eM = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eM.apply(this, arguments); }
var Svg$eI = styled("svg")({
  flex: "none"
}, space, color);

var SvgVolumeDown = function SvgVolumeDown(props) {
  return createElement(Svg$eI, _extends$eM({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M18.5 12A4.5 4.5 0 0016 7.97v8.05c1.48-.73 2.5-2.25 2.5-4.02zM5 9v6h4l5 5V4L9 9H5z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgVolumeDown.displayName = "SvgVolumeDown";
SvgVolumeDown.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eN() { _extends$eN = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eN.apply(this, arguments); }
var Svg$eJ = styled("svg")({
  flex: "none"
}, space, color);

var SvgVolumeMute = function SvgVolumeMute(props) {
  return createElement(Svg$eJ, _extends$eN({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M7 9v6h4l5 5V4l-5 5H7z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgVolumeMute.displayName = "SvgVolumeMute";
SvgVolumeMute.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eO() { _extends$eO = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eO.apply(this, arguments); }
var Svg$eK = styled("svg")({
  flex: "none"
}, space, color);

var SvgVolumeOff = function SvgVolumeOff(props) {
  return createElement(Svg$eK, _extends$eO({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M16.5 12A4.5 4.5 0 0014 7.97v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51A8.796 8.796 0 0021 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06a8.99 8.99 0 003.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgVolumeOff.displayName = "SvgVolumeOff";
SvgVolumeOff.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eP() { _extends$eP = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eP.apply(this, arguments); }
var Svg$eL = styled("svg")({
  flex: "none"
}, space, color);

var SvgVolumeUp = function SvgVolumeUp(props) {
  return createElement(Svg$eL, _extends$eP({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3 9v6h4l5 5V4L7 9H3zm13.5 3A4.5 4.5 0 0014 7.97v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgVolumeUp.displayName = "SvgVolumeUp";
SvgVolumeUp.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eQ() { _extends$eQ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eQ.apply(this, arguments); }
var Svg$eM = styled("svg")({
  flex: "none"
}, space, color);

var SvgVpnKey = function SvgVpnKey(props) {
  return createElement(Svg$eM, _extends$eQ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12.65 10A5.99 5.99 0 007 6c-3.31 0-6 2.69-6 6s2.69 6 6 6a5.99 5.99 0 005.65-4H17v4h4v-4h2v-4H12.65zM7 14c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
  }));
};

SvgVpnKey.displayName = "SvgVpnKey";
SvgVpnKey.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eR() { _extends$eR = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eR.apply(this, arguments); }
var Svg$eN = styled("svg")({
  flex: "none"
}, space, color);

var SvgVpnLock = function SvgVpnLock(props) {
  return createElement(Svg$eN, _extends$eR({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M22 4v-.5a2.5 2.5 0 00-5 0V4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-.8 0h-3.4v-.5c0-.94.76-1.7 1.7-1.7s1.7.76 1.7 1.7V4zm-2.28 8c.04.33.08.66.08 1 0 2.08-.8 3.97-2.1 5.39-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H7v-2h2c.55 0 1-.45 1-1V8h2c1.1 0 2-.9 2-2V3.46c-.95-.3-1.95-.46-3-.46C5.48 3 1 7.48 1 13s4.48 10 10 10 10-4.48 10-10c0-.34-.02-.67-.05-1h-2.03zM10 20.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L8 16v1c0 1.1.9 2 2 2v1.93z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgVpnLock.displayName = "SvgVpnLock";
SvgVpnLock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eS() { _extends$eS = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eS.apply(this, arguments); }
var Svg$eO = styled("svg")({
  flex: "none"
}, space, color);

var SvgWallpaper = function SvgWallpaper(props) {
  return createElement(Svg$eO, _extends$eS({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 4h7V2H4c-1.1 0-2 .9-2 2v7h2V4zm6 9l-4 5h12l-3-4-2.03 2.71L10 13zm7-4.5c0-.83-.67-1.5-1.5-1.5S14 7.67 14 8.5s.67 1.5 1.5 1.5S17 9.33 17 8.5zM20 2h-7v2h7v7h2V4c0-1.1-.9-2-2-2zm0 18h-7v2h7c1.1 0 2-.9 2-2v-7h-2v7zM4 13H2v7c0 1.1.9 2 2 2h7v-2H4v-7z"
  }));
};

SvgWallpaper.displayName = "SvgWallpaper";
SvgWallpaper.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eT() { _extends$eT = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eT.apply(this, arguments); }
var Svg$eP = styled("svg")({
  flex: "none"
}, space, color);

var SvgWarning = function SvgWarning(props) {
  return createElement(Svg$eP, _extends$eT({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
  }));
};

SvgWarning.displayName = "SvgWarning";
SvgWarning.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eU() { _extends$eU = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eU.apply(this, arguments); }
var Svg$eQ = styled("svg")({
  flex: "none"
}, space, color);

var SvgWatch = function SvgWatch(props) {
  return createElement(Svg$eQ, _extends$eU({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    opacity: 0.1,
    fill: "none"
  }), createElement("path", {
    d: "M20 12c0-2.54-1.19-4.81-3.04-6.27L16 0H8l-.95 5.73C5.19 7.19 4 9.45 4 12s1.19 4.81 3.05 6.27L8 24h8l.96-5.73A7.976 7.976 0 0020 12zM6 12c0-3.31 2.69-6 6-6s6 2.69 6 6-2.69 6-6 6-6-2.69-6-6z"
  }));
};

SvgWatch.displayName = "SvgWatch";
SvgWatch.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eV() { _extends$eV = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eV.apply(this, arguments); }
var Svg$eR = styled("svg")({
  flex: "none"
}, space, color);

var SvgWatchLater = function SvgWatchLater(props) {
  return createElement(Svg$eR, _extends$eV({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "watchLater_svg__a",
    d: "M0 0h24v24H0V0z"
  })), createElement("clipPath", {
    id: "watchLater_svg__b"
  }, createElement("use", {
    xlinkHref: "#watchLater_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#watchLater_svg__b)",
    d: "M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm4.2 14.2L11 13V7h1.5v5.2l4.5 2.7-.8 1.3z"
  }));
};

SvgWatchLater.displayName = "SvgWatchLater";
SvgWatchLater.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eW() { _extends$eW = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eW.apply(this, arguments); }
var Svg$eS = styled("svg")({
  flex: "none"
}, space, color);

var SvgWbAuto = function SvgWbAuto(props) {
  return createElement(Svg$eS, _extends$eW({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6.85 12.65h2.3L8 9l-1.15 3.65zM22 7l-1.2 6.29L19.3 7h-1.6l-1.49 6.29L15 7h-.76C12.77 5.17 10.53 4 8 4c-4.42 0-8 3.58-8 8s3.58 8 8 8c3.13 0 5.84-1.81 7.15-4.43l.1.43H17l1.5-6.1L20 16h1.75l2.05-9H22zm-11.7 9l-.7-2H6.4l-.7 2H3.8L7 7h2l3.2 9h-1.9z"
  }));
};

SvgWbAuto.displayName = "SvgWbAuto";
SvgWbAuto.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eX() { _extends$eX = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eX.apply(this, arguments); }
var Svg$eT = styled("svg")({
  flex: "none"
}, space, color);

var SvgWbCloudy = function SvgWbCloudy(props) {
  return createElement(Svg$eT, _extends$eX({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M19.36 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04A5.994 5.994 0 000 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.64-4.96z"
  }));
};

SvgWbCloudy.displayName = "SvgWbCloudy";
SvgWbCloudy.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eY() { _extends$eY = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eY.apply(this, arguments); }
var Svg$eU = styled("svg")({
  flex: "none"
}, space, color);

var SvgWbIncandescent = function SvgWbIncandescent(props) {
  return createElement(Svg$eU, _extends$eY({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M3.55 18.54l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8zM11 22.45h2V19.5h-2v2.95zM4 10.5H1v2h3v-2zm11-4.19V1.5H9v4.81C7.21 7.35 6 9.28 6 11.5c0 3.31 2.69 6 6 6s6-2.69 6-6c0-2.22-1.21-4.15-3-5.19zm5 4.19v2h3v-2h-3zm-2.76 7.66l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4z"
  }));
};

SvgWbIncandescent.displayName = "SvgWbIncandescent";
SvgWbIncandescent.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$eZ() { _extends$eZ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$eZ.apply(this, arguments); }
var Svg$eV = styled("svg")({
  flex: "none"
}, space, color);

var SvgWbIridescent = function SvgWbIridescent(props) {
  return createElement(Svg$eV, _extends$eZ({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M5 14.5h14v-6H5v6zM11 .55V3.5h2V.55h-2zm8.04 2.5l-1.79 1.79 1.41 1.41 1.8-1.79-1.42-1.41zM13 22.45V19.5h-2v2.95h2zm7.45-3.91l-1.8-1.79-1.41 1.41 1.79 1.8 1.42-1.42zM3.55 4.46l1.79 1.79 1.41-1.41-1.79-1.79-1.41 1.41zm1.41 15.49l1.79-1.8-1.41-1.41-1.79 1.79 1.41 1.42z"
  }));
};

SvgWbIridescent.displayName = "SvgWbIridescent";
SvgWbIridescent.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e_() { _extends$e_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e_.apply(this, arguments); }
var Svg$eW = styled("svg")({
  flex: "none"
}, space, color);

var SvgWbSunny = function SvgWbSunny(props) {
  return createElement(Svg$eW, _extends$e_({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79 1.42-1.41zM4 10.5H1v2h3v-2zm9-9.95h-2V3.5h2V.55zm7.45 3.91l-1.41-1.41-1.79 1.79 1.41 1.41 1.79-1.79zm-3.21 13.7l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4zM20 10.5v2h3v-2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm-1 16.95h2V19.5h-2v2.95zm-7.45-3.91l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8z"
  }));
};

SvgWbSunny.displayName = "SvgWbSunny";
SvgWbSunny.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$e$() { _extends$e$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e$.apply(this, arguments); }
var Svg$eX = styled("svg")({
  flex: "none"
}, space, color);

var SvgWc = function SvgWc(props) {
  return createElement(Svg$eX, _extends$e$({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M5.5 22v-7.5H4V9c0-1.1.9-2 2-2h3c1.1 0 2 .9 2 2v5.5H9.5V22h-4zM18 22v-6h3l-2.54-7.63A2.01 2.01 0 0016.56 7h-.12a2 2 0 00-1.9 1.37L12 16h3v6h3zM7.5 6c1.11 0 2-.89 2-2s-.89-2-2-2-2 .89-2 2 .89 2 2 2zm9 0c1.11 0 2-.89 2-2s-.89-2-2-2-2 .89-2 2 .89 2 2 2z"
  }));
};

SvgWc.displayName = "SvgWc";
SvgWc.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f0() { _extends$f0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f0.apply(this, arguments); }
var Svg$eY = styled("svg")({
  flex: "none"
}, space, color);

var SvgWeb = function SvgWeb(props) {
  return createElement(Svg$eY, _extends$f0({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm-5 14H4v-4h11v4zm0-5H4V9h11v4zm5 5h-4V9h4v9z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgWeb.displayName = "SvgWeb";
SvgWeb.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f1() { _extends$f1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f1.apply(this, arguments); }
var Svg$eZ = styled("svg")({
  flex: "none"
}, space, color);

var SvgWebAsset = function SvgWebAsset(props) {
  return createElement(Svg$eZ, _extends$f1({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "#010101",
    d: "M19 4H5a2 2 0 00-2 2v12a2 2 0 002 2h14c1.1 0 2-.9 2-2V6a2 2 0 00-2-2zm0 14H5V8h14v10z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgWebAsset.displayName = "SvgWebAsset";
SvgWebAsset.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f2() { _extends$f2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f2.apply(this, arguments); }
var Svg$e_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgWeekend = function SvgWeekend(props) {
  return createElement(Svg$e_, _extends$f2({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "weekend_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "weekend_svg__b"
  }, createElement("use", {
    xlinkHref: "#weekend_svg__a",
    overflow: "visible"
  })), createElement("path", {
    d: "M21 10c-1.1 0-2 .9-2 2v3H5v-3c0-1.1-.9-2-2-2s-2 .9-2 2v5c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2v-5c0-1.1-.9-2-2-2zm-3-5H6c-1.1 0-2 .9-2 2v2.15c1.16.41 2 1.51 2 2.82V14h12v-2.03c0-1.3.84-2.4 2-2.82V7c0-1.1-.9-2-2-2z",
    clipPath: "url(#weekend_svg__b)",
    fill: "#010101"
  }));
};

SvgWeekend.displayName = "SvgWeekend";
SvgWeekend.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f3() { _extends$f3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f3.apply(this, arguments); }
var Svg$e$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgWhatshot = function SvgWhatshot(props) {
  return createElement(Svg$e$, _extends$f3({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67zM11.71 19c-1.78 0-3.22-1.4-3.22-3.14 0-1.62 1.05-2.76 2.81-3.12 1.77-.36 3.6-1.21 4.62-2.58.39 1.29.59 2.65.59 4.04 0 2.65-2.15 4.8-4.8 4.8z"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }));
};

SvgWhatshot.displayName = "SvgWhatshot";
SvgWhatshot.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f4() { _extends$f4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f4.apply(this, arguments); }
var Svg$f0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgWidgets = function SvgWidgets(props) {
  return createElement(Svg$f0, _extends$f4({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M13 13v8h8v-8h-8zM3 21h8v-8H3v8zM3 3v8h8V3H3zm13.66-1.31L11 7.34 16.66 13l5.66-5.66-5.66-5.65z"
  }));
};

SvgWidgets.displayName = "SvgWidgets";
SvgWidgets.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f5() { _extends$f5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f5.apply(this, arguments); }
var Svg$f1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgWifi = function SvgWifi(props) {
  return createElement(Svg$f1, _extends$f5({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0z"
  }), createElement("path", {
    d: "M1 9l2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9zm8 8l3 3 3-3a4.237 4.237 0 00-6 0zm-4-4l2 2a7.074 7.074 0 0110 0l2-2C15.14 9.14 8.87 9.14 5 13z"
  }));
};

SvgWifi.displayName = "SvgWifi";
SvgWifi.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f6() { _extends$f6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f6.apply(this, arguments); }
var Svg$f2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgWifiLock = function SvgWifiLock(props) {
  return createElement(Svg$f2, _extends$f6({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M20.5 9.5c.28 0 .55.04.81.08L24 6c-3.34-2.51-7.5-4-12-4S3.34 3.49 0 6l12 16 3.5-4.67V14.5c0-2.76 2.24-5 5-5zM23 16v-1.5a2.5 2.5 0 00-5 0V16c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm-1 0h-3v-1.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V16z"
  }));
};

SvgWifiLock.displayName = "SvgWifiLock";
SvgWifiLock.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f7() { _extends$f7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f7.apply(this, arguments); }
var Svg$f3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgWifiTethering = function SvgWifiTethering(props) {
  return createElement(Svg$f3, _extends$f7({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M12 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 2c0-3.31-2.69-6-6-6s-6 2.69-6 6c0 2.22 1.21 4.15 3 5.19l1-1.74c-1.19-.7-2-1.97-2-3.45 0-2.21 1.79-4 4-4s4 1.79 4 4c0 1.48-.81 2.75-2 3.45l1 1.74c1.79-1.04 3-2.97 3-5.19zM12 3C6.48 3 2 7.48 2 13c0 3.7 2.01 6.92 4.99 8.65l1-1.73C5.61 18.53 4 15.96 4 13c0-4.42 3.58-8 8-8s8 3.58 8 8c0 2.96-1.61 5.53-4 6.92l1 1.73c2.99-1.73 5-4.95 5-8.65 0-5.52-4.48-10-10-10z"
  }));
};

SvgWifiTethering.displayName = "SvgWifiTethering";
SvgWifiTethering.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f8() { _extends$f8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f8.apply(this, arguments); }
var Svg$f4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgWork = function SvgWork(props) {
  return createElement(Svg$f4, _extends$f8({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), createElement("path", {
    d: "M20 6h-4V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-6 0h-4V4h4v2z"
  }));
};

SvgWork.displayName = "SvgWork";
SvgWork.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$f9() { _extends$f9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f9.apply(this, arguments); }
var Svg$f5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgWrapText = function SvgWrapText(props) {
  return createElement(Svg$f5, _extends$f9({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M4 19h6v-2H4v2zM20 5H4v2h16V5zm-3 6H4v2h13.25c1.1 0 2 .9 2 2s-.9 2-2 2H15v-2l-3 3 3 3v-2h2c2.21 0 4-1.79 4-4s-1.79-4-4-4z"
  }));
};

SvgWrapText.displayName = "SvgWrapText";
SvgWrapText.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$fa() { _extends$fa = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fa.apply(this, arguments); }
var Svg$f6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgYoutubeSearchedFor = function SvgYoutubeSearchedFor(props) {
  return createElement(Svg$f6, _extends$fa({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0zm0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M17.01 14h-.8l-.27-.27a6.451 6.451 0 001.57-4.23c0-3.59-2.91-6.5-6.5-6.5s-6.5 3-6.5 6.5H2l3.84 4 4.16-4H6.51a4.5 4.5 0 019 0 4.507 4.507 0 01-6.32 4.12L7.71 15.1a6.474 6.474 0 007.52-.67l.27.27v.79l5.01 4.99L22 19l-4.99-5z"
  }));
};

SvgYoutubeSearchedFor.displayName = "SvgYoutubeSearchedFor";
SvgYoutubeSearchedFor.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$fb() { _extends$fb = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fb.apply(this, arguments); }
var Svg$f7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgZoomIn = function SvgZoomIn(props) {
  return createElement(Svg$f7, _extends$fb({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    d: "M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"
  }));
};

SvgZoomIn.displayName = "SvgZoomIn";
SvgZoomIn.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$fc() { _extends$fc = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fc.apply(this, arguments); }
var Svg$f8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgZoomOut = function SvgZoomOut(props) {
  return createElement(Svg$f8, _extends$fc({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("path", {
    fill: "none",
    d: "M0 0h24v24H0V0z"
  }), createElement("path", {
    d: "M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14zM7 9h5v1H7z"
  }));
};

SvgZoomOut.displayName = "SvgZoomOut";
SvgZoomOut.defaultProps = {
  size: 24,
  color: "inherit"
};

function _extends$fd() { _extends$fd = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fd.apply(this, arguments); }
var Svg$f9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgZoomOutMap = function SvgZoomOutMap(props) {
  return createElement(Svg$f9, _extends$fd({}, props, {
    viewBox: "0 0 24 24",
    height: props.size,
    width: props.size,
    fill: "currentcolor"
  }), createElement("defs", null, createElement("path", {
    id: "zoomOutMap_svg__a",
    d: "M0 0h24v24H0z"
  })), createElement("clipPath", {
    id: "zoomOutMap_svg__b"
  }, createElement("use", {
    xlinkHref: "#zoomOutMap_svg__a",
    overflow: "visible"
  })), createElement("path", {
    clipPath: "url(#zoomOutMap_svg__b)",
    d: "M15 3l2.3 2.3-2.89 2.87 1.42 1.42L18.7 6.7 21 9V3zM3 9l2.3-2.3 2.87 2.89 1.42-1.42L6.7 5.3 9 3H3zm6 12l-2.3-2.3 2.89-2.87-1.42-1.42L5.3 17.3 3 15v6zm12-6l-2.3 2.3-2.87-2.89-1.42 1.42 2.89 2.87L15 21h6z"
  }), createElement("path", {
    clipPath: "url(#zoomOutMap_svg__b)",
    fill: "none",
    d: "M0 0h24v24H0z"
  }));
};

SvgZoomOutMap.displayName = "SvgZoomOutMap";
SvgZoomOutMap.defaultProps = {
  size: 24,
  color: "inherit"
};



var mdIcons = /*#__PURE__*/Object.freeze({
  __proto__: null,
  AcUnit: SvgAcUnit,
  AccessAlarm: SvgAccessAlarm,
  AccessAlarms: SvgAccessAlarms,
  AccessTime: SvgAccessTime,
  Accessibility: SvgAccessibility,
  Accessible: SvgAccessible,
  AccountBalance: SvgAccountBalance,
  AccountBalanceWallet: SvgAccountBalanceWallet,
  AccountBox: SvgAccountBox,
  AccountCircle: SvgAccountCircle,
  Adb: SvgAdb,
  Add: SvgAdd,
  AddAPhoto: SvgAddAPhoto,
  AddAlarm: SvgAddAlarm,
  AddAlert: SvgAddAlert,
  AddBox: SvgAddBox,
  AddCircle: SvgAddCircle,
  AddCircleOutline: SvgAddCircleOutline,
  AddLocation: SvgAddLocation,
  AddShoppingCart: SvgAddShoppingCart,
  AddToPhotos: SvgAddToPhotos,
  AddToQueue: SvgAddToQueue,
  Adjust: SvgAdjust,
  AirlineSeatFlat: SvgAirlineSeatFlat,
  AirlineSeatFlatAngled: SvgAirlineSeatFlatAngled,
  AirlineSeatIndividualSuite: SvgAirlineSeatIndividualSuite,
  AirlineSeatLegroomExtra: SvgAirlineSeatLegroomExtra,
  AirlineSeatLegroomNormal: SvgAirlineSeatLegroomNormal,
  AirlineSeatLegroomReduced: SvgAirlineSeatLegroomReduced,
  AirlineSeatReclineExtra: SvgAirlineSeatReclineExtra,
  AirlineSeatReclineNormal: SvgAirlineSeatReclineNormal,
  AirplanemodeActive: SvgAirplanemodeActive,
  AirplanemodeInactive: SvgAirplanemodeInactive,
  Airplay: SvgAirplay,
  AirportShuttle: SvgAirportShuttle,
  Alarm: SvgAlarm,
  AlarmAdd: SvgAlarmAdd,
  AlarmOff: SvgAlarmOff,
  AlarmOn: SvgAlarmOn,
  Album: SvgAlbum,
  AllInclusive: SvgAllInclusive,
  AllOut: SvgAllOut,
  Android: SvgAndroid,
  Announcement: SvgAnnouncement,
  Apps: SvgApps,
  Archive: SvgArchive,
  ArrowBack: SvgArrowBack,
  ArrowDownward: SvgArrowDownward,
  ArrowDropDown: SvgArrowDropDown,
  ArrowDropDownCircle: SvgArrowDropDownCircle,
  ArrowDropUp: SvgArrowDropUp,
  ArrowForward: SvgArrowForward,
  ArrowUpward: SvgArrowUpward,
  ArtTrack: SvgArtTrack,
  AspectRatio: SvgAspectRatio,
  Assessment: SvgAssessment,
  Assignment: SvgAssignment,
  AssignmentInd: SvgAssignmentInd,
  AssignmentLate: SvgAssignmentLate,
  AssignmentReturn: SvgAssignmentReturn,
  AssignmentReturned: SvgAssignmentReturned,
  AssignmentTurnedIn: SvgAssignmentTurnedIn,
  Assistant: SvgAssistant,
  AssistantPhoto: SvgAssistantPhoto,
  AttachFile: SvgAttachFile,
  AttachMoney: SvgAttachMoney,
  Attachment: SvgAttachment,
  Audiotrack: SvgAudiotrack,
  Autorenew: SvgAutorenew,
  AvTimer: SvgAvTimer,
  Backspace: SvgBackspace,
  Backup: SvgBackup,
  Battery20: SvgBattery20,
  Battery30: SvgBattery30,
  Battery50: SvgBattery50,
  Battery60: SvgBattery60,
  Battery80: SvgBattery80,
  Battery90: SvgBattery90,
  BatteryAlert: SvgBatteryAlert,
  BatteryCharging20: SvgBatteryCharging20,
  BatteryCharging30: SvgBatteryCharging30,
  BatteryCharging50: SvgBatteryCharging50,
  BatteryCharging60: SvgBatteryCharging60,
  BatteryCharging80: SvgBatteryCharging80,
  BatteryCharging90: SvgBatteryCharging90,
  BatteryChargingFull: SvgBatteryChargingFull,
  BatteryFull: SvgBatteryFull,
  BatteryStd: SvgBatteryStd,
  BatteryUnknown: SvgBatteryUnknown,
  BeachAccess: SvgBeachAccess,
  Beenhere: SvgBeenhere,
  Block: SvgBlock,
  Bluetooth: SvgBluetooth,
  BluetoothAudio: SvgBluetoothAudio,
  BluetoothConnected: SvgBluetoothConnected,
  BluetoothDisabled: SvgBluetoothDisabled,
  BluetoothSearching: SvgBluetoothSearching,
  BlurCircular: SvgBlurCircular,
  BlurLinear: SvgBlurLinear,
  BlurOff: SvgBlurOff,
  BlurOn: SvgBlurOn,
  Book: SvgBook,
  Bookmark: SvgBookmark,
  BookmarkBorder: SvgBookmarkBorder,
  BorderAll: SvgBorderAll,
  BorderBottom: SvgBorderBottom,
  BorderClear: SvgBorderClear,
  BorderColor: SvgBorderColor,
  BorderHorizontal: SvgBorderHorizontal,
  BorderInner: SvgBorderInner,
  BorderLeft: SvgBorderLeft,
  BorderOuter: SvgBorderOuter,
  BorderRight: SvgBorderRight,
  BorderStyle: SvgBorderStyle,
  BorderTop: SvgBorderTop,
  BorderVertical: SvgBorderVertical,
  BrandingWatermark: SvgBrandingWatermark,
  Brightness1: SvgBrightness1,
  Brightness2: SvgBrightness2,
  Brightness3: SvgBrightness3,
  Brightness4: SvgBrightness4,
  Brightness5: SvgBrightness5,
  Brightness6: SvgBrightness6,
  Brightness7: SvgBrightness7,
  BrightnessAuto: SvgBrightnessAuto,
  BrightnessHigh: SvgBrightnessHigh,
  BrightnessLow: SvgBrightnessLow,
  BrightnessMedium: SvgBrightnessMedium,
  BrokenImage: SvgBrokenImage,
  Brush: SvgBrush,
  BubbleChart: SvgBubbleChart,
  BugReport: SvgBugReport,
  Build: SvgBuild,
  BurstMode: SvgBurstMode,
  Business: SvgBusiness,
  BusinessCenter: SvgBusinessCenter,
  Cached: SvgCached,
  Cake: SvgCake,
  Call: SvgCall,
  CallEnd: SvgCallEnd,
  CallMade: SvgCallMade,
  CallMerge: SvgCallMerge,
  CallMissed: SvgCallMissed,
  CallMissedOutgoing: SvgCallMissedOutgoing,
  CallReceived: SvgCallReceived,
  CallSplit: SvgCallSplit,
  CallToAction: SvgCallToAction,
  Camera: SvgCamera,
  CameraAlt: SvgCameraAlt,
  CameraEnhance: SvgCameraEnhance,
  CameraFront: SvgCameraFront,
  CameraRear: SvgCameraRear,
  CameraRoll: SvgCameraRoll,
  Cancel: SvgCancel,
  CardGiftcard: SvgCardGiftcard,
  CardMembership: SvgCardMembership,
  CardTravel: SvgCardTravel,
  Casino: SvgCasino,
  Cast: SvgCast,
  CastConnected: SvgCastConnected,
  CenterFocusStrong: SvgCenterFocusStrong,
  CenterFocusWeak: SvgCenterFocusWeak,
  ChangeHistory: SvgChangeHistory,
  Chat: SvgChat,
  ChatBubble: SvgChatBubble,
  ChatBubbleOutline: SvgChatBubbleOutline,
  Check: SvgCheck,
  CheckBox: SvgCheckBox,
  CheckBoxOutlineBlank: SvgCheckBoxOutlineBlank,
  CheckCircle: SvgCheckCircle,
  ChevronLeft: SvgChevronLeft,
  ChevronRight: SvgChevronRight,
  ChildCare: SvgChildCare,
  ChildFriendly: SvgChildFriendly,
  ChromeReaderMode: SvgChromeReaderMode,
  Class: SvgClass,
  Clear: SvgClear,
  ClearAll: SvgClearAll,
  Close: SvgClose,
  ClosedCaption: SvgClosedCaption,
  Cloud: SvgCloud,
  CloudCircle: SvgCloudCircle,
  CloudDone: SvgCloudDone,
  CloudDownload: SvgCloudDownload,
  CloudOff: SvgCloudOff,
  CloudQueue: SvgCloudQueue,
  CloudUpload: SvgCloudUpload,
  Code: SvgCode,
  Collections: SvgCollections,
  CollectionsBookmark: SvgCollectionsBookmark,
  ColorLens: SvgColorLens,
  Colorize: SvgColorize,
  Comment: SvgComment,
  Compare: SvgCompare,
  CompareArrows: SvgCompareArrows,
  Computer: SvgComputer,
  ConfirmationNumber: SvgConfirmationNumber,
  ContactMail: SvgContactMail,
  ContactPhone: SvgContactPhone,
  Contacts: SvgContacts,
  ContentCopy: SvgContentCopy,
  ContentCut: SvgContentCut,
  ContentPaste: SvgContentPaste,
  ControlPoint: SvgControlPoint,
  ControlPointDuplicate: SvgControlPointDuplicate,
  Copyright: SvgCopyright,
  Create: SvgCreate,
  CreateNewFolder: SvgCreateNewFolder,
  CreditCard: SvgCreditCard,
  Crop: SvgCrop,
  Crop169: SvgCrop169,
  Crop32: SvgCrop32,
  Crop54: SvgCrop54,
  Crop75: SvgCrop75,
  CropDin: SvgCropDin,
  CropFree: SvgCropFree,
  CropLandscape: SvgCropLandscape,
  CropOriginal: SvgCropOriginal,
  CropPortrait: SvgCropPortrait,
  CropRotate: SvgCropRotate,
  CropSquare: SvgCropSquare,
  Dashboard: SvgDashboard,
  DataUsage: SvgDataUsage,
  DateRange: SvgDateRange,
  Dehaze: SvgDehaze,
  Delete: SvgDelete,
  DeleteForever: SvgDeleteForever,
  DeleteSweep: SvgDeleteSweep,
  Description: SvgDescription,
  DesktopMac: SvgDesktopMac,
  DesktopWindows: SvgDesktopWindows,
  Details: SvgDetails,
  DeveloperBoard: SvgDeveloperBoard,
  DeveloperMode: SvgDeveloperMode,
  DeviceHub: SvgDeviceHub,
  Devices: SvgDevices,
  DevicesOther: SvgDevicesOther,
  DialerSip: SvgDialerSip,
  Dialpad: SvgDialpad,
  Directions: SvgDirections,
  DirectionsBike: SvgDirectionsBike,
  DirectionsBoat: SvgDirectionsBoat,
  DirectionsBus: SvgDirectionsBus,
  DirectionsCar: SvgDirectionsCar,
  DirectionsRailway: SvgDirectionsRailway,
  DirectionsRun: SvgDirectionsRun,
  DirectionsSubway: SvgDirectionsSubway,
  DirectionsTransit: SvgDirectionsTransit,
  DirectionsWalk: SvgDirectionsWalk,
  DiscFull: SvgDiscFull,
  Dns: SvgDns,
  DoNotDisturb: SvgDoNotDisturb,
  DoNotDisturbAlt: SvgDoNotDisturbAlt,
  DoNotDisturbOff: SvgDoNotDisturbOff,
  DoNotDisturbOn: SvgDoNotDisturbOn,
  Dock: SvgDock,
  Domain: SvgDomain,
  Done: SvgDone,
  DoneAll: SvgDoneAll,
  DonutLarge: SvgDonutLarge,
  DonutSmall: SvgDonutSmall,
  Drafts: SvgDrafts,
  DragHandle: SvgDragHandle,
  DriveEta: SvgDriveEta,
  Dvr: SvgDvr,
  Edit: SvgEdit,
  EditLocation: SvgEditLocation,
  Eject: SvgEject,
  Email: SvgEmail,
  EnhancedEncryption: SvgEnhancedEncryption,
  Equalizer: SvgEqualizer,
  Error: SvgError,
  ErrorOutline: SvgErrorOutline,
  EuroSymbol: SvgEuroSymbol,
  EvStation: SvgEvStation,
  Event: SvgEvent,
  EventAvailable: SvgEventAvailable,
  EventBusy: SvgEventBusy,
  EventNote: SvgEventNote,
  EventSeat: SvgEventSeat,
  ExitToApp: SvgExitToApp,
  ExpandLess: SvgExpandLess,
  ExpandMore: SvgExpandMore,
  Explicit: SvgExplicit,
  Explore: SvgExplore,
  Exposure: SvgExposure,
  ExposureNeg1: SvgExposureNeg1,
  ExposureNeg2: SvgExposureNeg2,
  ExposurePlus1: SvgExposurePlus1,
  ExposurePlus2: SvgExposurePlus2,
  ExposureZero: SvgExposureZero,
  Extension: SvgExtension,
  Face: SvgFace,
  FastForward: SvgFastForward,
  FastRewind: SvgFastRewind,
  Favorite: SvgFavorite,
  FavoriteBorder: SvgFavoriteBorder,
  FeaturedPlayList: SvgFeaturedPlayList,
  FeaturedVideo: SvgFeaturedVideo,
  Feedback: SvgFeedback,
  FiberDvr: SvgFiberDvr,
  FiberManualRecord: SvgFiberManualRecord,
  FiberNew: SvgFiberNew,
  FiberPin: SvgFiberPin,
  FiberSmartRecord: SvgFiberSmartRecord,
  FileDownload: SvgFileDownload,
  FileUpload: SvgFileUpload,
  Filter: SvgFilter,
  Filter1: SvgFilter1,
  Filter2: SvgFilter2,
  Filter3: SvgFilter3,
  Filter4: SvgFilter4,
  Filter5: SvgFilter5,
  Filter6: SvgFilter6,
  Filter7: SvgFilter7,
  Filter8: SvgFilter8,
  Filter9: SvgFilter9,
  Filter9Plus: SvgFilter9Plus,
  FilterBAndW: SvgFilterBAndW,
  FilterCenterFocus: SvgFilterCenterFocus,
  FilterDrama: SvgFilterDrama,
  FilterFrames: SvgFilterFrames,
  FilterHdr: SvgFilterHdr,
  FilterList: SvgFilterList,
  FilterNone: SvgFilterNone,
  FilterTiltShift: SvgFilterTiltShift,
  FilterVintage: SvgFilterVintage,
  FindInPage: SvgFindInPage,
  FindReplace: SvgFindReplace,
  Fingerprint: SvgFingerprint,
  FirstPage: SvgFirstPage,
  FitnessCenter: SvgFitnessCenter,
  Flag: SvgFlag,
  Flare: SvgFlare,
  FlashAuto: SvgFlashAuto,
  FlashOff: SvgFlashOff,
  FlashOn: SvgFlashOn,
  Flight: SvgFlight,
  FlightLand: SvgFlightLand,
  FlightTakeoff: SvgFlightTakeoff,
  Flip: SvgFlip,
  FlipToBack: SvgFlipToBack,
  FlipToFront: SvgFlipToFront,
  Folder: SvgFolder,
  FolderOpen: SvgFolderOpen,
  FolderShared: SvgFolderShared,
  FolderSpecial: SvgFolderSpecial,
  FontDownload: SvgFontDownload,
  FormatAlignCenter: SvgFormatAlignCenter,
  FormatAlignJustify: SvgFormatAlignJustify,
  FormatAlignLeft: SvgFormatAlignLeft,
  FormatAlignRight: SvgFormatAlignRight,
  FormatBold: SvgFormatBold,
  FormatClear: SvgFormatClear,
  FormatColorFill: SvgFormatColorFill,
  FormatColorReset: SvgFormatColorReset,
  FormatColorText: SvgFormatColorText,
  FormatIndentDecrease: SvgFormatIndentDecrease,
  FormatIndentIncrease: SvgFormatIndentIncrease,
  FormatItalic: SvgFormatItalic,
  FormatLineSpacing: SvgFormatLineSpacing,
  FormatListBulleted: SvgFormatListBulleted,
  FormatListNumbered: SvgFormatListNumbered,
  FormatPaint: SvgFormatPaint,
  FormatQuote: SvgFormatQuote,
  FormatShapes: SvgFormatShapes,
  FormatSize: SvgFormatSize,
  FormatStrikethrough: SvgFormatStrikethrough,
  FormatTextdirectionLToR: SvgFormatTextdirectionLToR,
  FormatTextdirectionRToL: SvgFormatTextdirectionRToL,
  FormatUnderlined: SvgFormatUnderlined,
  Forum: SvgForum,
  Forward: SvgForward,
  Forward10: SvgForward10,
  Forward30: SvgForward30,
  Forward5: SvgForward5,
  FreeBreakfast: SvgFreeBreakfast,
  Fullscreen: SvgFullscreen,
  FullscreenExit: SvgFullscreenExit,
  Functions: SvgFunctions,
  GTranslate: SvgGTranslate,
  Gamepad: SvgGamepad,
  Games: SvgGames,
  Gavel: SvgGavel,
  Gesture: SvgGesture,
  GetApp: SvgGetApp,
  Gif: SvgGif,
  GolfCourse: SvgGolfCourse,
  GpsFixed: SvgGpsFixed,
  GpsNotFixed: SvgGpsNotFixed,
  GpsOff: SvgGpsOff,
  Grade: SvgGrade,
  Gradient: SvgGradient,
  Grain: SvgGrain,
  GraphicEq: SvgGraphicEq,
  GridOff: SvgGridOff,
  GridOn: SvgGridOn,
  Group: SvgGroup,
  GroupAdd: SvgGroupAdd,
  GroupWork: SvgGroupWork,
  Hd: SvgHd,
  HdrOff: SvgHdrOff,
  HdrOn: SvgHdrOn,
  HdrStrong: SvgHdrStrong,
  HdrWeak: SvgHdrWeak,
  Headset: SvgHeadset,
  HeadsetMic: SvgHeadsetMic,
  Healing: SvgHealing,
  Hearing: SvgHearing,
  Help: SvgHelp,
  HelpOutline: SvgHelpOutline,
  HighQuality: SvgHighQuality,
  Highlight: SvgHighlight,
  HighlightOff: SvgHighlightOff,
  History: SvgHistory,
  Home: SvgHome,
  HotTub: SvgHotTub,
  Hotel: SvgHotel,
  HourglassEmpty: SvgHourglassEmpty,
  HourglassFull: SvgHourglassFull,
  Http: SvgHttp,
  Https: SvgHttps,
  Image: SvgImage,
  ImageAspectRatio: SvgImageAspectRatio,
  ImportContacts: SvgImportContacts,
  ImportExport: SvgImportExport,
  ImportantDevices: SvgImportantDevices,
  Inbox: SvgInbox,
  IndeterminateCheckBox: SvgIndeterminateCheckBox,
  Info: SvgInfo,
  InfoOutline: SvgInfoOutline,
  Input: SvgInput,
  InsertChart: SvgInsertChart,
  InsertComment: SvgInsertComment,
  InsertDriveFile: SvgInsertDriveFile,
  InsertEmoticon: SvgInsertEmoticon,
  InsertInvitation: SvgInsertInvitation,
  InsertLink: SvgInsertLink,
  InsertPhoto: SvgInsertPhoto,
  InvertColors: SvgInvertColors,
  InvertColorsOff: SvgInvertColorsOff,
  Iso: SvgIso,
  Keyboard: SvgKeyboard,
  KeyboardArrowDown: SvgKeyboardArrowDown,
  KeyboardArrowLeft: SvgKeyboardArrowLeft,
  KeyboardArrowRight: SvgKeyboardArrowRight,
  KeyboardArrowUp: SvgKeyboardArrowUp,
  KeyboardBackspace: SvgKeyboardBackspace,
  KeyboardCapslock: SvgKeyboardCapslock,
  KeyboardHide: SvgKeyboardHide,
  KeyboardReturn: SvgKeyboardReturn,
  KeyboardTab: SvgKeyboardTab,
  KeyboardVoice: SvgKeyboardVoice,
  Kitchen: SvgKitchen,
  Label: SvgLabel,
  LabelOutline: SvgLabelOutline,
  Landscape: SvgLandscape,
  Language: SvgLanguage,
  Laptop: SvgLaptop,
  LaptopChromebook: SvgLaptopChromebook,
  LaptopMac: SvgLaptopMac,
  LaptopWindows: SvgLaptopWindows,
  LastPage: SvgLastPage,
  Launch: SvgLaunch,
  Layers: SvgLayers,
  LayersClear: SvgLayersClear,
  LeakAdd: SvgLeakAdd,
  LeakRemove: SvgLeakRemove,
  Lens: SvgLens,
  LibraryAdd: SvgLibraryAdd,
  LibraryBooks: SvgLibraryBooks,
  LibraryMusic: SvgLibraryMusic,
  LightbulbOutline: SvgLightbulbOutline,
  LineStyle: SvgLineStyle,
  LineWeight: SvgLineWeight,
  LinearScale: SvgLinearScale,
  Link: SvgLink,
  LinkedCamera: SvgLinkedCamera,
  List: SvgList,
  LiveHelp: SvgLiveHelp,
  LiveTv: SvgLiveTv,
  LocalActivity: SvgLocalActivity,
  LocalAirport: SvgLocalAirport,
  LocalAtm: SvgLocalAtm,
  LocalBar: SvgLocalBar,
  LocalCafe: SvgLocalCafe,
  LocalCarWash: SvgLocalCarWash,
  LocalConvenienceStore: SvgLocalConvenienceStore,
  LocalDining: SvgLocalDining,
  LocalDrink: SvgLocalDrink,
  LocalFlorist: SvgLocalFlorist,
  LocalGasStation: SvgLocalGasStation,
  LocalGroceryStore: SvgLocalGroceryStore,
  LocalHospital: SvgLocalHospital,
  LocalHotel: SvgLocalHotel,
  LocalLaundryService: SvgLocalLaundryService,
  LocalLibrary: SvgLocalLibrary,
  LocalMall: SvgLocalMall,
  LocalMovies: SvgLocalMovies,
  LocalOffer: SvgLocalOffer,
  LocalParking: SvgLocalParking,
  LocalPharmacy: SvgLocalPharmacy,
  LocalPhone: SvgLocalPhone,
  LocalPizza: SvgLocalPizza,
  LocalPlay: SvgLocalPlay,
  LocalPostOffice: SvgLocalPostOffice,
  LocalPrintshop: SvgLocalPrintshop,
  LocalSee: SvgLocalSee,
  LocalShipping: SvgLocalShipping,
  LocalTaxi: SvgLocalTaxi,
  LocationCity: SvgLocationCity,
  LocationDisabled: SvgLocationDisabled,
  LocationOff: SvgLocationOff,
  LocationOn: SvgLocationOn,
  LocationSearching: SvgLocationSearching,
  Lock: SvgLock,
  LockOpen: SvgLockOpen,
  LockOutline: SvgLockOutline,
  Looks: SvgLooks,
  Looks3: SvgLooks3,
  Looks4: SvgLooks4,
  Looks5: SvgLooks5,
  Looks6: SvgLooks6,
  LooksOne: SvgLooksOne,
  LooksTwo: SvgLooksTwo,
  Loop: SvgLoop,
  Loupe: SvgLoupe,
  LowPriority: SvgLowPriority,
  Loyalty: SvgLoyalty,
  Mail: SvgMail,
  MailOutline: SvgMailOutline,
  Map: SvgMap,
  Markunread: SvgMarkunread,
  MarkunreadMailbox: SvgMarkunreadMailbox,
  Memory: SvgMemory,
  Menu: SvgMenu,
  MergeType: SvgMergeType,
  Message: SvgMessage,
  Mic: SvgMic,
  MicNone: SvgMicNone,
  MicOff: SvgMicOff,
  Mms: SvgMms,
  ModeComment: SvgModeComment,
  ModeEdit: SvgModeEdit,
  MonetizationOn: SvgMonetizationOn,
  MoneyOff: SvgMoneyOff,
  MonochromePhotos: SvgMonochromePhotos,
  Mood: SvgMood,
  MoodBad: SvgMoodBad,
  More: SvgMore,
  MoreHoriz: SvgMoreHoriz,
  MoreVert: SvgMoreVert,
  Motorcycle: SvgMotorcycle,
  Mouse: SvgMouse,
  MoveToInbox: SvgMoveToInbox,
  Movie: SvgMovie,
  MovieCreation: SvgMovieCreation,
  MovieFilter: SvgMovieFilter,
  MultilineChart: SvgMultilineChart,
  MusicNote: SvgMusicNote,
  MusicVideo: SvgMusicVideo,
  MyLocation: SvgMyLocation,
  Nature: SvgNature,
  NaturePeople: SvgNaturePeople,
  NavigateBefore: SvgNavigateBefore,
  NavigateNext: SvgNavigateNext,
  Navigation: SvgNavigation,
  NearMe: SvgNearMe,
  NetworkCell: SvgNetworkCell,
  NetworkCheck: SvgNetworkCheck,
  NetworkLocked: SvgNetworkLocked,
  NetworkWifi: SvgNetworkWifi,
  NewReleases: SvgNewReleases,
  NextWeek: SvgNextWeek,
  Nfc: SvgNfc,
  NoEncryption: SvgNoEncryption,
  NoSim: SvgNoSim,
  NotInterested: SvgNotInterested,
  Note: SvgNote,
  NoteAdd: SvgNoteAdd,
  Notifications: SvgNotifications,
  NotificationsActive: SvgNotificationsActive,
  NotificationsNone: SvgNotificationsNone,
  NotificationsOff: SvgNotificationsOff,
  NotificationsPaused: SvgNotificationsPaused,
  OfflinePin: SvgOfflinePin,
  OndemandVideo: SvgOndemandVideo,
  Opacity: SvgOpacity,
  OpenInBrowser: SvgOpenInBrowser,
  OpenInNew: SvgOpenInNew,
  OpenWith: SvgOpenWith,
  Pages: SvgPages,
  Pageview: SvgPageview,
  Palette: SvgPalette,
  PanTool: SvgPanTool,
  Panorama: SvgPanorama,
  PanoramaFishEye: SvgPanoramaFishEye,
  PanoramaHorizontal: SvgPanoramaHorizontal,
  PanoramaVertical: SvgPanoramaVertical,
  PanoramaWideAngle: SvgPanoramaWideAngle,
  PartyMode: SvgPartyMode,
  Pause: SvgPause,
  PauseCircleFilled: SvgPauseCircleFilled,
  PauseCircleOutline: SvgPauseCircleOutline,
  Payment: SvgPayment,
  People: SvgPeople,
  PeopleOutline: SvgPeopleOutline,
  PermCameraMic: SvgPermCameraMic,
  PermContactCalendar: SvgPermContactCalendar,
  PermDataSetting: SvgPermDataSetting,
  PermDeviceInformation: SvgPermDeviceInformation,
  PermIdentity: SvgPermIdentity,
  PermMedia: SvgPermMedia,
  PermPhoneMsg: SvgPermPhoneMsg,
  PermScanWifi: SvgPermScanWifi,
  Person: SvgPerson,
  PersonAdd: SvgPersonAdd,
  PersonOutline: SvgPersonOutline,
  PersonPin: SvgPersonPin,
  PersonPinCircle: SvgPersonPinCircle,
  PersonalVideo: SvgPersonalVideo,
  Pets: SvgPets,
  Phone: SvgPhone,
  PhoneAndroid: SvgPhoneAndroid,
  PhoneBluetoothSpeaker: SvgPhoneBluetoothSpeaker,
  PhoneForwarded: SvgPhoneForwarded,
  PhoneInTalk: SvgPhoneInTalk,
  PhoneIphone: SvgPhoneIphone,
  PhoneLocked: SvgPhoneLocked,
  PhoneMissed: SvgPhoneMissed,
  PhonePaused: SvgPhonePaused,
  Phonelink: SvgPhonelink,
  PhonelinkErase: SvgPhonelinkErase,
  PhonelinkLock: SvgPhonelinkLock,
  PhonelinkOff: SvgPhonelinkOff,
  PhonelinkRing: SvgPhonelinkRing,
  PhonelinkSetup: SvgPhonelinkSetup,
  Photo: SvgPhoto,
  PhotoAlbum: SvgPhotoAlbum,
  PhotoCamera: SvgPhotoCamera,
  PhotoFilter: SvgPhotoFilter,
  PhotoLibrary: SvgPhotoLibrary,
  PhotoSizeSelectActual: SvgPhotoSizeSelectActual,
  PhotoSizeSelectLarge: SvgPhotoSizeSelectLarge,
  PhotoSizeSelectSmall: SvgPhotoSizeSelectSmall,
  PictureAsPdf: SvgPictureAsPdf,
  PictureInPicture: SvgPictureInPicture,
  PictureInPictureAlt: SvgPictureInPictureAlt,
  PieChart: SvgPieChart,
  PieChartOutlined: SvgPieChartOutlined,
  PinDrop: SvgPinDrop,
  Place: SvgPlace,
  PlayArrow: SvgPlayArrow,
  PlayCircleFilled: SvgPlayCircleFilled,
  PlayCircleOutline: SvgPlayCircleOutline,
  PlayForWork: SvgPlayForWork,
  PlaylistAdd: SvgPlaylistAdd,
  PlaylistAddCheck: SvgPlaylistAddCheck,
  PlaylistPlay: SvgPlaylistPlay,
  PlusOne: SvgPlusOne,
  Poll: SvgPoll,
  Polymer: SvgPolymer,
  Pool: SvgPool,
  PortableWifiOff: SvgPortableWifiOff,
  Portrait: SvgPortrait,
  Power: SvgPower,
  PowerInput: SvgPowerInput,
  PowerSettingsNew: SvgPowerSettingsNew,
  PregnantWoman: SvgPregnantWoman,
  PresentToAll: SvgPresentToAll,
  Print: SvgPrint,
  PriorityHigh: SvgPriorityHigh,
  Public: SvgPublic,
  Publish: SvgPublish,
  QueryBuilder: SvgQueryBuilder,
  QuestionAnswer: SvgQuestionAnswer,
  Queue: SvgQueue,
  QueueMusic: SvgQueueMusic,
  QueuePlayNext: SvgQueuePlayNext,
  Radio: SvgRadio,
  RadioButtonChecked: SvgRadioButtonChecked,
  RadioButtonUnchecked: SvgRadioButtonUnchecked,
  RateReview: SvgRateReview,
  Receipt: SvgReceipt,
  RecentActors: SvgRecentActors,
  RecordVoiceOver: SvgRecordVoiceOver,
  Redeem: SvgRedeem,
  Redo: SvgRedo,
  Refresh: SvgRefresh,
  Remove: SvgRemove,
  RemoveCircle: SvgRemoveCircle,
  RemoveCircleOutline: SvgRemoveCircleOutline,
  RemoveFromQueue: SvgRemoveFromQueue,
  RemoveRedEye: SvgRemoveRedEye,
  RemoveShoppingCart: SvgRemoveShoppingCart,
  Reorder: SvgReorder,
  Repeat: SvgRepeat,
  RepeatOne: SvgRepeatOne,
  Replay: SvgReplay,
  Replay10: SvgReplay10,
  Replay30: SvgReplay30,
  Replay5: SvgReplay5,
  Reply: SvgReply,
  ReplyAll: SvgReplyAll,
  Report: SvgReport,
  ReportProblem: SvgReportProblem,
  Restaurant: SvgRestaurant,
  RestaurantMenu: SvgRestaurantMenu,
  Restore: SvgRestore,
  RestorePage: SvgRestorePage,
  RingVolume: SvgRingVolume,
  Room: SvgRoom,
  RoomService: SvgRoomService,
  Rotate90DegreesCcw: SvgRotate90DegreesCcw,
  RotateLeft: SvgRotateLeft,
  RotateRight: SvgRotateRight,
  RoundedCorner: SvgRoundedCorner,
  Router: SvgRouter,
  Rowing: SvgRowing,
  RssFeed: SvgRssFeed,
  RvHookup: SvgRvHookup,
  Satellite: SvgSatellite,
  Save: SvgSave,
  Scanner: SvgScanner,
  Schedule: SvgSchedule,
  School: SvgSchool,
  ScreenLockLandscape: SvgScreenLockLandscape,
  ScreenLockPortrait: SvgScreenLockPortrait,
  ScreenLockRotation: SvgScreenLockRotation,
  ScreenRotation: SvgScreenRotation,
  ScreenShare: SvgScreenShare,
  SdCard: SvgSdCard,
  SdStorage: SvgSdStorage,
  Search: SvgSearch,
  Security: SvgSecurity,
  SelectAll: SvgSelectAll,
  Send: SvgSend,
  SentimentDissatisfied: SvgSentimentDissatisfied,
  SentimentNeutral: SvgSentimentNeutral,
  SentimentSatisfied: SvgSentimentSatisfied,
  SentimentVeryDissatisfied: SvgSentimentVeryDissatisfied,
  SentimentVerySatisfied: SvgSentimentVerySatisfied,
  Settings: SvgSettings,
  SettingsApplications: SvgSettingsApplications,
  SettingsBackupRestore: SvgSettingsBackupRestore,
  SettingsBluetooth: SvgSettingsBluetooth,
  SettingsBrightness: SvgSettingsBrightness,
  SettingsCell: SvgSettingsCell,
  SettingsEthernet: SvgSettingsEthernet,
  SettingsInputAntenna: SvgSettingsInputAntenna,
  SettingsInputComponent: SvgSettingsInputComponent,
  SettingsInputComposite: SvgSettingsInputComposite,
  SettingsInputHdmi: SvgSettingsInputHdmi,
  SettingsInputSvideo: SvgSettingsInputSvideo,
  SettingsOverscan: SvgSettingsOverscan,
  SettingsPhone: SvgSettingsPhone,
  SettingsPower: SvgSettingsPower,
  SettingsRemote: SvgSettingsRemote,
  SettingsSystemDaydream: SvgSettingsSystemDaydream,
  SettingsVoice: SvgSettingsVoice,
  Share: SvgShare,
  Shop: SvgShop,
  ShopTwo: SvgShopTwo,
  ShoppingBasket: SvgShoppingBasket,
  ShoppingCart: SvgShoppingCart,
  ShortText: SvgShortText,
  ShowChart: SvgShowChart,
  Shuffle: SvgShuffle,
  SignalCellular0Bar: SvgSignalCellular0Bar,
  SignalCellular1Bar: SvgSignalCellular1Bar,
  SignalCellular2Bar: SvgSignalCellular2Bar,
  SignalCellular3Bar: SvgSignalCellular3Bar,
  SignalCellular4Bar: SvgSignalCellular4Bar,
  SignalCellularConnectedNoInternet0Bar: SvgSignalCellularConnectedNoInternet0Bar,
  SignalCellularConnectedNoInternet1Bar: SvgSignalCellularConnectedNoInternet1Bar,
  SignalCellularConnectedNoInternet2Bar: SvgSignalCellularConnectedNoInternet2Bar,
  SignalCellularConnectedNoInternet3Bar: SvgSignalCellularConnectedNoInternet3Bar,
  SignalCellularConnectedNoInternet4Bar: SvgSignalCellularConnectedNoInternet4Bar,
  SignalCellularNoSim: SvgSignalCellularNoSim,
  SignalCellularNull: SvgSignalCellularNull,
  SignalCellularOff: SvgSignalCellularOff,
  SignalWifi0Bar: SvgSignalWifi0Bar,
  SignalWifi1Bar: SvgSignalWifi1Bar,
  SignalWifi1BarLock: SvgSignalWifi1BarLock,
  SignalWifi2Bar: SvgSignalWifi2Bar,
  SignalWifi2BarLock: SvgSignalWifi2BarLock,
  SignalWifi3Bar: SvgSignalWifi3Bar,
  SignalWifi3BarLock: SvgSignalWifi3BarLock,
  SignalWifi4Bar: SvgSignalWifi4Bar,
  SignalWifi4BarLock: SvgSignalWifi4BarLock,
  SignalWifiOff: SvgSignalWifiOff,
  SignalWifiStatusbar1Bar26X24Px: SvgSignalWifiStatusbar1Bar26X24Px,
  SignalWifiStatusbar2Bar26X24Px: SvgSignalWifiStatusbar2Bar26X24Px,
  SignalWifiStatusbar3Bar26X24Px: SvgSignalWifiStatusbar3Bar26X24Px,
  SignalWifiStatusbar4Bar26X24Px: SvgSignalWifiStatusbar4Bar26X24Px,
  SignalWifiStatusbarConnectedNoInternet126X24Px: SvgSignalWifiStatusbarConnectedNoInternet126X24Px,
  SignalWifiStatusbarConnectedNoInternet226X24Px: SvgSignalWifiStatusbarConnectedNoInternet226X24Px,
  SignalWifiStatusbarConnectedNoInternet26X24Px: SvgSignalWifiStatusbarConnectedNoInternet26X24Px,
  SignalWifiStatusbarConnectedNoInternet326X24Px: SvgSignalWifiStatusbarConnectedNoInternet326X24Px,
  SignalWifiStatusbarConnectedNoInternet426X24Px: SvgSignalWifiStatusbarConnectedNoInternet426X24Px,
  SignalWifiStatusbarNotConnected26X24Px: SvgSignalWifiStatusbarNotConnected26X24Px,
  SignalWifiStatusbarNull26X24Px: SvgSignalWifiStatusbarNull26X24Px,
  SimCard: SvgSimCard,
  SimCardAlert: SvgSimCardAlert,
  SkipNext: SvgSkipNext,
  SkipPrevious: SvgSkipPrevious,
  Slideshow: SvgSlideshow,
  SlowMotionVideo: SvgSlowMotionVideo,
  Smartphone: SvgSmartphone,
  SmokeFree: SvgSmokeFree,
  SmokingRooms: SvgSmokingRooms,
  Sms: SvgSms,
  SmsFailed: SvgSmsFailed,
  Snooze: SvgSnooze,
  Sort: SvgSort,
  SortByAlpha: SvgSortByAlpha,
  Spa: SvgSpa,
  SpaceBar: SvgSpaceBar,
  Speaker: SvgSpeaker,
  SpeakerGroup: SvgSpeakerGroup,
  SpeakerNotes: SvgSpeakerNotes,
  SpeakerNotesOff: SvgSpeakerNotesOff,
  SpeakerPhone: SvgSpeakerPhone,
  Spellcheck: SvgSpellcheck,
  Star: SvgStar,
  StarBorder: SvgStarBorder,
  StarHalf: SvgStarHalf,
  Stars: SvgStars,
  StayCurrentLandscape: SvgStayCurrentLandscape,
  StayCurrentPortrait: SvgStayCurrentPortrait,
  StayPrimaryLandscape: SvgStayPrimaryLandscape,
  StayPrimaryPortrait: SvgStayPrimaryPortrait,
  Stop: SvgStop,
  StopScreenShare: SvgStopScreenShare,
  Storage: SvgStorage,
  Store: SvgStore,
  StoreMallDirectory: SvgStoreMallDirectory,
  Straighten: SvgStraighten,
  Streetview: SvgStreetview,
  StrikethroughS: SvgStrikethroughS,
  Style: SvgStyle,
  SubdirectoryArrowLeft: SvgSubdirectoryArrowLeft,
  SubdirectoryArrowRight: SvgSubdirectoryArrowRight,
  Subject: SvgSubject,
  Subscriptions: SvgSubscriptions,
  Subtitles: SvgSubtitles,
  Subway: SvgSubway,
  SupervisorAccount: SvgSupervisorAccount,
  SurroundSound: SvgSurroundSound,
  SwapCalls: SvgSwapCalls,
  SwapHoriz: SvgSwapHoriz,
  SwapVert: SvgSwapVert,
  SwapVerticalCircle: SvgSwapVerticalCircle,
  SwitchCamera: SvgSwitchCamera,
  SwitchVideo: SvgSwitchVideo,
  Sync: SvgSync,
  SyncDisabled: SvgSyncDisabled,
  SyncProblem: SvgSyncProblem,
  SystemUpdate: SvgSystemUpdate,
  SystemUpdateAlt: SvgSystemUpdateAlt,
  Tab: SvgTab,
  TabUnselected: SvgTabUnselected,
  Tablet: SvgTablet,
  TabletAndroid: SvgTabletAndroid,
  TabletMac: SvgTabletMac,
  TagFaces: SvgTagFaces,
  TapAndPlay: SvgTapAndPlay,
  Terrain: SvgTerrain,
  TextFields: SvgTextFields,
  TextFormat: SvgTextFormat,
  Textsms: SvgTextsms,
  Texture: SvgTexture,
  Theaters: SvgTheaters,
  ThreeDRotation: SvgThreeDRotation,
  ThumbDown: SvgThumbDown,
  ThumbUp: SvgThumbUp,
  ThumbsUpDown: SvgThumbsUpDown,
  TimeToLeave: SvgTimeToLeave,
  Timelapse: SvgTimelapse,
  Timeline: SvgTimeline,
  Timer: SvgTimer,
  Timer10: SvgTimer10,
  Timer3: SvgTimer3,
  TimerOff: SvgTimerOff,
  Title: SvgTitle,
  Toc: SvgToc,
  Today: SvgToday,
  Toll: SvgToll,
  Tonality: SvgTonality,
  TouchApp: SvgTouchApp,
  Toys: SvgToys,
  TrackChanges: SvgTrackChanges,
  Traffic: SvgTraffic,
  Train: SvgTrain,
  Tram: SvgTram,
  TransferWithinAStation: SvgTransferWithinAStation,
  Transform: SvgTransform,
  Translate: SvgTranslate,
  TrendingDown: SvgTrendingDown,
  TrendingFlat: SvgTrendingFlat,
  TrendingUp: SvgTrendingUp,
  Tune: SvgTune,
  TurnedIn: SvgTurnedIn,
  TurnedInNot: SvgTurnedInNot,
  Tv: SvgTv,
  Unarchive: SvgUnarchive,
  Undo: SvgUndo,
  UnfoldLess: SvgUnfoldLess,
  UnfoldMore: SvgUnfoldMore,
  Update: SvgUpdate,
  Usb: SvgUsb,
  VerifiedUser: SvgVerifiedUser,
  VerticalAlignBottom: SvgVerticalAlignBottom,
  VerticalAlignCenter: SvgVerticalAlignCenter,
  VerticalAlignTop: SvgVerticalAlignTop,
  Vibration: SvgVibration,
  VideoCall: SvgVideoCall,
  VideoLabel: SvgVideoLabel,
  VideoLibrary: SvgVideoLibrary,
  Videocam: SvgVideocam,
  VideocamOff: SvgVideocamOff,
  VideogameAsset: SvgVideogameAsset,
  ViewAgenda: SvgViewAgenda,
  ViewArray: SvgViewArray,
  ViewCarousel: SvgViewCarousel,
  ViewColumn: SvgViewColumn,
  ViewComfy: SvgViewComfy,
  ViewCompact: SvgViewCompact,
  ViewDay: SvgViewDay,
  ViewHeadline: SvgViewHeadline,
  ViewList: SvgViewList,
  ViewModule: SvgViewModule,
  ViewQuilt: SvgViewQuilt,
  ViewStream: SvgViewStream,
  ViewWeek: SvgViewWeek,
  Vignette: SvgVignette,
  Visibility: SvgVisibility,
  VisibilityOff: SvgVisibilityOff,
  VoiceChat: SvgVoiceChat,
  Voicemail: SvgVoicemail,
  VolumeDown: SvgVolumeDown,
  VolumeMute: SvgVolumeMute,
  VolumeOff: SvgVolumeOff,
  VolumeUp: SvgVolumeUp,
  VpnKey: SvgVpnKey,
  VpnLock: SvgVpnLock,
  Wallpaper: SvgWallpaper,
  Warning: SvgWarning,
  Watch: SvgWatch,
  WatchLater: SvgWatchLater,
  WbAuto: SvgWbAuto,
  WbCloudy: SvgWbCloudy,
  WbIncandescent: SvgWbIncandescent,
  WbIridescent: SvgWbIridescent,
  WbSunny: SvgWbSunny,
  Wc: SvgWc,
  Web: SvgWeb,
  WebAsset: SvgWebAsset,
  Weekend: SvgWeekend,
  Whatshot: SvgWhatshot,
  Widgets: SvgWidgets,
  Wifi: SvgWifi,
  WifiLock: SvgWifiLock,
  WifiTethering: SvgWifiTethering,
  Work: SvgWork,
  WrapText: SvgWrapText,
  YoutubeSearchedFor: SvgYoutubeSearchedFor,
  ZoomIn: SvgZoomIn,
  ZoomOut: SvgZoomOut,
  ZoomOutMap: SvgZoomOutMap
});

function _extends$fe() { _extends$fe = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fe.apply(this, arguments); }
var Svg$fa = styled("svg")({
  flex: "none"
}, space, color);

var SvgAbt = function SvgAbt(props) {
  return createElement(Svg$fa, _extends$fe({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M4.875 7.865L12 3.75l7.125 4.115v8.27L12 20.25l-7.125-4.115v-8.27zm.684 7.478l2.857-1.654 1.45-2.539L5.56 8.658v6.685zm.343.593l5.776 3.337V16.08L8.65 14.345l-2.748 1.59v.001zM18.44 8.681l-4.269 2.47 1.449 2.537 2.82 1.631V8.681zm-.322-.606l-5.757-3.324v3.231l1.47 2.574 4.287-2.48zm-4.536 3.417l-.879.508 1.744 1.009-.865-1.518zm-.34-.596l-.88-1.545v2.055l.88-.51zm-3.648 2.111L11.335 12l-.876-.507-.863 1.514zm-.259.942l2.342 1.341v-2.696l-2.342 1.355zM5.901 8.064l4.305 2.49 1.472-2.576v-3.25L5.901 8.063zm12.218 7.86l-2.727-1.577-3.03 1.755v3.148l5.757-3.325zm-3.412-1.973l-2.345-1.357v2.716l2.345-1.36zm-3.909-3.053l.88.508V9.355l-.88 1.543z",
    fill: "white"
  }));
};

SvgAbt.displayName = "SvgAbt";
SvgAbt.defaultProps = {
  size: 24,
  color: "#3EFFFF"
};

function _extends$ff() { _extends$ff = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ff.apply(this, arguments); }
var Svg$fb = styled("svg")({
  flex: "none"
}, space, color);

var SvgAct = function SvgAct(props) {
  return createElement(Svg$fb, _extends$ff({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.328 4.875h3.345a.653.653 0 01.569.333l5.18 9.24a.651.651 0 010 .637l-1.658 2.956a.653.653 0 01-.569.334H6.805a.652.652 0 01-.57-.334L4.58 15.085a.653.653 0 010-.638l5.18-9.239a.653.653 0 01.569-.333zM12 8.551l-3.49 6.215h6.98L12 8.551z",
    fill: "white"
  }));
};

SvgAct.displayName = "SvgAct";
SvgAct.defaultProps = {
  size: 24,
  color: "#767DFF"
};

function _extends$fg() { _extends$fg = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fg.apply(this, arguments); }
var Svg$fc = styled("svg")({
  flex: "none"
}, space, color);

var SvgAda = function SvgAda(props) {
  return createElement(Svg$fc, _extends$fg({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.794 4.545c.359-.185.798.243.607.596-.111.288-.532.365-.747.145-.227-.21-.153-.627.14-.742v.001zm-3.867.41c.219-.089.495.108.473.342.022.254-.293.441-.515.32-.295-.112-.261-.583.043-.662zm7.919.67c-.341-.041-.395-.57-.068-.676.255-.121.49.108.527.345-.054.203-.227.389-.459.33zm-7.039.948c.365-.227.886.111.83.529-.019.42-.588.665-.909.38-.31-.223-.263-.736.08-.909zm5.573.242c.162-.413.822-.426 1.008-.024.184.312-.042.7-.368.807-.433.079-.843-.381-.64-.783zm-3.052.76c-.004-.356.325-.62.668-.645.227.045.475.14.572.366.183.312.02.74-.307.884-.15.082-.329.051-.492.042-.25-.12-.46-.358-.441-.648zm-5.75.517c.334-.203.784.165.657.522-.069.308-.49.433-.73.237-.258-.185-.218-.628.074-.76zm12.347-.002c.283-.216.75.033.715.384.02.32-.384.562-.665.397-.309-.137-.341-.605-.05-.78zm-4.98.639a1.127 1.127 0 011.287.442c.351.5.165 1.262-.38 1.55-.564.34-1.389.052-1.598-.569-.236-.555.109-1.25.69-1.423h.001zm-2.74.054c.518-.24 1.214-.039 1.464.482.294.507.067 1.212-.459 1.474-.526.295-1.27.071-1.524-.472-.286-.527-.032-1.241.52-1.484zm-2.742.922c.04-.328.353-.541.67-.564a.735.735 0 01.653.643c-.022.337-.287.666-.65.664-.4.034-.75-.357-.673-.743zm8.101-.492c.41-.235.98.107.962.57.027.491-.603.837-1.01.549-.425-.24-.392-.915.048-1.119zm-6.473 1.73c.479-.13 1.028.093 1.263.526a1.085 1.085 0 01-.248 1.364c-.514.469-1.46.28-1.732-.36-.315-.588.067-1.375.717-1.53zm5.196-.002c.465-.131 1.013.045 1.263.463.332.478.174 1.19-.319 1.498-.518.358-1.317.17-1.602-.389-.345-.578.002-1.396.658-1.572zm-8.28.544c.414-.153.873.296.705.7-.102.368-.63.504-.902.233-.318-.255-.2-.821.197-.932zm11.226.587a.627.627 0 01.591-.655c.284.044.56.27.537.573.027.402-.465.674-.813.486-.162-.082-.245-.247-.314-.404zM3.97 11.685c.25-.107.558.105.5.377-.013.309-.475.428-.645.17-.15-.18-.06-.455.145-.548v.001zm15.712-.007c.176-.122.458-.034.527.167.117.221-.099.522-.35.486-.355.031-.469-.499-.177-.653zm-9.237 1.48c.655-.167 1.36.37 1.364 1.035.043.671-.652 1.266-1.322 1.112-.52-.083-.927-.575-.91-1.09-.001-.494.377-.953.867-1.057zm2.596 0c.665-.184 1.391.364 1.38 1.043.036.659-.637 1.234-1.294 1.103-.619-.078-1.075-.747-.902-1.338.087-.393.421-.712.816-.81v.001zm-5.007.408c.46-.077.893.427.706.858-.137.459-.815.583-1.115.209-.35-.36-.088-1.017.409-1.067zm7.615.02c.412-.17.915.18.884.619.016.482-.606.815-1.007.533-.456-.252-.372-.997.123-1.152zm2.129 2.1c-.16-.294.131-.685.465-.63.165-.003.281.125.387.233.022.175.059.383-.09.517-.2.25-.653.179-.762-.12zm-12.201-.549c.311-.203.759.1.689.458-.038.317-.443.498-.71.318-.286-.163-.275-.627.021-.776zm6.145.662c.407-.176.926.173.887.614.03.488-.611.825-1.01.532-.442-.25-.368-.99.123-1.146zm-2.846.654c.347-.18.812.13.78.513.01.313-.3.58-.615.534-.26-.006-.43-.236-.514-.454.005-.238.105-.502.35-.593zm5.765.006c.357-.218.864.094.83.502.009.428-.564.7-.896.42-.321-.22-.282-.747.066-.922zm1.002 2.437c-.159-.235.028-.52.285-.573.208.04.428.194.384.43-.03.32-.506.418-.669.144zm-7.958-.204c.063-.188.216-.373.44-.325.327.023.424.508.138.657-.257.17-.555-.063-.578-.332zm3.84.215c.063-.278.426-.412.666-.265.16.067.206.242.246.39a6.24 6.24 0 00-.06.233c-.098.113-.225.228-.388.224-.304.036-.579-.303-.465-.582h.001z",
    fill: "white"
  }));
};

SvgAda.displayName = "SvgAda";
SvgAda.defaultProps = {
  size: 24,
  color: "#3CC8C8"
};

function _extends$fh() { _extends$fh = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fh.apply(this, arguments); }
var Svg$fd = styled("svg")({
  flex: "none"
}, space, color);

var SvgAdx = function SvgAdx(props) {
  return createElement(Svg$fd, _extends$fh({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.69 6.452L12 9.905l3.229-3.455L17.25 8.52 13.953 12l3.297 3.452-2.021 2.095L12 14.094l-3.31 3.453-1.94-2.037 3.27-3.53-3.27-3.46 1.94-2.068zm.267-.282L11.986 3l3.03 3.17-1.595 1.698-1.436-1.585-1.435 1.585L8.956 6.17zm0 11.66l1.594-1.698 1.435 1.585 1.436-1.585 1.595 1.698-3.03 3.17-3.03-3.17z",
    fill: "white"
  }));
};

SvgAdx.displayName = "SvgAdx";
SvgAdx.defaultProps = {
  size: 24,
  color: "#1B75BC"
};

function _extends$fi() { _extends$fi = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fi.apply(this, arguments); }
var Svg$fe = styled("svg")({
  flex: "none"
}, space, color);

var SvgAe = function SvgAe(props) {
  return createElement(Svg$fe, _extends$fi({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.314 8.25h.678c1.06.1 2.04.616 2.765 1.357 1.507 1.53 2.335 3.688 4.253 4.825 1.386.823 3.324.15 4.005-1.24a48.24 48.24 0 011.042-.005c-.477 1.413-1.866 2.427-3.386 2.563h-.56c-.935-.075-1.845-.423-2.552-1.024-1.027-.843-1.687-1.999-2.486-3.028-.687-.91-1.388-1.932-2.524-2.346-1.405-.509-3.12.288-3.633 1.64-.45 1.115-.084 2.497.923 3.21.754.565 1.805.775 2.711.447 1.006-.351 1.753-1.149 2.326-1.995.226.313.446.63.664.95-.891 1.085-2.127 2.017-3.597 2.146H7.34c-1.852-.124-3.462-1.647-3.59-3.445v-.59C3.87 9.922 5.46 8.38 7.314 8.25zm8.76 0h.563c1.87.118 3.46 1.671 3.613 3.47v.922c-1.543.014-3.087.005-4.63.006.002-.27.002-.538 0-.808 1.22-.003 2.438.005 3.655-.003-.086-.477-.198-.965-.49-1.37-.713-1.052-2.22-1.483-3.424-1.027-.96.345-1.683 1.1-2.24 1.905a38 38 0 01-.634-.904c.88-1.101 2.107-2.054 3.587-2.191z",
    fill: "white"
  }));
};

SvgAe.displayName = "SvgAe";
SvgAe.defaultProps = {
  size: 24,
  color: "#DE3F6B"
};

function _extends$fj() { _extends$fj = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fj.apply(this, arguments); }
var Svg$ff = styled("svg")({
  flex: "none"
}, space, color);

var SvgAgi = function SvgAgi(props) {
  return createElement(Svg$ff, _extends$fj({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.858 4.818a.21.21 0 01-.06-.272.217.217 0 01.233 0c.529.22 1.007.544 1.406.954.228.21.418.457.563.727.153.276.278.565.375.864.092.31.14.632.141.954-.047.319-.094 1.864-.985 2.591a.536.536 0 01-.703-.136.47.47 0 01-.047-.545A3.786 3.786 0 0013.875 6a8.24 8.24 0 00-1.017-1.182zm-1.383 13.937c.094.09.094.181.047.227-.046.046-.14.09-.187.045a4.221 4.221 0 01-1.406-.954 2.781 2.781 0 01-.563-.728 4.851 4.851 0 01-.375-.863 3.362 3.362 0 01-.141-.955c.047-.318.094-1.863.985-2.591a.535.535 0 01.702.136.404.404 0 010 .546 3.785 3.785 0 00-.093 3.955c.303.425.65.82 1.031 1.181z",
    fill: "white",
    fillOpacity: 0.5
  }), createElement("path", {
    d: "M15.52 15.005a4.104 4.104 0 00-.984-2.364 8.112 8.112 0 00-1.969-1.455c-.633-.35-1.23-.762-1.781-1.231a3.024 3.024 0 01-.89-1.591 3.182 3.182 0 01.229-1.86 5.02 5.02 0 011.317-1.681.195.195 0 00.047-.228.182.182 0 00-.281-.045A4.183 4.183 0 009.38 6.095a3.757 3.757 0 00-.661 2.455c.037.439.148.868.328 1.273.195.397.447.765.75 1.091a8.086 8.086 0 002.015 1.409c.636.33 1.234.726 1.782 1.181.481.423.797 1.003.89 1.637.133.66.05 1.342-.234 1.955a4.598 4.598 0 01-1.36 1.636.155.155 0 00-.047.227.18.18 0 00.13.091.184.184 0 00.152-.045 5.85 5.85 0 001.781-1.591 3.88 3.88 0 00.614-2.41z",
    fill: "white"
  }));
};

SvgAgi.displayName = "SvgAgi";
SvgAgi.defaultProps = {
  size: 24,
  color: "#6916FF"
};

function _extends$fk() { _extends$fk = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fk.apply(this, arguments); }
var Svg$fg = styled("svg")({
  flex: "none"
}, space, color);

var SvgAgrs = function SvgAgrs(props) {
  return createElement(Svg$fg, _extends$fk({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M14.816 13c1.685-2.639 2.996-7 2.996-7l-2.808.637-1.028 3.637c-.097-2.727-1.967-3.725-1.967-3.725-1.498-.73-2.833-.409-3.795.093-1.191.62-2.057 1.7-2.472 2.943-.59 1.77-.518 3.754-.44 4.653.032.421.125.836.278 1.232 1.034 2.68 3.896 2.528 3.896 2.528 2.623-.093 4.217-3.182 4.217-3.182l.751 2.271c.674 1.14 2.165.713 2.472.649.054-.012.102-.018.157-.03l1.677-.256v-.73c-3.651.1-3.934-3.719-3.934-3.719zm-3.554 2.745c-.226.232-.51.397-.824.479-.68.17-1.203-.116-1.563-.466a2.953 2.953 0 01-.794-1.484c-.662-3.742.252-5.383.86-6.136a1.694 1.694 0 011.4-.649c2.359.123 2.888 5.057 2.888 5.057-.667 1.751-1.527 2.768-1.967 3.2z",
    fill: "white"
  }));
};

SvgAgrs.displayName = "SvgAgrs";
SvgAgrs.defaultProps = {
  size: 24,
  color: "#F49E00"
};

function _extends$fl() { _extends$fl = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fl.apply(this, arguments); }
var Svg$fh = styled("svg")({
  flex: "none"
}, space, color);

var SvgAion = function SvgAion(props) {
  return createElement(Svg$fh, _extends$fl({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.978 17.363c-2.967 0-5.382-2.4-5.382-5.348 0-2.949 2.415-5.348 5.382-5.348 2.968 0 5.382 2.399 5.382 5.348 0 2.948-2.414 5.348-5.382 5.348zm0-9.648c-2.386 0-4.327 1.928-4.327 4.3 0 2.37 1.941 4.3 4.327 4.3 2.387 0 4.328-1.93 4.328-4.3 0-2.372-1.941-4.3-4.328-4.3zm3.769-1.812a7.228 7.228 0 00-3.769-1.054 7.252 7.252 0 00-3.5.898l-.512-.915a8.312 8.312 0 018.333.179l-.552.892zm1.571 12.383l-.681-.8a7.14 7.14 0 002.553-5.471h1.055a8.181 8.181 0 01-2.927 6.27zm-5.34 1.942a8.312 8.312 0 01-5.262-1.879l.672-.806a7.251 7.251 0 004.59 1.638c1.17 0 2.286-.27 3.317-.8l.485.93a8.33 8.33 0 01-3.802.918z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.5,
    d: "M19.012 10.069a7.167 7.167 0 00-1.422-2.693l.675-.56a8.034 8.034 0 011.594 3.02l-.846.233zM5.145 16.482A8.057 8.057 0 013.8 12.015c0-2.222.885-4.296 2.493-5.842l.61.628a7.173 7.173 0 00-2.224 5.214c0 1.424.415 2.803 1.2 3.987l-.734.48z",
    fill: "white"
  }));
};

SvgAion.displayName = "SvgAion";
SvgAion.defaultProps = {
  size: 24,
  color: "#00BFEC"
};

function _extends$fm() { _extends$fm = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fm.apply(this, arguments); }
var Svg$fi = styled("svg")({
  flex: "none"
}, space, color);

var SvgAmb = function SvgAmb(props) {
  return createElement(Svg$fi, _extends$fm({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M20.25 12.011v.006a.392.392 0 01-.047.171c-.105.191-2.619 4.687-8.202 4.687-5.584 0-8.099-4.495-8.203-4.687a.39.39 0 01-.048-.17v-.052a.39.39 0 01.041-.141l.002-.003.004-.01c.105-.191 2.62-4.687 8.203-4.687 5.584 0 8.098 4.496 8.202 4.688l.004.008.003.004a.388.388 0 01.04.141v.035l.001.01zM19.418 12c-.423-.655-2.01-2.845-4.887-3.725a4.552 4.552 0 011.828 2.722.445.445 0 01.343.428.445.445 0 01-.328.44.438.438 0 01-.499-.218.452.452 0 01.09-.543c-.371-1.667-1.742-2.955-3.431-3.18a.2.2 0 01-.038-.008 9.28 9.28 0 00-.993 0 .2.2 0 01-.038.008 4.03 4.03 0 00-1.822.728.204.204 0 01-.312-.233.209.209 0 01.075-.103l.054-.039C6.588 9.16 5.004 11.345 4.582 12c.418.65 1.98 2.805 4.808 3.701a4.527 4.527 0 01-1.781-2.827.447.447 0 01-.285-.47.444.444 0 01.38-.393.44.44 0 01.469.282.45.45 0 01-.16.527 4.079 4.079 0 003.25 3.248c.49.04.985.04 1.476 0a4.032 4.032 0 001.683-.744.203.203 0 01.204-.026.209.209 0 01.04.358l-.066.049C17.434 14.81 19 12.651 19.418 12zm-3.803.013c0 2.023-1.622 3.669-3.615 3.669s-3.615-1.646-3.615-3.67c0-2.022 1.622-3.668 3.615-3.668s3.615 1.645 3.615 3.669zm-.408 0c0-1.794-1.439-3.255-3.207-3.255-1.768 0-3.208 1.46-3.208 3.256 0 1.795 1.44 3.253 3.208 3.253 1.768 0 3.207-1.46 3.207-3.254zm-2.025-1.008c0 .393-.194.76-.518.975l.323 1.97a.236.236 0 01-.238.285h-1.44a.236.236 0 01-.238-.284l.32-1.97a1.18 1.18 0 01-.429-1.421c.21-.517.75-.81 1.29-.703.54.109.93.59.93 1.149zm3.26 1.533c-.105.94-.5 1.822-1.132 2.526a.203.203 0 01-.347-.075.21.21 0 01.045-.204 4.117 4.117 0 001.03-2.295.206.206 0 01.225-.182.207.207 0 01.18.23zM9.04 8.887a.208.208 0 01.007.292 4.117 4.117 0 00-1.067 2.228.206.206 0 01-.233.173.207.207 0 01-.171-.235 4.53 4.53 0 011.175-2.45.203.203 0 01.289-.008z",
    fill: "white"
  }));
};

SvgAmb.displayName = "SvgAmb";
SvgAmb.defaultProps = {
  size: 24,
  color: "#3C5BE0"
};

function _extends$fn() { _extends$fn = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fn.apply(this, arguments); }
var Svg$fj = styled("svg")({
  flex: "none"
}, space, color);

var SvgAmp = function SvgAmp(props) {
  return createElement(Svg$fj, _extends$fn({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.227 8.968h.083c.722-.014 1.35-.287 1.882-.819.518-.559.777-1.2.777-1.923a1.3 1.3 0 01.4-.952 1.323 1.323 0 01.971-.399c.368 0 .686.133.951.399.266.266.4.583.4.952 0 .367-.127.685-.379.952a1.282 1.282 0 01-.91.419c-.778-.028-1.446.238-2.006.798-.56.56-.825 1.214-.798 1.965.027.777.308 1.425.84 1.943.586.518 1.24.771 1.964.757a1.284 1.284 0 01.91.42c.252.266.378.576.378.93 0 .383-.133.707-.399.973a1.298 1.298 0 01-.95.4c-.383 0-.707-.134-.973-.4a1.322 1.322 0 01-.399-.972 2.565 2.565 0 00-.777-1.882 2.679 2.679 0 00-1.883-.84 1.276 1.276 0 01-.665-.123 1.208 1.208 0 01-.45-.399 1.758 1.758 0 01-.276-1.197c.178-.668.614-1.002 1.31-1.002zm.019 4.092c.355 0 .665.13.93.39.267.259.406.566.42.92-.014.75.246 1.405.778 1.965.532.545 1.173.818 1.923.818h.062c.736 0 1.37-.273 1.903-.818a2.61 2.61 0 00.798-1.965 2.594 2.594 0 00-.84-1.903c-.538-.512-1.164-.772-1.88-.777h-.084a1.284 1.284 0 01-.91-.42 1.335 1.335 0 01-.379-.951c0-.368.133-.686.399-.952.226-.225.494-.356.803-.39l.09-.01.034.002h.107c.705-.009 1.319-.275 1.843-.8.56-.559.832-1.22.818-1.985 0-.3.103-.572.308-.818l.02-.02.02-.021c0-.014.008-.02.02-.02l.021-.02v-.02h.02v-.022c.014 0 .021-.007.021-.02l.02-.021h.042c0-.014.007-.021.02-.021l.02-.02v-.02h.041c0-.015.008-.021.02-.021l.021-.02.02-.021h.021c0-.013.008-.02.021-.02.014 0 .02-.008.02-.021h.02l.02-.02h.042v-.02h.02l.021-.022h.04v-.019h.042l.02-.02h.042l.02-.02h.061l.02-.021h.062c.014 0 .02-.007.02-.02h.43l.01.01c.007.007.017.01.03.01h.042l.01.01c.007.007.017.011.03.011h.041l.02.02h.042l.02.02h.042c.013.014.027.02.04.02l.021.022h.04v.02h.021l.02.02.01.01c.008.008.018.011.031.011l.021.02h.02c0 .014.014.02.041.02l.021.021v.021h.02c0 .013.014.02.041.02 0 .014.007.02.02.02v.021h.021l.021.02c.014.014.027.021.04.021l.02.021c0 .014.008.02.022.02v.02h.02c0 .014.004.025.01.03l.01.012c0 .013.008.02.021.02l.02.02c0 .014.003.024.01.031l.01.01.021.02.021.021v.041l.02.02v.02h.02c0 .014.004.024.011.03l.01.011c0 .014.007.02.02.02v.022c0 .013.004.023.01.03l.011.01.02.02c0 .028.008.042.021.042v.02c0 .014.003.024.01.03l.01.011v.04l.02.021v.062c.014.014.021.027.021.04v.062c.014.014.021.027.021.041v.163c0 .723.259 1.364.777 1.924a2.675 2.675 0 001.904.818c.367-.014.695.112.982.379.286.265.429.59.429.972s-.133.705-.399.972a1.299 1.299 0 01-.952.399 1.336 1.336 0 01-.95-.379 1.304 1.304 0 01-.42-.931c.014-.75-.26-1.412-.818-1.985a2.633 2.633 0 00-1.985-.798 2.677 2.677 0 00-1.883.84 2.564 2.564 0 00-.778 1.882v.063c.014.697.273 1.317.777 1.86a2.67 2.67 0 001.902.819c.49-.027.867.15 1.125.532.26.368.341.758.246 1.166-.191.683-.627 1.024-1.31 1.024h-.06c-.765.027-1.4.307-1.903.839-.52.518-.778 1.152-.778 1.902 0 .369-.133.686-.4.952a1.296 1.296 0 01-.951.4h-.04c-.369 0-.683-.134-.942-.4a1.316 1.316 0 01-.389-.952c0-.75-.259-1.384-.777-1.902a2.679 2.679 0 00-1.882-.84 1.344 1.344 0 01-1.013-.378 1.315 1.315 0 01-.42-.992 1.3 1.3 0 01.399-.952 1.324 1.324 0 01.972-.4v.002z",
    fill: "white"
  }));
};

SvgAmp.displayName = "SvgAmp";
SvgAmp.defaultProps = {
  size: 24,
  color: "#2DAEE4"
};

function _extends$fo() { _extends$fo = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fo.apply(this, arguments); }
var Svg$fk = styled("svg")({
  flex: "none"
}, space, color);

var SvgAnt = function SvgAnt(props) {
  return createElement(Svg$fk, _extends$fo({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M5.974 13.198a3.96 3.96 0 01-.008-.237c0-2.638 2.057-4.782 4.63-4.874.06 0 .127 0 .188.005l-.613-.61s2.47-.412 5.64 1.495c0 0 .047.096 0 .38 0 0 1.494.641 1.622 1.886.128 1.245-.665 1.957-1.304 2.058 0 0 .332-.513-.179-.787a.684.684 0 00-.364-.081c-.976 0-1.088 1.107-1.088 1.107-.011.056-.011.112-.011.168 0 0-.143 1.409 2.191 1.575.534-.688 1.001-1.425 1.396-2.2a16.344 16.344 0 001.39-3.86c-1.36-1.115-2.963-2.07-4.687-2.87-.647-.3-1.273-.56-1.866-.784a20.528 20.528 0 00-.915-.323c-.242.078-.548.185-.915.323-.593.223-1.22.484-1.866.784-1.723.799-3.327 1.755-4.686 2.87.073.354.185.796.345 1.31.286.919.654 1.811 1.1 2.665zM20.25 8.927l-.038.21c-.019.162-.152.746-.315 1.304a17.006 17.006 0 01-1.177 2.963c-.68 1.325-1.505 2.48-2.451 3.43a10.778 10.778 0 01-4.025 2.575l-.084.03-.16.061-.158-.055-.089-.031a10.737 10.737 0 01-4.024-2.575c-.951-.96-1.776-2.113-2.451-3.43A17.031 17.031 0 013.86 9.505a7.857 7.857 0 01-.071-.348l-.039-.216.09-.075.066-.056c1.383-1.164 3.019-2.162 4.785-3.002.994-.477 2.018-.89 3.065-1.235l.239-.074.163.049.08.026c.81.26 1.887.675 3.064 1.234 1.764.838 3.397 1.835 4.779 2.997l.169.12zm-5.701.543c.04-.02.174-.087.327-.244.307.04.609.137.609.137-.558-.335-1.32-.534-2.164-.529 0 0 .322.458 1.217.645l.01-.01z",
    fill: "white"
  }));
};

SvgAnt.displayName = "SvgAnt";
SvgAnt.defaultProps = {
  size: 24,
  color: "#2CD3E1"
};

function _extends$fp() { _extends$fp = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fp.apply(this, arguments); }
var Svg$fl = styled("svg")({
  flex: "none"
}, space, color);

var SvgApex = function SvgApex(props) {
  return createElement(Svg$fl, _extends$fp({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M4.5 14.438L12 4.874l7.5 9.563v3.187L12 8.062l-7.5 9.563v-3.188zm7.875.937a1.875 1.875 0 110-3.75 1.875 1.875 0 010 3.75z",
    fill: "white"
  }));
};

SvgApex.displayName = "SvgApex";
SvgApex.defaultProps = {
  size: 24,
  color: "#1F4C9F"
};

function _extends$fq() { _extends$fq = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fq.apply(this, arguments); }
var Svg$fm = styled("svg")({
  flex: "none"
}, space, color);

var SvgAppc = function SvgAppc(props) {
  return createElement(Svg$fm, _extends$fq({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M10.245 13.04l1.79-5.334 1.822 5.333h-3.612zm7.584 3.372l-1.48-3.981h.884a.637.637 0 00.637-.627.59.59 0 00-.178-.421.616.616 0 00-.43-.175h-1.38l-.22-.62h1.57a.63.63 0 00.635-.605.613.613 0 00-.186-.442.643.643 0 00-.451-.183h-2.04l-1.105-2.976a2.681 2.681 0 00-.793-1.095 1.874 1.874 0 00-1.247-.411 1.928 1.928 0 00-1.253.41 2.707 2.707 0 00-.795 1.096L8.839 9.385H6.811a.608.608 0 00-.612.598c0 .343.284.621.635.621h1.54l-.237.603h-1.38a.608.608 0 00-.614.6c0 .34.28.616.627.617h.886l-1.504 3.988a2.042 2.042 0 00-.152.705c.015.34.167.66.42.893a1.53 1.53 0 001.005.362 1.35 1.35 0 001.38-.979l.582-1.702h5.358l.583 1.743a1.36 1.36 0 001.38.93c.232.005.461-.053.663-.165a2.23 2.23 0 00.46-.449 1.2 1.2 0 00.169-.633 4.083 4.083 0 00-.171-.695v-.01z",
    fill: "#FEFEFE"
  }));
};

SvgAppc.displayName = "SvgAppc";
SvgAppc.defaultProps = {
  size: 24,
  color: "#FD875E"
};

function _extends$fr() { _extends$fr = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fr.apply(this, arguments); }
var Svg$fn = styled("svg")({
  flex: "none"
}, space, color);

var SvgArdr = function SvgArdr(props) {
  return createElement(Svg$fn, _extends$fr({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.912 12.893l1.327 1.733-3.864 2.624 2.537-4.357zM12 4.5l2.045 3.356-5.454 9.394H4.5L12 4.5zm0 7.382l2.727-2.014L19.5 17.25h-3.409L12 11.882z",
    fill: "white"
  }));
};

SvgArdr.displayName = "SvgArdr";
SvgArdr.defaultProps = {
  size: 24,
  color: "#3C87C7"
};

function _extends$fs() { _extends$fs = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fs.apply(this, arguments); }
var Svg$fo = styled("svg")({
  flex: "none"
}, space, color);

var SvgArk = function SvgArk(props) {
  return createElement(Svg$fo, _extends$fs({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.96 10.01l-8.21 8.658L11.997 5.25l8.253 13.5-8.29-8.74zm1.191 3.439h-2.566l1.32-1.452 1.246 1.465v-.013zm-4.95 2.383v-.018l1.456-1.49v-.007l4.44-.019 1.498 1.534H8.203z",
    fill: "white"
  }));
};

SvgArk.displayName = "SvgArk";
SvgArk.defaultProps = {
  size: 24,
  color: "#F70000"
};

function _extends$ft() { _extends$ft = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ft.apply(this, arguments); }
var Svg$fp = styled("svg")({
  flex: "none"
}, space, color);

var SvgArn = function SvgArn(props) {
  return createElement(Svg$fp, _extends$ft({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.82 10.576l3.211-5.653c.006-.01.018-.017.06 0l3.056 5.55a.731.731 0 00.019 1.15l-2.822 5.09a.756.756 0 00-.646-.004l-2.904-5.174a.728.728 0 00.025-.959h.001zm-.308 1.151l2.916 5.194a.73.73 0 00-.135.267c-2.354-.564-3.816-.913-4.388-1.047a7.165 7.165 0 01-.634-1.079l1.87-3.29c.125.017.253.001.371-.044v-.001zm-.404-1.412L5.793 6.19c1.578-.838 3.536-1.278 5.876-1.315L8.548 10.37a.756.756 0 00-.44-.055zm-.315.132a.733.733 0 00.026 1.206L6.1 14.675A7.098 7.098 0 015.6 12.46L5.25 6.923a.667.667 0 01.25-.56l2.292 4.084zm4.95 6.748a.73.73 0 00-.131-.266l2.864-5.165a.765.765 0 00.371-.018l1.856 3.37a7.297 7.297 0 01-.543.934l-4.417 1.145zm-.556.9a.745.745 0 00.56-.554l4.093-1.061a7.243 7.243 0 01-1.752 1.569l-2.717 1.735a.684.684 0 01-.184.083v-1.772zm-.34 0v1.78a.686.686 0 01-.217-.09l-2.718-1.736a7.25 7.25 0 01-1.684-1.487c.742.176 2.095.499 4.056.968.06.28.281.502.563.566zm4.027-7.75a.757.757 0 00-.423-.021l-2.997-5.447c2.274.05 4.185.485 5.73 1.301l-2.31 4.167zm.288.18l2.317-4.179a.668.668 0 01.27.577l-.347 5.537a7.097 7.097 0 01-.525 2.27l-1.735-3.153a.732.732 0 00.02-1.052zM12 8.425a.412.412 0 00-.406.401v1.465L9.43 11.625l.232.5 1.932-.633v1.466l-.541.4v.4L12 13.49l.947.267v-.4l-.541-.4v-1.466l1.9.668.264-.534-2.164-1.334V8.826a.412.412 0 00-.405-.4H12z",
    fill: "white"
  }));
};

SvgArn.displayName = "SvgArn";
SvgArn.defaultProps = {
  size: 24,
  color: "#0092B5"
};

function _extends$fu() { _extends$fu = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fu.apply(this, arguments); }
var Svg$fq = styled("svg")({
  flex: "none"
}, space, color);

var SvgAry = function SvgAry(props) {
  return createElement(Svg$fq, _extends$fu({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M17.938 15.832a.636.636 0 00.427-.645v.825c0 .285-.176.551-.446.645l-5.691 2.05a.604.604 0 01-.447 0L6.09 16.658a.675.675 0 01-.446-.645v-.825c0 .284.176.55.446.645l5.71 2.05a.604.604 0 00.446 0l5.692-2.05zm0-1.46a.65.65 0 00.427-.646v.825c0 .285-.176.551-.446.646l-5.691 2.05a.604.604 0 01-.447 0l-5.691-2.05a.675.675 0 01-.446-.645v-.835c0 .294.176.55.446.654l5.71 2.05a.604.604 0 00.446 0l5.692-2.05zm0-1.47a.66.66 0 00.437-.636v.825c0 .285-.177.55-.447.645l-5.691 2.05a.604.604 0 01-.446 0l-5.701-2.06a.675.675 0 01-.446-.645v-.824c0 .284.176.55.446.645l5.71 2.049a.605.605 0 00.446 0l5.692-2.05zM5.625 7.997a.675.675 0 01.446-.646l5.701-2.058a.605.605 0 01.446 0L17.92 7.35a.675.675 0 01.446.646v3.623c0 .286-.176.551-.446.646l-5.71 2.049a.605.605 0 01-.446 0l-5.692-2.05a.675.675 0 01-.446-.645V7.997z",
    fill: "white"
  }));
};

SvgAry.displayName = "SvgAry";
SvgAry.defaultProps = {
  size: 24,
  color: "#343434"
};

function _extends$fv() { _extends$fv = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fv.apply(this, arguments); }
var Svg$fr = styled("svg")({
  flex: "none"
}, space, color);

var SvgAst = function SvgAst(props) {
  return createElement(Svg$fr, _extends$fv({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.008 4.5l7.492 7.605-.281.255c-.128.12-.261.236-.4.345A10.706 10.706 0 0114.61 14.8a10.88 10.88 0 01-2.602.316c-1.11 0-2.213-.165-3.27-.503a10.702 10.702 0 01-3.025-1.51 13.463 13.463 0 01-.924-.742l-.289-.256.821-.834L12.008 4.5zm6.553 7.852c.111-.09.221-.18.318-.277L12 5.108l-6.878 6.967.14.12c.23.188.458.375.695.54a10.31 10.31 0 006.05 1.937c.846 0 1.688-.104 2.508-.307a10.369 10.369 0 003.313-1.472c.254-.166.498-.347.733-.54zm-11.273-.36a11.448 11.448 0 014.601-.99c1.865 0 3.698.495 5.303 1.441l.105.06-.105.068a9.663 9.663 0 01-3.483 1.374l-.03.007-.022-.015a11.915 11.915 0 00-6.295-1.802h-.407l.333-.143zm6.48 1.502a8.788 8.788 0 002.662-.968 9.984 9.984 0 00-4.548-1.09c-.953 0-1.9.128-2.818.383 1.665.225 3.265.795 4.704 1.675zm2.478 1.479c-.334.454-.69.893-1.065 1.314L12.008 19.5l-2.234-2.26.473-.03a10.326 10.326 0 004.49-1.344c.414-.202 1.509-.893 1.509-.893zm-5.51 2.628l1.271 1.29 2.249-2.281a10.69 10.69 0 01-3.52.991z",
    fill: "white"
  }));
};

SvgAst.displayName = "SvgAst";
SvgAst.defaultProps = {
  size: 24,
  color: "#0061FF"
};

function _extends$fw() { _extends$fw = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fw.apply(this, arguments); }
var Svg$fs = styled("svg")({
  flex: "none"
}, space, color);

var SvgAtm = function SvgAtm(props) {
  return createElement(Svg$fs, _extends$fw({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.12 14.03l.717 1.347a3.277 3.277 0 01-1.354 4.431l-.094.05a3.278 3.278 0 01-4.431-1.355L7.54 13.957a3.277 3.277 0 011.195-4.34l-.717-1.348a3.277 3.277 0 011.355-4.431l.093-.05a3.277 3.277 0 014.43 1.355l2.418 4.546a3.277 3.277 0 01-1.193 4.34h-.001zm0 0l-1.7-3.2a3.276 3.276 0 00-4.431-1.354l-.093.049c-.055.03-.109.06-.162.092l1.701 3.198a3.277 3.277 0 004.431 1.355l.094-.049c.054-.03.108-.06.16-.091z",
    fill: "white"
  }));
};

SvgAtm.displayName = "SvgAtm";
SvgAtm.defaultProps = {
  size: 24,
  color: "#346FCE"
};

function _extends$fx() { _extends$fx = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fx.apply(this, arguments); }
var Svg$ft = styled("svg")({
  flex: "none"
}, space, color);

var SvgAuto = function SvgAuto(props) {
  return createElement(Svg$ft, _extends$fx({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M18.375 14.45l-3.139-1.883.36-1.492 1.34.792V9.142l-4.304-2.566v5.925l-1.024.566 5.653 3.353L12 19.5l-6.375-3.733V8.3L12 4.5l6.375 3.8v6.15zM7.064 9.143V14l4.138-2.4V6.675L7.064 9.142zm3.072 4.757l-2.353 1.44L12 17.809l2.381-1.395-4.245-2.514z",
    fill: "white"
  }));
};

SvgAuto.displayName = "SvgAuto";
SvgAuto.defaultProps = {
  size: 24,
  color: "#FAB431"
};

function _extends$fy() { _extends$fy = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fy.apply(this, arguments); }
var Svg$fu = styled("svg")({
  flex: "none"
}, space, color);

var SvgBat = function SvgBat(props) {
  return createElement(Svg$fu, _extends$fy({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M4.5 17.625l7.538-12.75L19.5 17.608l-15 .017zm7.52-7.59l-3.08 5.09h6.176l-3.096-5.09z",
    fill: "white"
  }));
};

SvgBat.displayName = "SvgBat";
SvgBat.defaultProps = {
  size: 24,
  color: "#FF5000"
};

function _extends$fz() { _extends$fz = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fz.apply(this, arguments); }
var Svg$fv = styled("svg")({
  flex: "none"
}, space, color);

var SvgBay = function SvgBay(props) {
  return createElement(Svg$fv, _extends$fz({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M17.088 11.98c.043-.048.092-.097.141-.146.158-.17.33-.35.493-.525a3.656 3.656 0 001.017-2.527c0-.066.011-.334.011-.372-.076-2.154-1.89-3.91-4.033-3.91h-6.75v2.723H5.25V19.5h9.575c2.128 0 3.925-1.892 3.925-4.134.005-1.603-.985-2.734-1.662-3.386zM9.32 8.59l5.375.006-3.377 3.424 3.34 3.39H9.32V8.59zm5.505 9.538H6.603V8.585h1.365v8.186h6.69c.552 0 1.045-.333 1.256-.847a1.373 1.373 0 00-.293-1.493l-2.386-2.417 2.424-2.456c.39-.394.504-.979.293-1.492a1.356 1.356 0 00-1.257-.848h-5.37V5.862h5.398c1.429 0 2.63 1.165 2.68 2.58 0 .06-.012.296-.012.301v.027a2.29 2.29 0 01-.643 1.592c-.169.175-.342.36-.498.525-.266.279-.493.52-.602.63l-.487.48.482.488c.065.065.146.141.243.234.563.525 1.511 1.4 1.511 2.636.005 1.476-1.196 2.773-2.572 2.773z",
    fill: "white"
  }));
};

SvgBay.displayName = "SvgBay";
SvgBay.defaultProps = {
  size: 24,
  color: "#6356AB"
};

function _extends$fA() { _extends$fA = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fA.apply(this, arguments); }
var Svg$fw = styled("svg")({
  flex: "none"
}, space, color);

var SvgBcbc = function SvgBcbc(props) {
  return createElement(Svg$fw, _extends$fA({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.362 5.845a6.566 6.566 0 108.063 9.32l-5.747-3.176L14.01 5.85a6.566 6.566 0 00-4.647-.005zm.41 1.18a5.317 5.317 0 013.763.004l-1.887 4.97 4.652 2.573a5.316 5.316 0 11-6.528-7.548zm2.202-3.29a8.27 8.27 0 012.61.532L11.648 12 18.886 16a8.27 8.27 0 11-6.912-12.265zm5.646 2.859c.198 0 .383.023.552.071.5.137.837.448 1.013.931.107.293.13.581.07.864a1.54 1.54 0 01-.389.757 1.68 1.68 0 011.013.257c.287.181.5.46.635.833.193.53.135 1.013-.175 1.451-.306.431-.852.79-1.64 1.077l-3.124 1.137-2.198-6.04 2.95-1.074c.483-.176.915-.264 1.293-.264zm-.457 1.25c-.18 0-.388.043-.625.13l-1.389.505.518 1.424 1.39-.506c.345-.126.585-.28.718-.467.135-.186.159-.397.073-.632-.086-.236-.239-.379-.46-.429a.916.916 0 00-.225-.026zm1.171 2.341c-.189.002-.41.05-.665.143l-1.631.593.543 1.492 1.63-.593c.368-.134.623-.295.763-.483.146-.19.172-.411.08-.665-.12-.327-.36-.49-.72-.487z",
    fill: "white"
  }));
};

SvgBcbc.displayName = "SvgBcbc";
SvgBcbc.defaultProps = {
  size: 24,
  color: "#004AB5"
};

function _extends$fB() { _extends$fB = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fB.apply(this, arguments); }
var Svg$fx = styled("svg")({
  flex: "none"
}, space, color);

var SvgBcc = function SvgBcc(props) {
  return createElement(Svg$fx, _extends$fB({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M5.513 14.49c-.006-2.259 1.585-4.155 3.86-4.582.196-.036.251-.101.246-.291a31.23 31.23 0 010-1.522c.004-.182-.054-.291-.211-.393-.547-.356-.77-1.004-.57-1.587a1.406 1.406 0 011.416-.968c.578.027 1.106.457 1.262 1.028a1.368 1.368 0 01-.57 1.52c-.18.113-.236.228-.23.432.015.507.01 1.014.003 1.522-.002.147.02.226.194.248.332.044.657.133.965.265.115.05.178.02.255-.066a957.472 957.472 0 013.238-3.55c.112-.12.08-.204.029-.33a1.617 1.617 0 01.388-1.818c.455-.424 1.206-.544 1.75-.281.638.31.99.904.946 1.601-.059.933-.966 1.636-1.887 1.445-.187-.04-.295.006-.416.139a592.976 592.976 0 01-3.018 3.31c-.122.133-.14.204.013.336 1.653 1.442 2.103 3.614 1.161 5.593-.071.15-.056.235.06.345.275.261.541.532.806.806.104.108.203.137.359.097a1.389 1.389 0 011.345 2.307c-.416.442-1.095.57-1.622.306-.576-.288-.894-.904-.758-1.536.04-.181-.002-.285-.123-.4-.224-.211-.44-.43-.65-.655-.123-.132-.198-.134-.338-.003-1.424 1.328-3.076 1.671-4.898 1.023-1.812-.643-3-2.404-3.005-4.34",
    fill: "#FEFDFC"
  }));
};

SvgBcc.displayName = "SvgBcc";
SvgBcc.defaultProps = {
  size: 24,
  color: "#F7931C"
};

function _extends$fC() { _extends$fC = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fC.apply(this, arguments); }
var Svg$fy = styled("svg")({
  flex: "none"
}, space, color);

var SvgBcd = function SvgBcd(props) {
  return createElement(Svg$fy, _extends$fC({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.939 7.27l.058.129-2.291 1.051 1.03 3.413 3.391-1.713.045.09.014-.017-2.197-2.93-.05-.022zm-.124-.057l-2.08-.968H9.357l-2.221 1.02 2.31.972h5.137l2.232-1.024zm-9.866.24l-2.08 2.7 3.386 1.71L9.29 8.439l-2.34-.985zm2.58 1.03l-1.068 3.54 3.534 6.248 3.536-6.248-1.07-3.54H9.53zm9.384 2.05L15.75 12.13l-3.154 5.574 6.317-7.173zm-7.535 7.142L8.242 12.13l-3.147-1.589 6.283 7.134zm-6.555-7.443l.025-.05-.032.042.007.008zm2.093-3.135L9.305 6h5.484l2.358 1.096 2.354 3.14L12 18.75l-7.5-8.515 2.417-3.138zm6.901 4.029c.044.455-.144.729-.445.884.495.12.806.418.745 1.087-.076.83-.687 1.052-1.56 1.103v.872h-.519v-.86c-.135 0-.272-.002-.415-.005v.865h-.518v-.874c-.121-.001-.245-.004-.371-.004h-.675l.103-.627s.384.006.377 0c.147 0 .186-.107.195-.174v-1.378h.056a.412.412 0 00-.056-.004v-.983c-.02-.107-.088-.23-.299-.231.007-.008-.376 0-.376 0v-.561h.716v.003c.107 0 .217-.002.33-.005v-.863h.52v.847c.137-.003.277-.006.413-.006v-.84h.52v.863c.67.06 1.2.268 1.26.89zm-.726 1.867c0-.681-1.103-.578-1.455-.578v1.157c.352 0 1.455.074 1.455-.579zm-.241-1.633c0-.62-.921-.525-1.214-.525v1.05c.293 0 1.214.07 1.214-.525z",
    fill: "white"
  }));
};

SvgBcd.displayName = "SvgBcd";
SvgBcd.defaultProps = {
  size: 24,
  color: "#FCC339"
};

function _extends$fD() { _extends$fD = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fD.apply(this, arguments); }
var Svg$fz = styled("svg")({
  flex: "none"
}, space, color);

var SvgBch = function SvgBch(props) {
  return createElement(Svg$fz, _extends$fD({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M15.905 7.9c-.582-1.478-2.041-1.612-3.74-1.282l-.606-2.11-1.284.369.59 2.054c-.338.096-.681.203-1.023.308L9.25 5.17l-1.284.368.604 2.11c-.276.085-.547.17-.814.246l-.002-.008-1.771.508.393 1.373s.944-.291.933-.269c.52-.15.776.104.9.351l.69 2.403c.035-.01.082-.022.138-.03l-.136.039.965 3.368c.024.17.003.458-.36.563.02.01-.934.267-.934.267l.185 1.608 1.671-.48c.311-.088.619-.17.92-.255l.612 2.133 1.283-.367-.606-2.111c.345-.091.688-.186 1.03-.285l.601 2.102 1.285-.368-.61-2.13c2.123-.744 3.478-1.72 3.084-3.803-.317-1.675-1.293-2.184-2.603-2.127.636-.592.91-1.393.481-2.475zm-.487 5.078c.457 1.595-2.325 2.197-3.195 2.447l-.811-2.827c.87-.25 3.528-1.283 4.005.38zm-1.742-3.817c.416 1.45-1.91 1.934-2.635 2.142l-.735-2.564c.724-.208 2.936-1.091 3.37.422z",
    fill: "white"
  }));
};

SvgBch.displayName = "SvgBch";
SvgBch.defaultProps = {
  size: 24,
  color: "#8DC351"
};

function _extends$fE() { _extends$fE = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fE.apply(this, arguments); }
var Svg$fA = styled("svg")({
  flex: "none"
}, space, color);

var SvgBcn = function SvgBcn(props) {
  return createElement(Svg$fA, _extends$fE({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 23.998c6.626 0 11.998-5.372 11.998-11.999C23.998 5.372 18.627 0 12 0 5.372 0 0 5.372 0 12c0 6.626 5.372 11.998 12 11.998z",
    fill: "inherit"
  }), createElement("path", {
    d: "M17.578 12.566c-.473-.523-1.152-.847-2.04-.973v-.018c.777-.126 1.389-.445 1.804-.955.422-.506.651-1.144.647-1.803 0-1.096-.353-1.84-1.083-2.426-.73-.585-1.827-.778-3.313-.778h-5.61v5.222H4.76v2h8.796c.692 0 1.212.05 1.555.326.343.277.519.635.519 1.163 0 .529-.173.98-.519 1.264-.345.283-.866.47-1.556.47h-3.018v-1.556H7.982v3.556h5.795c1.474 0 2.6-.385 3.382-.983.781-.598 1.148-1.48 1.148-2.564a2.858 2.858 0 00-.73-1.945zm-4.345-1.736h-2.696V7.608h2.696c1.386 0 2.077.54 2.077 1.611 0 1.07-.691 1.611-2.077 1.611z",
    fill: "white"
  }));
};

SvgBcn.displayName = "SvgBcn";
SvgBcn.defaultProps = {
  size: 24,
  color: "#F04086"
};

function _extends$fF() { _extends$fF = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fF.apply(this, arguments); }
var Svg$fB = styled("svg")({
  flex: "none"
}, space, color);

var SvgBco = function SvgBco(props) {
  return createElement(Svg$fB, _extends$fF({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M10.591 15.62l-1.129-.636a1.577 1.577 0 01-1.274.637c-.525 0-.99-.252-1.274-.64l-.366.208a.642.642 0 01-.152.716.665.665 0 01-.473.188.665.665 0 01-.673-.656c0-.364.301-.658.673-.658.217 0 .41.1.533.255l.36-.204a1.494 1.494 0 01-.194-.738c0-.825.669-1.497 1.506-1.529v-1.165c-.816-.032-1.466-.687-1.466-1.49 0-.255.066-.496.183-.706l-.383-.213a.678.678 0 01-.538.262.666.666 0 01-.674-.657c0-.364.301-.657.673-.657.372 0 .674.293.674.657a.646.646 0 01-.046.238l.39.217a1.534 1.534 0 011.247-.631c.527 0 .99.26 1.265.655l1.15-.637a1.48 1.48 0 01-.165-.679c0-.804.643-1.46 1.455-1.507v-.441a.663.663 0 01-.582-.652c0-.363.302-.657.674-.657.372 0 .674.294.674.657a.664.664 0 01-.583.652v.44c.812.047 1.455.704 1.455 1.508 0 .245-.06.476-.165.681l1.147.646a1.535 1.535 0 011.283-.681c.532 0 .999.265 1.273.667l.378-.241a.641.641 0 01-.044-.236c0-.363.302-.657.674-.657.371 0 .673.294.673.658a.666.666 0 01-.674.657.678.678 0 01-.54-.264l-.375.238c.103.201.162.428.162.668 0 .818-.675 1.483-1.511 1.49v1.214c.847.008 1.531.681 1.531 1.51 0 .251-.063.488-.175.697l.386.218a.68.68 0 01.523-.243c.371 0 .673.294.673.658a.665.665 0 01-.674.656.663.663 0 01-.673-.656c0-.09.019-.18.056-.262l-.385-.218c-.279.398-.747.66-1.278.66-.526 0-.99-.257-1.27-.649l-1.15.648c.125.221.196.476.196.747 0 .815-.645 1.483-1.465 1.545v.288a.663.663 0 01.552.647.666.666 0 01-.674.657.663.663 0 01-.673-.657c0-.343.268-.625.612-.655v-.277c-.848-.032-1.526-.713-1.526-1.548 0-.27.07-.523.194-.743zm.098-.153a1.598 1.598 0 011.296-.654 1.6 1.6 0 011.293.651l1.152-.649a1.474 1.474 0 01-.18-.708c0-.779.602-1.42 1.378-1.502v-1.23c-.764-.082-1.358-.714-1.358-1.482 0-.234.054-.456.153-.652l-1.15-.648c-.278.406-.75.674-1.288.674a1.558 1.558 0 01-1.29-.675l-1.148.635c.108.204.168.435.168.681 0 .783-.617 1.425-1.403 1.485v1.174c.807.06 1.444.72 1.444 1.525 0 .268-.071.52-.196.74l1.129.635zm-2.5-.574a.811.811 0 00.82-.801c0-.443-.367-.801-.82-.801a.81.81 0 00-.821.8c0 .443.367.802.82.802zm0-4.204c.442 0 .8-.35.8-.78a.792.792 0 00-.8-.782.79.79 0 00-.8.781c0 .431.358.781.8.781zm3.796-2.141a.8.8 0 00.81-.79.8.8 0 00-.81-.792.8.8 0 00-.81.791.8.8 0 00.81.79zm3.81 2.126c.443 0 .801-.35.801-.78a.79.79 0 00-.8-.781.79.79 0 00-.8.78c0 .431.358.781.8.781zm0 4.223a.8.8 0 00.81-.79.8.8 0 00-.81-.791.8.8 0 00-.81.79.8.8 0 00.81.791zm-3.81 2.278a.822.822 0 00.831-.812.822.822 0 00-.831-.811.821.821 0 00-.832.811c0 .449.372.812.832.812zm0-2.985c-1.239 0-2.243-.98-2.243-2.19 0-1.208 1.004-2.19 2.242-2.19 1.24 0 2.244.982 2.244 2.19 0 1.21-1.005 2.19-2.243 2.19zm0-1.331a.869.869 0 00.879-.858.869.869 0 00-.879-.858.869.869 0 00-.88.858c0 .474.394.858.88.858z",
    fill: "white"
  }));
};

SvgBco.displayName = "SvgBco";
SvgBco.defaultProps = {
  size: 24,
  color: "#2C76B7"
};

function _extends$fG() { _extends$fG = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fG.apply(this, arguments); }
var Svg$fC = styled("svg")({
  flex: "none"
}, space, color);

var SvgBcpt = function SvgBcpt(props) {
  return createElement(Svg$fC, _extends$fG({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 20.25a8.25 8.25 0 110-16.5 8.25 8.25 0 010 16.5zm0-.826a7.424 7.424 0 10-.001-14.848A7.424 7.424 0 0012 19.424zM16.532 9.09c.124 2.204-1.912 2.786-1.912 2.786 2.327.332 2.203 2.328 2.203 2.328 0 3.241-3.617 3.368-3.617 3.368H8.134V6.429h4.573c3.825.167 3.825 2.661 3.825 2.661zm-5.78-.665v2.701h1.83s1.29-.041 1.372-1.08V9.38s0-.872-1.248-.955h-1.953zm3.45 6.112v-.666s0-.873-1.246-.957h-2.204v2.704h2.08s1.288-.041 1.371-1.082v.001z",
    fill: "white"
  }));
};

SvgBcpt.displayName = "SvgBcpt";
SvgBcpt.defaultProps = {
  size: 24,
  color: "#404040"
};

function _extends$fH() { _extends$fH = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fH.apply(this, arguments); }
var Svg$fD = styled("svg")({
  flex: "none"
}, space, color);

var SvgBdl = function SvgBdl(props) {
  return createElement(Svg$fD, _extends$fH({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M6.996 6.463c-.015-.11.089-.176.148-.252.745-.737 1.487-1.478 2.226-2.223-.01 2.037.006 4.074-.008 6.11 1.536-.847 3.472-.884 5.052-.125-.002.131-.002.261-.002.393-1.26-.678-2.811-.764-4.156-.292-1.547.533-2.78 1.843-3.262 3.402.002-2.339-.001-4.676.002-7.013zm10.042 8.746a4.99 4.99 0 01-1.422 3.304 5.023 5.023 0 01-6.377.682 5.023 5.023 0 01-2.159-3.222 4.994 4.994 0 01.376-3.09 5.03 5.03 0 016.954-2.295 228.28 228.28 0 000 3.362c-.223-.463-.555-.877-.993-1.151-.868-.56-2.074-.534-2.912.073-.922.635-1.338 1.893-.972 2.951.328 1.044 1.365 1.81 2.462 1.797 1.054.027 2.072-.663 2.45-1.646.24-.557.18-1.173.184-1.762.005-3.041-.007-6.083-.005-9.123 0-.383.007-.765-.016-1.146.818.805 1.628 1.62 2.438 2.434-.017 2.944 0 5.888-.008 8.833z",
    fill: "white"
  }));
};

SvgBdl.displayName = "SvgBdl";
SvgBdl.defaultProps = {
  size: 24,
  color: "#E54C40"
};

function _extends$fI() { _extends$fI = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fI.apply(this, arguments); }
var Svg$fE = styled("svg")({
  flex: "none"
}, space, color);

var SvgBela = function SvgBela(props) {
  return createElement(Svg$fE, _extends$fI({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.223 8.676a1.817 1.817 0 01-.973-1.61 1.812 1.812 0 113.415-.85 6.668 6.668 0 013.376-.912c3.704 0 6.709 3.01 6.709 6.723s-3.004 6.723-6.71 6.723c-3.705 0-6.709-3.01-6.709-6.723a6.705 6.705 0 01.892-3.351zm5.817 6.659c1.823 0 3.3-1.481 3.3-3.308a3.304 3.304 0 00-3.3-3.307 3.304 3.304 0 00-3.3 3.307 3.304 3.304 0 003.3 3.308z",
    fill: "white"
  }));
};

SvgBela.displayName = "SvgBela";
SvgBela.defaultProps = {
  size: 24,
  color: "#13A0F6"
};

function _extends$fJ() { _extends$fJ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fJ.apply(this, arguments); }
var Svg$fF = styled("svg")({
  flex: "none"
}, space, color);

var SvgBix = function SvgBix(props) {
  return createElement(Svg$fF, _extends$fJ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.706 18.433c.039.091.06.191.06.296a.777.777 0 01-.784.771.777.777 0 01-.784-.771c0-.102.02-.2.057-.289l-4.657-2.645a.786.786 0 01-.564.236.777.777 0 01-.784-.771c0-.36.25-.662.588-.748v-5.27a.774.774 0 01-.588-.747c0-.426.351-.77.784-.77.26 0 .49.124.633.316l4.554-2.588a.73.73 0 01-.023-.182c0-.426.352-.771.784-.771a.778.778 0 01.763.949l4.58 2.602a.787.787 0 01.641-.327c.433 0 .784.345.784.771 0 .36-.251.663-.59.748l-.014 5.265c.346.08.604.386.604.752a.777.777 0 01-.784.77.788.788 0 01-.582-.255l-4.678 2.658zm-.21-.285l4.716-2.68a.76.76 0 01.015-.466l-4.549-2.925a.931.931 0 01-1.412-.065l-4.483 3.02a.76.76 0 01-.003.462l4.681 2.659a.788.788 0 01.521-.195c.197 0 .377.071.514.189zm.09-12.385a.788.788 0 01-.41.255l-.012 4.542a.915.915 0 01.762.897.887.887 0 01-.06.322l4.553 2.928a.782.782 0 01.371-.199l.014-5.258a.775.775 0 01-.612-.87l-4.606-2.617zm-1.204.004L6.806 8.366a.775.775 0 01-.612.884v5.254c.16.033.3.113.408.225l4.504-3.034a.916.916 0 01.701-1.129l.012-4.54a.785.785 0 01-.437-.26z",
    fill: "white"
  }));
};

SvgBix.displayName = "SvgBix";
SvgBix.defaultProps = {
  size: 24,
  color: "black"
};

function _extends$fK() { _extends$fK = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fK.apply(this, arguments); }
var Svg$fG = styled("svg")({
  flex: "none"
}, space, color);

var SvgBlcn = function SvgBlcn(props) {
  return createElement(Svg$fG, _extends$fK({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M5.925 5.25h4.65a.675.675 0 01.675.675v4.65a.675.675 0 01-.675.675h-4.65a.675.675 0 01-.675-.675v-4.65a.675.675 0 01.675-.675zm7.5 0h4.65a.675.675 0 01.675.675v4.65a.675.675 0 01-.675.675h-4.65a.675.675 0 01-.675-.675v-4.65a.675.675 0 01.675-.675zm0 7.5h4.65a.675.675 0 01.675.675v4.65a.675.675 0 01-.675.675h-4.65a.675.675 0 01-.675-.675v-4.65a.675.675 0 01.675-.675zm-7.5 0h4.65a.675.675 0 01.675.675v4.65a.675.675 0 01-.675.675h-4.65a.675.675 0 01-.675-.675v-4.65a.675.675 0 01.675-.675z",
    fill: "white"
  }));
};

SvgBlcn.displayName = "SvgBlcn";
SvgBlcn.defaultProps = {
  size: 24,
  color: "#2AABE4"
};

function _extends$fL() { _extends$fL = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fL.apply(this, arguments); }
var Svg$fH = styled("svg")({
  flex: "none"
}, space, color);

var SvgBlk = function SvgBlk(props) {
  return createElement(Svg$fH, _extends$fL({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M17.325 8.348a2.853 2.853 0 01-1.827 2.798s.759-.75.724-2.672c-.036-1.922-1.448-2.872-1.448-2.872s2.516.56 2.55 2.745h.001zM8.952 18.614l-2.577.127v-.24s1.577-.164 1.577-2.993v-7.23c0-2.396-1.577-2.81-1.577-2.81V5.25l2.577.126v13.238zm4.119.135c-1.121.01-3.201-.147-3.201-.147V5.395c1.371-.019 1.85-.208 2.98-.045 1.13.162 2.1 1.29 2.365 2.42.265 1.128-.017 2.203-.38 2.79-.362.586-1.155.993-1.155.993s1.2.415 1.624.776c.423.362 1.245 1.346.927 3.486-.318 2.14-2.04 2.925-3.16 2.934zm2.978-.487s1.223-1.065 1.169-3.226c-.054-2.16-1.169-3.176-1.169-3.176s2.3.577 2.325 3.151c.027 2.573-2.325 3.252-2.325 3.252v-.001zm-2.325-7.75c.824-1.097.565-3.158-.433-3.863-.997-.705-2.047-.353-2.25-.154-.204.199-.194 4.823-.194 4.823s2.053.289 2.877-.807zm.152 1.968c-.77-.344-3.03-.254-3.03-.254s-.035 1.168.048 3.354c.082 2.185.812 2.173 1.571 2.203.759.03 2.207-.024 2.683-1.909.477-1.883-.5-3.051-1.271-3.394z",
    fill: "white"
  }));
};

SvgBlk.displayName = "SvgBlk";
SvgBlk.defaultProps = {
  size: 24,
  color: "#181818"
};

function _extends$fM() { _extends$fM = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fM.apply(this, arguments); }
var Svg$fI = styled("svg")({
  flex: "none"
}, space, color);

var SvgBlock$1 = function SvgBlock(props) {
  return createElement(Svg$fI, _extends$fM({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.266 5.25h7.671L19.875 12l-3.938 6.75H8.198l3.87-6.75-3.802-6.75zm4.073 2.375L14.852 12l-2.512 4.375h2.24L17.093 12l-2.513-4.375h-2.24z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.5,
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M9.085 8.27L6.908 12l2.157 3.697-1.379 2.407L4.125 12l3.592-6.158L9.085 8.27z",
    fill: "white"
  }));
};

SvgBlock$1.displayName = "SvgBlock";
SvgBlock$1.defaultProps = {
  size: 24,
  color: "#101341"
};

function _extends$fN() { _extends$fN = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fN.apply(this, arguments); }
var Svg$fJ = styled("svg")({
  flex: "none"
}, space, color);

var SvgBlz = function SvgBlz(props) {
  return createElement(Svg$fJ, _extends$fN({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.725 15.252a1.314 1.314 0 010 1.833 1.257 1.257 0 01-1.8.002 1.309 1.309 0 010-1.837 1.257 1.257 0 011.8.002zm8.297-8.707a1.297 1.297 0 01.786 1.199c0 .525-.31.997-.786 1.198a1.255 1.255 0 01-1.387-.281 1.309 1.309 0 010-1.834 1.256 1.256 0 011.387-.282zm-8.464 7.707l1.227-1.257a2.448 2.448 0 001.347 1.373l-1.23 1.253-1.345-1.369zM15.83 9.65l-1.23 1.255c-.12-.309-.301-.589-.533-.824a2.42 2.42 0 00-.81-.545l1.23-1.254 1.343 1.368zm-.515 5.957a1.273 1.273 0 011.177-.8c.515 0 .98.316 1.177.8a1.317 1.317 0 01-.277 1.414 1.26 1.26 0 01-1.389.281 1.263 1.263 0 01-.411-.281 1.315 1.315 0 01-.277-1.414zM6.776 7.133a1.274 1.274 0 011.177-.801c.515 0 .98.315 1.177.8a1.317 1.317 0 01-.276 1.414 1.26 1.26 0 01-1.801 0 1.315 1.315 0 01-.277-1.413zm7.609 8.433l-1.234-1.25a2.447 2.447 0 001.347-1.373l1.23 1.254-1.343 1.369zm-4.38-7.358l1.23 1.255a2.377 2.377 0 00-.808.542 2.487 2.487 0 00-.536.826l-1.23-1.253 1.343-1.37zm2.206-1.11a1.287 1.287 0 01-1.275-1.3c0-.718.57-1.298 1.275-1.298.337 0 .662.136.901.38.24.244.374.574.373.918 0 .718-.57 1.3-1.275 1.3zm1.275 11.104c0 .717-.572 1.298-1.275 1.298a1.287 1.287 0 01-1.275-1.298c0-.717.57-1.3 1.275-1.3.337 0 .662.137.901.381.24.244.374.574.373.919zm-.813-10.425v1.608a2.306 2.306 0 00-.802 0V7.777h.803zm0 6.909v1.608h-.802v-1.609c.265.047.537.047.803 0zm4-2.544a1.316 1.316 0 01.276-1.415 1.257 1.257 0 011.39-.283 1.313 1.313 0 01.414 2.119 1.262 1.262 0 01-2.08-.421zm-11.798-.277c0-.717.57-1.298 1.275-1.298.704 0 1.274.58 1.275 1.297 0 .345-.135.675-.373.919a1.262 1.262 0 01-.902.38 1.287 1.287 0 01-1.275-1.297v-.001zm11.312.409l-1.578-.002a2.44 2.44 0 000-.817h1.578v.819zm-6.482 0H8.126v-.818h1.579c-.046.27-.046.547 0 .818zm2.467 1.528c-.998 0-1.807-.825-1.807-1.841s.81-1.841 1.807-1.841c.998 0 1.807.825 1.808 1.841 0 1.016-.81 1.84-1.808 1.84z",
    fill: "white"
  }));
};

SvgBlz.displayName = "SvgBlz";
SvgBlz.defaultProps = {
  size: 24,
  color: "#18578C"
};

function _extends$fO() { _extends$fO = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fO.apply(this, arguments); }
var Svg$fK = styled("svg")({
  flex: "none"
}, space, color);

var SvgBnb = function SvgBnb(props) {
  return createElement(Svg$fK, _extends$fO({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.087 10.803L12 7.89l2.915 2.915L16.61 9.11 12 4.5 7.392 9.108l1.695 1.695zM4.5 12l1.695-1.695L7.89 12l-1.695 1.695L4.5 12zm4.587 1.197L12 16.11l2.915-2.915 1.695 1.695L12 19.5l-4.608-4.608-.002-.002 1.697-1.693zM16.11 12l1.695-1.695L19.5 12l-1.695 1.695L16.11 12zm-2.391-.002h.002V12L12 13.72l-1.718-1.717-.003-.003.003-.002.3-.302.147-.146L12 10.28 13.72 12l-.001-.002z",
    fill: "white"
  }));
};

SvgBnb.displayName = "SvgBnb";
SvgBnb.defaultProps = {
  size: 24,
  color: "#F3BA2F"
};

function _extends$fP() { _extends$fP = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fP.apply(this, arguments); }
var Svg$fL = styled("svg")({
  flex: "none"
}, space, color);

var SvgBnt = function SvgBnt(props) {
  return createElement(Svg$fL, _extends$fP({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.94 4.41L8.552 6.395l3.388 1.986 3.452-1.986L11.94 4.41zm.557 10.6v3.972l4.603-2.626v-3.972l-4.603 2.627zm3.453-7.366v3.972l-3.454 1.986V9.63l3.454-1.986zm-8.312 3.972l3.453 1.986V9.63L7.638 7.644v3.972zm0 5.38l3.453 1.986V15.01l-3.453-1.986v3.972z",
    fill: "white"
  }));
};

SvgBnt.displayName = "SvgBnt";
SvgBnt.defaultProps = {
  size: 24,
  color: "#000D2B"
};

function _extends$fQ() { _extends$fQ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fQ.apply(this, arguments); }
var Svg$fM = styled("svg")({
  flex: "none"
}, space, color);

var SvgBnty = function SvgBnty(props) {
  return createElement(Svg$fM, _extends$fQ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.896 14.55a1.1 1.1 0 01.385 1.607c-.32.567-1.057.756-1.635.44a1.224 1.224 0 01-.61-.976h-2.951l-1.412 2.393c0 .032-.032.063-.063.095.32.189.545.567.545.976 0 .63-.545 1.165-1.187 1.165a1.173 1.173 0 01-1.187-1.165c0-.41.225-.756.545-.976 0-.032-.032-.063-.064-.095l-1.41-2.392H6.9a1.253 1.253 0 01-.61.975c-.577.315-1.314.127-1.636-.44a1.168 1.168 0 01.45-1.606c.385-.22.801-.22 1.155-.032.031-.031.031-.094.063-.126L7.766 12 6.355 9.607a.237.237 0 01-.065-.126c-.352.157-.801.189-1.155-.032a1.169 1.169 0 01-.448-1.606c.32-.566 1.058-.755 1.635-.44.385.22.578.598.61.976h2.983l1.412-2.393c0-.032.032-.063.063-.095a1.147 1.147 0 01-.545-.976c0-.63.545-1.165 1.187-1.165s1.187.504 1.187 1.165c0 .41-.225.756-.545.976 0 .032.032.063.064.095l1.41 2.392H17.1c.032-.409.256-.755.61-.975.577-.315 1.314-.126 1.636.44a1.168 1.168 0 01-.45 1.606c-.384.22-.802.22-1.155.032-.031.031-.031.094-.064.126L16.266 12l1.412 2.393a.237.237 0 01.064.126c.352-.157.802-.189 1.155.032v-.001zm-5.356-3.338c0-.66-.545-1.196-1.219-1.196h-1.54a.287.287 0 00-.289.284v3.4c0 .158.129.284.29.284h1.539c.674 0 1.219-.536 1.219-1.197 0-.283-.096-.567-.289-.756.16-.252.289-.504.289-.819z",
    fill: "white"
  }));
};

SvgBnty.displayName = "SvgBnty";
SvgBnty.defaultProps = {
  size: 24,
  color: "#FD7A3D"
};

function _extends$fR() { _extends$fR = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fR.apply(this, arguments); }
var Svg$fN = styled("svg")({
  flex: "none"
}, space, color);

var SvgBos = function SvgBos(props) {
  return createElement(Svg$fN, _extends$fR({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.824 14.213v-1.438h2.216c1.477 0 2.216-.37 2.216-1.107V7.795c0-.737-.739-1.106-2.216-1.106H9.495v2.323H7.5V5.25h5.318c2.955 0 4.432.811 4.432 2.434v4.095c0 1.623-1.477 2.434-4.432 2.434h-1.994zm4.432.885h1.994v1.217c0 1.623-1.477 2.435-4.432 2.435H7.5v-8.631h5.318c.312 0 .607.009.887.027v1.44a6.843 6.843 0 00-.665-.03H9.495v5.755h3.545c1.478 0 2.217-.369 2.217-1.106v-1.107h-.001z",
    fill: "white"
  }));
};

SvgBos.displayName = "SvgBos";
SvgBos.defaultProps = {
  size: 24,
  color: "#00A8D6"
};

function _extends$fS() { _extends$fS = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fS.apply(this, arguments); }
var Svg$fO = styled("svg")({
  flex: "none"
}, space, color);

var SvgBpt = function SvgBpt(props) {
  return createElement(Svg$fO, _extends$fS({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M19.413 15.553a5.161 5.161 0 01-.238.435c-.058.103-.113.207-.174.305-.027.046-.05.093-.078.137h-.009a8.172 8.172 0 01-11.469 2.435c-.037-.026-.07-.053-.106-.078a5.29 5.29 0 01-.412-.296c-.21-.16-.41-.33-.6-.513a7.382 7.382 0 01-.266-.26c-.093-.095-.174-.187-.269-.294a9.369 9.369 0 01-.277-.327 7.338 7.338 0 01-.205-.274 8.57 8.57 0 01-.265-.387 7.522 7.522 0 01-.158-.26 7.114 7.114 0 01-.366-.697c-.07-.149-.135-.3-.197-.452-.038-.095-.071-.19-.105-.286-.052-.15-.103-.307-.147-.454-.03-.107-.049-.208-.082-.318a7.794 7.794 0 01-.1-.442c-.015-.112-.04-.231-.05-.337a9.048 9.048 0 01-.055-.443c-.01-.116-.023-.232-.023-.35-.012-.146-.012-.294-.012-.442 0-.113.009-.225.009-.338a8.284 8.284 0 01.658-2.88c.017-.042.037-.092.048-.126a.255.255 0 01.06-.099c.077-.166.162-.331.252-.495.043-.091.095-.181.148-.27.038-.064.063-.125.113-.195.048-.071.104-.145.154-.218a7.458 7.458 0 01.5-.667c.178-.211.367-.414.566-.606.074-.07.146-.139.221-.205a12.222 12.222 0 01.623-.5c.142-.098.286-.197.431-.295.078-.05.156-.1.236-.147a7.953 7.953 0 011.476-.69 7.92 7.92 0 011.134-.313 9.1 9.1 0 01.762-.116c.167-.018.335-.03.504-.038.092-.007.185-.007.278-.007a7.92 7.92 0 012.401.339c.158.045.306.094.453.148.11.04.222.082.33.128.083.034.167.06.25.098v.011a8.172 8.172 0 014.103 10.99c-.015.032-.033.058-.047.089zM8.871 18.928v-.002a7.61 7.61 0 009.588-2.95c.054-.09.105-.183.156-.274.07-.135.15-.265.218-.412a7.565 7.565 0 00-3.966-10.322 5.804 5.804 0 00-.295-.116 8.494 8.494 0 00-.718-.22 7.423 7.423 0 00-1.195-.203l-.253-.018a10.525 10.525 0 00-.485-.011h-.253a8.056 8.056 0 00-.746.068 6.84 6.84 0 00-.742.143c-.247.06-.49.132-.728.218a5.794 5.794 0 00-.306.114c-.219.09-.434.188-.645.295-.214.11-.423.231-.627.36-.135.085-.269.176-.4.274a3.61 3.61 0 00-.2.147c-.197.156-.386.321-.567.495a7.963 7.963 0 00-.801.911c-.156.21-.302.426-.437.649-.049.08-.093.162-.139.243a7.648 7.648 0 00-.596 1.393 5.94 5.94 0 00-.2.743c-.032.157-.059.317-.08.476-.013.091-.026.184-.034.276-.015.148-.032.295-.032.443-.009.1-.009.202-.009.303 0 .14.012.28.012.42.013.244.038.487.074.728.02.101.036.197.054.306.027.139.06.277.093.416a7.153 7.153 0 00.214.707c.031.086.06.173.095.258.056.142.117.28.175.425.038.08.075.162.117.242.073.134.144.267.22.398.051.081.098.16.149.24.076.121.16.239.244.357.062.086.107.156.189.254.081.097.173.203.252.294.08.092.168.191.247.274.08.082.142.14.245.238a6.265 6.265 0 00.55.473 7.6 7.6 0 001.562.947zm3.114-.619a6.314 6.314 0 116.309-6.317 6.321 6.321 0 01-6.309 6.317zm0-10.559a4.245 4.245 0 102.997 1.244 4.25 4.25 0 00-2.997-1.247v.003z",
    fill: "white"
  }));
};

SvgBpt.displayName = "SvgBpt";
SvgBpt.defaultProps = {
  size: 24,
  color: "#0F63D8"
};

function _extends$fT() { _extends$fT = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fT.apply(this, arguments); }
var Svg$fP = styled("svg")({
  flex: "none"
}, space, color);

var SvgBq = function SvgBq(props) {
  return createElement(Svg$fP, _extends$fT({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.471 12.716a2.887 2.887 0 002.902 2.886c1.592-.01 2.885-1.287 2.886-2.85a2.875 2.875 0 00-2.894-2.902c-1.599.002-2.894 1.284-2.894 2.866zm.003 3.104v.955H6V6c.42.008.773.157 1.058.454.272.285.407.626.406 1.022-.004.71-.002 1.42-.002 2.164 1.03-.86 2.177-1.284 3.513-1.08 1.324.203 2.34.869 3.033 2.008 1.046 1.722.707 3.92-.809 5.288-1.478 1.335-3.934 1.542-5.724-.036zm4.77.936c.058-.035.089-.056.121-.073a4.285 4.285 0 001.238-.916.396.396 0 01.285-.135c1.252-.072 2.381-1.08 2.593-2.313.28-1.62-.705-3.05-2.332-3.36a.962.962 0 01-.578-.315c-.3-.331-.664-.59-1.052-.813-.033-.018-.065-.039-.119-.072.739-.202 1.458-.25 2.187-.085.725.165 1.35.52 1.935 1.006v-.957H18V19.5a1.47 1.47 0 01-1.05-.451 1.425 1.425 0 01-.415-1.032v-2.153c-1.273 1.067-2.682 1.387-4.291.892z",
    fill: "white"
  }));
};

SvgBq.displayName = "SvgBq";
SvgBq.defaultProps = {
  size: 24,
  color: "#1D1D1D"
};

function _extends$fU() { _extends$fU = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fU.apply(this, arguments); }
var Svg$fQ = styled("svg")({
  flex: "none"
}, space, color);

var SvgBrd = function SvgBrd(props) {
  return createElement(Svg$fQ, _extends$fU({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M6 6.78c0-.431.354-.78.79-.78h5.692c3.357 0 4.54.396 5.357 1.2a2.573 2.573 0 01.735 1.955c0 1.389-.748 2.33-2.766 2.743 1.949.34 2.938 1.133 2.938 2.726a2.705 2.705 0 01-.765 2.021c-.799.788-2.104 1.355-5.616 1.355H6.79a.785.785 0 01-.79-.78V6.78zm4.32 4.47c0-.287.237-.519.528-.519h1.832c1.046 0 1.828-.051 2.19-.426a.885.885 0 00.243-.668.844.844 0 00-.226-.657c-.367-.361-1.149-.425-2.207-.425H9.27v6.924h3.375c1.149 0 2-.085 2.398-.481a.915.915 0 00.26-.703.967.967 0 00-.26-.72c-.402-.395-1.253-.425-2.398-.425H10.86a.533.533 0 01-.503-.33.515.515 0 01-.037-.207v-1.362z",
    fill: "white"
  }));
};

SvgBrd.displayName = "SvgBrd";
SvgBrd.defaultProps = {
  size: 24,
  color: "#FE5D86"
};

function _extends$fV() { _extends$fV = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fV.apply(this, arguments); }
var Svg$fR = styled("svg")({
  flex: "none"
}, space, color);

var SvgBtc = function SvgBtc(props) {
  return createElement(Svg$fR, _extends$fV({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M17.058 10.387c.227-1.587-.928-2.439-2.507-3.008l.512-2.147-1.251-.326-.499 2.091a50.28 50.28 0 00-1.002-.247l.503-2.105-1.25-.326-.514 2.147c-.272-.065-.539-.129-.798-.196l.001-.007-1.725-.45-.332 1.397s.928.222.907.236c.507.132.599.482.584.76L8.283 14.09c-.062.16-.219.402-.573.31.013.02-.909-.236-.909-.236L6.18 15.66l1.627.424c.303.08.6.163.893.24l-.518 2.173 1.25.326.511-2.149c.342.097.673.186.998.27l-.511 2.139 1.25.326.518-2.168c2.133.422 3.736.251 4.412-1.765.544-1.624-.027-2.56-1.15-3.17.818-.198 1.433-.76 1.598-1.92zm-2.857 4.188c-.388 1.624-3.003.746-3.851.526l.687-2.878c.847.221 3.567.66 3.163 2.352zm.386-4.212c-.353 1.477-2.53.726-3.236.543l.623-2.61c.706.183 2.98.526 2.613 2.067z",
    fill: "white"
  }));
};

SvgBtc.displayName = "SvgBtc";
SvgBtc.defaultProps = {
  size: 24,
  color: "#FF9900"
};

function _extends$fW() { _extends$fW = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fW.apply(this, arguments); }
var Svg$fS = styled("svg")({
  flex: "none"
}, space, color);

var SvgBtcd = function SvgBtcd(props) {
  return createElement(Svg$fS, _extends$fW({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.809 14.517c3.81-1.175 2.45-5.125 0-5.275.622 0 1.13-1.783 1.13-3.992 5.983.425 8.793 10.283-.18 13.367.058-.8-.27-3.034-.95-4.1zM4.5 13.35v-4.1h.008c2.163-.008 3.908-1.8 3.901-3.992h4.17c0 4.475-3.613 8.092-8.079 8.092zm5.465-.742c2.475 2.034 2.615 5.459 2.615 6.142H8.409c0-2.267-1.475-4.1-3.302-4.1 3.097-.5 3.728-1.025 4.858-2.042z",
    fill: "white"
  }));
};

SvgBtcd.displayName = "SvgBtcd";
SvgBtcd.defaultProps = {
  size: 24,
  color: "#FF6600"
};

function _extends$fX() { _extends$fX = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fX.apply(this, arguments); }
var Svg$fT = styled("svg")({
  flex: "none"
}, space, color);

var SvgBtcp = function SvgBtcp(props) {
  return createElement(Svg$fT, _extends$fX({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M15.161 5.4l-.525 2.131c1.623.567 2.818 1.418 2.585 2.993-.068.479-.233.958-.573 1.32-.292.313-.748.479-1.137.606a4.841 4.841 0 01-1.448.254c-.33 0-.65-.01-.98-.039-.535-.04-1.08-.088-1.604-.205-.164-.04-.32-.069-.466-.108l-.71 2.865-.417 1.564-.525 2.142-1.292-.322.535-2.162c-.301-.078-.613-.166-.923-.244L6 15.775l.641-1.478s.953.255.942.236c.37.088.525-.157.593-.313l.729-2.934.34-1.359.389-1.564c.018-.274-.078-.626-.603-.753.02-.01-.942-.235-.942-.235l.34-1.388 1.777.45c.273.067.545.126.827.194l.524-2.131 1.292.322-.514 2.093c.34.079.69.157 1.03.245l.504-2.083 1.292.323zm-.106 7.725c.359-.06.796-.206 1.107-.333.01-.01.03-.01.039-.02.67.597.99 1.565.553 2.807-.69 2.014-2.35 2.18-4.546 1.76l-.534 2.161-1.283-.323.495-2.063.02-.068.389-1.585c1.146.255 2.691.421 2.982-.772.156-.636-.145-1.095-.631-1.428l.505-.03c.36-.018.544-.047.904-.107v.001zm-.38-2.621c.38-1.535-1.972-1.868-2.7-2.063l-.642 2.6c.73.186 2.983.93 3.342-.537z",
    fill: "#FEFEFE"
  }));
};

SvgBtcp.displayName = "SvgBtcp";
SvgBtcp.defaultProps = {
  size: 24,
  color: "#272D63"
};

function _extends$fY() { _extends$fY = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fY.apply(this, arguments); }
var Svg$fU = styled("svg")({
  flex: "none"
}, space, color);

var SvgBtcz = function SvgBtcz(props) {
  return createElement(Svg$fU, _extends$fY({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 20.25c-4.55 0-8.25-3.7-8.25-8.25S7.453 3.75 12 3.75c4.547 0 8.25 3.703 8.25 8.25 0 .752-.102 1.5-.304 2.225a.666.666 0 01-1.282-.359A6.926 6.926 0 0012 5.082 6.926 6.926 0 005.082 12a6.926 6.926 0 009.023 6.592.666.666 0 11.403 1.269c-.81.258-1.657.39-2.508.389zm2.531-8.27c.285.239.477.584.576 1.035.065.26.06.531-.012.789a1.594 1.594 0 01-.37.637 2.355 2.355 0 01-.651.478c-.257.133-.317.175-.623.243l-.191.046a.222.222 0 00-.164.264l.112.504a.224.224 0 01-.09.23.222.222 0 01-.08.035l-.507.112a.223.223 0 01-.23-.09.223.223 0 01-.035-.079l-.11-.5a.224.224 0 00-.179-.17.22.22 0 00-.087.001l-1.374.305a.542.542 0 01-.645-.413L8.633 9.813a.541.541 0 01.413-.645l1.375-.304a.222.222 0 00.168-.265l-.112-.504a.224.224 0 01.09-.23.221.221 0 01.08-.034l.508-.113a.222.222 0 01.264.169l.111.501a.222.222 0 00.265.168l.42-.091c.218-.051.445-.048.66.01.206.057.398.153.565.284.34.27.577.65.67 1.075.071.315.057.643-.04.953-.1.32-.302.6-.575.794.38.019.742.158 1.036.4zm-4.072-1.197l.073.32a.541.541 0 00.645.412l.98-.218a.687.687 0 00.413-.268c.106-.14.133-.33.08-.567-.049-.22-.144-.375-.285-.468a.574.574 0 00-.459-.086l-1.035.229a.542.542 0 00-.412.646zm2.931 2.825h.002a.713.713 0 00.083-.559.817.817 0 00-.295-.485.573.573 0 00-.498-.117l-1.242.275a.542.542 0 00-.412.645l.087.395a.543.543 0 00.646.413l1.177-.26a.688.688 0 00.452-.307zm2.474 4.037l1.15-1.374a.208.208 0 00-.048-.309.208.208 0 00-.112-.032h-.774a.208.208 0 01-.208-.208v-.162c0-.115.092-.208.208-.208h1.769a.208.208 0 01.207.208v.213a.208.208 0 01-.045.13l-1.1 1.38a.207.207 0 00.052.307c.033.02.072.031.11.031h.789c.115 0 .209.093.209.208v.161a.207.207 0 01-.209.208h-1.839a.208.208 0 01-.208-.208v-.21a.21.21 0 01.049-.135z",
    fill: "white"
  }));
};

SvgBtcz.displayName = "SvgBtcz";
SvgBtcz.defaultProps = {
  size: 24,
  color: "#F8C24A"
};

function _extends$fZ() { _extends$fZ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$fZ.apply(this, arguments); }
var Svg$fV = styled("svg")({
  flex: "none"
}, space, color);

var SvgBtg = function SvgBtg(props) {
  return createElement(Svg$fV, _extends$fZ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 20.25a8.25 8.25 0 110-16.5 8.25 8.25 0 010 16.5zm-.741-15.195c.002.656.002 1.313.002 1.969l.982.001c.002-.673.004-1.346 0-2.019-.328.011-.657.027-.984.049zm2.364 2c.864.117 1.793.248 2.48.831 1.051.943.915 2.922-.371 3.606.77.18 1.533.692 1.723 1.501.247 1.06.05 2.332-.802 3.08-.844.693-1.987.785-3.032.884.004.614.003 1.227.001 1.842 2.198-.536 4.095-2.17 4.901-4.286.765-1.951.585-4.247-.496-6.045-.955-1.62-2.578-2.812-4.4-3.268-.005.619-.005 1.237-.003 1.855h-.001zm-6.56-.026c.953.045 1.906.036 2.858.035 0-.58.002-1.159-.003-1.737-1.066.345-2.016.966-2.855 1.702zM5.953 8.521c-1.12 1.905-1.246 4.35-.312 6.354.806 1.797 2.406 3.195 4.279 3.798.003-.578.002-1.157.002-1.734-.956-.01-1.915.025-2.869-.026.01-.533.135-1.053.318-1.554.468-.01.956.072 1.408-.08.264-.222.189-.589.202-.893-.013-1.735.008-3.471-.008-5.207.017-.28-.159-.582-.45-.637-.48-.095-.973-.058-1.458-.061-.058-.39-.064-.785-.07-1.18a.29.29 0 00-.053-.232c-.275.521-.712.933-.989 1.452zm5.348.076v2.56c.855-.016 1.804.079 2.552-.418.621-.405.582-1.435-.06-1.8-.748-.444-1.662-.318-2.492-.342zm0 3.936v2.839c1.055-.085 2.24.092 3.16-.544.656-.436.577-1.515-.1-1.892-.92-.55-2.038-.375-3.06-.403zm-.039 4.444l-.003 1.97c.342.023.684.036 1.026.045.002-.671.001-1.343.001-2.015h-1.024z",
    fill: "white"
  }));
};

SvgBtg.displayName = "SvgBtg";
SvgBtg.defaultProps = {
  size: 24,
  color: "#EBA809"
};

function _extends$f_() { _extends$f_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f_.apply(this, arguments); }
var Svg$fW = styled("svg")({
  flex: "none"
}, space, color);

var SvgBtm = function SvgBtm(props) {
  return createElement(Svg$fW, _extends$f_({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.12 11.532l-1.308 2.774.608 2.274 1.55.414 1.923 1.925-.579.581-4.584-1.23-1.23-4.584.923-.921 4.006-4.007-1.309 2.774-1.308 2.774 4.081-4.082-1.464-1.466-1.309 2.774zm2.104 1.575l4.082 4.082 2.274-.61.415-1.549 1.924-1.923.581.579-1.229 4.585-4.585 1.229-4.927-4.929 1.465-1.464zm3.552-2.214L9.694 6.811l-2.275.61-.414 1.547-1.924 1.925-.581-.579 1.23-4.585L10.314 4.5l.921.923 4.005 4.005-1.464 1.465zm1.254-3.888l-1.923-1.924.579-.581 4.585 1.229 1.229 4.585-4.929 4.927-1.464-1.465 4.083-4.083-.61-2.274-1.55-.414z",
    fill: "white"
  }));
};

SvgBtm.displayName = "SvgBtm";
SvgBtm.defaultProps = {
  size: 24,
  color: "#504C4C"
};

function _extends$f$() { _extends$f$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f$.apply(this, arguments); }
var Svg$fX = styled("svg")({
  flex: "none"
}, space, color);

var SvgBts = function SvgBts(props) {
  return createElement(Svg$fX, _extends$f$({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.25 9.902l3.158 3.258c-.13.194-.217.413-.258.642h-2.9v-3.9zm0-.877V3.75l4.204 3.854v4.851a1.597 1.597 0 00-.622.267L8.25 9.024zm7.896 8.147l-2.044-2.107c.13-.195.217-.414.258-.643h2.89a4.707 4.707 0 01-1.104 2.75zm-.425.439a4.416 4.416 0 01-2.666 1.139v-2.981c.224-.043.437-.134.623-.267l2.043 2.108zM8.26 14.42h2.89c.041.236.131.453.258.643l-2.043 2.108a4.707 4.707 0 01-1.105-2.75zm8.99-.619h-2.89a1.704 1.704 0 00-.258-.643l2.044-2.107a4.707 4.707 0 011.104 2.75zm-7.461 3.809l2.043-2.109c.184.13.395.223.622.267v2.981a4.415 4.415 0 01-2.665-1.14zm5.933-6.998l-2.044 2.108a1.596 1.596 0 00-.623-.266V9.474c.992.069 1.93.47 2.666 1.14z",
    fill: "white"
  }));
};

SvgBts.displayName = "SvgBts";
SvgBts.defaultProps = {
  size: 24,
  color: "#35BAEB"
};

function _extends$g0() { _extends$g0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g0.apply(this, arguments); }
var Svg$fY = styled("svg")({
  flex: "none"
}, space, color);

var SvgBtx = function SvgBtx(props) {
  return createElement(Svg$fY, _extends$g0({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.974 10.515c-.17 1.151-.808 1.708-1.655 1.903 1.162.606 1.755 1.535 1.19 3.145-.699 1.999-2.361 2.167-4.571 1.75l-.538 2.15-1.296-.324.53-2.12c-.346-.086-.69-.176-1.034-.27l-.531 2.132-1.295-.322.537-2.155c-.303-.077-.61-.16-.925-.238l-1.687-.42.644-1.486s.955.255.942.236c.367.09.53-.149.595-.308l.847-3.399.137.034a1.064 1.064 0 00-.135-.043l.605-2.426c.016-.276-.079-.622-.604-.754.02-.014-.942-.234-.942-.234l.345-1.385 1.788.447-.002.007c.269.066.546.13.829.194l.531-2.129 1.296.322-.52 2.088c.347.08.697.16 1.038.245l.517-2.074 1.296.323-.53 2.13c1.636.564 2.833 1.409 2.598 2.981zm-2.963 4.153c.42-1.678-2.398-2.112-3.277-2.332l-.712 2.854c.88.218 3.59 1.089 3.99-.521zm.402-4.176c.38-1.528-1.976-1.868-2.708-2.05l-.645 2.588c.731.183 2.987.927 3.353-.538zm3.772 5.721a.482.482 0 00-.357.096.565.565 0 00-.187.324.738.738 0 00-.015.213c.006.082.032.16.076.23a.703.703 0 00.215.212c.097.065.232.117.405.157.093.023.189.033.287.032.099 0 .19-.015.274-.047a.545.545 0 00.353-.406.517.517 0 00-.053-.393.653.653 0 00-.34-.266l.116-.5c.285.115.484.28.6.492.115.213.139.466.072.758a1.191 1.191 0 01-.2.45 1.027 1.027 0 01-.744.415 1.631 1.631 0 01-.943-.215 1.124 1.124 0 01-.34-.3 1.011 1.011 0 01-.178-.409c-.03-.17-.024-.343.019-.51.028-.127.075-.25.137-.363a.993.993 0 01.224-.281.822.822 0 01.306-.167.895.895 0 01.389-.022l-.116.5zm2.02-1.584a1.268 1.268 0 01-.202.464 1.071 1.071 0 01-.33.302 1.088 1.088 0 01-.43.137 1.499 1.499 0 01-.5-.035 1.474 1.474 0 01-.46-.187 1.06 1.06 0 01-.49-.727 1.269 1.269 0 01.022-.505c.035-.167.104-.325.201-.465.094-.127.203-.229.331-.302.132-.075.278-.121.43-.136.157-.018.322-.007.494.033.165.036.322.1.465.188.135.085.243.189.326.311.082.122.137.261.165.416.026.168.019.34-.023.506zm-1.969-2.099l.109-.468.438.1.002-.008a.52.52 0 01-.16-.128.856.856 0 01-.195-.416.612.612 0 01.008-.234c.014-.063.033-.125.057-.185l.482.11-.04.105a.925.925 0 00-.031.106.563.563 0 00.099.48c.058.075.13.139.213.187.09.055.197.097.323.126l1.078.25-.116.499-2.267-.524zm1.71-1.642a.89.89 0 00.263.022.647.647 0 00.24-.063.553.553 0 00.191-.154.64.64 0 00.117-.259.617.617 0 00-.013-.375.573.573 0 00-.236-.265l.109-.473a.967.967 0 01.566.84c.008.12-.003.24-.03.364-.042.178-.108.33-.198.454a1.005 1.005 0 01-.753.42 1.572 1.572 0 01-.939-.222 1.204 1.204 0 01-.332-.308 1.073 1.073 0 01-.172-.883 1.043 1.043 0 01.6-.74 1.329 1.329 0 01.971-.025l-.385 1.668.001-.001zm-.136 3.65a.589.589 0 00-.141-.55.822.822 0 00-.23-.175 1.177 1.177 0 00-.581-.135.795.795 0 00-.283.057.588.588 0 00-.365.433.588.588 0 00.138.55c.062.07.139.127.23.175.179.093.379.14.58.135a.826.826 0 00.284-.058.59.59 0 00.368-.432zm.076-4.892a.827.827 0 00-.24-.003.58.58 0 00-.389.216.616.616 0 00-.113.468.58.58 0 00.085.213c.093.135.23.231.388.273l.27-1.167z",
    fill: "white"
  }));
};

SvgBtx.displayName = "SvgBtx";
SvgBtx.defaultProps = {
  size: 24,
  color: "#FB2EA3"
};

function _extends$g1() { _extends$g1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g1.apply(this, arguments); }
var Svg$fZ = styled("svg")({
  flex: "none"
}, space, color);

var SvgBurst = function SvgBurst(props) {
  return createElement(Svg$fZ, _extends$g1({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.78 14.472L3 12.578h3.866l.383-1.833 3.433.003L11.54 6h3.454c2.339 0 3.287.941 2.937 2.884l-.075.416c-.205 1.132-.722 1.884-1.61 2.318.88.45 1.175 1.301.954 2.528l-.171.95C16.686 16.99 15.293 18 13.029 18H9.373l.947-5.245H9.172l-.393 1.717zm3.799-2.06l-.708 3.922h1.459c.865 0 1.346-.384 1.51-1.29l.183-1.014c.209-1.158-.192-1.618-1.326-1.618h-1.118zm.857-4.747l-.618 3.423h1.06c.965 0 1.53-.412 1.703-1.372l.118-.65c.169-.935-.18-1.401-1.066-1.401h-1.197z",
    fill: "white"
  }));
};

SvgBurst.displayName = "SvgBurst";
SvgBurst.defaultProps = {
  size: 24,
  color: "#2D2D2D"
};

function _extends$g2() { _extends$g2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g2.apply(this, arguments); }
var Svg$f_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgCdn = function SvgCdn(props) {
  return createElement(Svg$f_, _extends$g2({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 4.5l-1.245 2.262c-.141.246-.394.224-.647.086l-.9-.455.67 3.475c.142.635-.311.635-.535.36L7.77 8.512l-.255.872c-.03.115-.159.235-.353.206l-1.988-.408.521 1.851c.113.412.2.582-.112.69l-.709.326 3.422 2.709a.43.43 0 01.156.454l-.3.958c1.18-.133 2.236-.332 3.415-.455.104-.01.278.157.277.275l-.155 3.51h.573l-.09-3.502c-.001-.118.157-.293.26-.282 1.18.123 2.236.322 3.414.454l-.3-.959a.43.43 0 01.157-.453l3.422-2.71-.709-.324c-.312-.109-.225-.279-.112-.69l.522-1.852-1.989.408c-.194.029-.323-.091-.352-.206l-.256-.872-1.572 1.716c-.224.275-.677.275-.535-.36l.671-3.475-.9.455c-.254.138-.507.16-.648-.086L12 4.5z",
    fill: "white"
  }));
};

SvgCdn.displayName = "SvgCdn";
SvgCdn.defaultProps = {
  size: 24,
  color: "#F70808"
};

function _extends$g3() { _extends$g3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g3.apply(this, arguments); }
var Svg$f$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgCdt = function SvgCdt(props) {
  return createElement(Svg$f$, _extends$g3({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M20.25 12.023a8.262 8.262 0 01-2.39 5.818 8.122 8.122 0 01-5.77 2.409v-2.102c2.961.01 5.494-2.142 5.988-5.086h-2.917c.115-.342.174-.7.175-1.062a3.585 3.585 0 00-.175-1.062h2.917c-.501-2.94-3.03-5.088-5.988-5.087V3.75c4.506.043 8.141 3.729 8.16 8.273zm-5.44 1.769h2.303c-.851 2.478-3.354 3.975-5.92 3.54-2.564-.437-4.443-2.676-4.443-5.3 0-2.623 1.879-4.862 4.444-5.298 2.565-.435 5.068 1.061 5.92 3.54h-2.305a3.54 3.54 0 00-.986-.995 3.224 3.224 0 00-4.474.995 3.283 3.283 0 00.987 4.512 3.223 3.223 0 004.473-.995z",
    fill: "white"
  }));
};

SvgCdt.displayName = "SvgCdt";
SvgCdt.defaultProps = {
  size: 24,
  color: "#272731"
};

function _extends$g4() { _extends$g4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g4.apply(this, arguments); }
var Svg$g0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCenz = function SvgCenz(props) {
  return createElement(Svg$g0, _extends$g4({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.22 13.409c-.316.272-.6.514-.88.76-.032.027-.063.076-.063.116-.005.479-.003.957-.003 1.451.72-.304 1.097-1.23.946-2.328zm-.868-2.923c.803-.479.898-.644.901-1.594 0-.075.003-.15 0-.223-.035-.873-.632-1.643-1.459-1.827a44.53 44.53 0 00-2.24-.43c-.382-.065-.773-.12-1.158-.107-.466.015-.846.259-1.196.658.849.158 1.637.321 2.43.45 1.09.177 1.922.724 2.377 1.766.176.404.232.862.345 1.307zM8.735 8.23c-.646.4-.963.943-.973 1.618a246.05 246.05 0 00-.005 5.468c.007.882.59 1.64 1.431 1.845.72.175 1.457.283 2.186.424.462.09.92.227 1.396.108.39-.097.738-.262 1.013-.647-.875-.164-1.696-.345-2.525-.468-1.42-.21-2.521-1.468-2.523-2.932-.002-1.675 0-3.348 0-5.022V8.23zm1.003-.263c-.009.185-.022.323-.022.46-.002 1.685-.003 3.37 0 5.054.002 1.107.67 1.902 1.734 2.088.768.135 1.533.285 2.299.428.053.01.107.015.161.02.364.041.377.035.379-.33.004-.559-.015-1.117.011-1.675a.745.745 0 01.21-.478c.608-.543 1.24-1.058 1.863-1.583.17-.142.344-.24.572-.13.24.117.303.318.3.57-.01.633.004 1.267-.015 1.899-.037 1.141-.865 2.265-1.928 2.625a.703.703 0 00-.42.352c-.655 1.163-1.777 1.611-2.979 1.452-.985-.131-1.963-.339-2.937-.547-1.254-.269-2.18-1.436-2.2-2.832-.027-1.88-.018-3.76.014-5.639.02-1.174.893-2.265 2-2.625a.582.582 0 00.295-.243c.743-1.289 1.949-1.812 3.382-1.49.795.177 1.604.294 2.403.457 1.42.29 2.367 1.46 2.386 2.935.006.42.009.839-.015 1.257-.007.132-.065.302-.16.385-.68.6-1.368 1.191-2.074 1.76a.52.52 0 01-.474.042c-.12-.064-.22-.274-.228-.425-.03-.5.026-1.008-.022-1.505-.098-.997-.777-1.655-1.8-1.826-.813-.135-1.624-.281-2.437-.42-.086-.015-.175-.022-.298-.036z",
    fill: "white"
  }));
};

SvgCenz.displayName = "SvgCenz";
SvgCenz.defaultProps = {
  size: 24,
  color: "#3089F2"
};

function _extends$g5() { _extends$g5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g5.apply(this, arguments); }
var Svg$g1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgChat$1 = function SvgChat(props) {
  return createElement(Svg$g1, _extends$g5({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.21 17.494a8.595 8.595 0 001.563-.255c.632.193 1.3.236 1.952.127a.474.474 0 01.078-.006c.232 0 .537.135.982.42v-.469c0-.165.09-.316.233-.398.194-.11.374-.235.538-.374.648-.549 1.014-1.281 1.014-2.057 0-.26-.041-.512-.12-.754.197-.365.355-.75.471-1.147.376.563.577 1.224.579 1.902 0 1.053-.49 2.036-1.339 2.754-.141.12-.29.23-.446.332v1.096a.466.466 0 01-.742.37 11.257 11.257 0 00-.9-.608c-.088-.053-.18-.1-.276-.14a5.264 5.264 0 01-.779.057 4.935 4.935 0 01-2.807-.85h-.001zm-5.6-2.192c-1.338-1.134-2.11-2.68-2.11-4.337 0-3.385 3.194-6.09 7.093-6.09 3.9 0 7.093 2.705 7.093 6.09 0 3.386-3.194 6.09-7.093 6.09-.438 0-.872-.033-1.296-.1-.184.043-.918.48-1.977 1.252-.383.28-.926.01-.926-.462v-1.869a6.95 6.95 0 01-.784-.574zm3.712.5c.033 0 .066.002.098.007a7.06 7.06 0 001.173.098c3.294 0 5.93-2.234 5.93-4.942 0-2.707-2.636-4.941-5.93-4.941-3.293 0-5.93 2.234-5.93 4.941 0 1.31.615 2.543 1.704 3.465.274.231.575.441.897.624.181.102.293.293.293.498v1.078c.837-.562 1.387-.828 1.765-.828zM8.57 12.115a.925.925 0 01-.93-.92c0-.508.416-.92.93-.92.513 0 .93.412.93.92s-.417.92-.93.92zm3.023 0a.925.925 0 01-.93-.92c0-.508.416-.92.93-.92s.93.412.93.92-.416.92-.93.92zm3.023 0a.925.925 0 01-.93-.92c0-.508.416-.92.93-.92s.93.412.93.92-.416.92-.93.92z",
    fill: "white"
  }));
};

SvgChat$1.displayName = "SvgChat";
SvgChat$1.defaultProps = {
  size: 24,
  color: "#1C98F7"
};

function _extends$g6() { _extends$g6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g6.apply(this, arguments); }
var Svg$g2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgChips = function SvgChips(props) {
  return createElement(Svg$g2, _extends$g6({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.161 19.056l1.902-2.458c.712.111 1.413.048 2.083-.243.243-.105.46-.268.688-.406.032-.02.062-.045.087-.064l2.303 2.278c-.19.128-.38.266-.582.384-.78.453-1.641.75-2.534.878-.53.08-1.062.088-1.592.06a8.941 8.941 0 01-2.355-.429zm-.724-.282a7.484 7.484 0 01-.747-.386 6.714 6.714 0 01-2.783-3.112 7.481 7.481 0 01-.59-2.145A9.241 9.241 0 015.27 11.4c.093-1.481.543-2.842 1.452-4.04.838-1.106 1.939-1.862 3.242-2.348a7.246 7.246 0 011.923-.442c.498-.043 1-.086 1.497-.064.308.013.61.043.908.09l-1.929 2.8a3.967 3.967 0 00-1.807.613c-.998.633-1.595 1.545-1.875 2.67a5.43 5.43 0 00-.162 1.45c.006.257.028.508.066.753l-.23.335c-.187.27.042.627.373.584l.084-.01c.193.546.487 1.057.892 1.525.252.29.534.533.843.728l-1.083 2.618a.367.367 0 00-.027.113v-.001zm5.582-14.023c.668.177 1.3.467 1.872.855.103.07.198.154.297.231.018.015.038.027.062.044-.032.036-.05.06-.071.08-.683.674-1.368 1.346-2.05 2.021-.074.075-.121.087-.212.023a3.21 3.21 0 00-.901-.447l.962-2.531.026-.066a.366.366 0 00.015-.21zm-2.778 8.21l-3.565.466 5.931-8.612.033.015-2.291 6.023 4.181-.66-6.674 8.633-.032-.023 2.417-5.842z",
    fill: "white"
  }));
};

SvgChips.displayName = "SvgChips";
SvgChips.defaultProps = {
  size: 24,
  color: "#598182"
};

function _extends$g7() { _extends$g7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g7.apply(this, arguments); }
var Svg$g3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCix = function SvgCix(props) {
  return createElement(Svg$g3, _extends$g7({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.501 14.147l-.794-.497 1.732-.02.037-.02v.019l.715-.008-1.214 1.976-.109-.952-5.523 3.047-2.095-2.797-5.872 3.095v-.705l6.054-3.19 2.095 2.796 4.975-2.744zm-7.584-.678l-2.295 1.208V6.483h2.295v6.986zm6.49.36l-2.295 1.275V6.483h2.295v7.346z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.5,
    d: "M14.162 15.632l-.493.273-1.803-2.407V7.42h2.296v8.211zm-6.49-.455l-2.295 1.209V8.484h2.295v6.693z",
    fill: "white"
  }));
};

SvgCix.displayName = "SvgCix";
SvgCix.defaultProps = {
  size: 24,
  color: "#0576B4"
};

function _extends$g8() { _extends$g8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g8.apply(this, arguments); }
var Svg$g4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgClam = function SvgClam(props) {
  return createElement(Svg$g4, _extends$g8({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M13.357 5.902v-.066c.133-.057.397-.11.85.012.518.14.918.66 1.102.94l-.002.18c-.008 1.005-.328 3.486-.882 5.345-.483 1.626-1.539 3.788-1.753 4.22a2.674 2.674 0 00-.32-.05c.09-.549.479-2.99.724-5.216.26-2.36.28-4.702.28-5.364h.002zm2.175 1.069v-.009c.195-.004.627.031 1.12.348.476.307.723.89.825 1.204l-.048.185c-.116.452-.977 2.779-1.903 4.533-.786 1.487-2.041 3.131-2.315 3.484a2.449 2.449 0 00-.319-.125c.256-.515 1.273-2.619 1.748-4.215.56-1.88.882-4.39.892-5.405zm.193 6.363c.882-1.67 1.772-4.014 1.92-4.573.194.07.61.257.882.628.233.316.308.744.333 1.014l-.09.211c-.176.407-1.245 2.284-2.323 3.621-.933 1.158-2.335 2.532-2.671 2.858a2.375 2.375 0 00-.366-.27c.316-.409 1.54-2.023 2.315-3.49zm-7.471-6.19l-.027-.205c.123-.266.393-.71.91-.947.562-.256 1-.186 1.195-.13l.002.045c.014.446.132 2.643.42 5.236.264 2.372.689 4.895.77 5.374a2.59 2.59 0 00-.33.083c-.209-.443-1.137-2.453-1.761-4.467-.696-2.246-1.095-4.33-1.18-4.988zM10.557 5.9l-.003-.102c.205-.185.684-.547 1.282-.547s1.086.362 1.297.548v.104c0 .66-.02 2.991-.28 5.34a114.91 114.91 0 01-.726 5.229l-.058-.002c-.108 0-.215.006-.323.017-.079-.462-.506-2.99-.77-5.367a84.074 84.074 0 01-.419-5.22zm1.512 10.79c1.213 0 1.771.736 1.94 1.017-.918.645-1.666 1.044-1.93 1.044s-.92-.33-1.953-1.076c.165-.267.722-.984 1.943-.984zm6.9-5.975c.185.12.564.443.529 1.065-.047.819-1.451 2.442-3.216 4.084a21.882 21.882 0 01-2.092 1.715 2.316 2.316 0 00-.256-.33c.342-.33 1.75-1.71 2.688-2.876 1.08-1.34 2.155-3.221 2.348-3.658zm-13.854-.16a10.417 10.417 0 01-.155-.41c-.001-.242.058-.482.172-.696.257-.465.908-.678 1.166-.747l.001.005.028.098c.188.653.625 2.184 1.779 4.396 1.03 1.975 2.149 3.34 2.462 3.705-.084.057-.164.12-.24.188a25.358 25.358 0 01-2.931-2.997c-1.112-1.344-1.88-2.535-2.282-3.541zm5.055 6.697c-.082.09-.158.187-.225.29a34.321 34.321 0 01-1.898-1.522c-2.259-1.931-3.495-3.274-3.544-4.122-.038-.648.291-1.013.45-1.15.421 1.002 1.183 2.175 2.27 3.489a25.657 25.657 0 002.947 3.014zM6.515 8.645a7.742 7.742 0 01-.069-.251c.058-.274.2-.686.55-.939.299-.217.663-.326 1.033-.308l.004.025c.084.664.486 2.766 1.186 5.025.621 2.004 1.54 4.003 1.765 4.482a2.357 2.357 0 00-.224.108c-.274-.317-1.409-1.683-2.454-3.687-1.143-2.194-1.577-3.71-1.762-4.357l-.029-.098z",
    fill: "white"
  }));
};

SvgClam.displayName = "SvgClam";
SvgClam.defaultProps = {
  size: 24,
  color: "#20C5D3"
};

function _extends$g9() { _extends$g9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g9.apply(this, arguments); }
var Svg$g5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCloak = function SvgCloak(props) {
  return createElement(Svg$g5, _extends$g9({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.002 3.75c4.55.007 8.25 3.71 8.248 8.252-.002 4.548-3.703 8.248-8.253 8.248h-.008c-4.545-.005-8.241-3.71-8.239-8.26.002-4.543 3.705-8.24 8.252-8.24zM12 4.814c-3.958 0-7.179 3.223-7.18 7.184-.001 3.958 3.216 7.18 7.171 7.182 3.962 0 7.189-3.221 7.192-7.181a7.127 7.127 0 00-2.104-5.078 7.134 7.134 0 00-5.078-2.107H12zm3.546 6.449c.254 1.289-.073 2.372-.999 3.313l-.128.128-.162-.08a4.773 4.773 0 00-.272-.123l-.367-.153.295-.265c.577-.518.884-1.194.913-2.008.03-.814-.259-1.525-.857-2.11a2.823 2.823 0 00-4.088.16 2.757 2.757 0 00-.66 2.402c.103.588.396 1.125.835 1.53l.29.27-.367.147a17.35 17.35 0 00-.29.12l-.157.066-.12-.122A3.5 3.5 0 018.39 12.3c-.148-1.834 1.041-3.45 2.828-3.84a3.598 3.598 0 014.327 2.804h.001zM7.48 15.98c-1.107-1.234-2.005-3.424-1.203-5.868a6.024 6.024 0 0111.423-.067c.71 2.079.216 4.443-1.256 6.022l-.188.2-.672-.751.148-.167c.921-1.037 1.349-2.268 1.271-3.655-.072-1.268-.576-2.372-1.498-3.28a4.954 4.954 0 00-3.5-1.432A5.024 5.024 0 008.726 8.2a4.941 4.941 0 00-1.507 2.278 4.964 4.964 0 00-.09 2.72c.187.768.555 1.48 1.073 2.077l.147.17-.687.74-.182-.205z",
    fill: "white"
  }));
};

SvgCloak.displayName = "SvgCloak";
SvgCloak.defaultProps = {
  size: 24,
  color: "#FF3A00"
};

function _extends$ga() { _extends$ga = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ga.apply(this, arguments); }
var Svg$g6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCmt = function SvgCmt(props) {
  return createElement(Svg$g6, _extends$ga({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.207 19.5c-1.74-.005-3.296-.538-4.687-1.56-.37-.271-.38-.428-.066-.766l.029-.03c.385-.417.382-.414.839-.086a6.423 6.423 0 003.617 1.235c1.385.047 2.657-.283 3.806-1.025 1.38-.89 2.32-2.129 2.714-3.71.494-1.986.127-3.825-1.175-5.441-.912-1.133-2.097-1.863-3.529-2.209a6.592 6.592 0 00-3.767.192 6.198 6.198 0 00-1.803.982c-.269.21-.37.206-.6-.05a4.282 4.282 0 01-.308-.377c-.141-.2-.122-.318.069-.47a7.729 7.729 0 013.086-1.48 7.594 7.594 0 013.108-.083c1.402.254 2.648.83 3.718 1.763.792.691 1.433 1.5 1.878 2.445.614 1.302.864 2.665.68 4.104a7.34 7.34 0 01-1.493 3.6c-.83 1.081-1.893 1.87-3.163 2.389a7.613 7.613 0 01-2.953.577zm-.477-4.787c-.05.076-.077.133-.119.177-.253.266-.563.426-.936.438-.259.007-.519-.014-.777-.008-.1-.001-.199.023-.287.072-1.195.75-2.482.859-3.838.571-.446-.095-.846-.266-1.187-.559-.256-.22-.437-.479-.459-.844-.037-.635.433-1.068.918-1.21.894-.262 1.746-.103 2.56.293.372.18.72.409 1.076.622.204.12.264.116.366-.092.461-.942.164-1.981-.963-2.365-.988-.338-1.955-.304-2.907.135-.14.065-.292.188-.456.056-.17-.139-.057-.303-.013-.448.313-1.053.63-2.104.952-3.154.07-.23.254-.349.522-.335.396.022.789.082 1.184.09.592.016 1.187.02 1.779-.008.44-.023.826-.216 1.166-.497.041-.034.124-.073.152-.055.04.027.063.1.067.155.028.455-.167.805-.529 1.078a2.44 2.44 0 01-1.449.485c-.552.012-1.105.02-1.657.022-.125.002-.19.047-.22.164-.05.195-.102.39-.158.585-.043.145.012.202.158.196.348-.012.696-.036 1.043-.034a3.184 3.184 0 012.162.83c.58.516.815 1.182.85 1.926.028.596-.086 1.167-.414 1.68-.089.141-.049.202.102.242.4.105.77.033 1.124-.164.03-.016.058-.035.088-.05.01-.004.026.001.1.006zm-3.426.17l-.012-.073c-.05-.031-.097-.07-.152-.094-.398-.176-.79-.37-1.198-.52-.416-.152-.849-.26-1.302-.155-.204.048-.408.1-.467.334-.066.259.092.42.277.561a.815.815 0 00.198.103c.7.27 1.411.277 2.125.066.183-.054.355-.148.531-.223z",
    fill: "white"
  }));
};

SvgCmt.displayName = "SvgCmt";
SvgCmt.defaultProps = {
  size: 24,
  color: "#C1A05C"
};

function _extends$gb() { _extends$gb = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gb.apply(this, arguments); }
var Svg$g7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCnd = function SvgCnd(props) {
  return createElement(Svg$g7, _extends$gb({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M14.605 8.61l2-.459.775-1.276-.765-1.255-.98-.676-2.012-.444-1.241.7-1.986-.354-2.727 1.889-.212 2.206-1.158.483.134 2.047-.808.644.807 2.304.121.241.854 2.372 1.754.622 1.3 1.323 1.496.523.677-.195 1.073-.124 1.573-.45 2.345-1.324-.613-2.424-1.181-.465-.588.672-1.654.407-2.405-.381-.776-.898.27-.878-1.137-1.8.956-1.166.102-1.984 1.37-.786.939-.375 1.274.23.423 1.05z",
    fill: "white"
  }));
};

SvgCnd.displayName = "SvgCnd";
SvgCnd.defaultProps = {
  size: 24,
  color: "#383939"
};

function _extends$gc() { _extends$gc = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gc.apply(this, arguments); }
var Svg$g8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCnx = function SvgCnx(props) {
  return createElement(Svg$g8, _extends$gc({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    opacity: 0.5,
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M4.787 12.758l-1.037.107c.555-1.553 1.652-2.795 3.293-3.726.155 1.287.765 2.351 1.83 3.194l-.975.101a4.127 4.127 0 003.415 3.634 4.562 4.562 0 01-2.24.889c.51.9 1.115 1.637 1.813 2.21a7.256 7.256 0 01-6.099-6.41zm14.426-1.515l1.037-.108c-.555 1.553-1.652 2.795-3.293 3.726-.155-1.287-.765-2.351-1.83-3.194l.975-.101a4.127 4.127 0 00-3.47-3.643 4.564 4.564 0 012.23-.88c-.516-.907-1.125-1.647-1.83-2.222a7.255 7.255 0 016.18 6.421z",
    fill: "white"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.691 19.22l.108 1.03c-1.553-.555-2.795-1.652-3.726-3.293 1.286-.155 2.35-.765 3.193-1.83l.102.982a4.127 4.127 0 003.709-3.477c.486.652.79 1.421.88 2.23.906-.516 1.647-1.125 2.222-1.83a7.255 7.255 0 01-6.487 6.188zM11.242 4.787l-.107-1.037c1.553.555 2.795 1.652 3.726 3.293-1.287.155-2.351.765-3.194 1.83l-.101-.975a4.127 4.127 0 00-3.643 3.47 4.563 4.563 0 01-.88-2.23c-.907.516-1.647 1.125-2.222 1.83a7.255 7.255 0 016.421-6.18z",
    fill: "white"
  }));
};

SvgCnx.displayName = "SvgCnx";
SvgCnx.defaultProps = {
  size: 24,
  color: "#4C6BAE"
};

function _extends$gd() { _extends$gd = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gd.apply(this, arguments); }
var Svg$g9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgCny = function SvgCny(props) {
  return createElement(Svg$g9, _extends$gd({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.878 6H17.24v1.444H6.878V6zm-1.155 4.23h12.805v1.46h-3.922v4.88c0 .375.162.562.502.562h1.629c.178 0 .326-.115.414-.331.104-.231.178-.94.208-2.108l1.391.433c-.104 1.631-.296 2.599-.563 2.903-.266.288-.65.447-1.17.447h-2.352c-1.052 0-1.57-.534-1.57-1.589V11.69h-2.19v.288c-.074 1.834-.488 3.306-1.243 4.404-.74 1.01-1.925 1.805-3.583 2.368l-.829-1.27c1.599-.55 2.665-1.242 3.227-2.051.563-.896.858-2.036.918-3.45v-.29H5.724v-1.458z",
    fill: "white"
  }));
};

SvgCny.displayName = "SvgCny";
SvgCny.defaultProps = {
  size: 24,
  color: "#FF4314"
};

function _extends$ge() { _extends$ge = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ge.apply(this, arguments); }
var Svg$ga = styled("svg")({
  flex: "none"
}, space, color);

var SvgCob = function SvgCob(props) {
  return createElement(Svg$ga, _extends$ge({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 18.75H8.598l1.704-2.968h3.396l1.704 2.968H12zM10.303 8.217h-.001L8.598 5.25h6.804l-1.704 2.967h-3.396zm7.499 7.154H17.8h.002l-1.705 2.969-1.698-2.968h.001l1.697-2.969H19.5l-1.698 2.968zM6.198 8.622l1.704-2.968L9.6 8.622l-1.698 2.967H4.5l1.698-2.967zm3.401 6.75H9.6L7.902 18.34l-1.704-2.968-1.698-2.97h3.402L9.6 15.372v.001zm8.203-6.75L19.5 11.59h-3.402l-1.699-2.968 1.698-2.968 1.705 2.968z",
    fill: "white"
  }));
};

SvgCob.displayName = "SvgCob";
SvgCob.defaultProps = {
  size: 24,
  color: "#13BF99"
};

function _extends$gf() { _extends$gf = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gf.apply(this, arguments); }
var Svg$gb = styled("svg")({
  flex: "none"
}, space, color);

var SvgCoqui = function SvgCoqui(props) {
  return createElement(Svg$gb, _extends$gf({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.365 11.036c-.59.028-1.183.063-1.773.042-.53-.02-1.057-.108-1.585-.17a.307.307 0 01-.148-.068c-.873-.716-1.732-1.45-2.485-2.297-.274-.31-.497-.645-.621-1.051-.167-.548-.87-.76-1.39-.442-.546.333-.64 1.108-.18 1.552.08.08.182.14.292.17.398.097.705.334.995.602.52.481.987 1.013 1.44 1.557.13.155.064.336-.135.358-.307.036-.617.068-.927.081-.583.024-1.168.047-1.752.041a6.424 6.424 0 01-.977-.108 1.27 1.27 0 01-.43-.17c-.434-.26-.884-.082-1.135.175a.995.995 0 00-.15 1.19c.208.358.62.566.988.488.107-.022.212-.07.306-.124.248-.141.516-.207.794-.225.445-.027.894-.052 1.34-.042.568.014 1.135.064 1.703.1.078.005.155.008.232.02.213.035.274.205.133.373-.169.2-.332.408-.516.596-.385.394-.776.783-1.173 1.165-.18.172-.404.293-.648.349-.492.118-.735.592-.665 1.072a.993.993 0 00.977.837c.447 0 .79-.239.91-.666.122-.44.404-.771.698-1.094.725-.796 1.54-1.496 2.372-2.175a.353.353 0 01.169-.075c.42-.055.841-.123 1.264-.15.476-.03.953-.037 1.43-.02.497.021.992.086 1.502.133-.009.173-.011.32-.025.465-.091.945-.332 1.85-.777 2.691-1.098 2.074-2.791 3.372-5.082 3.879a7.148 7.148 0 01-1.563.154c-.559-.001-1.117.004-1.676-.002-1.549-.017-2.966-.457-4.226-1.36-1.518-1.088-2.498-2.548-2.92-4.37a6.664 6.664 0 01-.167-1.239 32.88 32.88 0 01-.021-2.367 7.373 7.373 0 015.439-6.902 7.2 7.2 0 011.873-.254c.648-.002 1.295-.012 1.942.003 1.55.036 2.957.509 4.202 1.434 1.489 1.106 2.436 2.574 2.835 4.387.097.435.13.883.196 1.348-.323.041-.602.096-.885.11z",
    fill: "white"
  }));
};

SvgCoqui.displayName = "SvgCoqui";
SvgCoqui.defaultProps = {
  size: 24,
  color: "#71C800"
};

function _extends$gg() { _extends$gg = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gg.apply(this, arguments); }
var Svg$gc = styled("svg")({
  flex: "none"
}, space, color);

var SvgCred = function SvgCred(props) {
  return createElement(Svg$gc, _extends$gg({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.102 11.975l2.611 2.62L18.561 7.7l.939.952-7.787 7.847-3.55-3.572.939-.954zm1.582-.233L14.899 7.5l.94.953-4.213 4.245-.94-.956zm-1.707 3.622l-.927.935-3.55-3.572.938-.952 3.54 3.59z",
    fill: "white"
  }));
};

SvgCred.displayName = "SvgCred";
SvgCred.defaultProps = {
  size: 24,
  color: "#37E8A3"
};

function _extends$gh() { _extends$gh = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gh.apply(this, arguments); }
var Svg$gd = styled("svg")({
  flex: "none"
}, space, color);

var SvgCrpt = function SvgCrpt(props) {
  return createElement(Svg$gd, _extends$gh({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.375 7.308a5.823 5.823 0 00-3.794-1.385c-3.146 0-5.737 2.488-5.953 5.668H6.01c.216-3.558 3.085-6.298 6.57-6.298 1.543 0 3.023.567 4.226 1.575l-.432.44zm-.216 2.078A4.397 4.397 0 0012.58 7.53c-2.436 0-4.41 2.015-4.41 4.471 0 2.487 1.974 4.503 4.41 4.503 1.414 0 2.744-.69 3.578-1.858l.433.44c-.957 1.291-2.438 2.048-4.01 2.048-2.777 0-5.029-2.3-5.029-5.133 0-2.802 2.252-5.101 5.028-5.101a4.991 4.991 0 014.01 2.047l-.432.44zm.71-1.605l.432-.441c.154.157.277.314.4.472l-.431.44a5.521 5.521 0 00-.402-.472zM12.55 18.738c-3.485 0-6.354-2.739-6.57-6.297h.617c.216 3.18 2.807 5.668 5.953 5.668a5.824 5.824 0 003.794-1.386l.432.44a6.517 6.517 0 01-4.226 1.576v-.001zm4.318-2.487c.155-.158.278-.315.402-.473l.431.44c-.123.158-.246.316-.4.473l-.433-.44zM5.118 12c0 4.188 3.36 7.62 7.463 7.62 2.221 0 4.318-.976 5.738-2.77l.431.44c-1.542 1.89-3.763 2.96-6.169 2.96C8.11 20.25 4.5 16.534 4.5 12c0-4.566 3.64-8.25 8.081-8.25 2.374 0 4.628 1.07 6.169 2.96l-.432.441C16.899 5.388 14.802 4.38 12.58 4.38c-4.102 0-7.463 3.432-7.463 7.62z",
    fill: "white"
  }));
};

SvgCrpt.displayName = "SvgCrpt";
SvgCrpt.defaultProps = {
  size: 24,
  color: "#00BDCD"
};

function _extends$gi() { _extends$gi = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gi.apply(this, arguments); }
var Svg$ge = styled("svg")({
  flex: "none"
}, space, color);

var SvgCrw = function SvgCrw(props) {
  return createElement(Svg$ge, _extends$gi({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M18.625 11.51c-.151.033-.255.053-.356.08-.633.165-1.272.297-1.932.272-.882-.034-1.64-.389-2.307-.96-.27-.232-.521-.487-.779-.733-.125-.119-.155-.254-.06-.409l.244-.395.329.362c.475.526.982 1.005 1.652 1.261.658.25 1.328.214 2 .1.951-.158 1.83-.538 2.69-.965.03-.014.06-.023.144-.056-.057.107-.088.17-.125.23-1.256 2.114-2.514 4.227-3.772 6.34-.155.26-.212.28-.48.148-1.775-.871-3.634-1.037-5.552-.707-.3.052-.354.026-.497-.281-.156-.337-.155-.328.2-.396.988-.193 2-.234 3.001-.122.937.105 1.87.243 2.73.684.123.064.188.01.25-.091.545-.911 1.09-1.822 1.639-2.73.293-.487.592-.97.887-1.455.026-.042.046-.087.094-.178zm-13.24.09c.125.213.251.425.379.636l2.523 4.185c.12.2.12.206-.088.301-.448.206-.392.26-.666-.199-.968-1.623-1.934-3.249-2.9-4.873l-.783-1.316c-.037-.063-.067-.13-.1-.195l.03-.04c.11.05.22.095.33.146.661.31 1.331.598 2.04.773.911.227 1.81.253 2.678-.18.54-.269.985-.666 1.386-1.118.64-.726 1.161-1.54 1.633-2.39l.115-.205c.062.093.102.163.152.225.277.339.211.64-.022.992-.52.782-1.045 1.558-1.738 2.194-.619.569-1.313.998-2.13 1.193-.64.154-1.284.123-1.926.004-.294-.055-.587-.116-.88-.175l-.034.042z",
    fill: "white"
  }));
};

SvgCrw.displayName = "SvgCrw";
SvgCrw.defaultProps = {
  size: 24,
  color: "#0F1529"
};

function _extends$gj() { _extends$gj = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gj.apply(this, arguments); }
var Svg$gf = styled("svg")({
  flex: "none"
}, space, color);

var SvgCs = function SvgCs(props) {
  return createElement(Svg$gf, _extends$gj({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.698 7.219c1.84.135 2.732 1.234 2.732 1.432 0 .14-.033.447-.033.634 0 .125.045.325.135.6-.023.188-.146.282-.372.282-.338 0-.243-.379-.744-1.129-.54-.808-1.086-.977-1.72-1.012.012 1.722.06 6.462.063 8.092 1.691-.246 2.63-1.509 2.874-1.509.135 0 .305.105.305.353 0 .521-1.337 1.7-3.205 1.933-.139 1.522-.859 3.355-2.646 3.355-.845 0-1.555-.652-1.555-1.41 0-.494.372-.705.71-.705.338 0 .676.247.676.705 0 .305-.101.518-.304.634.203.142.405.212.608.212.677 0 1.186-1.224 1.273-2.797-1.972-.317-3.808-2.195-3.808-4.924 0-3.07 1.912-4.397 3.788-4.694.037-1.38.758-3.487 2.603-3.521 1.115 0 1.588.917 1.588 1.41 0 .494-.355.705-.71.705a.709.709 0 01-.71-.705c0-.282.113-.482.338-.6a.876.876 0 00-.608-.21c-.938 0-1.233 1.978-1.279 2.869h.001zm-1.19 8.84c-.003-1.825-.026-6.032-.032-7.964-1.731.425-2.3 2.484-2.3 3.87 0 2.196 1.037 3.704 2.332 4.095z",
    fill: "white"
  }));
};

SvgCs.displayName = "SvgCs";
SvgCs.defaultProps = {
  size: 24,
  color: "#262626"
};

function _extends$gk() { _extends$gk = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gk.apply(this, arguments); }
var Svg$gg = styled("svg")({
  flex: "none"
}, space, color);

var SvgCtr = function SvgCtr(props) {
  return createElement(Svg$gg, _extends$gk({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 20.25a8.25 8.25 0 110-16.5 8.25 8.25 0 010 16.5zm0-1.16a7.09 7.09 0 100-14.18 7.09 7.09 0 000 14.18zm.054-2.184c-2.698 0-4.87-2.063-4.87-4.879V12c0-2.75 2.118-4.905 4.978-4.905 1.929 0 3.17.809 4.007 1.967l-1.97 1.523c-.54-.674-1.16-1.105-2.064-1.105-1.322 0-2.253 1.118-2.253 2.493V12c0 1.415.93 2.52 2.253 2.52.985 0 1.565-.457 2.132-1.145l1.97 1.402c-.891 1.226-2.092 2.129-4.183 2.129z",
    fill: "white"
  }));
};

SvgCtr.displayName = "SvgCtr";
SvgCtr.defaultProps = {
  size: 24,
  color: "#FDDE6C"
};

function _extends$gl() { _extends$gl = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gl.apply(this, arguments); }
var Svg$gh = styled("svg")({
  flex: "none"
}, space, color);

var SvgCvc = function SvgCvc(props) {
  return createElement(Svg$gh, _extends$gl({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.87 12.584a1.756 1.756 0 00.998-1.58c0-.97-.796-1.757-1.777-1.757-.983 0-1.78.787-1.78 1.757a1.755 1.755 0 00.999 1.58v2.17h1.56v-2.17zm-.78 5.041c-3.139 0-5.692-2.523-5.692-5.625s2.553-5.625 5.693-5.625a5.694 5.694 0 015.445 3.984h1.962C18.74 7.006 15.712 4.5 12.09 4.5 7.898 4.5 4.5 7.858 4.5 12c0 4.142 3.398 7.5 7.59 7.5 3.622 0 6.65-2.506 7.408-5.859h-1.963a5.694 5.694 0 01-5.445 3.984",
    fill: "white"
  }));
};

SvgCvc.displayName = "SvgCvc";
SvgCvc.defaultProps = {
  size: 24,
  color: "#3AB03E"
};

function _extends$gm() { _extends$gm = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gm.apply(this, arguments); }
var Svg$gi = styled("svg")({
  flex: "none"
}, space, color);

var SvgDai = function SvgDai(props) {
  return createElement(Svg$gi, _extends$gm({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.998 2.734l9.192 9.191-9.192 9.191-9.19-9.19 9.19-9.192z",
    fill: "#FFCE45"
  }), createElement("path", {
    d: "M11.998 14.924l-9.198-3 9.198-9.191 9.2 9.192-9.2 3z",
    fill: "#FEBE44"
  }), createElement("path", {
    d: "M6 11.325h4.2l1.799-2 1.999 2h4.2l-6.2-6.7L6 11.325z",
    fill: "inherit"
  }), createElement("path", {
    opacity: 0.42,
    d: "M11.998 21.116V2.733l9.192 9.192-9.192 9.19z",
    fill: "#D9A547"
  }));
};

SvgDai.displayName = "SvgDai";
SvgDai.defaultProps = {
  size: 24,
  color: "white"
};

function _extends$gn() { _extends$gn = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gn.apply(this, arguments); }
var Svg$gj = styled("svg")({
  flex: "none"
}, space, color);

var SvgDash = function SvgDash(props) {
  return createElement(Svg$gj, _extends$gn({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.928 9.728L18.4 14.514s-.943 2.386-3.185 2.386H4.398l.773-2.385h9.8l1.542-4.787H6.728l.758-2.385h10.757c2.357 0 1.685 2.385 1.685 2.385zM4.786 11.015h5.8l-.743 2.213H4.027l.758-2.213z",
    fill: "white"
  }));
};

SvgDash.displayName = "SvgDash";
SvgDash.defaultProps = {
  size: 24,
  color: "#1C75BC"
};

function _extends$go() { _extends$go = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$go.apply(this, arguments); }
var Svg$gk = styled("svg")({
  flex: "none"
}, space, color);

var SvgDat = function SvgDat(props) {
  return createElement(Svg$gk, _extends$go({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M15.04 4.205c.295 0 .532.09.71.269.18.179.27.415.27.71v8.756c0 .997-.237 1.907-.711 2.726a5.163 5.163 0 01-1.9 1.92c-.794.46-1.684.69-2.67.69-.985 0-1.888-.23-2.707-.69a5.163 5.163 0 01-1.9-1.92c-.461-.82-.692-1.728-.692-2.726 0-.999.211-1.902.634-2.708.435-.819 1.024-1.46 1.766-1.92a4.738 4.738 0 012.515-.691 4.73 4.73 0 013.706 1.747V5.184c0-.295.09-.531.27-.71a.998.998 0 01.71-.27zm-4.3 13.344c.64 0 1.216-.154 1.727-.461a3.35 3.35 0 001.23-1.305 3.855 3.855 0 00.441-1.843c0-.678-.147-1.287-.442-1.824a3.215 3.215 0 00-1.229-1.287 3.195 3.195 0 00-1.728-.48c-.64 0-1.222.16-1.747.48-.517.312-.94.756-1.229 1.287-.294.537-.44 1.145-.44 1.824 0 .678.146 1.292.44 1.842.291.534.715.983 1.23 1.306.524.307 1.107.46 1.747.46z",
    fill: "white"
  }));
};

SvgDat.displayName = "SvgDat";
SvgDat.defaultProps = {
  size: 24,
  color: "#2D9CDB"
};

function _extends$gp() { _extends$gp = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gp.apply(this, arguments); }
var Svg$gl = styled("svg")({
  flex: "none"
}, space, color);

var SvgData = function SvgData(props) {
  return createElement(Svg$gl, _extends$gp({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.105 7.436L19.31 6.24c.285-.282.226-.798-.13-1.151-.357-.354-.878-.412-1.162-.13l-2.262 2.243-.077.078-1.971 1.953a3.42 3.42 0 00-4.4.338 3.348 3.348 0 00-.341 4.363l-1.505 1.492a5.883 5.883 0 01-.891-1.72c-.505-1.528-.37-3.202.45-4.582 1.277-2.153 3.562-3.089 5.728-2.814a.803.803 0 00.912-.74.98.98 0 00-.88-1.03 7.528 7.528 0 00-6.087 2.134C3.942 9.403 3.781 13.731 6.2 16.678l-1.38 1.369c-.272.27-.204.776.153 1.129.356.353.866.422 1.138.152l1.486-1.473 1.075-1.066.002-.003 1.742-1.726a3.419 3.419 0 003.69-.732 3.348 3.348 0 00.738-3.66l1.976-1.957c1.448 2.18 1.16 5.2-.833 7.175a5.914 5.914 0 01-4.597 1.71.733.733 0 00-.773.666l-.02.24a.778.778 0 00.742.847 7.73 7.73 0 005.874-2.247c2.698-2.675 3.01-6.796.893-9.667zm-5.25 5.65a1.635 1.635 0 01-2.296 0 1.603 1.603 0 010-2.274 1.634 1.634 0 012.295 0 1.6 1.6 0 010 2.275z",
    fill: "white"
  }));
};

SvgData.displayName = "SvgData";
SvgData.defaultProps = {
  size: 24,
  color: "#E9570F"
};

function _extends$gq() { _extends$gq = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gq.apply(this, arguments); }
var Svg$gm = styled("svg")({
  flex: "none"
}, space, color);

var SvgDbc = function SvgDbc(props) {
  return createElement(Svg$gm, _extends$gq({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.339 12.696L9.1 13.989c-.223.232-.44.467-.664.698-.038.04-.091.063-.137.093-.097-.015-.172-.076-.185-.165-.02-.134-.04-.27-.056-.405-.022-.178-.077-.228-.257-.25-.373-.045-.745-.094-1.118-.143l-.85-.11c-.17-.023-.231-.144-.143-.289l.614-.982 1.253-2.001c.05-.081.105-.137.211-.134a.774.774 0 00.205-.032c.08-.02.142.005.197.057l.296.277 1.13 1.073.734.691c.126.119.126.204.008.329zm8.317 1.74c.07.058.147.113.162.213.019.128-.032.22-.14.29l-1.913 1.24-1.232.799a.999.999 0 00-.11.081.257.257 0 00-.095.212c.007.154.016.307.018.46.002.177-.128.287-.305.267a.245.245 0 01-.161-.093l-.444-.513-.556-.645a.354.354 0 01-.101-.295l.026-.896c.002-.105.065-.173.149-.227l1.018-.65c.57-.364 1.142-.727 1.71-1.094.12-.078.232-.1.364-.033.098.05.208.058.314.025.158-.05.28-.006.402.102.292.258.596.504.895.756zm-5.473.743c.046.046.079.102.095.165.028.14-.028.236-.16.3-.438.211-.877.425-1.319.63-.08.035-.18.04-.27.044-.367.017-.733.027-1.1.042-.217.008-.433.021-.633.032H9.65a.249.249 0 01-.18-.071c-.047-.043-.095-.084-.14-.128-.259-.245-.512-.495-.775-.735-.147-.133-.15-.313-.01-.456.316-.325.628-.654.942-.982l1.014-1.065a.29.29 0 01.421-.021l1.35 1.341c.303.302.61.6.91.904zm1.858-6.037c-.145-.223.019-.532.26-.572.643-.107 1.284-.23 1.927-.342.142-.025.255.04.332.158.136.202.268.405.402.609.282.427.564.855.843 1.284.038.057.057.127.085.191l-.017.007a.498.498 0 01-.116.299c-.393.528-.79 1.054-1.182 1.582a.368.368 0 01-.605-.04c-.574-.953-1.154-1.903-1.731-2.853-.066-.108-.13-.218-.198-.323zm-1.129 2.65l-.112 1-.097.832-.11.975c-.008.068-.009.138-.023.204-.008.032-.032.073-.059.084-.027.01-.075-.005-.099-.025-.106-.092-.208-.19-.31-.287-.367-.348-.732-.696-1.1-1.043l-.96-.902c-.107-.099-.108-.13-.005-.238l1.468-1.537 1.003-1.053.492-.518c.014-.015.027-.035.044-.041.035-.013.079-.03.11-.02.025.009.037.054.044.067l-.075.66-.096.849-.114.992zm2.855.764c.048.078.056.151.003.232a.463.463 0 00-.069.303c.009.094-.03.152-.11.202-.628.398-1.253.8-1.878 1.2l-.59.376c-.079.05-.159.046-.201-.018-.024-.034-.027-.082-.034-.106l.082-.606.184-1.336.203-1.463.197-1.43.075-.533c.001-.014.002-.03.01-.041.019-.025.04-.062.066-.066.027-.005.069.016.086.04.045.061.082.13.123.195l1.466 2.412c.129.213.257.427.387.639zm-3.04-3.678c.024.015.069.031.092.063.037.05.005.096-.033.136l-.51.536-1.487 1.556-.93.98c-.112.117-.202.117-.32.006-.361-.344-.724-.689-1.087-1.032-.352-.333-.706-.665-1.06-.997-.047-.045-.085-.094-.08-.163.008-.094.062-.147.169-.165l.589-.104 1.886-.33 2.228-.39.543-.096zm-5.054.474c.35-.239.699-.477 1.05-.714l3.382-2.304c.112-.077.184-.061.24.06l.697 1.5.09.195c.024.053.008.096-.024.143a.997.997 0 00-.103.185c-.025.062-.063.096-.13.108l-1.492.269-1.766.317-1.928.346c-.027.005-.054 0-.082 0l-.016-.03c.027-.025.052-.054.082-.075zm-3.518 1.145c-.22-.005-.351-.219-.245-.416.089-.167.188-.327.284-.49.276-.472.553-.942.828-1.414a.494.494 0 01.187-.184c.732-.42 1.463-.843 2.195-1.265a.478.478 0 01.15-.06.26.26 0 01.266.108.27.27 0 01.025.292c-.11.235-.225.469-.337.703-.21.429-.42.857-.628 1.287a.325.325 0 01-.225.192.519.519 0 00-.384.382.27.27 0 01-.186.194c-.602.212-1.203.428-1.803.642-.041.015-.084.02-.126.03v-.001zm3.115-1.37a.26.26 0 01.026-.09l.786-1.722c.163-.359.329-.717.49-1.076.038-.082.093-.124.186-.127.245-.008.49-.02.735-.03l1.448-.055.51-.027c.121-.005.204.068.205.187.005.073-.041.12-.101.162l-.463.315L9.32 8.55l-.885.603a.4.4 0 01-.066.04c-.052.023-.103-.008-.1-.065zm-1.022 1.238c-.122.197-.246.393-.369.59l-1.38 2.204a.317.317 0 01-.075.093c-.08.057-.185.017-.223-.083-.06-.16-.117-.322-.174-.484l-.502-1.411c-.012-.035-.02-.071-.025-.088 0-.096.032-.136.122-.165.266-.087.534-.171.8-.256l1.512-.48.199-.062c.047-.015.094-.035.133.018.035.047.006.086-.018.124zm12.088 1.957l.152.867c.005.027.008.056.012.093-.008.037-.016.082-.028.126l-.199.717c-.056.206-.22.255-.385.115a270.1 270.1 0 00-1.018-.853c-.077-.065-.11-.139-.091-.241a.472.472 0 00-.035-.302c-.046-.092-.031-.173.03-.255l.829-1.117.169-.228c.056-.077.13-.115.225-.094.099.023.15.09.166.187l.173.985zm-5.672-5.958l-.015-.032c-.02-.045-.029-.097.017-.123a.18.18 0 01.127-.007c.066.02.126.057.188.088l2.521 1.26.448.224c.05.025.09.054.08.117-.011.063-.058.076-.113.086l-1.817.326-.059.012c-.017-.011-.05-.024-.071-.048a.602.602 0 00-.448-.227c-.067-.003-.102-.043-.127-.099-.107-.231-.215-.46-.323-.69l-.408-.887z",
    fill: "white"
  }));
};

SvgDbc.displayName = "SvgDbc";
SvgDbc.defaultProps = {
  size: 24,
  color: "#5BC1D4"
};

function _extends$gr() { _extends$gr = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gr.apply(this, arguments); }
var Svg$gn = styled("svg")({
  flex: "none"
}, space, color);

var SvgDcn = function SvgDcn(props) {
  return createElement(Svg$gn, _extends$gr({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.827 23.255a12.005 12.005 0 01-4.203-2.662l.11-.192c1.791-2.83 3.4-5.759 4.611-8.888 1.285-3.319 2.313-6.725 3.293-10.145.088-.305.192-.605.288-.908a.8.8 0 01.172.341c.615 2.194 1.21 4.395 1.848 6.582 1.163 3.985 2.798 7.765 4.963 11.308.253.412.683 1.104 1.29 2.071a11.99 11.99 0 01-4.526 2.666A3205.116 3205.116 0 0011.92 12.05l-.115-.001c-.875 2.458-2.2 6.192-3.979 11.206zM12.057.037h-.094L12 0l.056.037z",
    fill: "white"
  }));
};

SvgDcn.displayName = "SvgDcn";
SvgDcn.defaultProps = {
  size: 24,
  color: "#136485"
};

function _extends$gs() { _extends$gs = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gs.apply(this, arguments); }
var Svg$go = styled("svg")({
  flex: "none"
}, space, color);

var SvgDcr = function SvgDcr(props) {
  return createElement(Svg$go, _extends$gs({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.142 13.215h3.315a2.24 2.24 0 002.233-2.247 2.24 2.24 0 00-2.233-2.246h-1.055l-2.26-1.972h3.315a4.201 4.201 0 014.116 3.409 4.224 4.224 0 01-2.534 4.717l2.613 2.282H15.66l-4.517-3.944v.001zm1.618-2.52H9.445A2.24 2.24 0 007.21 12.94a2.24 2.24 0 002.234 2.247H10.5l2.259 1.972H9.445a4.201 4.201 0 01-4.116-3.408 4.224 4.224 0 012.534-4.718L5.251 6.75h2.994l4.515 3.945z",
    fill: "white"
  }));
};

SvgDcr.displayName = "SvgDcr";
SvgDcr.defaultProps = {
  size: 24,
  color: "#2ED6A1"
};

function _extends$gt() { _extends$gt = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gt.apply(this, arguments); }
var Svg$gp = styled("svg")({
  flex: "none"
}, space, color);

var SvgDeez = function SvgDeez(props) {
  return createElement(Svg$gp, _extends$gt({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.28 14.895a538.68 538.68 0 013.906-2.403c1.293-.79 1.293-.79 1.27-.868-.022-.094-8.025-4.957-8.107-5.005-.2-.12-.356-.215-.451-.277.147-.102.433-.297.775-.53l.832-.562.571.342c.705.421 8.445 5.169 9.53 5.845-.443.266-2.01 1.194-4.118 2.435l-4.187 2.468a27.023 27.023 0 01-.015-.656 34.86 34.86 0 01-.005-.788v-.001zm-1.776-4.722c.139.082.379.227.675.411l.771.479.017 1.447c.048 4.183.048 4.183.11 4.225l.04.028.045-.016c.022-.007.03-.01 8.153-4.802l.435-.256-.143 2.012-.053.03c-.311.185-8.851 5.073-10.041 5.748-.004-.524-.008-2.314-.009-4.647v-4.659zM6.75 18.6l.019-11.975.29.171c.235.137 1.813 1.1 3.596 2.19 1.748 1.07 3.469 2.12 3.835 2.338l.536.323-1.773 1.084-.354-.206c-.221-.13-1.173-.713-2.122-1.299-.688-.426-1.378-.848-2.07-1.266l-.49-.285-.003 5.077-.005 4.749c-.145-.088-.392-.24-.681-.42L6.75 18.6z",
    fill: "white"
  }));
};

SvgDeez.displayName = "SvgDeez";
SvgDeez.defaultProps = {
  size: 24,
  color: "#939393"
};

function _extends$gu() { _extends$gu = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gu.apply(this, arguments); }
var Svg$gq = styled("svg")({
  flex: "none"
}, space, color);

var SvgDent = function SvgDent(props) {
  return createElement(Svg$gq, _extends$gu({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M18.811 15.863a1.15 1.15 0 01-1.553.408l-3.585-2.032v-1.29l1.139-.645 3.583 2.031c.545.309.73.993.416 1.527zm-5.673 2.744c0 .617-.51 1.117-1.138 1.117-.629 0-1.138-.5-1.138-1.117v-4.064L12 13.898l1.138.645v4.064zM6.742 16.27a1.15 1.15 0 01-1.553-.41 1.107 1.107 0 01.416-1.526l3.583-2.032 1.139.646v1.29L6.742 16.27zM5.605 9.664a1.107 1.107 0 01-.417-1.526 1.15 1.15 0 011.554-.41l3.585 2.033v1.29l-1.139.645-3.583-2.031zm5.257-4.27c0-.618.51-1.118 1.138-1.118.629 0 1.138.5 1.138 1.117v4.064L12 10.102l-1.138-.645V5.393zm2.811 6.265l.603.341-.603.341v-.682zm-1.137-1.253l.602-.342v.684l-.602-.342zm-1.674.341v-.682l.602.341-.602.341zm-.535 1.594L9.724 12l.603-.341v.682zm1.137 1.253l-.602.342v-.684l.602.342zm1.674-.341v.682l-.602-.341.602-.341zM12 13.29l-1.138-.645v-1.29L12 10.71l1.138.645v1.29L12 13.29zm5.258-5.561a1.15 1.15 0 011.553.41 1.106 1.106 0 01-.416 1.526l-3.583 2.032-1.139-.646v-1.29l3.585-2.032zm1.405 6.151L15.347 12l3.316-1.88a1.629 1.629 0 00.613-2.245 1.69 1.69 0 00-2.286-.601l-3.317 1.88V5.393c0-.907-.749-1.643-1.673-1.643s-1.673.736-1.673 1.643v3.76L7.01 7.274a1.69 1.69 0 00-2.285.602 1.627 1.627 0 00.613 2.245L8.653 12l-3.315 1.88a1.628 1.628 0 00-.614 2.245 1.69 1.69 0 002.286.602l3.317-1.88v3.76c0 .907.749 1.643 1.673 1.643s1.673-.736 1.673-1.643v-3.76l3.317 1.88a1.69 1.69 0 002.286-.602 1.627 1.627 0 00-.613-2.245z",
    fill: "white"
  }));
};

SvgDent.displayName = "SvgDent";
SvgDent.defaultProps = {
  size: 24,
  color: "#666666"
};

function _extends$gv() { _extends$gv = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gv.apply(this, arguments); }
var Svg$gr = styled("svg")({
  flex: "none"
}, space, color);

var SvgDew = function SvgDew(props) {
  return createElement(Svg$gr, _extends$gv({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.12 17.112a.83.83 0 01.84.819.83.83 0 01-.84.819H8.032a.917.917 0 01-.64-.259.873.873 0 01-.266-.625V6.112c0-.229.093-.448.259-.61a.894.894 0 01.624-.252h1.168a.83.83 0 01.84.819c0 .218-.089.425-.246.579a.853.853 0 01-.594.24h-.258v10.224h.203zm9.128-8.589c.584 1.004.877 2.126.877 3.368s-.296 2.365-.887 3.37c-.59 1.004-1.246 1.773-2.324 2.47-.99.64-2.023 1.018-3.305 1.018h-.425a.83.83 0 01-.84-.819.83.83 0 01.84-.818h.517c.908 0 1.567-.376 2.307-.802.74-.426 1.214-1.125 1.643-1.878.43-.752.645-1.593.645-2.521-.001-.941-.218-1.788-.654-2.541a4.778 4.778 0 00-1.782-1.78c-.753-.432-1.59-.649-2.51-.649h-.223a.83.83 0 01-.84-.818c0-.218.089-.426.246-.579a.849.849 0 01.594-.24h.261c1.27 0 2.417.285 3.443.856a6.276 6.276 0 012.417 2.363z",
    fill: "white"
  }));
};

SvgDew.displayName = "SvgDew";
SvgDew.defaultProps = {
  size: 24,
  color: "#FEC907"
};

function _extends$gw() { _extends$gw = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gw.apply(this, arguments); }
var Svg$gs = styled("svg")({
  flex: "none"
}, space, color);

var SvgDgb = function SvgDgb(props) {
  return createElement(Svg$gs, _extends$gw({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M9.276 18.75l.36-.962-.638.064-.23.607c-.018.046-.033.094-.056.137-.05.094-.127.152-.235.153H7.061c-.011 0-.022-.007-.047-.015l.301-.814c-.55-.015-1.084-.024-1.617-.084.01-.1 3.047-7.759 3.168-7.99.03-.001.065-.007.101-.007h2.452c.025 0 .05 0 .074.002.248.019.386.229.3.467-.115.315-.236.629-.354.942l-1.543 4.105-.05.143c.044.002.078.007.112.005 2.322-.101 4.026-1.21 5.127-3.292.24-.455.41-.945.502-1.452.055-.296.072-.593-.002-.889a1.322 1.322 0 00-.524-.772 1.967 1.967 0 00-1.171-.363H5.625c.018-.045.026-.075.04-.102l1.042-1.876a.565.565 0 01.529-.314h4.4l.45-1.192h1.337c.033 0 .066-.002.097.002.096.015.15.09.136.188a.567.567 0 01-.036.118l-.279.744c-.016.042-.028.085-.045.135h.604c.015-.032.03-.065.043-.099l.372-.988c.038-.1.04-.1.139-.1.423 0 .847-.002 1.27 0 .178 0 .242.095.178.268-.101.276-.205.55-.309.826l-.045.13c.041.007.075.015.109.02a5.83 5.83 0 011.706.45c.413.187.788.43 1.098.773.418.46.626 1.012.659 1.635a4.478 4.478 0 01-.28 1.747c-.473 1.331-1.147 2.541-2.122 3.56a8.957 8.957 0 01-2.298 1.712c-.918.487-1.888.829-2.893 1.07-.09.023-.137.061-.168.15-.11.308-.227.614-.343.92-.071.187-.143.238-.339.238H9.276z",
    fill: "white"
  }));
};

SvgDgb.displayName = "SvgDgb";
SvgDgb.defaultProps = {
  size: 24,
  color: "#006AD2"
};

function _extends$gx() { _extends$gx = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gx.apply(this, arguments); }
var Svg$gt = styled("svg")({
  flex: "none"
}, space, color);

var SvgDgd = function SvgDgd(props) {
  return createElement(Svg$gt, _extends$gx({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M9.375 8.25v2.25h-5.25V8.25h5.25zm.75 0h1.5v7.5h-7.5v-4.5h6v-3zm-4.5 4.5v1.5h4.5v-1.5h-4.5zm14.25-3h-6v4.5h4.5v-1.5h-3v-1.5h4.5v4.5h-7.5v-7.5h7.5v1.5z",
    fill: "white"
  }));
};

SvgDgd.displayName = "SvgDgd";
SvgDgd.defaultProps = {
  size: 24,
  color: "#F4D029"
};

function _extends$gy() { _extends$gy = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gy.apply(this, arguments); }
var Svg$gu = styled("svg")({
  flex: "none"
}, space, color);

var SvgDlt = function SvgDlt(props) {
  return createElement(Svg$gu, _extends$gy({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.855 6.718l-4.57 9.756h7.588a.55.55 0 01.504.341l.008.019a.48.48 0 01-.023.42.72.72 0 01-.626.371H6.672a.619.619 0 01-.35-.109l-.042-.028a.655.655 0 01-.217-.818l5.393-11.362a.928.928 0 01.234-.307.52.52 0 01.67-.008.373.373 0 01.1.13l5.47 11.438a.71.71 0 01.044.5.428.428 0 01-.411.317H17.5a.657.657 0 01-.596-.387L12.187 6.72a.183.183 0 00-.165-.109.183.183 0 00-.167.107z",
    fill: "white"
  }));
};

SvgDlt.displayName = "SvgDlt";
SvgDlt.defaultProps = {
  size: 24,
  color: "#F4AE95"
};

function _extends$gz() { _extends$gz = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gz.apply(this, arguments); }
var Svg$gv = styled("svg")({
  flex: "none"
}, space, color);

var SvgDnr = function SvgDnr(props) {
  return createElement(Svg$gv, _extends$gz({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M3.026 17.026c-.047.058-.012.154.038.25.073.125.165.232.221.32.111.018.259-.177.369-.177a.21.21 0 01.093.16c-.093.053-.203.16-.333.214-.11.071-.203.125-.277.053l-.055-.053a.247.247 0 01-.055-.071 1.513 1.513 0 01-.111-.179c-.038-.053-.074-.124-.111-.178l-.111-.16c-.074-.072-.092-.178-.074-.214.038-.09.167-.143.314-.196.148-.054.295-.108.351-.197.055-.071.019-.177-.038-.267-.018-.053-.054-.089-.091-.142-.019-.054-.056-.108-.074-.143-.11 0-.277.16-.388.125-.018-.036-.074-.125-.055-.16.13-.072.425-.268.554-.232.055.018.11.089.147.178.038.09.074.178.111.249.037.036.056.09.093.143 0 .017.018.035.036.072 0 .017.02.053.038.07.036.036.055.107.036.143-.018.053-.055.072-.129.125-.184.09-.332.178-.461.25h-.019a.102.102 0 00-.019.017zM17.25 3.273a.069.069 0 01-.008.01c0-.008.003-.012.008-.017-.009-.066-.085-.123-.174-.18-.111-.071-.259-.124-.351-.177-.111.035-.148.285-.24.338-.019.018-.055 0-.092-.018-.038-.017-.074-.035-.056-.035.056-.09.093-.232.148-.34.056-.106.129-.195.222-.177.11.035.221.106.35.178.038.018.056.036.093.054.037.017.055.035.092.053.074.036.13.071.185.089-.019 0-.019.018-.019.018.019 0 .019-.018.019-.018.073.018.166.107.166.143.018.089-.074.195-.166.32-.093.107-.203.232-.203.339-.019.071.073.142.166.196.055.036.11.072.166.09.055.017.111.052.148.07.092-.053.165-.267.277-.302.036.017.128.071.128.106-.092.108-.24.428-.369.464-.055.018-.128-.018-.202-.071-.038-.036-.075-.054-.111-.09-.037-.017-.074-.053-.111-.071-.074-.053-.203-.106-.296-.178-.037-.018-.092-.071-.092-.107 0-.053 0-.107.056-.178.092-.178.184-.321.258-.446v-.018a.1.1 0 00.008-.045zm-3.257-.828c-.055.017-.166 0-.147.017.037-.106.037-.249.055-.374.018-.106.074-.214.166-.214.056 0 .111 0 .184.018.056.018.148.036.204.054.055.018.13.036.203.054.019 0 .056.017.092.017.038 0 .056.018.092.018.093-.018.185.053.204.089.037.09-.019.214-.074.356-.055.126-.11.268-.093.375.019.089.111.125.222.16.111.036.24.036.332.071a.647.647 0 00.093-.195c.018-.09.037-.143.092-.179.037 0 .129.036.148.071-.038.126-.092.464-.222.535-.018.018-.055.018-.092.018a.352.352 0 01-.13-.035c-.092-.018-.184-.072-.257-.09a.551.551 0 01-.167-.035l-.166-.054c-.055-.018-.11-.053-.13-.089-.036-.035-.018-.09 0-.178.038-.196.093-.357.13-.5v-.017c0-.035-.018-.071-.055-.107a.37.37 0 00-.167-.072 5.754 5.754 0 00-.387-.088c-.093.052-.056.285-.13.374zm-1.477-.178c0-.09-.018-.232-.055-.34a.5.5 0 01.037-.177c.019-.054.056-.09.111-.09.148-.035.332.019.517.036.148.018.424.018.48.09.037.017.037.07.037.142a.851.851 0 01-.037.214c-.019.143-.075.303-.038.392.038.072.149.107.259.125a.65.65 0 00.184.018c.056 0 .112.017.148.017.074-.071.056-.32.148-.374.037 0 .111.018.148.036.018.124-.037.535-.166.588-.056.018-.148 0-.24-.018-.037 0-.056-.017-.074-.017-.018 0-.037-.018-.056-.018-.037 0-.073-.018-.11-.018-.055-.018-.148-.018-.24-.036-.038 0-.056-.018-.074-.018-.018 0-.037-.018-.056-.018a.144.144 0 01-.092-.035c-.073-.072-.037-.232 0-.392s.092-.321.037-.392c-.037-.072-.147-.09-.277-.09-.129 0-.258.018-.332 0-.074.072-.018.303-.074.393-.019.018-.055.018-.092.018-.019-.018-.037-.018-.056-.018-.018 0-.018-.018-.037-.018zm4.838.837s0-.018 0 0c0-.018 0 0 0 0zm-2.087-.338c-.055.017-.129-.018-.166-.054.018-.09.038-.232.074-.356.037-.125.092-.233.203-.214.074.017.148.035.24.071.037.018.092.036.092.018.038.018.092.036.13.054.147.053.406.106.442.195.038.09-.036.214-.11.357-.074.143-.148.285-.148.375.018.07.11.142.222.177.037.018.055.018.092.036s.055.018.092.036c.038.018.093.036.13.054.092-.054.129-.303.24-.321.037 0 .11.035.129.07-.019.143-.184.518-.314.536-.11.018-.314-.143-.425-.196-.073-.036-.369-.125-.406-.215-.037-.071.037-.231.11-.374.075-.142.167-.285.13-.374-.037-.071-.147-.107-.258-.143-.111-.036-.24-.053-.314-.089-.093.053-.093.285-.185.357zm3.398 1.907c-.056-.018-.13-.09-.13-.16.074-.09.166-.214.24-.303.093-.09.166-.143.259-.107.055.018.092.07.147.107l.075.071c.017.018.054.035.073.071.092.107.184.214.296.285.092.036.128.143.128.179 0 .089-.11.178-.24.267-.11.09-.24.178-.276.285-.019.036 0 .09.019.125 0 .018.017.036.036.053l.038.036.036.036c.074.09.184.16.24.232.11-.018.24-.214.35-.214.038.036.093.107.093.142-.111.09-.332.357-.48.357-.037 0-.055-.018-.092-.036-.038-.018-.056-.053-.093-.09-.055-.07-.11-.16-.166-.213l-.055-.053c-.037-.018-.055-.036-.074-.054-.055-.035-.092-.089-.129-.125-.038-.053-.074-.107-.074-.142 0-.053.018-.09.092-.16l.37-.357.148-.142-.148.142c.055-.054 0-.16-.092-.25a.551.551 0 00-.148-.142c-.019-.018-.056-.036-.075-.054l-.055-.053c-.11.018-.203.231-.314.267zM17.63 3.89a.152.152 0 01-.147-.125c.037-.072.092-.214.166-.32.073-.108.148-.197.259-.161.147.035.276.178.424.285.037.018.074.053.11.071.038.036.075.053.111.09.06.042.11.097.148.16.019.071-.092.196-.202.303-.111.107-.222.232-.24.32 0 .054 0 .09.037.125a.308.308 0 00.11.108c.092.07.203.124.259.177.11-.035.22-.249.332-.249.037 0 .092.054.11.09-.073.124-.331.445-.461.427a.32.32 0 01-.093-.036c-.018 0-.037-.017-.055-.035L18.48 5.1l-.019-.018-.165-.16a.253.253 0 00-.075-.053c-.037-.036-.073-.054-.11-.09-.074-.053-.13-.106-.149-.16-.017-.089.093-.214.204-.339.11-.125.222-.25.222-.339 0-.035-.019-.071-.056-.106-.037-.018-.092-.054-.148-.09a1.196 1.196 0 01-.277-.16c-.11.035-.184.25-.277.303zm2.678 2.531c.11-.053.202-.16.332-.214.111-.071.203-.125.277-.054l.055.054a.223.223 0 01.056.072c.037.053.073.106.11.177.037.054.074.126.111.179l.111.16c.073.072.092.179.073.214-.036.09-.165.143-.313.197-.148.053-.296.106-.351.195-.055.072-.018.179.038.268.018.053.054.09.091.143.019.053.055.106.074.142.111 0 .278-.16.388-.124.019.035.073.124.056.16-.13.071-.425.267-.555.231-.055-.017-.11-.088-.148-.178a3.4 3.4 0 00-.11-.25c-.037-.035-.055-.089-.092-.142 0-.018-.019-.036-.037-.071a.134.134 0 00-.037-.071c-.038-.036-.056-.108-.038-.143.019-.054.056-.071.13-.125.184-.09.332-.178.462-.25h.018c.074-.053.038-.16-.018-.267-.074-.124-.166-.232-.222-.321-.111-.018-.258.179-.369.179a.21.21 0 01-.092-.161zm-.813-.98c.074-.054.166-.179.277-.303.093-.09.185-.16.278-.09.055.054.11.107.165.178l.166.215c.038.053.111.124.167.196.055.07.092.125.092.178-.019.09-.148.16-.277.25-.13.088-.277.16-.314.249-.037.071.019.178.092.268a.248.248 0 00.056.07.248.248 0 00.055.072.472.472 0 01.093.107c.129 0 .277-.196.387-.16.038.035.074.089.074.124a1.11 1.11 0 01-.258.214.755.755 0 01-.167.09c-.055.017-.092.035-.129.017a.396.396 0 01-.166-.178c-.037-.071-.074-.16-.11-.196-.038-.036-.093-.107-.148-.178a.373.373 0 01-.075-.108.296.296 0 01-.036-.088c.018-.107.148-.197.295-.285.148-.09.296-.179.314-.268 0-.071-.055-.16-.148-.25-.037-.053-.092-.089-.129-.124a.472.472 0 01-.092-.107c-.111 0-.24.213-.351.232a.254.254 0 01-.11-.125zm2.03 3.244c.112-.036.24-.107.334-.107.11-.053.221-.071.276.018.056.089.093.214.13.356.037.143.055.285.11.393-.018 0-.037.018-.055.018.019 0 .038-.018.055-.018.056.07.038.178.018.213-.054.09-.202.108-.35.125-.148.018-.295.036-.387.107-.056.053-.056.16-.02.268l.056.16c.019.053.019.107.038.142.11.036.331-.07.424-.017.018.035.037.124.018.16-.073 0-.202.053-.313.071-.13.018-.24.036-.296 0-.055-.036-.074-.107-.092-.196 0-.053-.019-.088-.019-.143v-.142a1.65 1.65 0 01-.092-.321v-.09c0-.034 0-.052.019-.07a.285.285 0 01.165-.089c.203-.036.37-.09.518-.125a.27.27 0 01.11-.035c-.037 0-.055.017-.092.017.074-.035.074-.143.038-.267-.02-.018-.02-.053-.038-.09-.019-.017-.019-.053-.037-.089l-.055-.16c-.093-.035-.296.107-.407.09-.055-.036-.073-.125-.055-.18zm-.534-1.158c.092-.036.203-.126.295-.215.11-.071.222-.106.295-.017.038.017.056.052.075.088l.055.108c.018.089.055.16.092.25.018.017.037.07.056.106.018.036.018.054.036.071.018.036.037.054.037.072.038.071.056.16.038.195-.038.09-.185.125-.333.18-.148.052-.314.088-.37.16-.037.035-.037.071-.037.124 0 .018.019.036.019.072.019.036.019.053.038.089.036.106.11.214.129.285.11.018.313-.125.405-.071a.405.405 0 01.038.142c-.111.09-.499.25-.61.16a.388.388 0 01-.055-.089.322.322 0 00-.037-.124 2.234 2.234 0 00-.056-.233.294.294 0 00-.037-.088c-.018-.035-.037-.09-.055-.125-.037-.071-.073-.16-.056-.214.038-.089.186-.143.352-.196.166-.053.332-.09.369-.178.018-.018.018-.036.018-.054 0-.018-.018-.053-.018-.071-.018-.036-.037-.09-.074-.142-.038-.036-.056-.09-.092-.143-.019-.036-.038-.054-.038-.071 0-.018-.018-.036-.018-.054-.092-.035-.277.125-.388.125-.037-.018-.073-.09-.073-.142zm1.477 3.6c.129-.018.24 0 .259.09.017.052.036.106.036.177v.214a1.524 1.524 0 000 .41c.018.09-.019.196-.055.214-.074.054-.221.036-.37.018-.147-.018-.314-.036-.406.018-.073.035-.092.143-.092.25-.019.106 0 .232 0 .32.092.071.332.018.407.09v.088c0 .037-.02.054-.038.072-.148-.018-.498.018-.59-.072-.038-.035-.038-.124-.038-.213 0-.09.038-.197.038-.268v-.338c0-.054.018-.107.055-.143a.409.409 0 01.185-.036h.553c.075-.018.111-.124.111-.25 0-.124-.018-.284-.018-.374-.093-.071-.314.018-.425-.035-.037-.036-.037-.143 0-.178.111 0 .259-.037.388-.054zm-.221-1.301c.128-.036.24-.036.276.035.018.036.018.072.037.108 0 .035.019.089.019.124.018.09.018.178.037.268.018.017.018.035.018.052a.13.13 0 01.018.072c0 .053.019.107.019.143 0 .089 0 .178-.019.213-.055.072-.202.09-.369.09-.166 0-.332 0-.406.053-.018.018-.018.036-.038.054 0 .018-.018.053-.018.071-.018.053 0 .107 0 .16.019.072.019.125.038.178 0 .018.018.055.018.072v.072c.11.035.35-.054.424.035a.19.19 0 010 .143c-.147.053-.572.107-.645 0-.038-.054-.038-.143-.038-.232v-.232c0-.053-.018-.143-.018-.232 0-.088-.019-.195.019-.231.055-.089.221-.107.387-.107s.35 0 .406-.071a.25.25 0 00.038-.126v-.089c0-.035-.019-.052-.019-.088a1.165 1.165 0 01-.074-.303c-.11-.036-.314.071-.425.035a.166.166 0 01-.037-.16c.093-.018.222-.072.352-.107zm.11 3.939c.13.018.222.054.166.197 0 .053 0 .106-.018.177a2.945 2.945 0 00-.056.197 3.242 3.242 0 00-.056.195c0 .019-.018.055-.018.09 0 .036-.018.053-.018.089.018.09-.056.178-.092.196-.093.036-.222-.018-.37-.071-.13-.053-.277-.107-.387-.089-.092.017-.13.107-.167.214-.037.106-.037.232-.073.32.062.04.13.07.202.09.093.017.149.035.186.09 0 .034-.038.124-.075.142-.129-.036-.48-.09-.553-.215-.019-.018-.019-.053-.019-.089a.323.323 0 01.038-.125c.017-.089.073-.178.092-.25a.5.5 0 01.037-.16l.055-.16c.018-.053.055-.107.092-.125.037-.036.093-.018.185 0 .202.036.369.09.517.125h.018c.037 0 .074-.018.11-.053.038-.036.056-.09.075-.161.037-.124.073-.285.092-.374-.055-.09-.296-.053-.388-.125-.037-.054 0-.142.038-.178.11.036.258.036.387.053zm-.11.874s-.02 0 0 0c-.02 0 0 0 0 0zm.405-2.157c.056.018.092.053.075.071.036.143-.02.321-.038.5-.018.142-.018.409-.092.463-.018.035-.074.035-.148.035s-.148-.018-.221-.035c-.148-.018-.315-.072-.407-.036-.073.036-.11.143-.129.25-.018.053-.018.124-.018.178 0 .053-.018.107-.018.142.073.072.332.054.387.143a.406.406 0 01-.037.142c-.13.019-.554-.035-.61-.16-.017-.053 0-.142.02-.231 0-.037.017-.054.017-.072 0-.018.02-.036.02-.053 0-.036.018-.071.018-.107.018-.053.018-.143.037-.232 0-.036.018-.053.018-.071 0-.018.018-.036.018-.053 0-.037.02-.072.038-.09.073-.071.24-.036.405 0 .167.035.333.09.407.035.074-.035.093-.142.093-.267 0-.125-.02-.25 0-.32-.075-.072-.315-.018-.407-.072-.019-.018-.019-.053-.019-.089.019-.018.019-.035.019-.053 0-.018.019-.018.019-.036.092 0 .24-.018.369-.018a.56.56 0 01.184.036zm-1.126 3.797c.13.053.203.125.148.232-.037.106-.11.213-.185.338-.018.036-.037.053-.056.09-.017.035-.036.053-.054.088-.038.072-.075.125-.093.178-.037-.017-.055-.035-.093-.052.038.017.056.035.093.052-.018.072-.11.16-.147.16-.093.019-.203-.07-.333-.16-.11-.088-.24-.195-.35-.195-.075-.018-.148.07-.204.16a.68.68 0 00-.092.16c-.019.054-.055.107-.074.143.055.09.277.16.314.268-.019.035-.074.124-.111.124-.111-.089-.443-.232-.48-.356-.019-.054.019-.125.074-.197.037-.035.055-.07.093-.107.018-.035.055-.071.073-.106.056-.072.111-.197.184-.285.02-.036.075-.09.111-.09.056 0 .111 0 .185.054.184.089.332.178.462.25h.018c.092.035.166-.054.24-.161.074-.107.13-.25.184-.339-.036-.107-.294-.143-.35-.232-.018-.017 0-.053.018-.089.019-.035.056-.052.075-.071.092.054.24.09.35.142v.001zm.48-1.23c.13.035.24.088.259.16a1.683 1.683 0 01-.074.232c-.019.036-.037.089-.055.125-.02.035-.038.089-.056.124-.055.143-.111.392-.202.428-.093.036-.223-.036-.37-.107-.148-.071-.296-.142-.388-.142-.074.018-.148.107-.184.213-.02.037-.02.054-.038.09-.018.035-.018.053-.037.089-.018.035-.037.09-.055.124.055.09.314.126.333.233 0 .035-.038.107-.075.124-.147-.017-.535-.178-.553-.303-.019-.107.147-.303.203-.41.037-.071.13-.357.222-.392.073-.036.24.035.387.107.148.072.296.16.388.125.074-.036.11-.143.148-.25.036-.107.054-.232.092-.303-.056-.09-.296-.09-.37-.178-.018-.053.019-.125.056-.16.092.017.24.035.369.071zm-1.938 3.458c.092.09.147.16.147.25-.018.053-.074.09-.11.142l-.074.072c-.019.017-.037.052-.074.071a1.45 1.45 0 00-.296.285c-.037.09-.148.125-.184.125-.093 0-.185-.107-.278-.232-.091-.107-.184-.232-.295-.267-.037-.018-.092 0-.128.018-.02 0-.038.017-.056.035l-.037.036-.037.035c-.093.072-.166.179-.24.233.018.106.222.23.222.337-.038.036-.111.09-.148.09-.092-.107-.37-.32-.37-.463 0-.036.019-.054.038-.09.018-.035.055-.053.092-.089.074-.053.166-.107.221-.16l.056-.053a.248.248 0 01.055-.072c.037-.054.093-.09.13-.125.055-.035.11-.071.147-.071.055 0 .092.018.166.089l.37.356.147.143-.148-.143c.056.054.166 0 .26-.088a.554.554 0 00.146-.143c.019-.018.038-.054.056-.072l.055-.053c-.018-.107-.24-.196-.277-.303 0-.053.075-.125.13-.125.092.072.221.16.314.232zm.775-1.07c.13.072.203.142.203.25-.037.142-.185.267-.295.41-.019.035-.056.071-.074.107-.038.035-.056.072-.093.107a.55.55 0 01-.166.142c-.073.018-.203-.089-.313-.196-.111-.107-.24-.213-.333-.232-.055 0-.092 0-.129.036a.31.31 0 00-.11.107c-.075.09-.13.196-.185.25.037.106.258.214.258.321 0 .035-.056.088-.093.107-.129-.072-.46-.322-.442-.446 0-.018.018-.053.037-.09 0-.017.018-.035.037-.053l.018-.018.018-.017.167-.161a.245.245 0 00.055-.071c.037-.036.055-.072.093-.107.054-.071.11-.125.165-.142.092-.018.222.088.351.196.13.107.259.213.351.213.037 0 .074-.018.11-.053.02-.036.056-.09.093-.143a1.17 1.17 0 01.166-.267c-.037-.107-.258-.178-.314-.267 0-.054.038-.125.093-.143.073.035.221.089.332.16zm-3.027 2.567c.054.09.146.196.22.321.074.107.13.196.056.267l-.055.054a.254.254 0 01-.075.053c-.054.037-.11.072-.184.108-.055.035-.129.071-.184.106l-.166.108c-.075.07-.186.089-.222.07-.093-.035-.148-.16-.203-.302-.055-.143-.11-.285-.203-.34-.074-.053-.185-.017-.277.037-.056.018-.093.053-.148.089-.055.017-.11.052-.148.071 0 .107.166.267.13.375-.038.018-.13.07-.167.053-.073-.125-.277-.41-.24-.535.019-.053.093-.107.185-.143.092-.035.185-.07.258-.107.038-.035.093-.053.148-.089.019 0 .038-.017.074-.035a.144.144 0 00.074-.036c.038-.035.111-.053.148-.035.055.017.073.053.129.124.092.178.184.321.258.446v.017c.056.072.166.037.277-.017.13-.072.24-.16.332-.214.02-.107-.184-.25-.184-.357a.221.221 0 01.166-.089zm-.536.785s0-.018 0 0c0-.018 0 0 0 0zm1.532-1.57c.074.055.185.143.314.268.092.09.166.178.092.267-.055.055-.11.108-.184.161l-.222.16c-.055.036-.13.108-.203.161-.074.053-.129.09-.185.09-.092-.019-.166-.143-.258-.268-.093-.125-.166-.267-.258-.303-.075-.036-.186.017-.278.09a.257.257 0 00-.073.052.257.257 0 00-.074.054c-.037.035-.074.071-.11.09 0 .124.202.266.165.373-.037.036-.092.072-.129.072a1.081 1.081 0 01-.221-.25.709.709 0 01-.093-.16c-.018-.054-.037-.09-.018-.125a.4.4 0 01.184-.16c.074-.037.167-.072.203-.108.037-.035.11-.089.185-.142a.4.4 0 01.111-.072.312.312 0 01.092-.035c.11.018.203.142.296.285.092.142.184.285.276.303.074 0 .166-.053.259-.142.055-.036.093-.09.13-.126a.49.49 0 01.11-.089c0-.106-.222-.232-.24-.338a.258.258 0 01.13-.107zM15.47 21.18c.038.107.092.232.13.321.055.107.074.214-.019.267-.092.053-.222.09-.369.124-.147.037-.295.055-.406.108 0-.018-.019-.035-.019-.053 0 .018.019.035.019.053-.074.053-.185.036-.221.018-.094-.053-.112-.197-.13-.34-.018-.142-.037-.284-.11-.373-.056-.054-.167-.054-.278-.018l-.166.053c-.055.018-.11.018-.147.036-.038.107.073.32.018.41-.037.018-.13.035-.166.018 0-.071-.056-.196-.075-.303-.018-.125-.036-.233 0-.285.038-.054.111-.072.204-.09.055 0 .092-.017.148-.017h.147c.093-.036.222-.072.333-.09h.092c.037 0 .055 0 .074.019a.271.271 0 01.092.16c.037.196.092.356.13.499v.018c.037.071.147.071.277.035.018-.017.054-.017.091-.035.019-.018.056-.018.093-.036l.166-.053c.037-.09-.111-.286-.092-.393.037-.053.129-.071.184-.053zm1.182-.517c.037.072.13.196.221.285.075.107.111.214.02.285-.02.036-.056.053-.093.072l-.111.053c-.092.018-.166.054-.259.09-.018.017-.073.035-.11.052-.038.018-.055.018-.074.036-.038.018-.056.036-.074.036-.074.036-.166.053-.203.036-.092-.036-.129-.179-.184-.322-.056-.142-.093-.303-.167-.356-.037-.036-.074-.036-.129-.036-.019 0-.038.018-.074.018-.037.018-.056.018-.092.036-.11.035-.222.107-.296.125-.018.107.13.303.074.392a.446.446 0 01-.148.036c-.092-.107-.258-.482-.166-.589.019-.018.055-.035.092-.053a.348.348 0 00.13-.036c.092-.017.184-.035.24-.053a.318.318 0 00.092-.035c.038-.018.093-.037.13-.055.073-.035.166-.07.221-.053.092.036.148.179.203.34.055.159.092.32.185.356.018.017.037.017.055.017.018 0 .055-.017.074-.017.038-.018.092-.037.148-.072.037-.036.092-.054.148-.09.036-.017.055-.017.073-.035.019 0 .038-.017.056-.017.037-.09-.13-.268-.13-.375.018-.036.093-.072.148-.072zm-3.766 1.052c0 .106.037.25.055.374.018.125 0 .214-.092.25-.056.017-.111.035-.185.035h-.221a1.694 1.694 0 00-.425 0c-.092.018-.203-.018-.222-.053-.055-.072-.037-.214-.018-.357.018-.142.037-.303-.019-.392-.037-.071-.148-.09-.258-.09-.11-.017-.24 0-.333 0-.073.09-.018.322-.092.393h-.092c-.037 0-.056-.018-.074-.036.018-.142-.018-.481.074-.57.037-.036.13-.036.222-.036s.202.036.277.036h.35c.056 0 .11.018.148.053.018.036.037.09.037.179v.535c.018.071.129.106.258.106.13 0 .296-.018.388-.018.074-.088-.018-.303.037-.41.037-.035.148-.035.185 0zm1.292-.197c.019.09.073.233.129.321.037.126.037.233-.056.285-.036.018-.073.018-.11.036-.037 0-.092.018-.13.018-.092.017-.184.017-.276.035-.018.018-.037.018-.056.018-.037.018-.055.018-.073.018-.056 0-.111.018-.148.018-.092 0-.184 0-.221-.017-.075-.055-.093-.197-.093-.358 0-.16 0-.32-.055-.391-.019-.018-.037-.018-.056-.036-.018 0-.055-.018-.074-.018-.055-.018-.11 0-.165 0-.075.018-.13.018-.185.036-.019 0-.056.018-.074.018h-.074c-.037.107.056.338-.037.41a.21.21 0 01-.148 0c-.055-.143-.11-.553 0-.625.056-.035.148-.035.24-.035h.24c.056 0 .148-.018.24-.018.093 0 .203-.018.24.018.093.053.111.214.111.374 0 .161 0 .34.074.393a.27.27 0 00.13.035h.091c.038 0 .056-.017.093-.017.11-.036.24-.072.314-.072.037-.107-.074-.303-.037-.41a.181.181 0 01.166-.036zm-4.099.036c.056-.018.148 0 .148-.018-.037.107-.037.25-.056.375-.018.107-.073.213-.165.213-.056 0-.111 0-.186-.017a3.08 3.08 0 00-.202-.054A3.098 3.098 0 009.415 22c-.019 0-.056-.018-.092-.018-.038 0-.056-.017-.093-.017-.092.017-.184-.055-.203-.09-.037-.089.019-.232.074-.357.055-.124.11-.267.092-.374-.018-.09-.11-.124-.221-.16-.111-.036-.24-.036-.333-.072a.647.647 0 00-.092.197c-.019.088-.038.142-.092.177-.038 0-.13-.035-.148-.07.037-.125.092-.464.221-.536.019-.017.056-.017.092-.017.038 0 .093.017.13.035.092.018.185.072.258.09a.556.556 0 01.167.035l.165.054c.056.017.111.053.13.09.037.035.018.088 0 .177-.037.197-.092.357-.13.5-.018.017-.018.035-.018.053.019-.018.019-.018.019-.036 0 .036.018.072.055.107.037.036.092.053.166.071.13.036.296.072.388.09.093-.054.056-.285.13-.375zm1.478.179c-.019.088.018.232.054.338a.51.51 0 01-.036.178c-.019.054-.056.09-.111.09-.148.035-.332-.018-.517-.036-.148-.018-.424-.018-.48-.09-.037-.018-.037-.07-.037-.142a.85.85 0 01.037-.214c.019-.142.074-.303.037-.392-.037-.071-.148-.107-.258-.125-.056-.017-.13-.017-.186-.017-.054 0-.11-.018-.146-.018-.075.07-.056.32-.148.375a.446.446 0 01-.148-.037c-.019-.125.037-.534.166-.588.055-.017.147 0 .24.018.037 0 .055.018.074.018.018 0 .037.018.055.018.037 0 .074.017.11.017.056.018.149.018.24.036.038 0 .056.018.075.018.018 0 .037.017.056.017.036 0 .073.018.092.036.073.072.036.232 0 .392-.038.161-.093.322-.038.393.038.071.148.089.278.089.129 0 .258-.018.332 0 .073-.071.018-.303.073-.392.02-.018.056-.018.093-.018.018.018.037.018.055.018.019 0 .019.018.038.018zm-3.878-.963a.27.27 0 00.056.036c-.056.088-.093.232-.148.338-.055.107-.129.197-.222.179-.11-.037-.221-.108-.35-.179-.038-.018-.056-.035-.092-.053-.038-.018-.056-.036-.093-.053-.074-.037-.13-.072-.185-.09.019 0 .019-.018.019-.018-.019 0-.019.018-.019.018-.073-.018-.166-.107-.166-.142-.019-.09.074-.197.166-.321.092-.107.203-.233.203-.34.019-.07-.073-.142-.165-.195a.791.791 0 00-.167-.09c-.056-.017-.111-.052-.148-.07-.092.053-.166.267-.277.303-.036-.018-.128-.072-.128-.108.092-.106.24-.427.369-.463.055-.017.128.018.202.071.038.036.075.054.111.09.038.017.074.052.111.07.074.055.202.108.295.179.038.018.093.071.093.107 0 .053 0 .107-.056.178-.092.178-.184.321-.258.446v.017c-.037.09.055.161.166.233.111.07.259.125.351.178.111-.036.148-.285.24-.34.018-.017.056 0 .092.019zm1.108.463c.055-.018.129.018.202.09-.018.089-.036.231-.073.356-.037.125-.092.232-.203.213a1.759 1.759 0 01-.24-.07c-.037-.018-.093-.036-.13-.053-.037-.019-.091-.036-.128-.054-.148-.054-.407-.107-.444-.197-.037-.089.038-.213.112-.356.073-.142.147-.285.147-.375-.018-.07-.11-.142-.222-.178-.037-.018-.055-.018-.092-.035-.038-.018-.056-.018-.092-.036-.038-.018-.092-.035-.13-.053-.091.053-.129.303-.24.32-.037 0-.11-.035-.129-.07.019-.143.185-.518.314-.536.111-.017.314.142.425.196.074.036.369.125.406.214.037.071-.037.233-.11.375-.075.143-.167.285-.13.374.037.071.148.107.258.142.111.036.24.054.314.09.093-.054.093-.285.185-.357zm-3.398-1.907a.284.284 0 01.148.142c-.073.09-.165.214-.24.303-.092.09-.165.143-.258.108-.055-.018-.092-.072-.147-.108l-.075-.07c-.018-.019-.055-.037-.073-.072a1.453 1.453 0 00-.296-.285c-.092-.036-.129-.143-.129-.178 0-.09.11-.179.24-.268.11-.089.24-.178.277-.285.019-.035 0-.09-.019-.125 0-.018-.018-.036-.037-.054l-.037-.035-.036-.036c-.074-.088-.185-.16-.24-.232-.111.018-.24.215-.351.215-.037-.036-.092-.108-.092-.143.11-.09.332-.357.48-.357.037 0 .055.018.092.036.037.017.056.053.092.09.056.07.111.16.167.213l.054.053c.038.018.056.037.075.054.055.036.092.09.129.125.037.053.074.106.074.142 0 .054-.019.09-.092.161l-.37.356-.018.018c-.055.053 0 .16.092.25a.569.569 0 00.148.142c.018.018.056.036.074.054l.055.053c.111-.017.203-.232.314-.267zm1.035.784c.055 0 .129.036.147.125-.037.071-.092.214-.166.321-.074.107-.148.196-.258.16-.148-.036-.277-.178-.425-.285-.037-.018-.074-.053-.11-.072-.038-.035-.075-.052-.112-.088a.54.54 0 01-.147-.16c-.018-.072.092-.197.203-.303.111-.108.221-.233.24-.322 0-.053 0-.09-.038-.125a.307.307 0 00-.11-.106c-.092-.072-.202-.125-.258-.179-.11.036-.222.25-.333.25-.037 0-.092-.053-.11-.09.074-.124.332-.445.461-.427.019 0 .056.017.092.035.02 0 .038.018.056.037l.019.017.018.018.166.16a.234.234 0 00.074.053c.037.037.074.054.11.09.074.053.13.107.149.16.018.09-.093.214-.203.34-.112.124-.222.249-.222.337 0 .037.018.072.056.108.036.018.092.053.147.089.11.053.221.107.277.16.11-.035.184-.25.277-.303zm-1.865-1.55c-.074.053-.166.178-.277.303-.093.089-.185.16-.277.089a1.635 1.635 0 01-.166-.179l-.166-.213c-.038-.054-.111-.126-.166-.197-.056-.071-.093-.125-.093-.178.019-.09.148-.16.277-.25.13-.089.277-.16.314-.25.038-.07-.018-.177-.092-.266a.248.248 0 00-.056-.072.248.248 0 00-.055-.07.506.506 0 01-.093-.108c-.129 0-.276.196-.387.16-.037-.035-.074-.089-.074-.125a1.14 1.14 0 01.259-.213c.055-.036.11-.072.166-.09.055-.017.092-.035.129-.017.073.04.13.102.166.178.038.071.074.16.111.196.037.036.093.107.148.178.037.036.055.072.074.107.018.036.037.072.037.09-.019.107-.149.195-.296.285-.147.089-.295.178-.314.267 0 .072.056.16.148.25.038.053.092.09.129.125a.452.452 0 01.092.106c.111 0 .24-.214.351-.232a.256.256 0 01.111.125zm-2.032-3.245c-.11.036-.24.107-.35.143-.111.053-.222.07-.278-.018a1.352 1.352 0 01-.128-.357c-.038-.142-.056-.285-.111-.392.019 0 .037-.018.073-.035-.018 0-.037.017-.054.017-.056-.071-.038-.178-.02-.214.056-.089.203-.106.352-.124.147-.018.294-.036.387-.108.055-.053.055-.16.018-.267l-.054-.16c-.018-.053-.018-.107-.036-.143-.111-.036-.333.072-.425.018-.018-.036-.037-.125-.018-.16.074 0 .203-.054.314-.072.129-.017.24-.035.295 0 .055.036.074.107.092.197 0 .053.018.089.018.142v.143c.038.089.075.213.093.32v.09c0 .035 0 .053-.018.071-.038.035-.075.071-.167.09-.202.034-.369.088-.516.124h-.02c-.073.036-.073.142-.036.268.019.017.019.053.038.089.018.017.018.052.036.088l.055.16c.093.037.295-.106.406-.088.056.035.074.125.056.178h-.002zm.536 1.159a1.032 1.032 0 00-.296.213c-.11.072-.221.108-.295.018-.038-.017-.055-.053-.074-.089l-.055-.106c-.019-.09-.055-.16-.092-.25-.019-.018-.038-.071-.056-.107-.018-.035-.018-.053-.037-.072-.018-.035-.037-.053-.037-.07-.037-.072-.055-.161-.037-.196.038-.09.185-.126.333-.179.147-.053.314-.09.37-.16.036-.037.036-.072.036-.125 0-.018-.019-.036-.019-.071-.018-.036-.018-.054-.037-.09-.036-.107-.11-.213-.128-.285-.111-.018-.315.125-.407.072a.409.409 0 01-.038-.143c.111-.09.5-.25.61-.161a.367.367 0 01.056.09.322.322 0 00.037.124c.018.09.036.178.055.232 0 .018.019.053.038.089.017.036.036.09.054.125.038.071.075.16.056.214-.038.089-.185.142-.351.196-.166.053-.333.089-.37.178-.018.018-.018.036-.018.054 0 .017.019.053.019.071.018.035.037.089.073.143.038.035.056.089.093.142.018.035.018.053.037.072 0 .018.018.035.018.053.092.036.277-.125.388-.125.037.018.074.09.074.143zm-1.478-3.601c-.129.018-.24 0-.258-.09a.506.506 0 01-.037-.178v-.213a1.523 1.523 0 000-.41c-.018-.09.019-.196.055-.214.075-.054.222-.036.37-.018s.314.036.406-.018c.074-.036.092-.142.092-.25.019-.107 0-.231 0-.32-.092-.072-.332-.019-.405-.09v-.088c0-.036.017-.054.037-.072.147.018.498-.018.59.072.037.035.037.124.037.213 0 .09-.038.196-.038.268v.338a.199.199 0 01-.054.143.408.408 0 01-.185.036h-.554c-.074.017-.11.125-.11.249 0 .125.018.285.018.375.092.07.314-.018.424.035.038.036.038.143 0 .179-.11 0-.258.035-.388.052v.001zm.223 1.301c-.13.036-.24.036-.296-.053-.019-.036-.019-.071-.019-.09 0-.035-.018-.088-.018-.125-.019-.088-.019-.177-.037-.267-.018-.018-.018-.035-.018-.053-.019-.036-.019-.054-.019-.071 0-.054-.018-.107-.018-.143 0-.09 0-.178.018-.214.055-.071.203-.09.37-.09.166 0 .332 0 .405-.053.02-.018.02-.035.038-.053 0-.018.018-.054.018-.071.019-.054 0-.107 0-.16-.019-.072-.019-.126-.038-.179 0-.018-.018-.053-.018-.071v-.072c-.11-.036-.35.054-.424-.036a.19.19 0 010-.142c.148-.053.572-.107.646 0 .037.054.037.143.037.232v.232c0 .053.018.142.018.232 0 .088.019.195-.018.231-.055.09-.222.107-.388.107s-.35 0-.406.071a.251.251 0 00-.037.125v.09c0 .035.019.053.019.088.037.108.073.232.073.304.112.036.315-.072.425-.037a.167.167 0 01.038.161c-.093.018-.222.071-.351.107zm-.112-3.94c-.129-.018-.22-.053-.165-.195 0-.053 0-.107.018-.179.018-.053.037-.124.055-.195a2.56 2.56 0 00.056-.197c0-.018.019-.053.019-.09 0-.034.017-.052.017-.088-.017-.09.056-.178.093-.196.092-.035.222.018.37.071.129.053.276.107.387.09.093-.019.13-.108.166-.214.037-.108.037-.233.074-.321a.694.694 0 00-.203-.09c-.092-.018-.148-.035-.185-.089 0-.035.037-.124.074-.142.129.036.48.089.554.213.018.018.018.054.018.09a.323.323 0 01-.037.125c-.018.088-.074.178-.092.249a.506.506 0 01-.037.16l-.055.16c-.019.054-.055.108-.092.126-.038.035-.092.017-.185 0-.203-.036-.37-.09-.517-.125-.018-.018-.037-.018-.056-.018.019.018.019.018.038.018-.038 0-.075.018-.111.053-.038.036-.056.09-.075.16a5.459 5.459 0 00-.092.376c.056.088.296.052.388.124.038.053 0 .143-.037.179-.11-.037-.259-.037-.388-.054zm-.295 1.302c-.056-.035-.092-.053-.074-.072-.037-.142.018-.32.037-.498.019-.143.019-.41.092-.464.02-.036.075-.036.148-.036a.94.94 0 01.221.036c.148.018.315.071.407.035.073-.035.111-.142.129-.248.019-.054.019-.126.019-.179 0-.053.018-.107.018-.142-.074-.072-.333-.054-.387-.143 0-.036.018-.107.036-.142.13-.018.554.035.61.16.018.053 0 .142-.018.232 0 .035-.02.052-.02.07 0 .018-.018.036-.018.054 0 .036-.018.072-.018.107-.019.054-.019.142-.038.232 0 .035-.018.053-.018.07 0 .019-.018.037-.018.055a.133.133 0 01-.037.089c-.074.071-.24.035-.406 0-.166-.036-.333-.09-.406-.036-.075.036-.093.143-.093.268 0 .124.018.249 0 .32.074.071.314.018.406.071.019.018.019.054.019.09-.019.018-.019.036-.019.053 0 .018-.018.018-.018.036-.092 0-.24.018-.37.018a.56.56 0 01-.184-.036zM2.527 7.72c-.11-.053-.202-.107-.147-.231.037-.108.11-.214.184-.34.019-.035.038-.052.056-.088.018-.036.037-.054.055-.09.037-.07.074-.124.093-.178 0 .018.018.018.018.018 0-.018-.018-.018-.018-.018.018-.071.11-.16.147-.16.092-.018.203.071.333.16.11.09.24.197.35.197.074.017.148-.072.203-.16a.716.716 0 00.093-.161c.018-.054.055-.107.073-.143-.055-.09-.277-.16-.314-.267.019-.036.075-.125.111-.125.111.089.443.232.48.356.019.054-.018.125-.073.196-.038.036-.056.072-.093.107-.018.036-.055.072-.074.108-.055.07-.11.195-.184.285-.019.035-.074.089-.111.089-.056 0-.11 0-.185-.054-.184-.089-.332-.178-.461-.25h-.018c-.092-.035-.166.054-.24.161-.074.107-.129.25-.185.339.038.107.296.142.351.232.018.017 0 .053-.018.089-.019.036-.056.053-.074.07-.092-.052-.24-.088-.35-.142h-.002zm-.48 1.23c-.129-.036-.24-.089-.24-.16.018-.071.038-.143.074-.232.019-.035.038-.09.056-.124.018-.036.037-.09.055-.126.055-.142.111-.392.203-.427.093-.036.222.035.37.107.147.071.295.143.387.143.074-.018.148-.108.184-.215.02-.035.02-.071.02-.088.017-.036.017-.054.037-.09.018-.036.036-.089.054-.125-.055-.088-.314-.124-.332-.232 0-.035.038-.106.074-.124.147.018.535.178.554.303.018.107-.148.303-.203.41-.038.071-.13.356-.221.392-.075.036-.24-.036-.388-.107-.148-.071-.296-.16-.388-.124-.074.035-.111.142-.148.249-.037.107-.055.232-.092.303.055.09.295.09.369.178.019.053-.019.125-.055.16-.093-.017-.24-.035-.37-.07zm1.958-3.458c-.111-.09-.167-.16-.13-.232.019-.053.074-.089.111-.142l.074-.071c.019-.018.037-.054.074-.072.11-.09.221-.178.295-.285.037-.09.147-.125.185-.125.092 0 .184.107.277.233.092.106.184.23.295.267.037.017.093 0 .13-.018.018 0 .037-.018.055-.036l.037-.036.036-.036c.093-.071.167-.177.24-.231-.018-.107-.221-.232-.221-.339.037-.036.111-.09.148-.09.092.108.369.322.369.465 0 .035-.018.053-.037.089-.019.035-.055.052-.092.088-.074.054-.167.108-.222.16l-.055.055c-.019.035-.037.052-.055.071-.038.053-.093.09-.13.125-.055.036-.11.07-.147.07-.056 0-.093-.017-.167-.088l-.369-.357-.092-.089-.055-.053.055.053.074.071c-.056-.053-.167 0-.26.09a.553.553 0 00-.147.142c-.018.018-.037.053-.055.071l-.055.054c.018.107.24.196.276.303 0 .053-.073.125-.128.125-.093-.071-.223-.16-.315-.232h.001zm-.795 1.07c-.129-.054-.203-.143-.203-.25.038-.143.185-.267.296-.41.018-.036.055-.071.074-.107.037-.035.055-.071.092-.107a.55.55 0 01.166-.143c.074-.017.203.09.314.197.11.106.24.214.332.232.056 0 .093 0 .13-.036a.308.308 0 00.11-.107c.074-.09.13-.196.185-.25-.037-.107-.259-.213-.259-.32 0-.037.056-.09.093-.108.129.071.462.321.442.446a.295.295 0 01-.036.089c0 .018-.018.036-.037.054l-.018.018-.019.017-.166.16a.247.247 0 00-.055.072c-.038.036-.056.071-.092.107a.398.398 0 01-.167.143c-.092.018-.221-.09-.351-.196-.129-.107-.258-.215-.35-.215-.038 0-.075.018-.111.054-.019.036-.056.09-.093.143-.055.106-.11.214-.166.267.037.107.259.178.314.268 0 .053-.037.124-.092.142-.074-.036-.222-.09-.332-.16H3.21zm3.046-2.567c-.073-.09-.165-.196-.22-.321-.074-.107-.13-.196-.056-.268l.055-.053a.254.254 0 01.074-.053 1.45 1.45 0 01.185-.107c.056-.036.129-.072.185-.108l.165-.106c.074-.071.186-.09.222-.071.093.035.148.16.203.303.055.142.11.285.203.338.074.054.185.018.277-.035.055-.018.093-.054.148-.09.055-.018.11-.053.147-.071 0-.107-.166-.268-.129-.375.038-.017.13-.07.167-.052.073.124.277.409.24.534-.019.054-.092.107-.185.142a3.853 3.853 0 00-.259.107c-.037.036-.092.054-.147.09-.019 0-.038.018-.074.036a.142.142 0 00-.074.035c-.037.036-.111.053-.148.036-.055-.018-.073-.054-.129-.125-.092-.178-.184-.321-.258-.446v-.018c-.056-.071-.166-.035-.278.018-.128.071-.24.16-.332.214-.018.107.185.25.185.357a.223.223 0 01-.167.089zm-1.014.803c-.074-.072-.185-.162-.314-.268-.092-.09-.166-.179-.092-.268.055-.053.111-.107.184-.16l.223-.161c.054-.035.128-.106.202-.16.074-.054.13-.09.184-.09.094.018.167.143.26.268.091.125.166.267.258.303.074.036.184-.018.277-.09a.238.238 0 00.073-.052.254.254 0 00.075-.054c.037-.036.073-.071.11-.09 0-.124-.203-.267-.166-.373.037-.036.092-.071.129-.071.056.035.148.142.222.249.037.054.074.107.092.16.018.054.038.09.018.125a.4.4 0 01-.184.16c-.074.036-.166.072-.203.107-.037.036-.11.09-.185.143a.388.388 0 01-.11.071c-.038.018-.074.036-.093.036-.11-.018-.203-.142-.295-.285-.092-.142-.184-.285-.277-.303-.074 0-.166.053-.258.143-.056.035-.093.088-.13.124a.5.5 0 01-.11.09c0 .106.22.231.24.338a.257.257 0 01-.13.107zm3.342-1.98c-.018-.089-.092-.231-.13-.338-.055-.107-.074-.214.019-.268.093-.054.222-.09.37-.125.147-.035.295-.053.405-.106.075-.054.186-.036.222 0 .092.053.11.195.13.338.018.142.037.285.11.375.056.052.166.052.277.017l.166-.053c.055-.018.11-.018.148-.036.037-.107-.074-.32-.018-.41.037-.018.129-.036.165-.018 0 .072.056.196.075.303.018.125.037.232 0 .285-.038.054-.111.072-.203.09-.056 0-.093.018-.149.018h-.147c-.108.04-.22.07-.332.089H9.6c-.037 0-.056 0-.073-.018a.27.27 0 01-.093-.16c-.037-.196-.093-.357-.13-.5 0-.035-.018-.071-.018-.09 0 .019.019.055.019.073-.037-.072-.148-.072-.277-.036-.019.018-.056.018-.093.036-.018.018-.055.018-.092.035l-.166.054c-.037.088.11.285.092.392-.037.053-.129.071-.184.053h-.001zm-1.181.517c-.061-.105-.136-.2-.222-.285-.074-.107-.11-.214-.019-.285.019-.036.056-.054.093-.072l.11-.052c.093-.02.167-.054.259-.09.019-.018.074-.036.11-.054.037-.018.056-.018.074-.036.038-.017.056-.035.075-.035.073-.036.165-.053.202-.036.093.036.13.179.185.321.056.143.093.303.166.357.037.035.074.035.13.035.018 0 .036-.018.073-.018.038-.017.056-.017.093-.035.11-.036.22-.107.295-.125.019-.107-.129-.303-.074-.392a.447.447 0 01.148-.036c.092.108.258.482.166.588a.407.407 0 01-.092.054.352.352 0 00-.13.036c-.08.013-.16.031-.24.053a.319.319 0 00-.092.036c-.037.018-.092.036-.13.053-.073.036-.165.071-.22.054-.093-.036-.148-.178-.204-.339-.055-.16-.092-.321-.184-.356-.019-.018-.038-.018-.056-.018-.018 0-.055.018-.074.018-.037.017-.092.035-.147.071-.038.035-.093.053-.148.09-.037.017-.055.017-.074.035-.018 0-.037.018-.056.018-.036.089.13.267.13.374-.018.036-.092.071-.147.071zm3.765-1.051c0-.108-.036-.25-.054-.375-.02-.125 0-.214.092-.25a.563.563 0 01.184-.035h.221c.148.018.296.018.425 0 .093-.018.203.018.222.054.056.07.038.213.018.356-.018.142-.037.303.019.392.037.071.148.09.258.09.11.017.24 0 .333 0 .073-.09.018-.322.092-.393h.092c.038 0 .056.018.074.035-.018.143.018.482-.074.571-.037.036-.129.036-.221.036s-.203-.036-.277-.036h-.35a.214.214 0 01-.149-.053.372.372 0 01-.037-.179v-.534c-.018-.072-.129-.108-.258-.108s-.296.018-.388.018c-.074.09.019.303-.037.41-.037.036-.147.036-.185 0zm-1.292.195a2.111 2.111 0 00-.129-.356c-.037-.124-.037-.232.056-.285.037-.018.073-.018.11-.036.037 0 .093-.018.13-.018.092-.017.184-.017.277-.035.018-.018.036-.018.055-.018.037-.018.055-.018.073-.018.056 0 .111-.018.148-.018.092 0 .185 0 .222.018.074.054.092.196.092.357 0 .16 0 .32.056.427.018.018.037.018.055.036.018 0 .055.018.074.018.055.018.11 0 .166 0 .074-.018.13-.018.185-.036.018 0 .055-.018.073-.018h.075c.036-.107-.056-.339.036-.41a.21.21 0 01.148 0c.056.143.111.553 0 .624-.056.036-.148.036-.24.036h-.24c-.056 0-.148.018-.24.018s-.203.017-.24-.018c-.092-.054-.111-.214-.111-.375 0-.16 0-.338-.074-.391a.274.274 0 00-.13-.036h-.091c-.037 0-.056.018-.093.018-.11.036-.24.07-.313.07-.038.108.073.304.037.411a.182.182 0 01-.167.035zm2.88 1.943h-.037a.192.192 0 01-.073-.035c0-.018 0-.036.018-.072.074-.124.148-.249.222-.356.073-.09.148-.196.221-.303l.038-.036c.018-.035.054-.052.073-.071a.358.358 0 01.148-.035h.018c.055.018.074.018.11.053.02.018-.017.071-.036.089-.019.018-.037.053-.056.071-.018.018-.037.054-.055.072-.018.018-.018.036-.037.053-.019.036-.055.071-.073.107-.075.107-.167.214-.24.339l-.019.017c-.037.036-.056.054-.074.054 0 0-.018 0-.018.018-.019 0-.038.018-.056.018-.037.018-.055.018-.073.018l-.001-.001zm-.48-.035h-.018c-.055 0-.074-.036-.074-.036s0-.036.019-.053c.073-.142.147-.268.202-.357l.112-.178c.018-.036.037-.054.055-.09.018-.035.037-.052.055-.088a.141.141 0 01.074-.071c.037-.018.092-.054.148-.054.055 0 .073.018.129.054.019.018-.019.07-.037.106l-.222.321c-.092.143-.165.25-.221.357-.037.053-.055.053-.074.071h-.018s-.075.018-.13.018zm1.478.178c-.02 0-.056 0-.075-.018a.128.128 0 01-.073-.053c0-.018 0-.036.037-.053.074-.108.165-.197.276-.321.074-.09.167-.179.259-.285l.037-.036c.018-.018.055-.054.092-.054.019 0 .074-.018.13-.018h.037c.055.018.073.036.11.072 0 .018-.018.07-.055.089-.111.107-.203.196-.277.285-.055.053-.093.107-.148.16-.055.054-.092.108-.147.16-.056.037-.075.037-.093.054h-.018c0 .018-.038.018-.092.018zm-.48-.09h-.056c-.056-.017-.074-.034-.074-.052 0-.018 0-.036.018-.054.038-.036.056-.09.093-.125l.037-.053c.037-.036.055-.071.092-.107.018-.018.037-.036.037-.054l.277-.32a.41.41 0 01.092-.072c.019-.018.075-.035.13-.035h.037c.054.017.073.017.11.071a.295.295 0 01-.037.09c-.092.106-.184.195-.258.284l-.277.321c-.037.053-.056.053-.074.072h-.018a.274.274 0 01-.13.035zm1.44.358c-.038 0-.056 0-.093-.018-.055-.018-.055-.053-.055-.053s.018-.036.037-.054c.092-.09.184-.178.314-.285.092-.072.184-.161.295-.25l.037-.018a.418.418 0 00.092-.053c.018 0 .056-.018.093-.018.018 0 .055 0 .073.018.056.018.074.036.111.089 0 .018-.037.071-.056.089l-.165.125c-.056.036-.111.089-.167.125-.129.106-.24.196-.332.267-.056.036-.056.036-.073.036h-.111zm-.463-.143c-.036 0-.054 0-.073-.018a.128.128 0 01-.074-.054s0-.035.037-.052c.11-.125.203-.215.296-.304.055-.053.11-.107.148-.16.036-.036.073-.072.11-.09l.055-.053a.406.406 0 01.092-.053c.02 0 .056-.018.111-.018h.056c.037.018.056.018.073.035.02.018.02.018.038.054 0 .018-.019.053-.055.09-.093.07-.186.159-.296.248-.111.108-.222.197-.314.285-.056.036-.056.036-.092.054h-.018a.144.144 0 01-.094.036zm1.404.517c-.037 0-.092 0-.13-.036l-.055-.053V5.1c0-.018.019-.035.038-.053.129-.09.24-.179.35-.25l.332-.214.038-.018a.144.144 0 01.092-.035h.037c.055 0 .092 0 .11.017.056.036.074.054.093.09 0 .018-.037.053-.074.07-.13.072-.24.143-.351.197l-.037.018-.332.214c-.056.035-.074.035-.092.035h-.02c.02.036.02.036 0 .036v.001zm-.443-.196c-.018 0-.074 0-.11-.036-.056-.018-.056-.054-.056-.071 0-.018.019-.036.037-.054.036-.017.055-.052.092-.071.037-.017.055-.053.092-.071.056-.036.092-.072.148-.125l.019-.018c.129-.09.24-.178.35-.25.037-.017.074-.035.093-.035h.073c.038 0 .075 0 .093.018.055.017.074.035.092.089 0 .018-.037.054-.055.07l-.333.215-.018.018c-.055.036-.111.072-.148.107-.074.053-.129.089-.166.124-.056.036-.074.036-.092.036h-.018c-.056.054-.075.054-.093.054zm1.293.677c-.02 0-.038 0-.056-.017-.038-.018-.056-.018-.092-.036-.038-.036-.056-.072-.056-.072 0-.018.019-.035.056-.053.129-.071.258-.142.387-.196a6.91 6.91 0 01.35-.161l.038-.017c.037-.018.074-.018.092-.018h.13s.018 0 .037.018c.055.035.055.052.074.106 0 .018-.056.054-.075.072l-.073.036c-.093.035-.203.089-.296.124a4.095 4.095 0 00-.387.197h-.02c-.054.017-.054.017-.091.017h-.018c.018 0 .018 0 0 0zm-.407-.25c-.037 0-.092-.017-.148-.035-.055-.035-.055-.071-.055-.071 0-.018.019-.036.055-.054.13-.09.259-.16.37-.232.018-.017.055-.035.073-.053a.388.388 0 00.111-.072c.056-.035.13-.071.185-.106.019-.018.055-.018.092-.036h.019c.055 0 .11 0 .148.036.055.035.055.053.092.106 0 .018-.037.054-.074.072-.056.018-.111.053-.185.089-.037.018-.055.036-.092.054-.038.017-.055.035-.092.052a2.805 2.805 0 00-.37.215c-.055.036-.073.036-.092.036h-.037c.019 0 0 0 0 0zm1.22.839h-.038c-.037 0-.11-.018-.147-.072-.037-.036-.037-.071-.037-.09 0-.017.018-.017.055-.035.13-.053.259-.106.407-.16.128-.036.24-.089.369-.125l.037-.018c.018 0 .037-.017.074-.017h.037c.055 0 .128.017.147.052a.229.229 0 01.074.108c0 .018-.037.036-.093.054-.11.035-.221.07-.387.106-.13.036-.258.09-.406.143-.056.054-.075.054-.093.054zm-.388-.303h-.019a.25.25 0 01-.148-.054c-.037-.036-.037-.072-.037-.072 0-.017.02-.017.056-.035.129-.053.24-.125.388-.178.129-.054.258-.107.405-.161.038-.018.056-.018.094-.018h.017c.038 0 .111.018.148.054a.224.224 0 01.075.107c0 .018-.056.054-.075.07-.129.055-.258.09-.369.143-.055.018-.13.054-.203.072a.695.695 0 00-.203.09c-.075-.018-.093-.018-.13-.018.02 0 .02 0 0 0zm.757.64h-.056a.284.284 0 01-.148-.07c-.037-.036-.037-.072-.037-.09 0 0 .02-.017.056-.035.129-.053.277-.09.407-.124l.11-.036.092-.018c.074-.018.148-.036.203-.054h.093c.055.018.13.036.147.072.038.036.056.053.056.124 0 .018-.056.054-.093.054-.055.017-.11.017-.166.035l-.055-.018-.11.036c-.13.036-.278.072-.425.108-.019 0-.056.017-.075.017h.001zm.35.34h-.055s-.037-.018-.055-.018a.247.247 0 01-.074-.053c-.038-.036-.038-.072-.019-.09 0 0 .019-.018.056-.035.129-.036.277-.072.424-.107.13-.036.259-.053.388-.09h.148a.143.143 0 01.074.037c.037.017.055.035.073.052.038.054.056.072.056.125 0 .018-.056.036-.092.054-.13.015-.26.04-.388.072l-.111.017-.111.018a3.112 3.112 0 00-.203.054h-.018c-.056-.036-.074-.036-.092-.036zm.333.356h-.074a.24.24 0 01-.13-.09c-.018-.016-.018-.052-.018-.07v-.018s.018-.018.055-.018c.148-.036.278-.053.425-.071.055-.018.11-.018.166-.018l.278-.053h.018c.018 0 .055 0 .074.018a.404.404 0 01.147.088c.038.054.038.072.038.126 0 .017-.038.035-.093.035-.13.018-.277.036-.387.036-.148.018-.296.035-.426.071-.037-.036-.055-.036-.073-.036zm.313.392c-.055 0-.073 0-.092-.018h-.018c-.019 0-.092-.052-.13-.106-.018-.053-.018-.071-.018-.09 0 0 .018-.017.056-.017l.424-.054c.13-.018.259-.018.388-.036h.056c.036 0 .055 0 .092.018s.11.054.129.09c.018.018.018.053.037.053v.071a.16.16 0 01-.11.036c-.112 0-.26 0-.407.018-.111 0-.259.017-.407.035zm.278.41c-.074 0-.092 0-.111-.017h-.019c-.018 0-.037-.018-.055-.036-.018-.018-.055-.036-.055-.071-.019-.054-.019-.09-.019-.09s.019-.017.055-.017c.13-.018.278-.018.425-.036.167 0 .296-.017.443-.017.037 0 .075 0 .111.017.018 0 .037.018.074.036.018 0 .018.018.037.035 0 0 .018.018.018.036.019.053.038.071.019.125 0 .018-.056.036-.093.036h-.406c-.11-.018-.259 0-.424 0zm1.089.464c-.018 0-.018 0 0 0h-.018c-.13-.018-.259-.018-.388-.036-.074 0-.148 0-.222-.017h-.24c-.055 0-.073-.018-.092-.018 0 0-.019 0-.019-.018-.018-.018-.074-.053-.11-.107-.019-.053-.019-.089 0-.089.018 0 .037-.018.073-.018h.444c.128 0 .258 0 .387.018l.038.017c.036 0 .073.018.11.036.037.018.092.054.111.107.018.054.037.072.018.125-.018-.018-.055 0-.092 0zm.222.482h-.038l-.388-.054c-.165-.018-.313-.036-.424-.036-.073-.018-.073-.018-.111-.036h-.018c-.019-.018-.092-.071-.111-.124-.018-.053 0-.09 0-.09s.019-.017.074-.017c.148 0 .277.018.425.018.147.018.295.018.442.036.038 0 .075.017.093.035a.308.308 0 01.11.107c.016.04.022.082.02.125-.02.036-.038.036-.074.036zm.184.48h-.074c-.056-.017-.11-.017-.166-.035l-.203-.036c-.148-.018-.278-.053-.425-.071-.055-.018-.055-.018-.074-.035 0 0-.018 0-.018-.018-.018-.018-.074-.072-.092-.126-.019-.052 0-.088 0-.088h.073c.13.017.26.017.407.035h.018c.037 0 .074.018.092.018.038 0 .075 0 .093.018.037 0 .055.017.092.017s.074.018.093.018h.037c.036 0 .073.018.092.036.037.036.092.072.11.125 0 .018.019.018.019.036v.035c0 .018 0 .036-.018.054-.019.017-.056.017-.056.017zm.148.518h-.055l-.075-.018c-.11-.036-.202-.053-.313-.09-.14-.04-.281-.07-.425-.089-.055-.018-.074-.035-.092-.035 0 0-.019 0-.019-.018 0 0-.018-.018-.037-.053 0-.018-.018-.018-.018-.036s-.019-.018-.019-.036c-.018-.053 0-.071.019-.089h.074c.037 0 .074.018.11.018.038 0 .074.018.092.018h.02c.055.018.128.018.184.036.092.017.184.035.258.053.056.018.11.018.166.036a.14.14 0 01.093.035c.037.018.092.071.092.125.018.054.018.09 0 .125-.018.018-.037.018-.055.018zm.129.516c-.019 0-.038 0-.074-.018-.13-.035-.258-.089-.37-.124l-.165-.054-.037-.017c-.074-.018-.13-.036-.203-.054h-.019a.2.2 0 01-.074-.035l-.018-.019c-.019-.018-.074-.07-.074-.142-.018-.053 0-.09.018-.09h.074c.074.019.148.037.203.054.075.018.148.036.204.054.147.035.258.071.369.107l.055.018c.038.018.055.036.092.053.019.018.075.09.093.125.018.053 0 .071-.018.125a.149.149 0 01-.056.018zm.073.535c-.036 0-.054-.018-.073-.018a5.183 5.183 0 00-.369-.142l-.056-.018c-.11-.035-.24-.09-.35-.125a.2.2 0 01-.093-.053l-.018-.018c-.019-.018-.074-.09-.074-.143 0-.053.018-.07.018-.09h.055c.148.037.278.09.407.126.138.04.273.087.406.142.037.018.055.036.093.054.037.053.073.107.073.143 0 .053 0 .089-.018.124.037 0 .018.018 0 .018zm.038.499c-.038 0-.056-.017-.074-.017-.111-.054-.203-.107-.314-.143l-.055-.018c-.148-.054-.278-.125-.407-.16h-.018c-.055-.018-.055-.036-.074-.054l-.018-.018a.26.26 0 01-.056-.142c0-.054.018-.071.037-.09h.019c.018 0 .037 0 .055.019.13.052.277.088.406.142.056.018.111.036.185.072.055.017.11.053.184.07l.038.019c.037.017.055.035.073.052.019.036.074.09.074.143v.072c0 .018-.018.036-.037.053h-.018zm.018.535c-.018 0-.055-.018-.073-.018h-.02l-.202-.107c-.037-.018-.093-.053-.148-.071-.13-.071-.258-.124-.387-.196-.056-.036-.075-.054-.075-.072 0 0 0-.017-.018-.017 0 0-.018-.018-.037-.054-.018-.035-.018-.052-.018-.088 0-.055.037-.09.037-.09h.018c.018 0 .018 0 .055.018.148.054.278.107.407.16.148.071.277.143.387.197a.14.14 0 01.074.07c.019.036.074.09.074.143 0 .053-.018.072-.037.125h-.037zm-.018.517c-.019 0-.056-.018-.092-.036a2.613 2.613 0 01-.333-.213 1.675 1.675 0 01-.185-.108l-.184-.106h-.018c-.056-.036-.056-.054-.075-.072v-.018a.19.19 0 01-.037-.16c0-.053.037-.071.037-.071h.02c.017 0 .036 0 .055.018l.055.035.332.16c.11.054.222.125.333.197l.037.017c.017.018.055.036.073.072.019.018.019.035.038.07a.155.155 0 01.018.09c-.02.053-.02.09-.074.125.018 0 0 0 0 0zm-.056.535a.144.144 0 01-.092-.036c-.092-.071-.203-.143-.332-.232-.13-.089-.259-.16-.37-.232-.055-.035-.055-.053-.073-.07 0 0 0-.019-.019-.019-.018-.017-.037-.088-.037-.16a.195.195 0 01.038-.072c.018 0 .036 0 .055.019.055.036.129.07.184.107.056.035.092.053.148.089l.037.017c.13.072.258.16.37.233.036.017.055.052.073.07.018.036.055.107.037.16.037.072.037.09-.018.126.017 0 0 0 0 0zm-.092.517c-.037 0-.074-.018-.074-.036-.11-.089-.203-.16-.314-.25a3.967 3.967 0 00-.332-.249l-.018-.018c-.056-.035-.056-.053-.056-.071v-.018c-.018-.018-.037-.089-.018-.16.018-.053.037-.072.055-.072.018 0 .037 0 .055.018.13.071.24.16.351.232.111.071.203.143.314.232l.037.017c.037.018.056.054.074.072.037.089.037.142.037.16a.43.43 0 01-.11.143c.017-.018.017 0 0 0zm-.11.517a.248.248 0 01-.093-.054c-.055-.053-.092-.089-.148-.124-.055-.036-.092-.09-.147-.126-.111-.089-.222-.195-.333-.266-.055-.054-.055-.054-.055-.072v-.018c-.019-.036-.038-.107-.019-.16.019-.053.037-.072.055-.072 0 0 .038 0 .056.036.111.071.222.16.332.25l.332.267c.02.018.056.054.056.09a.405.405 0 01.038.16c0 .017-.02.053-.02.07-.018-.017-.037 0-.055.018v.001zm-.167.481s-.037 0-.093-.053c-.092-.09-.184-.197-.276-.285l-.314-.304c-.037-.035-.037-.053-.055-.071v-.018c-.019-.018-.019-.107 0-.16a.12.12 0 01.055-.071c.018 0 .037 0 .055.035.111.09.222.178.333.285.092.071.184.16.277.268l.037.035c.018.018.036.054.055.09a.226.226 0 01.019.16c-.019.036-.038.071-.093.089zm-.185.518c-.018 0-.055-.037-.092-.055l-.258-.303c-.056-.053-.093-.107-.148-.16-.055-.053-.092-.107-.148-.16-.037-.054-.055-.072-.055-.09v-.018c-.019-.035-.019-.106 0-.16.018-.036.018-.054.037-.054l.018-.018c.018 0 .037 0 .056.037.11.107.221.213.295.303.093.089.185.196.295.32a.36.36 0 01.056.09c.018.053.018.124 0 .16 0 .053 0 .072-.056.107zm-.221.462c-.019 0-.074-.035-.074-.053-.074-.107-.148-.196-.24-.321l-.277-.321c-.038-.053-.038-.071-.038-.09v-.017c0-.018-.018-.107.02-.16.018-.054.055-.054.073-.054 0 0 .038.018.056.036.111.107.202.214.277.321l.018.018.222.267.037.036a.132.132 0 01.037.088.244.244 0 010 .161c-.037.054-.055.071-.111.09zm-.259.482c-.018 0-.055-.036-.073-.072l-.222-.32c-.074-.108-.166-.232-.24-.34-.037-.052-.037-.07-.037-.088v-.018c0-.018 0-.107.019-.16.018-.037.055-.054.073-.054.019 0 .038.018.056.036.092.125.184.232.259.338.073.107.147.196.22.303l.02.036c.017.036.036.054.036.09 0 .035.019.106-.018.16-.019.035-.037.053-.093.089zm-.277.445s-.037 0-.073-.071c-.055-.107-.111-.196-.185-.339a.369.369 0 00-.074-.107c-.018-.018-.037-.053-.055-.07a1.54 1.54 0 00-.111-.18c-.037-.053-.037-.07-.037-.088v-.09c0-.017 0-.035.019-.035 0-.018.018-.036.018-.036.037-.035.055-.053.074-.053.018 0 .037.018.055.036l.037.052c.038.036.056.072.093.126.018.018.018.036.037.054.018.035.055.07.074.106.055.09.128.197.202.321l.019.036a.292.292 0 01.037.088v.072c0 .036-.018.054-.018.072-.038.071-.056.088-.111.106.018 0 0 0 0 0zm-.295.446c-.018 0-.055-.036-.073-.072a5.953 5.953 0 00-.167-.338c-.038-.071-.073-.125-.092-.196l-.056-.09-.055-.088c-.018-.054-.037-.072-.037-.09v-.017c0-.018 0-.107.055-.143a.318.318 0 01.074-.053c.019 0 .038.017.056.053.037.072.074.125.11.178.038.054.074.125.111.178.074.126.148.25.203.375 0 .018.019.036.019.053v.054a.41.41 0 01-.038.16c-.036 0-.055.018-.11.036zm-.351.392c-.018 0-.055-.053-.073-.071l-.038-.09-.037-.089c-.018-.035-.018-.052-.037-.088-.018-.036-.018-.054-.036-.09-.056-.143-.13-.267-.185-.392-.018-.053-.018-.071-.018-.089v-.018a.233.233 0 01.055-.143c.038-.035.074-.035.074-.035s.018.017.037.053c.073.125.129.25.203.375.037.053.055.107.093.178l.036.09.038.088.018.036a.192.192 0 01.018.09c0 .07-.018.124-.055.16-.019.017-.037.035-.093.035zm-.369.41c-.019 0-.038-.036-.055-.089-.056-.142-.093-.25-.13-.356a3.387 3.387 0 00-.147-.393c-.019-.07-.019-.089-.019-.107v-.018c0-.017 0-.035.019-.071a.248.248 0 01.055-.071c.038-.035.074-.035.074-.035s.018.017.037.053c.055.124.11.25.166.392.055.125.111.267.148.392.015.034.021.07.018.107 0 .018 0 .036-.018.072 0 .035-.019.052-.038.071-.018.035-.055.052-.11.052v.001zm-.369.357c-.019 0-.055-.054-.055-.09-.038-.124-.075-.267-.111-.374-.018-.071-.037-.125-.056-.196-.018-.036-.055-.16-.073-.196-.02-.053-.02-.071 0-.089v-.018a.25.25 0 01.073-.142c.038-.036.074-.036.074-.036s.018.018.038.053c.018.036.018.071.036.09.019.035.019.07.037.107a.863.863 0 01.074.195c.037.108.073.233.129.357l.018.035c0 .036.02.072 0 .108a.183.183 0 01-.074.142c-.037.035-.055.053-.11.053zm-.407.375c-.017 0-.055-.055-.055-.09-.018-.125-.055-.25-.073-.375-.038-.124-.056-.267-.111-.41-.018-.07 0-.09 0-.107v-.018c0-.035.037-.088.074-.124l.073-.036h.019s.018.018.037.054c.037.125.092.267.129.392.037.16.074.285.11.41v.107a.272.272 0 01-.073.142c-.055.037-.074.037-.13.054zm-.424.302c-.019 0-.038-.053-.038-.089 0-.071-.018-.125-.018-.196-.017-.072-.017-.125-.037-.196-.018-.143-.055-.285-.073-.41v-.108c0-.035.037-.088.093-.124.036-.018.054-.018.073-.018h.019s.018.036.037.054c.037.125.073.267.092.41.018.07.037.125.037.178v.035c.018.054.018.107.036.16v.143c-.018.036-.037.108-.073.143-.019.018-.038.018-.056.036-.055-.018-.073-.018-.092-.018zm-.887.588h-.036a.189.189 0 01-.038-.107v-.392c0-.16-.018-.285-.018-.427v-.018c0-.054 0-.072.019-.09v-.018c.019-.017.056-.088.111-.106.037-.018.055-.018.073-.018h.02s.017.018.017.053c.019.143.038.268.038.41.018.125.018.25.018.375v.035c0 .036 0 .072-.018.107-.019.036-.056.107-.093.125-.037.053-.055.072-.093.072zm.426-.285c-.019 0-.038-.053-.038-.09 0-.124-.018-.267-.037-.391v-.018c0-.053-.017-.125-.017-.196 0-.072-.02-.125-.038-.214v-.125s0-.018.038-.053l.036-.036.037-.035c.019-.018.055-.018.073-.018h.02c0 .018.018.035.018.053.018.071.018.125.037.214.018.071.018.142.037.214.018.143.036.285.055.41 0 .036 0 .071-.019.107 0 .018-.018.035-.037.071-.018.018-.037.053-.055.053-.037.054-.056.054-.11.054.018 0 0 0 0 0zm-1.385.731h-.056c-.018-.018-.018-.053-.018-.107 0-.072.018-.125.018-.196l.019-.09v-.107c.019-.16.019-.302.037-.427v-.018c0-.053.018-.071.018-.09 0 0 0-.016.019-.016 0 0 .018-.018.037-.055.037-.035.055-.035.073-.052.019 0 .038-.019.056-.019h.037c.018.018.018.036.018.072v.427l-.018.197c0 .07 0 .125-.019.196v.053a.134.134 0 01-.037.09.653.653 0 01-.11.124c-.038.018-.056.018-.075.018zm.48-.214h-.037a.185.185 0 01-.038-.09c0-.07 0-.142.02-.195v-.624c0-.054.018-.071.018-.09 0 0 0-.017.018-.017.018-.018.056-.09.11-.107.02 0 .038-.017.056-.017h.038s.018.017.018.052c0 .143.018.286.018.411v.427c0 .037-.018.072-.018.09-.038.053-.074.106-.111.124-.055.036-.074.036-.092.036zm-1.514.57c-.019 0-.037 0-.074-.017-.018-.018-.018-.072 0-.107.037-.125.055-.25.092-.375a.85.85 0 00.037-.213c.019-.072.019-.125.037-.197v-.018c.018-.052.018-.071.038-.071 0 0 0-.017.018-.017a.387.387 0 01.129-.09h.037c.02-.001.04.005.055.018 0 0 .019.036 0 .072 0 .071-.018.124-.037.213v.018a.615.615 0 01-.037.178l-.055.34v.035l-.019.036a.134.134 0 01-.037.089.258.258 0 01-.129.106c-.018-.017-.037 0-.055 0zm.518-.16c-.02 0-.038 0-.057-.018-.018-.017-.018-.07-.018-.107.018-.124.055-.25.074-.375.019-.123.037-.249.055-.41.019-.07.019-.07.038-.088 0 0 0-.018.018-.018.018-.018.055-.071.129-.09h.055c.019 0 .038 0 .056.019 0 0 .018.017.018.052v.02c-.018.124-.018.266-.037.409l-.056.427a.133.133 0 01-.036.09.258.258 0 01-.13.107c-.074-.018-.091-.018-.11-.018zm-1.552.375c-.037 0-.056 0-.093-.018-.018-.018 0-.072 0-.107l.02-.036c.036-.107.091-.214.128-.32.056-.143.092-.286.13-.393.018-.053.037-.071.055-.071l.019-.018s0-.018.055-.035c.037-.018.055-.037.092-.037h.018c.056 0 .075.018.075.018v.072c-.038.142-.075.285-.111.41-.019.052-.037.088-.037.142l-.019.036c-.018.036-.018.071-.037.107 0 .018-.018.035-.018.071l-.018.035a.388.388 0 01-.056.09c-.056.053-.111.089-.148.089-.037-.035-.055-.035-.055-.035zm.498-.09c-.018 0-.037 0-.074-.018-.018-.017-.018-.07 0-.107l.056-.178a.529.529 0 00.037-.142l.018-.036c.038-.124.075-.25.111-.41.018-.053.038-.071.038-.09 0 0 0-.017.018-.017.018-.018.073-.071.129-.071h.037c.02-.001.04.005.055.017 0 0 .019.018 0 .072-.019.142-.056.267-.092.41a1.68 1.68 0 00-.056.213 2.945 2.945 0 01-.055.197c0 .035-.018.053-.056.09-.018.035-.092.088-.129.088 0-.018-.018-.018-.037-.018zm-1.55.178c-.056 0-.074 0-.13-.035-.018-.018 0-.071.018-.107.056-.107.112-.214.186-.339.055-.107.129-.232.184-.375v-.017c.037-.054.037-.054.056-.071l.018-.018a.281.281 0 01.147-.053h.038c.018 0 .018 0 .037.017.018 0 .018.018.018.018 0 .018 0 .036-.018.071l-.075.197c-.018.017-.018.053-.037.071a.945.945 0 00-.055.125c-.055.107-.11.232-.165.338l-.02.036a.141.141 0 01-.073.071c0 .018-.074.071-.13.071zm.498-.035c-.037 0-.055 0-.092-.036-.019-.017 0-.071.018-.107l.037-.07c.037-.108.093-.197.13-.286l.037-.09.036-.106c.019-.072.055-.125.074-.197.037-.071.037-.071.056-.088l.018-.018a.28.28 0 01.147-.053h.02c.055 0 .073.017.073.017v.071a5.337 5.337 0 01-.148.41c-.055.125-.11.268-.166.392-.019.036-.037.072-.055.09-.019.018-.038.035-.056.035-.037.018-.055.036-.073.036h-.056zm-1.588 0c-.037 0-.055 0-.074-.018-.018 0-.037-.018-.055-.035-.018-.018.018-.072.037-.108.074-.107.166-.232.221-.32.075-.107.148-.214.222-.357.037-.054.055-.054.074-.071 0 0 .019 0 .019-.018.018-.018.073-.036.129-.036h.018c.055 0 .074.036.074.036s0 .035-.019.053a7.871 7.871 0 01-.202.357.72.72 0 00-.093.16l-.093.196-.018.036a.142.142 0 01-.074.072.455.455 0 01-.165.052v.001zm.536.035a.274.274 0 01-.13-.035c-.018-.018 0-.053.019-.107.056-.107.129-.214.203-.339.093-.142.148-.267.203-.375a.495.495 0 01.074-.088l.019-.018a.227.227 0 01.147-.053h.019c.055 0 .074.035.092.035 0 0 0 .036-.018.053-.056.143-.13.25-.185.375l-.037.071c-.018.036-.038.089-.074.125-.037.071-.074.125-.11.178a.141.141 0 01-.074.072c-.038.071-.093.106-.148.106zm-1.588-.196h-.037c-.056-.017-.074-.017-.11-.07 0-.019 0-.054.036-.09.093-.107.185-.196.259-.285.074-.09.166-.197.24-.285l.037-.036c.037-.036.055-.053.073-.053 0 0 .019 0 .019-.018.018 0 .056-.018.111-.018h.055c.055.018.074.036.074.053 0 .018 0 .036-.019.054-.037.035-.055.09-.092.125l-.038.053c-.036.054-.091.107-.128.178-.074.09-.148.179-.24.303l-.037.036c-.018.018-.055.053-.092.072-.019 0-.037.017-.074.017 0-.036-.019-.036-.038-.036h.001zm.517.09h-.019c-.055-.018-.073-.018-.129-.054-.018-.018.019-.072.038-.089l.055-.071c.055-.072.129-.16.184-.233.092-.106.166-.23.259-.338.037-.053.055-.053.073-.071 0 0 .019 0 .019-.018 0 0 .037-.018.056-.018h.092c.026.007.051.02.073.036 0 .018 0 .035-.018.071a4.027 4.027 0 01-.24.357c-.092.125-.166.232-.259.338-.018.036-.055.054-.073.072-.019 0-.074.018-.111.018zM9.12 20.11h-.055a.237.237 0 01-.111-.07c0-.019.018-.055.055-.09l.074-.071.074-.072c.055-.053.11-.09.148-.125.092-.089.184-.177.314-.285.018-.018.037-.036.055-.036h.018s.019 0 .019-.017c.018 0 .037-.018.073-.018.038 0 .056 0 .075.018.03.008.056.027.073.052 0 0 0 .037-.037.055-.11.125-.203.213-.295.302l-.148.143-.147.142-.037.037a.41.41 0 01-.093.053c.038-.018 0-.018-.055-.018zm.499.161H9.58a.236.236 0 01-.11-.072c0-.017.018-.071.056-.089l.276-.267c.056-.053.092-.107.148-.16.056-.054.092-.107.148-.161.055-.053.073-.053.092-.053h.018c.019 0 .056-.018.093-.018.018 0 .055 0 .074.017.037 0 .055.018.055.037l.018.017c0 .018 0 .036-.037.054-.055.071-.129.142-.184.213-.038.036-.056.072-.092.107-.093.107-.203.214-.296.321a.102.102 0 01-.092.054c-.038-.018-.092 0-.13 0zm-1.478-.57c-.037 0-.073 0-.092-.019-.055-.018-.073-.035-.092-.089 0-.017.037-.052.055-.071l.332-.214c.13-.09.26-.178.351-.25h.018c.056-.035.056-.035.094-.035h.054c.038 0 .092.018.13.035.056.018.056.054.056.072 0 .018-.02.036-.038.053-.11.107-.221.178-.332.268-.092.07-.203.16-.314.232l-.037.017c-.037.018-.074.036-.093.036-.036-.036-.054-.036-.092-.036zm.462.213c-.018 0-.055 0-.074-.018-.056-.017-.073-.035-.11-.088 0-.018.037-.072.054-.09.093-.071.204-.143.315-.232.129-.107.24-.196.332-.267.056-.036.074-.036.092-.053h.093c.037 0 .074 0 .092.017.055.018.055.054.055.054s-.018.036-.037.053c-.092.09-.203.197-.314.285-.11.107-.24.197-.332.268-.037.018-.074.036-.092.053.018.018-.018.018-.074.018zm-1.33-.73c-.036 0-.11 0-.165-.037-.056-.035-.056-.053-.074-.106 0-.018.037-.054.074-.071.037-.018.055-.036.092-.036.037-.018.055-.036.092-.036.038-.017.056-.035.093-.053.037-.018.055-.036.092-.054.11-.053.222-.125.369-.213h.018c.056-.018.075-.018.093-.018h.037c.037 0 .092.018.147.035.056.036.056.071.056.071 0 .018-.018.036-.056.054-.129.09-.24.16-.369.232l-.166.106a.383.383 0 01-.093.054c-.036.018-.054.036-.092.053l-.037.018h-.11zm.407.267c-.055 0-.092 0-.111-.018-.056-.036-.074-.053-.092-.089 0-.018.037-.054.074-.071.11-.072.221-.125.35-.197.148-.089.259-.16.37-.232.055-.035.073-.035.092-.035H8.4c.037 0 .092 0 .129.035l.056.054v.018s-.019.018-.038.054a4.366 4.366 0 01-.314.213l-.036.036c-.13.09-.24.16-.37.232a.144.144 0 01-.091.035c-.02-.035-.038-.035-.056-.035zm-1.275-.873s-.018 0 0 0c-.055 0-.129-.018-.166-.055a.227.227 0 01-.074-.106c0-.018.056-.054.074-.071.13-.036.258-.09.37-.143.055-.018.128-.054.202-.072a1.64 1.64 0 00.204-.088h.018c.055-.018.055-.018.074-.018h.037c.037 0 .11.018.147.053.038.036.038.071.038.071 0 .018-.019.018-.056.036a.696.696 0 01-.203.09l-.203.088c-.092.036-.167.071-.259.107l-.11.036-.038.017c0 .037-.036.055-.055.055zm.406.303a.379.379 0 01-.166-.037c-.055-.035-.055-.053-.073-.106 0-.018.055-.054.073-.072a6.69 6.69 0 00.37-.16c.11-.054.24-.125.388-.178.073-.018.073-.018.11-.018h.019c.037 0 .11.018.147.053.038.036.056.071.056.071 0 .018-.019.036-.056.054-.121.08-.251.146-.388.196-.147.071-.277.142-.387.197H6.81zM5.65 17.846h-.037c-.056-.018-.13-.035-.148-.071-.038-.035-.056-.053-.056-.124 0-.018.056-.055.092-.055.112-.017.26-.052.388-.088.13-.036.278-.072.425-.107h.147c.038 0 .112.035.148.071a.113.113 0 01.038.09s-.019.017-.056.034c-.13.055-.277.09-.406.126-.148.053-.259.071-.37.106l-.037.018h-.129.001zm.368.357H5.98c-.055 0-.129-.018-.147-.053l-.056-.054c0-.018-.018-.036-.018-.053 0-.018.037-.036.092-.054.13-.036.24-.072.388-.107.138-.04.274-.087.406-.142.038-.018.056-.018.074-.018h.038c.036 0 .11.018.147.071a.113.113 0 01.037.09s-.018.017-.056.035a8.3 8.3 0 01-.406.16c-.074.018-.129.053-.202.071l-.093.036-.111.036c-.018-.018-.037-.018-.056-.018zm-.738-.749h-.055c-.019 0-.038-.018-.075-.018a.254.254 0 01-.073-.052c-.037-.055-.055-.073-.055-.126 0-.018.055-.036.092-.054a2.8 2.8 0 00.387-.071c.148-.035.296-.052.425-.088h.111c.019 0 .038.017.074.035.037.018.055.036.074.053.037.036.037.071.018.09 0 0-.018.017-.055.035-.13.036-.277.072-.425.107-.13.036-.277.071-.425.09H5.28v-.001zm-.314-.41c-.018 0-.037 0-.074-.018a.405.405 0 01-.147-.089c-.038-.053-.038-.071-.038-.124 0-.018.038-.036.093-.036a3.1 3.1 0 01.388-.036l.221-.035a.553.553 0 00.167-.037h.184a.24.24 0 01.13.09c.037.071.037.107.037.125 0 0-.019.017-.056.017-.055.018-.093.018-.147.036-.02 0-.056.018-.075.018-.055.018-.129.018-.184.036h-.038l-.387.053h-.074zm-.295-.427c-.037 0-.055 0-.093-.019-.037-.017-.11-.052-.129-.088-.037-.054-.037-.072-.037-.126.019-.018.056-.035.11-.035h.407c.148-.018.296-.018.443-.036h.018c.056 0 .056 0 .075.018h.018c.018 0 .093.053.13.107.011.028.018.059.018.09 0 0-.018.017-.055.017-.13.018-.278.036-.426.053l-.22.018c-.093-.018-.167 0-.26 0 .02 0 0 0 0 0v.001zm-.258-.446c-.038 0-.075 0-.111-.018-.02 0-.038-.018-.074-.035-.019-.018-.056-.037-.056-.054-.018-.054-.037-.072-.018-.125 0-.018.055-.036.092-.036h.407c.128 0 .276 0 .442-.017h.019c.055 0 .074.017.092.017h.019c.018 0 .037.018.055.036.018.018.056.053.056.071a.23.23 0 01.018.09s-.018.017-.056.017c-.165.018-.294.036-.424.036s-.258.018-.388.018h-.074zm.184-.446c-.148 0-.295 0-.442-.018a.268.268 0 01-.112-.036c-.037-.017-.092-.052-.11-.106-.02-.053-.038-.072-.02-.125 0-.018.038-.018.093-.018h.019c.129.018.258.018.388.035h.442c.074 0 .093.018.111.018h.019c.019.018.092.054.11.108.019.052.019.088 0 .088-.018 0-.037.018-.074.018h-.424v.036zm.202-.427c-.128 0-.258 0-.423-.018-.13 0-.24-.018-.37-.036H3.95a.145.145 0 01-.093-.036.313.313 0 01-.11-.107c-.038-.053-.055-.071-.038-.124 0-.018.038-.018.075-.018h.037l.387.053c.167.018.314.036.425.036h.019c.055 0 .073.017.092.017 0 0 .018 0 .018.018.019.018.093.072.11.125.02.054 0 .09 0 .09h-.074zm-.165-.447c-.018 0-.018 0 0 0-.148-.018-.277-.035-.425-.035H4.19c-.128-.018-.276-.036-.424-.071a.144.144 0 01-.092-.036c-.038-.036-.093-.071-.111-.124-.037-.019-.037-.037-.037-.055 0-.017 0-.035.019-.053.018-.018.036-.018.055-.018h.074c.055.018.11.018.166.036l.203.036c.147.018.277.053.425.07.055.019.074.019.092.037 0 0 .018 0 .018.018a.36.36 0 01.093.124c.018.054 0 .09 0 .09 0-.018-.018-.018-.037-.018zm-.166-.427H4.43a5.714 5.714 0 01-.425-.071c-.129-.018-.258-.054-.388-.072l-.037-.018a.144.144 0 01-.092-.036.67.67 0 01-.11-.124c-.019-.053-.019-.09 0-.124.018-.018.037-.018.055-.018h.055l.388.106c.129.036.259.054.425.09h.018c.056.017.074.017.093.035l.018.018c.039.034.07.077.092.125.018.053 0 .089-.018.089h-.038.001zm-.13-.463h-.036c-.148-.037-.278-.055-.425-.09-.167-.036-.296-.089-.425-.124-.037-.018-.055-.036-.092-.054a.76.76 0 01-.092-.125c-.019-.053 0-.071.018-.125 0 0 .019-.017.037-.017s.037 0 .074.017c.129.036.258.09.369.125l.167.053.036.018c.056.019.13.036.203.054.075.018.075.036.093.054l.018.017c.019.018.074.071.074.143v.072c0 .017-.019.017-.019.017.019-.036.019-.036 0-.036zm-.11-.446h-.038a5.217 5.217 0 01-.405-.125c-.111-.036-.24-.072-.37-.125l-.037-.018a.26.26 0 01-.073-.053c-.056-.054-.075-.107-.092-.143 0-.053 0-.09.017-.125h.038c.037 0 .055.018.074.018l.11.036c.093.035.185.072.258.107.13.053.26.089.407.142.035.01.067.028.092.054l.019.018c.018.018.074.09.074.142 0 .054-.02.09-.02.09-.036-.036-.036-.018-.054-.018zm-.074-.482c-.018 0-.038 0-.056-.018a3.664 3.664 0 00-.406-.142l-.203-.09a1.843 1.843 0 01-.202-.088.254.254 0 01-.075-.054c-.018-.036-.055-.089-.055-.142v-.072c0-.018.018-.035.037-.053h.018c.037 0 .056.018.074.018.129.07.259.125.351.178.129.071.277.124.388.178.055.036.073.036.092.053 0 0 0 .019.019.019a.26.26 0 01.054.142c.02.036-.018.072-.036.072.019 0 .019 0 0 0zm-.038-.463c-.018 0-.018 0-.054-.018-.148-.053-.278-.107-.407-.16a6.433 6.433 0 00-.35-.161l-.038-.018a.142.142 0 01-.073-.071c-.019-.035-.074-.089-.074-.143 0-.053.018-.071.037-.124h.018c.038 0 .074.018.074.018l.166.089.093.053.092.053c.148.072.277.143.388.197h.018c.038.035.056.035.074.053 0 0 0 .018.018.018 0 0 .019.018.038.053a.156.156 0 01.018.09c0 .053-.018.071-.038.071zm-.018-.482c-.018 0-.037 0-.055-.018a.695.695 0 00-.203-.088l-.055-.036c-.038-.018-.092-.036-.13-.071-.11-.072-.24-.125-.387-.214a.142.142 0 01-.074-.071c-.019-.018-.019-.036-.038-.054v-.072c0-.053.019-.07.057-.124h.017c.02 0 .056.018.093.035.13.072.24.143.332.215l.093.052.092.054.185.107c.055.036.055.054.073.072 0 0 0 .018.019.018.019.017.038.089.038.142-.02.035-.038.053-.057.053zm.019-.463c-.019 0-.037 0-.055-.018l-.093-.052-.092-.054c-.038-.018-.055-.037-.092-.054-.038-.018-.056-.036-.092-.053-.13-.072-.223-.143-.333-.214l-.037-.018c-.037-.019-.055-.054-.074-.072-.019-.035-.055-.106-.037-.16 0-.053.018-.072.056-.125h.018c.037 0 .074.018.092.036.093.07.204.142.333.232.11.07.222.143.35.231h.02c.055.036.055.054.073.071 0 0 0 .018.019.018.018.018.036.09.036.143 0 .018 0 .018-.019.036-.054.035-.054.035-.073.053zm.038-.482c-.02 0-.038 0-.057-.017a3.742 3.742 0 01-.35-.232l-.055-.036c-.038-.035-.075-.053-.13-.089-.055-.035-.11-.089-.166-.124l-.074-.072c-.037-.089-.037-.142-.037-.16.019-.053.019-.071.055-.107h.02c.017 0 .054.018.091.036.093.089.203.16.314.25.13.088.24.177.351.248.056.037.056.055.074.072v.018c.018.018.037.089.018.16-.019.036-.055.053-.055.053zm.073-.445c-.019 0-.038 0-.056-.035a4.04 4.04 0 01-.332-.25.916.916 0 01-.147-.124c-.056-.037-.093-.09-.148-.126l-.038-.035c-.018-.018-.054-.054-.054-.071-.02-.036-.038-.107-.02-.16V9.86c0-.018 0-.018.02-.018.018-.017.018-.035.055-.052.034.01.066.028.092.052.055.054.092.09.148.126l.074.07c.018.019.055.036.074.072.129.107.24.196.332.267.037.036.055.054.055.071v.018c.019.036.037.107.019.16a.219.219 0 01-.074.072zm.092-.482c-.018 0-.037 0-.055-.035-.056-.036-.111-.089-.167-.142l-.055-.053a.486.486 0 00-.11-.09c-.093-.089-.204-.195-.315-.285a.387.387 0 01-.055-.089c-.018-.072-.037-.125-.018-.16a.227.227 0 01.073-.108s.038 0 .092.054c.093.09.186.196.278.285l.314.303c.037.054.055.072.055.09v.017s0 .018.019.071v.09c-.019.035-.056.053-.056.053zm.13-.445c-.02 0-.038 0-.056-.035-.056-.054-.111-.09-.148-.143l-.074-.071-.074-.072a1.865 1.865 0 01-.258-.285l-.037-.035a.387.387 0 01-.055-.09c-.019-.035-.019-.107 0-.16.018-.053.037-.071.074-.107.018 0 .055.018.092.054.092.106.166.196.259.303.018.035.055.052.073.071l.074.071c.056.054.093.107.148.16.037.036.037.054.037.072v.018c.018.017.018.107 0 .16-.019.072-.056.09-.056.09V9.77zm.147-.445s-.037-.018-.056-.036a2.143 2.143 0 01-.277-.32c-.055-.055-.091-.108-.147-.161l-.055-.053c-.038-.036-.056-.072-.093-.108a.133.133 0 01-.037-.089c-.018-.035-.018-.107 0-.16.018-.054.037-.072.093-.09.018 0 .073.036.073.054.074.089.148.196.24.32.075.108.167.215.278.322.037.054.037.07.054.09v.017c0 .035.02.106-.017.16-.02.036-.038.054-.056.054zm.184-.428c-.018 0-.037-.018-.055-.036a3.935 3.935 0 01-.258-.321 2.426 2.426 0 01-.222-.303l-.018-.035a.133.133 0 01-.038-.09c0-.035-.018-.107.02-.16.018-.053.037-.071.092-.09.018 0 .055.037.074.072l.11.16.111.161c.074.107.166.232.24.339v.017c.037.054.037.072.037.09v.018c0 .018 0 .107-.018.16-.038 0-.056.018-.075.018zm.223-.427c-.02 0-.038-.02-.056-.036-.037-.054-.092-.126-.13-.179l-.055-.09-.055-.088c-.074-.125-.148-.232-.222-.357-.018-.036-.037-.071-.037-.089v-.071c0-.035.019-.053.019-.071.037-.054.055-.072.092-.09 0 0 .037 0 .074.072.055.107.11.196.184.339l.056.089.055.089c.038.071.075.125.111.178.037.053.037.071.037.107v.09c0 .017 0 .035-.019.035 0 .018-.018.036-.018.036 0 .017-.018.035-.037.035zm.24-.41c-.02 0-.038-.019-.056-.055l-.056-.089-.055-.088c-.037-.054-.073-.126-.111-.179a2.009 2.009 0 01-.184-.339l-.02-.035c-.017-.036-.017-.071-.017-.09 0-.053.018-.124.037-.16.036-.053.055-.053.11-.071.019 0 .056.036.074.071.056.125.111.232.167.339.055.107.129.232.202.374v.018a.231.231 0 01.019.089v.018c0 .036 0 .107-.056.142l-.018.018c-.018 0-.018.018-.037.018v.018zM5.5 7.65c-.018 0-.037-.018-.055-.053l-.037-.054-.166-.321a6.854 6.854 0 01-.185-.392c-.018-.036-.018-.071-.018-.09 0-.07.018-.124.056-.16l.054-.053c.02 0 .038-.018.056-.018.019 0 .056.054.074.072.037.106.093.213.148.356.056.125.11.25.185.375a.231.231 0 01.018.088v.018a.233.233 0 01-.055.143c-.019.089-.056.089-.075.089zm.296-.375c-.019 0-.038-.017-.056-.052-.055-.126-.128-.268-.165-.375-.056-.125-.093-.232-.148-.357l-.019-.036c-.019-.035-.019-.071-.019-.106.01-.051.028-.1.056-.143a.236.236 0 01.111-.071c.019 0 .037.035.056.089.055.142.092.25.128.357.056.124.093.267.167.392v.018c.018.052.018.071.018.088v.018c0 .018 0 .036-.018.072-.019.036-.037.053-.056.07-.018.037-.055.037-.055.037v-.001zm.314-.356c-.019 0-.037-.017-.037-.053A.85.85 0 016 6.67c-.019-.036-.019-.071-.037-.107-.019-.035-.019-.071-.037-.09l-.13-.409c0-.036-.018-.071 0-.107 0-.036.02-.107.074-.143.038-.036.056-.053.111-.053.019 0 .056.053.056.089.037.125.074.267.11.375l.019.035.055.16c.019.036.019.072.038.108.018.035.018.07.036.106a.236.236 0 01.019.09v.017a.25.25 0 01-.074.143c-.092.035-.129.035-.129.035zm.332-.338l-.055-.054c-.037-.125-.092-.267-.13-.392-.036-.125-.073-.232-.092-.375l-.018-.035v-.107a.27.27 0 01.074-.143.17.17 0 01.13-.053c.017 0 .054.053.054.089.019.125.055.25.074.374.038.125.056.267.111.41v.018c.018.054 0 .071 0 .09v.017c0 .035-.037.09-.074.125-.019.018-.037.036-.074.036.018 0 .018 0 0 0zm.37-.321s-.02 0 0 0l-.056-.054a2.686 2.686 0 01-.092-.41 3.186 3.186 0 01-.074-.41V5.28c.018-.036.037-.107.074-.142.037-.036.073-.036.129-.036.018 0 .037.053.037.089 0 .053.018.124.018.196 0 .036.019.09.019.125 0 .018 0 .035.018.053.019.143.056.285.074.41V6.1c0 .036-.037.089-.092.124-.019.018-.037.036-.056.036zm.369-.303h-.019c0-.018-.018-.036-.018-.054l-.019-.071-.055-.339-.055-.375v-.052c0-.036 0-.072.018-.09 0-.018.018-.036.037-.071.018-.018.037-.054.055-.054.037-.035.074-.035.111-.035h.019c.018 0 .037.053.037.089 0 .125.018.249.037.392.018.143.036.285.055.41v.125c0 .035-.056.089-.093.125h-.11zm.83-.518h-.037s-.018-.017-.018-.052c-.018-.162-.018-.285-.018-.41V4.53c0-.036.018-.072.018-.09.037-.052.074-.106.111-.124.037-.018.056-.018.092-.018h.038a.185.185 0 01.036.089c0 .125-.018.25-.018.392v.446c0 .054-.019.072-.019.09v.017c-.018.018-.056.089-.111.107-.037-.018-.055 0-.074 0zm-.424.233h-.019s-.018-.018-.018-.054l-.018-.214v-.071c0-.036 0-.09-.02-.143-.017-.142-.017-.285-.017-.427 0-.036 0-.072.018-.108.019-.036.055-.107.092-.124.037-.018.074-.036.093-.036h.037a.19.19 0 01.036.089v.392c0 .16.02.285.02.428 0 .071 0 .089-.02.107v.018a.338.338 0 01-.11.125c-.018 0-.018.018-.037.018h-.038.001zm1.292-.66c-.018 0-.037 0-.037-.018 0 0-.018-.018-.018-.072 0-.16.018-.303.037-.41v-.035c.018-.107.018-.232.037-.338v-.036c0-.036.018-.072.037-.09 0 0 .018-.035.055-.053.018-.018.056-.036.074-.053.037-.018.055-.018.074-.018.018 0 .037 0 .056.018.017.017.017.071.017.106-.018.126-.055.25-.073.375l-.019.107-.018.107c-.019.071-.019.143-.019.214-.018.053-.018.071-.037.089 0 0 0 .017-.018.017 0 0-.019.018-.037.054a.407.407 0 01-.092.054c.018-.036 0-.018-.019-.018zm-.424.196c-.019 0-.038 0-.038-.018-.018-.018-.018-.036-.018-.071V4.69c0-.125.019-.25.019-.41 0-.036.018-.071.037-.09a.337.337 0 01.11-.124c.037-.018.056-.018.074-.018h.056c.018.018.018.054.018.107 0 .071-.018.125-.018.196 0 .072-.019.125-.019.196-.018.16-.018.303-.037.428 0 .072-.018.072-.018.09 0 0 0 .017-.019.017 0 0-.018.018-.037.054-.037.035-.055.035-.073.052 0 0-.02.019-.038.019zm1.365-.517c-.036 0-.054-.018-.054-.018 0-.018-.019-.036 0-.071.018-.142.054-.268.092-.41a.615.615 0 00.037-.179l.055-.177.018-.036c0-.036.019-.054.056-.09.019-.035.092-.089.13-.089h.054c.019 0 .038 0 .075.018.018.018.018.071 0 .107-.02.054-.038.09-.038.143l-.018.053-.056.16-.018.037a5.868 5.868 0 00-.11.409v.036c-.02.018-.02.035-.02.053 0 0 0 .018-.017.018l-.019.018c-.019.018-.073.072-.129.072-.019-.054-.038-.054-.038-.054zm-.46.142h-.056c0-.017-.018-.035 0-.07l.055-.375v-.036c.019-.142.056-.285.075-.41 0-.035.018-.053.036-.09a.257.257 0 01.13-.106c.037 0 .055-.018.074-.018.018 0 .036 0 .073.018.019.018.019.072.019.107-.038.125-.056.25-.092.375-.02.071-.038.142-.038.214l-.018.07c0 .054-.019.09-.019.143-.018.072-.018.072-.037.09 0 0 0 .018-.018.018a.388.388 0 01-.13.088c-.037-.017-.037-.017-.055-.017v-.001zm1.421-.356c-.055 0-.074-.018-.074-.018v-.071c.037-.107.092-.25.129-.392.037-.107.092-.232.148-.357l.018-.035a.388.388 0 01.056-.09l.056-.053c.036-.018.054-.018.073-.036h.038c.036 0 .054 0 .091.036.019.018 0 .072-.018.107-.056.107-.111.232-.166.356-.037.072-.056.143-.074.197l-.074.195v.018c-.018.054-.037.054-.056.072l-.018.018s-.018.018-.055.035c0 .018-.038.018-.074.018.018 0 0 0 0 0zm-.462.09c-.055 0-.073-.019-.073-.019v-.07c.037-.143.073-.267.11-.41a4.74 4.74 0 01.13-.392.388.388 0 01.055-.09c.055-.053.11-.089.147-.089h.038a.17.17 0 01.092.018c.018.018 0 .072 0 .107-.019.036-.019.054-.037.09-.019.035-.019.052-.037.088l-.037.09-.038.107c-.054.142-.091.285-.128.391-.018.054-.037.072-.055.09 0 0 0 .018-.019.018 0 0-.019.018-.056.036a.144.144 0 01-.092.035zm1.459-.18c-.074 0-.092-.035-.092-.035s0-.036.018-.053c.055-.125.13-.25.185-.375a5.75 5.75 0 01.184-.338l.018-.036a.141.141 0 01.075-.071c.037-.018.092-.054.147-.054.056 0 .093.018.13.036 0 .018 0 .054-.02.107-.073.107-.128.214-.202.339a3.602 3.602 0 00-.203.374v.018c-.038.053-.038.053-.056.071 0 0-.018 0-.018.018-.055-.018-.11 0-.166 0zm-.499.037c-.055 0-.073-.018-.092-.036 0-.018 0-.036.019-.053.018-.072.055-.125.073-.196l.019-.036a.62.62 0 01.073-.161c.056-.142.13-.267.185-.374a.248.248 0 01.056-.071c.018-.018.092-.072.147-.072.056 0 .075 0 .13.036.018.018 0 .072-.019.107-.055.107-.129.232-.184.339-.075.124-.13.249-.185.374-.037.053-.037.071-.055.09 0 0-.019 0-.019.017-.018 0-.073.036-.148.036zM7.402 16.688v-.25h.37c.407 0 .701-.125.868-.374.111-.143.148-.5.148-1.016v-6.06c0-.59-.075-.946-.203-1.106-.185-.197-.462-.303-.832-.303h-.369v-.25h3.951c1.44 0 2.548.16 3.305.482a3.871 3.871 0 011.828 1.586c.462.748.683 1.605.683 2.567 0 1.301-.406 2.389-1.237 3.262-.922.98-2.326 1.461-4.21 1.461H7.402zm2.77-.678c.61.125 1.108.196 1.514.196 1.108 0 2.031-.374 2.752-1.123.737-.766 1.088-1.783 1.088-3.066s-.368-2.317-1.088-3.066c-.72-.748-1.663-1.122-2.807-1.122-.425 0-.922.07-1.459.195v7.986z",
    fill: "white"
  }));
};

SvgDnr.displayName = "SvgDnr";
SvgDnr.defaultProps = {
  size: 24,
  color: "#B8B8B8"
};

function _extends$gA() { _extends$gA = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gA.apply(this, arguments); }
var Svg$gw = styled("svg")({
  flex: "none"
}, space, color);

var SvgDnt = function SvgDnt(props) {
  return createElement(Svg$gw, _extends$gA({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.806 14.325c.395-.02.772-.172 1.069-.433-.413 2.112-1.568 4.19-3.55 5.333-1.517.883-3.413 1.177-5.256.952-.277-.796-1-1.645-2.258-2.285-1.982-1.021-2.913-2.788-3.758-1.922a.922.922 0 00-.19.26 3.263 3.263 0 01-.103-.243C3.14 11.97 4.76 7.935 8 5.044c1.93-1.715 4.188-1.524 6.205-.589a1.021 1.021 0 00-.38.814V9.32a4.076 4.076 0 00-5.208.944 4.124 4.124 0 00.078 5.316 4.076 4.076 0 005.234.788 1.048 1.048 0 002-.45V5.476c1.55 1.091 2.791 2.476 3.36 3.429.277.478.475.999.586 1.541-.244-.18-.528-.3-.827-.346-.638-.035-1.12.831-.793 2.077.276 1.127-.069 2.114.551 2.148zm-7.772.069c-2.172-1.246-.345-4.45 1.827-3.203.655.364.724 1.524.603 2.268-.224 1.282-1.43 1.507-2.43.935zm1.017-8.277c-.483.017-.827.606-.81.866.017.26.379.416.878.242.449-.156.863-.052.845-.312-.018-.259-.448-.813-.913-.796z",
    fill: "white"
  }));
};

SvgDnt.displayName = "SvgDnt";
SvgDnt.defaultProps = {
  size: 24,
  color: "#2C398F"
};

function _extends$gB() { _extends$gB = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gB.apply(this, arguments); }
var Svg$gx = styled("svg")({
  flex: "none"
}, space, color);

var SvgDoge = function SvgDoge(props) {
  return createElement(Svg$gx, _extends$gB({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M9.936 10.957h3.236v1.715H9.935v3.613h2.04c.808 0 1.47-.108 1.984-.327.514-.219.918-.52 1.211-.908a3.3 3.3 0 00.597-1.361A8.548 8.548 0 0015.925 12a8.548 8.548 0 00-.157-1.689 3.297 3.297 0 00-.597-1.361c-.293-.387-.697-.69-1.211-.908-.515-.219-1.176-.327-1.983-.327H9.936v3.243zm-2.074 1.715H6.75v-1.714h1.112V6h4.911c.908 0 1.693.157 2.357.47a4.392 4.392 0 011.626 1.287c.42.543.732 1.178.937 1.907.205.728.307 1.507.307 2.336a8.603 8.603 0 01-.308 2.336 5.504 5.504 0 01-.937 1.908c-.42.543-.961.971-1.625 1.286-.664.313-1.45.47-2.357.47H7.862v-5.328z",
    fill: "white"
  }));
};

SvgDoge.displayName = "SvgDoge";
SvgDoge.defaultProps = {
  size: 24,
  color: "#C3A634"
};

function _extends$gC() { _extends$gC = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gC.apply(this, arguments); }
var Svg$gy = styled("svg")({
  flex: "none"
}, space, color);

var SvgDrgn = function SvgDrgn(props) {
  return createElement(Svg$gy, _extends$gC({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    opacity: 0.6,
    d: "M7.05 15.585h2.113L9.11 10.09l7.871 9.992-.025-11.799h-2.08l.054 5.55L7.053 3.816l-.003 11.77z",
    fill: "white"
  }), createElement("path", {
    d: "M7.05 7.465l.012-3.638 9.887 12.564.041 3.706L7.05 7.465z",
    fill: "white"
  }));
};

SvgDrgn.displayName = "SvgDrgn";
SvgDrgn.defaultProps = {
  size: 24,
  color: "#C91111"
};

function _extends$gD() { _extends$gD = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gD.apply(this, arguments); }
var Svg$gz = styled("svg")({
  flex: "none"
}, space, color);

var SvgDta = function SvgDta(props) {
  return createElement(Svg$gz, _extends$gD({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.722 10.884h.015l.013 3.724-8.383 4.892-2.244-1.262v.002l-.014-.009L6 16.879V7.113l2.305-1.36.004.002L10.344 4.5l8.362 4.922.016 1.462zm-2.456 2.334l-1.754-1.004-5.856 3.445 1.72 1.022 5.89-3.463zm-2.15-1.23l-3.611-2.069-.016 4.261 3.627-2.192zm-3.61-2.524l5.806 3.398v-2.029l-5.799-3.386-.007 2.016zm-2.391 8.213l.022-2.034-.013.008V8.472l-1.76-1.05v9.21l1.751 1.045zm.312-2.25l1.759-1.064V7.422l-1.759 1.05v6.955zm2.16 1.523l-.034 2.127 7.826-4.602.023-2.115-7.814 4.59zm5.846-6.438l1.821-1.04-7.841-4.578-1.805 1.044 7.825 4.574z",
    fill: "white"
  }));
};

SvgDta.displayName = "SvgDta";
SvgDta.defaultProps = {
  size: 24,
  color: "#74D269"
};

function _extends$gE() { _extends$gE = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gE.apply(this, arguments); }
var Svg$gA = styled("svg")({
  flex: "none"
}, space, color);

var SvgDtr = function SvgDtr(props) {
  return createElement(Svg$gA, _extends$gE({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M13.524 17.152c0 .86-.69 1.556-1.542 1.556a1.548 1.548 0 01-1.541-1.556V6.81c0-.859.69-1.556 1.541-1.556a1.55 1.55 0 011.542 1.557v10.341zm-5.19.004a1.554 1.554 0 01-.761 1.365 1.523 1.523 0 01-1.551 0 1.554 1.554 0 01-.76-1.365v-2.325a1.554 1.554 0 01.76-1.365 1.524 1.524 0 011.55 0 1.554 1.554 0 01.761 1.365l.001 2.325z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.5,
    d: "M18.717 13.05c0 .859-.69 1.555-1.542 1.555a1.55 1.55 0 01-1.542-1.556V9.124c0-.859.69-1.556 1.542-1.556.852 0 1.542.697 1.542 1.556v3.926z",
    fill: "white"
  }));
};

SvgDtr.displayName = "SvgDtr";
SvgDtr.defaultProps = {
  size: 24,
  color: "#121747"
};

function _extends$gF() { _extends$gF = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gF.apply(this, arguments); }
var Svg$gB = styled("svg")({
  flex: "none"
}, space, color);

var SvgEbst = function SvgEbst(props) {
  return createElement(Svg$gB, _extends$gF({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.446 12.43c-.02-.27-.02-.54-.004-.81h-2.1L3 9.748h4.87A6.037 6.037 0 0113.466 6c3.333 0 6.034 2.687 6.034 6s-2.701 6-6.034 6a6.037 6.037 0 01-5.574-3.696H3l2.342-1.873h2.104zm9.457-.318c0-.623-.084-1.166-.253-1.63a3.263 3.263 0 00-.701-1.162 2.896 2.896 0 00-1.064-.703 3.697 3.697 0 00-1.337-.237c-.52 0-1.005.088-1.454.265a3.465 3.465 0 00-1.163.747 3.453 3.453 0 00-.774 1.162c-.188.454-.282.96-.282 1.515 0 .564.094 1.069.282 1.513.188.445.448.821.78 1.127.333.307.726.543 1.18.711.477.172.981.257 1.489.251 1.301 0 2.295-.46 2.979-1.378l-1.158-.918a2.044 2.044 0 01-.737.652c-.298.158-.665.237-1.098.237-.251 0-.492-.042-.724-.129a2.215 2.215 0 01-.622-.351 1.695 1.695 0 01-.636-1.213h5.279c.01-.077.014-.153.014-.23v-.23zm-1.736-.776H11.61c.039-.487.239-.887.6-1.198.362-.31.802-.467 1.324-.467.279 0 .522.045.73.137.207.091.378.213.513.366s.234.33.296.53a2.1 2.1 0 01.094.632z",
    fill: "white"
  }));
};

SvgEbst.displayName = "SvgEbst";
SvgEbst.defaultProps = {
  size: 24,
  color: "#1693D4"
};

function _extends$gG() { _extends$gG = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gG.apply(this, arguments); }
var Svg$gC = styled("svg")({
  flex: "none"
}, space, color);

var SvgEca = function SvgEca(props) {
  return createElement(Svg$gC, _extends$gG({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 19.209c.18 0 .325.15.326.333a.33.33 0 01-.326.333.33.33 0 01-.327-.333.329.329 0 01.327-.333zM5.413 8.519a.337.337 0 01.02-.59.327.327 0 01.462.214.337.337 0 01-.117.351.324.324 0 01-.365.024zm0 6.97a.327.327 0 01.447.122.336.336 0 01-.12.455.323.323 0 01-.447-.122.336.336 0 01.12-.455zm13.17-6.97a.325.325 0 01-.447-.123.34.34 0 01.023-.371.326.326 0 01.51-.016.337.337 0 01-.086.51zM12 4.79a.33.33 0 01-.322-.333c0-.135.081-.257.204-.308a.323.323 0 01.357.075.338.338 0 01-.055.512.327.327 0 01-.184.054zm5.85 10.646a.678.678 0 00.166.864l-5.363 3.15a.662.662 0 00-.652-.577.662.662 0 00-.653.577L5.983 16.3a.678.678 0 00.165-.864.653.653 0 00-.816-.287v-6.3a.653.653 0 00.816-.287.678.678 0 00-.163-.862l5.363-3.15a.662.662 0 00.653.577.662.662 0 00.652-.578l5.365 3.15a.678.678 0 00.189 1.161c.15.053.315.05.463-.011v6.296a.655.655 0 00-.82.29zm-4.584-.966a2.72 2.72 0 01-3.58-.745l3.539-2.073 1.206-.708.571-.338.033-.015 2.43-1.43a.323.323 0 00-.072-.587.305.305 0 00-.24.035l-1.786 1.054a4.215 4.215 0 00-3.021-1.845V5.772a.326.326 0 00-.45-.304.327.327 0 00-.199.304V7.8a4.12 4.12 0 00-1.89.565 4.249 4.249 0 00-1.316 1.206L6.853 8.61a.31.31 0 00-.428.117.323.323 0 00.115.435l1.625.955a4.322 4.322 0 00-.442 2.252l.15.858c.068.232.153.459.256.677l-1.589.934a.322.322 0 00.076.586.312.312 0 00.24-.032l1.595-.935a4.242 4.242 0 003.244 1.837v1.934c0 .182.145.33.325.33a.329.329 0 00.324-.33v-1.95a4.024 4.024 0 001.65-.547 4.154 4.154 0 001.399-1.367l1.753 1.026c.15.085.339.032.425-.12a.323.323 0 00-.111-.434L15.696 13.8c.005-.01.015-.021.015-.033.536-1.233-.898-1.763-1.216-.813a2.779 2.779 0 01-1.23 1.516h.001zm5.319 1.018a.337.337 0 01.037.553.323.323 0 01-.364.024.336.336 0 01.078-.61.323.323 0 01.249.033zM9.213 12.44c-.032-1.25.116-2.122 1.3-2.818a2.715 2.715 0 013.095.237L9.213 12.44z",
    fill: "white"
  }));
};

SvgEca.displayName = "SvgEca";
SvgEca.defaultProps = {
  size: 24,
  color: "#AA15DD"
};

function _extends$gH() { _extends$gH = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gH.apply(this, arguments); }
var Svg$gD = styled("svg")({
  flex: "none"
}, space, color);

var SvgEdg = function SvgEdg(props) {
  return createElement(Svg$gD, _extends$gH({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.742 9.377v4.991c0 .223.012.449-.039.667a2.603 2.603 0 01-.751 1.32c-.177.17-.398.28-.608.405-1.43.833-2.856 1.667-4.286 2.502-.436.233-.952.273-1.437.212a1.955 1.955 0 01-.72-.235l-4.515-2.634c-.367-.205-.642-.542-.844-.905-.165-.315-.285-.662-.285-1.022v-5.39c.027-.525.26-1.022.59-1.419.135-.168.297-.31.48-.423a2654.45 2654.45 0 004.196-2.45c.23-.127.448-.283.697-.368a2.673 2.673 0 011.301-.074c.193.054.39.111.563.213 1.522.893 3.047 1.78 4.569 2.674.405.24.703.641.897 1.07.122.27.192.567.192.866zM11.956 7.52a8.005 8.005 0 01-1.115 1.32c-.22.207-.43.432-.555.71-.1.196-.168.42-.14.645.034.303.25.57.53.678.285.114.608.088.891-.023a.294.294 0 01.163-.022c-.055.355-.271.655-.442.962l.007.051c.155.165.317.321.471.483.04.037.075.088.13.105.178-.139.319-.321.484-.474.037-.042.112-.088.072-.153-.16-.3-.336-.604-.386-.95.03-.07.114-.011.165.006.266.13.588.15.866.042.379-.144.614-.588.53-.988a1.772 1.772 0 00-.514-.942c-.397-.409-.779-.845-1.05-1.35a.177.177 0 00-.107-.1zM9.23 12.402c-.45.245-.75.724-.825 1.233a1.712 1.712 0 00.962 1.754c.41.177.885.173 1.298.011a1.59 1.59 0 00.552-.389c.06-.063.146-.119.146-.216-.008-.097-.095-.15-.151-.216-.074-.065-.132-.15-.216-.202-.135-.059-.216.089-.303.162-.341.347-.956.35-1.305.012a.942.942 0 01-.284-.84.948.948 0 01.468-.696c.165-.083.35-.128.533-.12.257.017.492.154.666.341.595.591 1.166 1.204 1.758 1.797.313.31.748.508 1.19.491.338.008.662-.127.937-.318.404-.281.65-.77.675-1.263.054-.781-.512-1.57-1.275-1.72-.487-.1-1.037.003-1.412.35-.267.242-.51.515-.774.765-.272-.224-.487-.508-.753-.737a1.312 1.312 0 00-.39-.256c-.027-.017-.037-.026-.072-.04a1.577 1.577 0 00-1.425.097zm3.778.789a.958.958 0 01.743-.284.91.91 0 01.742.423c.246.375.174.914-.143 1.223-.325.316-.883.355-1.233.057-.26-.221-.479-.485-.728-.718l-.009-.062c.208-.216.42-.423.628-.639z",
    fill: "white"
  }));
};

SvgEdg.displayName = "SvgEdg";
SvgEdg.defaultProps = {
  size: 24,
  color: "#2B1544"
};

function _extends$gI() { _extends$gI = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gI.apply(this, arguments); }
var Svg$gE = styled("svg")({
  flex: "none"
}, space, color);

var SvgEdo = function SvgEdo(props) {
  return createElement(Svg$gE, _extends$gI({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.795 17.905l2.012-2.022 2.02 2.023-1.288 1.291a1.034 1.034 0 01-1.463 0l-1.281-1.291zm5.213-6.931l-2.02-2.023 2.02-2.022 2.02 2.022-2.02 2.023zm-.502 6.272l-2.02-2.022 5.422-5.432 1.289 1.29c.404.406.404 1.06 0 1.465l-4.691 4.7zm-5.553-.208l-2.019-2.023 5.414-5.422 2.019 2.022-5.414 5.423zm-2.866-2.85l-1.29-1.292a1.037 1.037 0 01.01-1.464l1.289-1.291 2.02 2.023-2.029 2.024zm8.075-8.091L8.74 11.525 6.72 9.503l4.691-4.7a1.033 1.033 0 011.463 0l1.288 1.294z",
    fill: "white"
  }));
};

SvgEdo.displayName = "SvgEdo";
SvgEdo.defaultProps = {
  size: 24,
  color: "#242424"
};

function _extends$gJ() { _extends$gJ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gJ.apply(this, arguments); }
var Svg$gF = styled("svg")({
  flex: "none"
}, space, color);

var SvgEdoge = function SvgEdoge(props) {
  return createElement(Svg$gF, _extends$gJ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.103 6.762h4.074c1.616 0 2.418-.051 3.623.06 1.205.127 2.41.619 3.19 1.561.919 1.095 1.188 2.573 1.127 3.948-.06 1.367-.529 2.801-1.604 3.735-.953.858-2.287 1.172-3.553 1.18-2.462.009-4.915 0-7.376 0-.269-.017-.573.009-.78-.178-.364-.365-.147-1.146.433-1.113 1.37-.041 2.747 0 4.117-.025-.026-1.154-.008-2.309-.008-3.454-1.058-.01-2.107 0-3.164 0-.235-.01-.495-.01-.676-.163-.217-.195-.217-.525-.122-.78.122-.28.45-.331.728-.331 1.075-.009 2.159 0 3.233 0 .018-1.053-.017-2.106.018-3.15-1.205-.008-2.41 0-3.615 0-.269-.008-.572-.008-.78-.195-.216-.28-.173-.68.009-.96.346-.17.745-.135 1.126-.135zm4.75 4.44c.494.008.989-.034 1.483.034.59.084.59 1.12-.01 1.205-.485.076-.987.025-1.481.034.009 1.002 0 1.995 0 2.997.009.17.017.424.234.442.59.05 1.102.033 1.768.033.988.043 2.028-.262 2.721-.984.711-.756.971-1.808.989-2.81.026-1.112-.182-2.335-.998-3.167-.736-.747-1.845-1.002-2.877-.942-.588 0-1.092-.018-1.638.033-.173.051-.182.264-.19.417V11.202z",
    fill: "white"
  }));
};

SvgEdoge.displayName = "SvgEdoge";
SvgEdoge.defaultProps = {
  size: 24,
  color: "#0FACF3"
};

function _extends$gK() { _extends$gK = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gK.apply(this, arguments); }
var Svg$gG = styled("svg")({
  flex: "none"
}, space, color);

var SvgEla = function SvgEla(props) {
  return createElement(Svg$gG, _extends$gK({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.25 16.59L12 14.473v4.227l-3.75-2.112zm0-6.75L12 7.723v4.226L8.25 9.84z",
    fill: "white",
    fillOpacity: 0.4
  }), createElement("path", {
    d: "M19.5 14.422l-3.75 2.165v-4.264l3.75 2.1zm0-6.75l-3.75 2.165V5.573l3.75 2.1z",
    fill: "white",
    fillOpacity: 0.7
  }), createElement("path", {
    d: "M8.25 16.588v-4.263L12 14.479l-3.75 2.11zm0-6.75V5.576L12 7.728l-3.75 2.11z",
    fill: "white",
    fillOpacity: 0.8
  }), createElement("path", {
    d: "M15.75 16.587L12 14.478l3.75-2.155v4.264zm0-6.75L12 7.728l3.75-2.155v4.264z",
    fill: "white"
  }), createElement("path", {
    d: "M15.75 16.587L12 18.701v-4.223l3.75 2.109zm0-6.75L12 11.951V7.728l3.75 2.109z",
    fill: "white",
    fillOpacity: 0.6
  }), createElement("path", {
    d: "M8.25 12.325v4.263L4.5 14.424l3.75-2.098zm0-6.75v4.263L4.5 7.674l3.75-2.099z",
    fill: "white",
    fillOpacity: 0.5
  }));
};

SvgEla.displayName = "SvgEla";
SvgEla.defaultProps = {
  size: 24,
  color: "#3FBADF"
};

function _extends$gL() { _extends$gL = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gL.apply(this, arguments); }
var Svg$gH = styled("svg")({
  flex: "none"
}, space, color);

var SvgElf = function SvgElf(props) {
  return createElement(Svg$gH, _extends$gL({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.5 11.972c0 1.752-1.358 3.118-3.091 3.113-1.698-.006-3.077-1.41-3.068-3.125.009-1.714 1.402-3.112 3.092-3.101 1.724.011 3.068 1.376 3.067 3.113zM6.817 17.94a2.265 2.265 0 01-2.265-2.29c.004-1.28 1.004-2.314 2.262-2.285.361.008.724.143 1.077.253.5.157.99.351 1.49.515.309.102.605.03.879-.14.398-.247.735-.546.95-.984a.873.873 0 011.153-.422c.408.176.62.62.503 1.053-.133.485-.533.746-1.031.659-.442-.077-.88-.22-1.328-.057-.803.291-1.155.956-1.42 1.714-.143.415-.296.85-.554 1.193-.414.552-1.023.794-1.715.791zM6.77 6.061c1.026 0 1.825.6 2.172 1.588.138.39.345.756.522 1.131.438.93 1.535 1.022 2.231.768.616-.226 1.21.17 1.225.81.01.442-.218.764-.633.895a.906.906 0 01-1.007-.377c-.08-.12-.155-.244-.244-.357-.612-.773-1.292-.975-2.213-.629-.32.12-.621.3-.923.467A2.262 2.262 0 014.723 9.34c-.716-1.523.378-3.278 2.046-3.278zm7.148 11.931c-.009.84-.694 1.523-1.511 1.508-.79-.015-1.45-.695-1.47-1.46-.022-.866.614-1.57 1.498-1.578.846-.009 1.493.689 1.484 1.53h-.001zM10.945 6.015c0-.849.665-1.522 1.497-1.515.808.008 1.485.7 1.478 1.513-.006.856-.646 1.543-1.49 1.527-.959-.018-1.524-.792-1.485-1.525z",
    fill: "white"
  }));
};

SvgElf.displayName = "SvgElf";
SvgElf.defaultProps = {
  size: 24,
  color: "#2B5EBB"
};

function _extends$gM() { _extends$gM = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gM.apply(this, arguments); }
var Svg$gI = styled("svg")({
  flex: "none"
}, space, color);

var SvgElix = function SvgElix(props) {
  return createElement(Svg$gI, _extends$gM({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.573 17.702l.002-.003 2.39-5.712-2.392-5.711 4.414 5.711-4.41 5.711-.004.004zm8.832 0l-.003-.004-4.41-5.71 4.413-5.712-2.392 5.711 2.39 5.712.002.003z",
    fill: "white"
  }), createElement("path", {
    d: "M11.989 11.988v3.98L7.57 17.7l4.418-5.715v-3.98l4.417-1.732-4.417 5.715z",
    fill: "white",
    fillOpacity: 0.8
  }), createElement("path", {
    d: "M11.989 15.967v3.489L7.57 17.698l4.418-1.737v-3.973L7.57 6.273l4.418 1.732V4.517l4.417 1.757-4.417 1.737v3.974l4.417 5.715-4.417-1.732z",
    fill: "white",
    fillOpacity: 0.5
  }), createElement("path", {
    d: "M7.571 6.274l4.418-1.757v3.494L7.57 6.274zm8.835 11.424l-4.417 1.758V15.96l4.417 1.737z",
    fill: "white",
    fillOpacity: 0.145
  }));
};

SvgElix.displayName = "SvgElix";
SvgElix.defaultProps = {
  size: 24,
  color: "#00ADED"
};

function _extends$gN() { _extends$gN = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gN.apply(this, arguments); }
var Svg$gJ = styled("svg")({
  flex: "none"
}, space, color);

var SvgElla = function SvgElla(props) {
  return createElement(Svg$gJ, _extends$gN({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.555 9.909L12 8.355l-1.565 1.564-1.623-1.623L12 3.75l3.21 4.504-1.655 1.655zm-3.662.553L8.354 12l1.554 1.555-1.617 1.617L3.75 12l4.492-3.188 1.65 1.65zm4.188 3.103L15.645 12l-1.548-1.548 1.67-1.67L20.25 12l-4.533 3.202-1.636-1.637zm-3.629.533L12 15.645l1.537-1.537 1.637 1.637L12 20.25l-3.153-4.548 1.605-1.604zM12 9.395L14.604 12 12 14.604 9.396 12 12 9.395z",
    fill: "white"
  }));
};

SvgElla.displayName = "SvgElla";
SvgElla.defaultProps = {
  size: 24,
  color: "#396A28"
};

function _extends$gO() { _extends$gO = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gO.apply(this, arguments); }
var Svg$gK = styled("svg")({
  flex: "none"
}, space, color);

var SvgEmc = function SvgEmc(props) {
  return createElement(Svg$gK, _extends$gO({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6 6v2.4h4.8v2.4H6v2.4h7.2V8.4h2.4v7.2H6V18h12V6H6z",
    fill: "white"
  }));
};

SvgEmc.displayName = "SvgEmc";
SvgEmc.defaultProps = {
  size: 24,
  color: "#B49FFC"
};

function _extends$gP() { _extends$gP = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gP.apply(this, arguments); }
var Svg$gL = styled("svg")({
  flex: "none"
}, space, color);

var SvgEmc2 = function SvgEmc2(props) {
  return createElement(Svg$gL, _extends$gP({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M5.92 14.37h3.298l-1.42 2.88H4.5l1.42-2.88zm1.88-3.81h3.298l-1.416 2.872h-3.3L7.8 10.56zm1.879-3.81h3.298L11.56 9.624H8.263L9.679 6.75z",
    fill: "white",
    fillOpacity: 0.4
  }), createElement("path", {
    d: "M9.208 14.37h3.298l-1.42 2.879H7.787l1.42-2.88v.001zm1.88-3.81h3.297l-1.416 2.871H9.671l1.416-2.871zm1.878-3.81h3.299l-1.417 2.872H11.55l1.416-2.872z",
    fill: "white",
    fillOpacity: 0.6
  }), createElement("path", {
    d: "M12.443 14.37h3.298l-1.42 2.879h-3.298l1.42-2.88v.001zm1.879-3.81h3.299l-1.416 2.871h-3.299l1.416-2.871zm1.88-3.81H19.5l-1.417 2.872h-3.297L16.2 6.75z",
    fill: "white"
  }));
};

SvgEmc2.displayName = "SvgEmc2";
SvgEmc2.defaultProps = {
  size: 24,
  color: "#00CCFF"
};

function _extends$gQ() { _extends$gQ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gQ.apply(this, arguments); }
var Svg$gM = styled("svg")({
  flex: "none"
}, space, color);

var SvgEng = function SvgEng(props) {
  return createElement(Svg$gM, _extends$gQ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M18.862 7.721c.085.045.281.152.262.383l-.012 7.813a.358.358 0 01-.212.354l-1.725 1.008-1.365.796-3.633 2.121a.263.263 0 01-.16.054.39.39 0 01-.205-.066l-2.507-1.446c-1.392-.803-2.832-1.634-4.25-2.45-.12-.058-.19-.192-.18-.345l.006-2.064c.005-1.857.008-3.743.009-5.567v-.008a.297.297 0 000-.037v-.024c-.002-.101-.007-.309.188-.403a899.46 899.46 0 012.395-1.423l1.303-.772 2.977-1.767.008-.004c.064-.037.13-.068.2-.094l.076-.03.072.043c.71.41 1.431.83 2.128 1.237l1.302.758 1.272.74 2 1.163h.001l.002.002.048.028zm-6.577 11.753l2.222-1.298 4.04-2.357.007-4.387.004-2.899-2.887 1.69v1.332c-.004.83-.002 1.662.004 2.493v.057l-.034.047a.429.429 0 01-.138.12l-.02.012-.933.543c-.338.196-.686.398-1.027.598l-1.233.716-.005 3.333zm-3.147-9.417c.63.363 1.262.725 1.893 1.086l.978.561 2.833-1.655-2.838-1.675-2.866 1.683zm-.292.488l.053 3.292 2.826 1.646.004-3.284-2.883-1.654zM5.456 8.6l-.015 7.256 6.28 3.622.003-3.338-1.23-.716-.771-.45-1.205-.701c-.116-.055-.19-.189-.181-.335l-.06-3.72L5.455 8.6zm12.82-.56l-1.102-.642-1.216-.709c-1.158-.672-2.531-1.47-3.948-2.3-1.435.849-2.87 1.698-4.302 2.548l-1.97 1.168L8.572 9.73l3.25-1.909a.336.336 0 01.375.008l3.207 1.89 2.872-1.678zm-5.986 7.445c.947-.552 1.895-1.103 2.844-1.653v-3.295l-2.842 1.661-.002 3.287zm3.845-.595a.296.296 0 01-.301-.075.35.35 0 01-.11-.33.337.337 0 01.328-.282c.092 0 .182.042.247.115v.001a.352.352 0 01.06.378.321.321 0 01-.224.194zm1.548 1.056a.338.338 0 01-.13-.29.35.35 0 01.167-.286.305.305 0 01.165-.049c.065 0 .128.02.183.058a.345.345 0 01.152.343.341.341 0 01-.337.3.305.305 0 01-.2-.075zm-9.892-1.74a.32.32 0 01.245.117.345.345 0 01.058.372.332.332 0 01-.312.206.341.341 0 01-.321-.417.344.344 0 01.33-.277zm8.967 1.183a.352.352 0 01-.12-.333.344.344 0 01.328-.292c.082 0 .162.033.225.091a.342.342 0 01.103.337.33.33 0 01-.211.249.324.324 0 01-.325-.053zm-9.679-.543c.1.083.147.214.121.335a.327.327 0 01-.19.251h-.001a.32.32 0 01-.309-.017.35.35 0 01-.163-.334.336.336 0 01.217-.293.298.298 0 01.116-.024c.075 0 .148.028.21.082zm4.883-10.22a.34.34 0 01.255.115c.08.085.11.202.08.315a.328.328 0 01-.274.253h-.004a.346.346 0 01-.411-.314.338.338 0 01.034-.169v-.001a.342.342 0 01.264-.195.316.316 0 01.056-.005zm-5.85 10.741a.335.335 0 01.175.293.34.34 0 01-.159.306.34.34 0 01-.183.056.299.299 0 01-.153-.041.344.344 0 01-.177-.306.35.35 0 01.174-.308.314.314 0 01.324 0zm6.03-8.463a.344.344 0 01.162.315.333.333 0 01-.204.284.366.366 0 01-.15.033.338.338 0 01-.212-.072.334.334 0 01-.134-.3.33.33 0 01.175-.272.337.337 0 01.17-.045c.068 0 .136.02.194.057zm-.427-.569a.331.331 0 01-.111-.28v-.002a.345.345 0 01.164-.264.327.327 0 01.183-.055c.06 0 .12.016.175.045a.337.337 0 01.178.307.337.337 0 01-.207.308.367.367 0 01-.15.033.331.331 0 01-.232-.092z",
    fill: "white"
  }));
};

SvgEng.displayName = "SvgEng";
SvgEng.defaultProps = {
  size: 24,
  color: "#2F2F2F"
};

function _extends$gR() { _extends$gR = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gR.apply(this, arguments); }
var Svg$gN = styled("svg")({
  flex: "none"
}, space, color);

var SvgEnj = function SvgEnj(props) {
  return createElement(Svg$gN, _extends$gR({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.735 6.75c.37.043.745.066 1.111.132.726.137.962.482.84 1.182-.05.284-.233.458-.524.505a3.84 3.84 0 01-.523.038c-2.38.005-4.765.01-7.145.02-.36 0-.716.032-1.066.09-1.181.184-1.625.652-1.724 1.79-.045.535-.045.535.514.535h9.77a.847.847 0 01.43.113c.436.265.327.68.302 1.064-.02.308-.212.477-.543.539-.139.02-.28.03-.42.028H8.014c-.36 0-.354 0-.325.34.025.313.045.62.124.922.147.563.508.912 1.091 1.068.646.175 1.313.213 1.98.218 2.325.014 4.646.01 6.972.01.296 0 .572.037.745.297.337.501.075 1.2-.513 1.38-.504.156-1.032.194-1.556.199-2.182.038-4.365.043-6.547 0a11.93 11.93 0 01-2.004-.222c-1.556-.308-2.331-1.064-2.593-2.558-.06-.345-.094-.694-.138-1.04v-2.727c.03-.27.054-.538.09-.803.206-1.693.997-2.524 2.735-2.893.617-.133 1.248-.161 1.87-.223 2.258-.004 4.522-.004 6.79-.004z",
    fill: "white"
  }));
};

SvgEnj.displayName = "SvgEnj";
SvgEnj.defaultProps = {
  size: 24,
  color: "#624DBF"
};

function _extends$gS() { _extends$gS = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gS.apply(this, arguments); }
var Svg$gO = styled("svg")({
  flex: "none"
}, space, color);

var SvgEos = function SvgEos(props) {
  return createElement(Svg$gO, _extends$gS({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.164 8.707L12 20.75l-5.691-3.565 1.855-8.478L12 3.468v3.675L6.309 17.185h11.387l-5.69-10.042V3.468l3.834 5.24 1.856 8.477-5.69 3.565L15.84 8.707",
    stroke: "white",
    strokeWidth: 0.64,
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }));
};

SvgEos.displayName = "SvgEos";
SvgEos.defaultProps = {
  size: 24,
  color: "black"
};

function _extends$gT() { _extends$gT = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gT.apply(this, arguments); }
var Svg$gP = styled("svg")({
  flex: "none"
}, space, color);

var SvgEql = function SvgEql(props) {
  return createElement(Svg$gP, _extends$gT({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.52 14.535a.28.28 0 01-.25.158H4.215a.276.276 0 01-.236-.137.278.278 0 01-.008-.279l5.553-10.01c.1-.179.387-.179.486 0l4.33 7.784a.296.296 0 01-.008.279.26.26 0 01-.237.136H12.83a.285.285 0 01-.243-.143L9.774 7.208l-3.147 5.816h1.202c.093 0 .186.05.236.129a.284.284 0 01.014.272l-.558 1.108v.002zm12.506-.258a.263.263 0 01-.008.279.259.259 0 01-.235.136h-8.335a.279.279 0 01-.279-.28v-1.107c0-.157.128-.279.279-.279h5.931L14.238 7.23l-.594 1.187c-.1.186-.407.186-.5 0l-.558-1.108a.304.304 0 010-.25l1.387-2.783a.292.292 0 01.243-.151c.093 0 .2.05.25.143l5.56 10.009zm-3.613 1.109l1.38 2.504a.278.278 0 010 .279.26.26 0 01-.235.136H6.44a.286.286 0 01-.244-.143.277.277 0 01.008-.28l2.224-3.613 2.218-3.885a.27.27 0 01.25-.142.262.262 0 01.244.15l.558 1.11a.27.27 0 01-.007.264l-2.819 4.865h6.253l-.58-.966a.262.262 0 01-.007-.28.286.286 0 01.244-.142h1.387c.1 0 .194.057.244.143z",
    fill: "white"
  }));
};

SvgEql.displayName = "SvgEql";
SvgEql.defaultProps = {
  size: 24,
  color: "#C9A35E"
};

function _extends$gU() { _extends$gU = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gU.apply(this, arguments); }
var Svg$gQ = styled("svg")({
  flex: "none"
}, space, color);

var SvgEqua = function SvgEqua(props) {
  return createElement(Svg$gQ, _extends$gU({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.54 7.559s-3.095.454-3.546 3.894c0 0-.479 3.85 3.456 4.89.273.072.553.108.835.108h.193c.4 0 .785.16 1.068.445.284.285.443.672.443 1.075a1.511 1.511 0 01-1.392 1.517c-1.934.13-4.53-.819-6.215-3.102 0 0-3.299-4.744.296-9.103a7.629 7.629 0 013.208-2.304c1.478-.553 3.642-.908 5.521.567 0 0 2.515 1.948 1.226 5.128 0 0-.903 2.531-3.998 2.726l-.43-.024a1.42 1.42 0 01-1.06-.518 1.442 1.442 0 01.155-1.992c.25-.22.567-.346.898-.357l.437-.03s1.483-.064 1.354-1.817c0 0-.13-1.558-2.45-1.103",
    fill: "white"
  }));
};

SvgEqua.displayName = "SvgEqua";
SvgEqua.defaultProps = {
  size: 24,
  color: "#F68922"
};

function _extends$gV() { _extends$gV = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gV.apply(this, arguments); }
var Svg$gR = styled("svg")({
  flex: "none"
}, space, color);

var SvgEtc = function SvgEtc(props) {
  return createElement(Svg$gR, _extends$gV({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.992 12.415l-5.041-.433 5.04-2.851v3.284zm0 3.345v5.205c-1.753-2.729-3.685-5.732-5.242-8.162 1.838 1.034 3.756 2.117 5.242 2.957zm0-7.551L6.75 11.134 11.992 3v5.209z",
    fill: "white"
  }), createElement("path", {
    d: "M17.032 11.982l-5.04.433V9.13l5.04 2.851zm-5.04 3.779c1.485-.84 3.402-1.923 5.24-2.958-1.556 2.431-3.488 5.434-5.24 8.161v-5.203zm0-7.552V3l5.24 8.134-5.24-2.925z",
    fill: "white",
    fillOpacity: 0.601
  }), createElement("path", {
    opacity: 0.2,
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.992 12.415l5.04-.433-5.04 2.831v-2.398z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.603,
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.991 12.415l-5.04-.433 5.04 2.831v-2.398z",
    fill: "white"
  }));
};

SvgEtc.displayName = "SvgEtc";
SvgEtc.defaultProps = {
  size: 24,
  color: "#328332"
};

function _extends$gW() { _extends$gW = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gW.apply(this, arguments); }
var Svg$gS = styled("svg")({
  flex: "none"
}, space, color);

var SvgEth = function SvgEth(props) {
  return createElement(Svg$gS, _extends$gW({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 15.243l4.5-2.662-4.5 6.343-4.5-6.342 4.5 2.662v-.001zm0-10.74l4.5 7.087-4.5 2.662-4.5-2.662L12 4.502z",
    fill: "white"
  }));
};

SvgEth.displayName = "SvgEth";
SvgEth.defaultProps = {
  size: 24,
  color: "#0C0C0D"
};

function _extends$gX() { _extends$gX = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gX.apply(this, arguments); }
var Svg$gT = styled("svg")({
  flex: "none"
}, space, color);

var SvgEthos = function SvgEthos(props) {
  return createElement(Svg$gT, _extends$gX({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.153 8.178a1.28 1.28 0 00-.145 1.611 1.27 1.27 0 001.065.567 1.641 1.641 0 11-.001 3.283 4.564 4.564 0 01-3.208-7.814A4.563 4.563 0 0112 5.57a4.564 4.564 0 00-1.636 3.504 1.64 1.64 0 001.63 1.642 1.641 1.641 0 01-1.64-1.642 1.267 1.267 0 00-.218-.716 1.295 1.295 0 00-.565-.466 1.292 1.292 0 00-.998 0c-.158.067-.3.164-.42.287zm10.98 4.971a4.57 4.57 0 01-3.266 6.247 4.563 4.563 0 01-5.503-4.47 1.642 1.642 0 113.281 0 1.276 1.276 0 00.784 1.183 1.29 1.29 0 001.006-.004c.307-.132.55-.38.679-.688a1.287 1.287 0 00-1.186-1.773 1.641 1.641 0 110-3.283 4.562 4.562 0 014.204 2.788h.001z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.7,
    d: "M11.996 13.286c.906 0 1.64.735 1.64 1.64a4.563 4.563 0 01-9.053.83 4.565 4.565 0 014.49-5.395 1.641 1.641 0 010 3.283c-.256 0-.505.075-.716.218a1.283 1.283 0 00-.207 1.955v.001a1.28 1.28 0 002.055-.288c.099-.186.15-.394.149-.604 0-.905.735-1.64 1.642-1.64zm6.994-6.297a4.568 4.568 0 01-4.062 6.65 1.641 1.641 0 110-3.283 1.283 1.283 0 10-1.283-1.282 1.64 1.64 0 01-2.813 1.183 1.641 1.641 0 01-.468-1.183 4.565 4.565 0 017.287-3.665l.003.002c.56.418 1.017.957 1.335 1.578h.001z",
    fill: "white"
  }));
};

SvgEthos.displayName = "SvgEthos";
SvgEthos.defaultProps = {
  size: 24,
  color: "#00FFBA"
};

function _extends$gY() { _extends$gY = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gY.apply(this, arguments); }
var Svg$gU = styled("svg")({
  flex: "none"
}, space, color);

var SvgEtn = function SvgEtn(props) {
  return createElement(Svg$gU, _extends$gY({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M14.91 10.102l2.428-2.56a6.951 6.951 0 01-8.69 10.543l6.18-3.184 1.006-.519-.932-.644-.666-.46 1.942-.992.966-.494-.865-.654-1.37-1.036zm-5.82 4.15l-2.264 2.385a6.921 6.921 0 01-1.78-4.64A6.951 6.951 0 0115.68 6.098L9.172 9.453l-1.006.52.932.643.666.46-1.942.993-.966.493.865.655 1.37 1.035zm-2.688 2.833l-.469.493a8.212 8.212 0 01-2.183-5.582C3.75 7.45 7.451 3.75 12 3.75c1.87 0 3.597.625 4.982 1.678l-.676.349A7.53 7.53 0 0012 4.429c-4.174 0-7.57 3.395-7.57 7.567a7.53 7.53 0 001.973 5.088l-.001.001zm11.361-9.99l.471-.495a8.208 8.208 0 012.016 5.396c0 4.547-3.701 8.246-8.25 8.246a8.206 8.206 0 01-4.69-1.466l.693-.357A7.527 7.527 0 0012 19.562c4.174 0 7.57-3.394 7.57-7.566a7.53 7.53 0 00-1.807-4.9v-.001zm-9.632 5.58l2.956-1.51-1.602-1.107 8.872-4.573-4.465 4.7 1.976 1.495-2.955 1.51 1.602 1.107-8.872 4.574 4.465-4.701-1.976-1.495z",
    fill: "white"
  }));
};

SvgEtn.displayName = "SvgEtn";
SvgEtn.defaultProps = {
  size: 24,
  color: "#23BEE2"
};

function _extends$gZ() { _extends$gZ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$gZ.apply(this, arguments); }
var Svg$gV = styled("svg")({
  flex: "none"
}, space, color);

var SvgEtp = function SvgEtp(props) {
  return createElement(Svg$gV, _extends$gZ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.56 9.43c-.002.67-.007 1.34-.008 2.008 0 1.113-.002 2.227.004 3.34 0 .135-.038.215-.156.287-.457.275-.907.562-1.39.864v-.244c0-1.722-.002-3.446.003-5.168 0-.144-.038-.225-.167-.294-.401-.218-.793-.452-1.19-.678-.043-.025-.09-.045-.156-.078v.236c0 1.544-.003 3.088.005 4.632 0 .155-.05.236-.18.309-.394.217-.779.45-1.168.676-.055.032-.113.06-.2.105v-.24c0-1.55-.004-3.102.005-4.652.001-.18-.06-.27-.21-.352-.438-.245-.867-.504-1.323-.77.504-.291.989-.573 1.479-.844.045-.024.138.008.195.04.426.24.852.482 1.273.732.101.06.176.068.282.002.389-.237.79-.456 1.178-.697.14-.087.24-.073.373.007.447.267.902.525 1.356.785l-.005-.005zm.005.006c.033-.035.061-.079.1-.102.423-.246.845-.494 1.275-.726a.323.323 0 01.263.002c.437.235.867.48 1.293.734.058.035.117.126.117.192.006 1.622.006 3.245.003 4.867 0 .053-.014.135-.05.156-.485.29-.976.57-1.498.872v-.246c0-1.564-.001-3.127.003-4.689 0-.133-.031-.213-.156-.281-.456-.253-.904-.522-1.355-.784l.005.005zm-8.36 4.655a1.067 1.067 0 11-.015-2.134 1.063 1.063 0 011.078 1.06 1.062 1.062 0 01-1.064 1.074zm1.435 3.215a1.012 1.012 0 01-1.02-.997 1.02 1.02 0 011-1.023c.543-.012 1.013.45 1.02 1.002a1.01 1.01 0 01-1 1.018zM5.825 8.55c.54.002.974.435.974.972a.977.977 0 01-1.674.686.964.964 0 01-.273-.692.956.956 0 01.973-.966zm13.142 3.68a.911.911 0 110-1.823.911.911 0 010 1.823zM7.157 6.463a.818.818 0 01.828-.83.826.826 0 01.827.837.826.826 0 01-.833.829.82.82 0 01-.823-.836zm11.32 9.22a.815.815 0 01-.832-.825.83.83 0 011.14-.78.832.832 0 01.514.768.816.816 0 01-.822.836zM11.989 5.14a.612.612 0 01-.639.612.618.618 0 01-.605-.647.626.626 0 011.073-.414.62.62 0 01.171.45zm4.329 13.127a.61.61 0 01-.614-.62.62.62 0 01.637-.62.615.615 0 01.613.623c0 .354-.276.62-.636.617zm-3.21 1.232a.573.573 0 01-.588-.591.586.586 0 01.597-.589.6.6 0 01.593.597.584.584 0 01-.602.583zm1.97-13.292a.532.532 0 01.007-1.065.544.544 0 01.531.535.544.544 0 01-.537.53zm-4.903 12.211a.457.457 0 01-.472.458.456.456 0 01-.454-.475.465.465 0 01.65-.42.463.463 0 01.276.437zm7.997-10.484a.397.397 0 01-.675.303.404.404 0 01.266-.694.394.394 0 01.41.392v-.001z",
    fill: "white"
  }));
};

SvgEtp.displayName = "SvgEtp";
SvgEtp.defaultProps = {
  size: 24,
  color: "#00A5FF"
};

function _extends$g_() { _extends$g_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g_.apply(this, arguments); }
var Svg$gW = styled("svg")({
  flex: "none"
}, space, color);

var SvgEur = function SvgEur(props) {
  return createElement(Svg$gW, _extends$g_({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6 14.253l.607-1.503h.643a12.214 12.214 0 01-.025-.773c0-.335.014-.648.042-.937H6l.607-1.502h.956c.89-2.859 2.895-4.288 6.014-4.288 1.025 0 2 .133 2.923.399v1.893a6.69 6.69 0 00-2.762-.582c-1.87 0-3.072.86-3.608 2.579h5.567l-.607 1.502H9.767a5.205 5.205 0 00-.042.746c0 .36.011.68.034.964h4.637l-.6 1.502H10.08c.4 1.042.887 1.766 1.462 2.175.574.408 1.393.612 2.457.612.761 0 1.594-.185 2.501-.556v1.78c-.862.324-1.886.486-3.075.486-3.125 0-5.102-1.5-5.93-4.497H6z",
    fill: "white"
  }));
};

SvgEur.displayName = "SvgEur";
SvgEur.defaultProps = {
  size: 24,
  color: "#0F8FF8"
};

function _extends$g$() { _extends$g$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g$.apply(this, arguments); }
var Svg$gX = styled("svg")({
  flex: "none"
}, space, color);

var SvgEvx = function SvgEvx(props) {
  return createElement(Svg$gX, _extends$g$({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.562 12.908l-1.964 1.965-.922.922A8.203 8.203 0 013.75 12c0-4.549 3.701-8.25 8.25-8.25 4.549 0 8.25 3.701 8.25 8.25 0 4.549-3.701 8.25-8.25 8.25a8.206 8.206 0 01-4.732-1.496 8.304 8.304 0 01-.958-.786l.871-.872 6.313-6.313a1.216 1.216 0 012.024-.803c.223.201.363.478.394.777l2.905 2.906A7.024 7.024 0 0012 4.983a7.024 7.024 0 00-6.84 8.584L7.024 11.7a1.216 1.216 0 011.978-.74c.219.183.366.436.416.717l1.188 1.186-.873.872-.835-.836a1.207 1.207 0 01-1.337.008zm6.531-.98l-5.938 5.938A6.976 6.976 0 0012 19.017a7.026 7.026 0 006.364-4.063l-3.033-3.035a1.207 1.207 0 01-1.238.009zm.633-1.587a.547.547 0 10-.038 1.093.547.547 0 00.038-1.093zm-6.495.995a.546.546 0 100 1.092.546.546 0 000-1.092z",
    fill: "white"
  }));
};

SvgEvx.displayName = "SvgEvx";
SvgEvx.defaultProps = {
  size: 24,
  color: "#044AAC"
};

function _extends$h0() { _extends$h0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h0.apply(this, arguments); }
var Svg$gY = styled("svg")({
  flex: "none"
}, space, color);

var SvgExmo = function SvgExmo(props) {
  return createElement(Svg$gY, _extends$h0({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M14.775 9.791l-2.152 5.813-.013.035-.395-.791-.825.375 2.164-5.848.825-.375.395.791h.001zm5.385.137l-2.151 5.822-.395-.793-.825.374.05-.136 2.15-5.82.825-.375.394.791-.048.137zm-4.605 5.034l1.267-3.422-.827.375-.393-.792-1.271 3.421.394.793.83-.374zm-6.853-3.374H4.918l.646.6-.646.61h3.78l.643-.61-.639-.6zm-4.307 2.537h6.116l-.643.605.643.604H4.395l-.645-.604.645-.606zm1.876-5.076h6.112l-.64.606.641.604H6.271l-.644-.605.644-.605z",
    fill: "white"
  }));
};

SvgExmo.displayName = "SvgExmo";
SvgExmo.defaultProps = {
  size: 24,
  color: "#347FFB"
};

function _extends$h1() { _extends$h1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h1.apply(this, arguments); }
var Svg$gZ = styled("svg")({
  flex: "none"
}, space, color);

var SvgExp = function SvgExp(props) {
  return createElement(Svg$gZ, _extends$h1({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.5 11.038c-.003.029-.008.057-.008.087a1092 1092 0 00-.009 2.746l-.003 1.88c0 .06-.005.12-.009.196-.032-.015-.056-.025-.079-.038l-3.49-1.946c-.063-.035-.068-.065-.038-.127.595-1.221.597-2.445.011-3.669-.027-.059-.022-.088.038-.12l3.492-1.96c.029-.017.063-.025.095-.037v2.988zM12.225 3.75c.059.035.116.073.176.107l6.787 3.813c.026.014.05.03.085.051-.032.02-.053.035-.076.048l-3.463 1.934c-.091.05-.09.05-.15-.035-.768-1.077-1.822-1.692-3.16-1.848a.975.975 0 00-.12-.007c-.07 0-.097-.027-.097-.101 0-.76-.005-1.52-.008-2.28l-.002-1.575c0-.036.009-.071.013-.107h.015zm-.465 16.5c-.025-.019-.049-.04-.075-.055l-6.838-3.843-.107-.064c.03-.02.05-.035.072-.048 1.147-.641 2.295-1.282 3.442-1.925.07-.039.102-.024.145.036.717.994 1.696 1.582 2.925 1.782.126.02.254.03.38.036.072.003.101.023.101.098 0 .672.002 1.345.005 2.017l.003 1.91c0 .018-.005.037-.008.056h-.045zM4.5 15.338c.004-.023.011-.046.012-.07l.003-.947.005-2.12.01-3.344.004-.721c0-.021.003-.042.005-.076l.08.038C5.76 8.736 6.9 9.373 8.043 10.01c.066.037.075.066.042.136-.6 1.23-.597 2.463 0 3.695.05.099.05.098-.047.153-1.146.645-2.292 1.288-3.438 1.931-.03.017-.068.018-.101.026v-.612zm10.105-.698c.122-.43.162-.863.135-1.302a3.283 3.283 0 00-.446-1.52c-.322-.541-.789-.933-1.357-1.218-.15-.076-.167-.038-.077-.225.201-.422.555-.685.99-.853.302-.11.62-.173.943-.184a.177.177 0 01.12.054c.54.563.891 1.281 1.003 2.054.288 1.955-.986 3.79-2.965 4.276-2.195.54-4.422-.811-4.878-2.958-.426-2.009.861-3.952 2.781-4.465 1.442-.385 2.722-.078 3.841.877l.127.108-.015.024c-.11-.013-.22-.03-.33-.04-.685-.065-1.359-.02-2.012.204a3.349 3.349 0 00-1.881 1.564c-.06.107-.064.107-.18.068a.984.984 0 01-.39-.253 2.061 2.061 0 01-.471-.78c-.088-.254-.152-.517-.227-.775-.006-.02-.01-.042-.029-.063-.01.06-.022.118-.031.178-.01.06-.017.12-.023.18-.071.67-.033 1.33.199 1.97.288.798.83 1.373 1.622 1.722.104.046.104.047.048.141-.293.498-.753.749-1.32.834-.264.04-.528.024-.798.005l.074.03c1.297.446 2.722.246 3.796-.89.27-.289.505-.607.703-.95.051-.088.055-.09.137-.03.352.257.561.608.705 1.002.135.362.188.739.2 1.122l.006.092v.001zm4.7 1.659l-7.096 3.937c-.004-.041-.01-.067-.01-.092l-.001-3.892c0-.058.017-.079.08-.084 1.38-.114 2.474-.719 3.277-1.817.07-.097.069-.098.172-.04l3.483 1.931.096.057zm-7.5-12.522c.002.042.004.067.004.093l.001 3.84c0 .06-.009.09-.082.095-1.409.102-2.522.712-3.338 1.832-.065.089-.064.09-.158.037l-3.39-1.882c-.04-.023-.077-.05-.115-.075.038-.027.074-.058.116-.081l6.833-3.792.127-.067h.001z",
    fill: "white"
  }));
};

SvgExp.displayName = "SvgExp";
SvgExp.defaultProps = {
  size: 24,
  color: "#FFAA5C"
};

function _extends$h2() { _extends$h2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h2.apply(this, arguments); }
var Svg$g_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgFair = function SvgFair(props) {
  return createElement(Svg$g_, _extends$h2({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6 18.19l.032-.13c.117-.448.421-.724.875-.85.462-.127.902-.079 1.302.193.131.088.23.202.294.344.018.038.053.07.08.105.03-.035.073-.065.088-.104.099-.262.209-.52.283-.788.402-1.455.795-2.91 1.19-4.366.015-.057.025-.116.04-.185h-.3c-.331-.006-.664.003-.994-.022-.45-.035-.755-.311-.763-.737-.008-.372.212-.657.633-.73.294-.051.603-.031.905-.037.29-.004.58 0 .87-.003.027 0 .07-.03.078-.053.073-.258.141-.518.21-.778.004-.015 0-.032 0-.057-.328 0-.653.01-.977-.004a1.325 1.325 0 01-.714-.215c-.265-.182-.338-.442-.295-.73.044-.291.23-.486.529-.568.105-.028.219-.04.329-.041.468-.005.936-.004 1.404.003.114.002.164-.035.209-.13.156-.324.309-.652.49-.963a7.123 7.123 0 011.197-1.565c.632-.609 1.377-1.04 2.269-1.199.593-.105 1.19-.13 1.771.07.35.12.61.342.773.662.103.203.203.403.191.64-.032.676-.606 1.105-1.125 1.122-.4.014-.743-.095-1.008-.383-.25-.272-.281-.587-.18-.924.007-.025.017-.05.026-.075l-.02-.026c-.052.033-.11.06-.152.1a3.06 3.06 0 00-.563.741 9.024 9.024 0 00-.73 1.773c-.005.019-.004.04-.007.072.162 0 .322.002.48 0 .231-.004.46-.003.68.08.268.1.473.264.527.545.055.286-.002.51-.268.729-.218.178-.473.215-.74.224-.355.012-.712.015-1.067.021-.047 0-.085 0-.098.06-.058.245-.121.49-.182.734-.003.012 0 .026.002.047.25 0 .498-.008.746.001.266.01.512.08.706.272.237.235.27.573.072.838-.064.086-.142.165-.211.247-.146.171-.349.23-.565.239-.37.014-.74.018-1.11.016-.1 0-.14.03-.163.119-.131.52-.257 1.042-.402 1.56-.293 1.04-.619 2.07-1.152 3.026-.257.466-.581.891-.961 1.263-.558.541-1.218.912-2.007 1.05-.538.093-1.081.125-1.612-.036-.45-.137-.761-.416-.881-.866L6 18.39v-.2z",
    fill: "white"
  }));
};

SvgFair.displayName = "SvgFair";
SvgFair.defaultProps = {
  size: 24,
  color: "#C99705"
};

function _extends$h3() { _extends$h3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h3.apply(this, arguments); }
var Svg$g$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgFct = function SvgFct(props) {
  return createElement(Svg$g$, _extends$h3({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M5.764 7.975c-.024.166-.018.282.071.37-.114.198-.202.346-.287.511.085-.165.173-.31.287-.48.254.318 1.048.318 2.13-.031.127-.032.127.254.127.254 0 .159-.033.38-1.399.572-.382.063-.922.032-1.176-.255a.673.673 0 01-.095-.381c0-.031 0-.063.031-.127l.004-.006a.591.591 0 01.06-.153c.031-.095.095-.159.159-.254-.032.064-.095.19-.159.254a.691.691 0 01.159-.254l.088-.02zm.191-.409c.046-.069.098-.137.166-.206l-.096.127a.802.802 0 00-.016.017c.034-.047.07-.095.112-.144l-.096.127a.982.982 0 00-.07.079zm0 0c-.04.059-.077.116-.12.175a.314.314 0 00-.012.013 5.396 5.396 0 00-.077.125l.209-.313zm.676-.761c.095-.08.19-.169.285-.24a1.065 1.065 0 00-.192.382c-.031.095-.031.19.032.254a3.507 3.507 0 00-.017.017c.21.234.897.165 1.765-.208.286-.127.572-.255.827-.412.095-.032.222.127.254.157.031.032.063.128 0 .192-.318.19-.668.38-1.05.508-1.091.468-1.97.538-2.211.24l-.013.014c-.031-.095-.063-.159-.031-.285 0-.033 0-.064.031-.097.03-.037.06-.072.094-.105a1.62 1.62 0 00-.125.138c0-.033.031-.096.031-.128.064-.127.128-.222.223-.35l.066-.051c.096-.135.238-.251.379-.393.255-.222.255-.222.381-.317a.623.623 0 01.056-.048 6.39 6.39 0 01.28-.2l.014-.007.049-.035c.456-.299.94-.553 1.444-.759a2.71 2.71 0 01.248-.123l-.134.056c-.079.035-.159.068-.24.098-.127.032-.127.032-.382.16-.128.063-.128.063-.35.19-.095.064-.095.064-.318.19-.09.061-.18.124-.268.188 2.08-1.024 1.935-.98 1.788-.921-.18.055-.36.12-.534.194-.737.315-1.43.762-1.863 1.176a1.804 1.804 0 00-.171.158 3.91 3.91 0 01.127-.115 2.513 2.513 0 00-.191.21c-.1.1-.2.18-.284.272zm-1.806 7.372l.024.078c.024.083.067.16.128.221-.06-.172-.115-.346-.167-.52a.804.804 0 00.167.52 3.308 3.308 0 01-.159-.603c.572.795 2.733.604 5.498-.572 3.527-1.493 6.737-4.035 7.182-5.687.095-.413.032-.699-.191-.922.159.16.318.35.477.509.19.223.222.508.128.89-.446 1.683-3.719 4.257-7.342 5.782-3.146 1.37-5.518 1.43-5.745.305-.055-.185-.11-.425-.166-.591.032.095.064.19.128.287l.018.066c-.002.04 0 .08.005.12a1.036 1.036 0 01-.002-.11l-.003-.01.02.237zm5.16-9.405l.045-.018c.953-.254 1.557-.127 1.43.413-.032.191-.159.381-.35.572-.159.064-.508 0-.572-.064.16-.19.255-.35.286-.476.099-.42-.358-.532-1.104-.338l-.033.012.299-.1zm-.057.023l.133-.04-.075.016-.058.024zm-5.269 8.261v.023c-.09-.09-.124-.208-.127-.354a.965.965 0 01-.006-.192c.004.06.006.121.006.182a.882.882 0 01-.006-.188c-.009-.167-.026-.357-.026-.497 0 .191.064.318.128.445 0 .096.007.199.014.302-.014-.103-.014-.206-.014-.302 2.128 2.256 11.694-3.59 11.79-6.068.031-.445-.223-.604-.35-.7l.254.16.318.221c.255.223.35.54.255.954-.414 1.588-3.528 4.035-6.929 5.465-2.692 1.162-4.772 1.314-5.307.549zm-.016-2.424l.048-.19c-.064.255-.032.476.095.603a.267.267 0 00-.002.008.756.756 0 00.256.183c.095.127.032.444.032.444-.032.096-.064.223-.127.192-.318-.16-.445-.413-.413-.795-.03.19.015.384.127.54l.003-.018a.737.737 0 01-.098-.49l.013-.082a.349.349 0 00-.013.082l.063-.445.064-.255v-.063l-.048.286zm.467-.78c-.06.127-.105.261-.133.399-.096-.127-.128-.286-.096-.477 0-.063 0-.095.032-.158a3.96 3.96 0 01.222-.54.698.698 0 00.064.571l-.02.047c.398.522 1.85.39 3.706-.396 2.384-1.049 4.577-2.765 4.863-3.845.096-.412-.032-.667-.381-.795.063-.031.063-.031.254.032.127.033.223.064.285.064.414.16.573.445.446.89-.318 1.207-2.702 3.082-5.308 4.194-2.065.858-3.655 1.017-4.067.413l.133-.399zm4.903 9.157c-.381.013-.698-.026-.937-.116-.19-.095-.445-.19-.603-.285.387.16.896.2 1.481.142 3.349-.33 9.221-3.849 9.546-6.148l-.032.095a3.86 3.86 0 00-.063.573c0 .031 0 .063-.032.095-.382 1.366-3.082 3.495-6.038 4.766-1.331.567-2.483.85-3.32.878h-.002zm.372-1.306l.058-.08c-.02.026-.037.052-.056.08.482-.136 1.001-.31 1.55-.526.349-.095.476.128.476.128.032.031.032.159-.159.254-.798.312-1.533.536-2.178.671l-.015.028.01-.027c-1.127.236-1.98.202-2.425-.1-.159-.128-.381-.285-.54-.413.512.438 1.695.428 3.28-.015zm-3.978-.684c-.128-.159-.286-.318-.381-.477.127.159.317.381.444.54a.068.068 0 00-.063-.063zM11.46 4.532c.19 0 .445-.032.635-.032.668 0 .986.254.858.763-.159.604-1.017 1.462-2.129 2.224-.222.095-.445-.191-.381-.318 0-.032.032-.032.032-.032.985-.667 1.716-1.398 1.875-1.938.127-.508-.286-.73-1.018-.667h.128zm3.813.73c.382.191.54.51.413.986-.38 1.429-3.178 3.622-6.229 4.925-.572.253-1.143.444-1.652.603-.286.032-.318-.35-.19-.54.031-.063.063-.063.095-.096.476-.127.985-.317 1.526-.54 2.89-1.239 5.528-3.335 5.879-4.67.127-.477-.064-.795-.477-.953.19.095.444.19.635.285zm3.305 3.146l.096.16c.095.254.095.254.095.38v.032c-.095-.032-.285-.413-.317-.572 0-.19-.033-.318-.128-.444l.255.444zm.668 1.684c.031.159.031.35-.032.572-.381 1.398-2.765 3.463-5.657 4.957-.317.127-.508-.096-.445-.318a.326.326 0 01.16-.19c2.923-1.526 5.37-3.623 5.752-5.053.063-.255.063-.476 0-.667.095.254.19.508.222.699zm.223 1.335v.254c0 .127 0 .222-.033.381-.222.858-1.271 1.97-2.7 3.05-.223.16-.35-.063-.319-.222a.58.58 0 01.16-.255c1.493-1.111 2.573-2.255 2.796-3.145.032-.159.063-.317.032-.476l.063.412v.001zM6.31 7.709c-.031-.096-.063-.16-.031-.286-.032.127 0 .19.031.285zm-.795 1.207a.683.683 0 01-.094-.382c0 .16 0 .255.095.382zm-.54 1.334c-.095-.127-.127-.286-.095-.477-.032.191 0 .35.096.477zm11.982 1.113a.434.434 0 01-.064.412c-1.398 1.271-3.464 2.543-5.625 3.463-3.21 1.335-5.625 1.43-5.847.286-.032-.095 0-.031.031-.063 0 .032 0 .19.128.381-.033-.064-.064-.095-.096-.159-.032-.031-.032-.063-.063-.095-.064-.095-.095-.222-.16-.317.605.794 2.829.635 5.69-.604 2.16-.922 4.226-2.224 5.624-3.463.255-.128.35.063.381.159zm-8.04 5.814c.031.063.063.19-.064.222-1.144.19-1.97.095-2.352-.318-.127-.159-.317-.38-.445-.54.35.445 1.207.572 2.447.381.223 0 .381.191.413.255zm10.01-2.32a5.77 5.77 0 00.255-.667c-.383 1.239-2.83 3.146-5.498 4.29-1.654.698-3.02.953-3.75.73.19.063.476.128.698.16 2.035.317 7.183-2.225 8.296-4.513h-.001zm-1.652 2.288c0 .032-.064.128-.191.223-.7.571-1.653 1.144-2.638 1.556-.826.35-1.557.54-2.097.572h-.795c.636.032 1.557-.19 2.67-.635 1.112-.477 2.193-1.112 2.987-1.78.032 0 .032-.031.064-.031 0 0 0 .031.031.031 0 0 0 .032-.031.064zM4.88 9.647c0-.031.032-.095.032-.127.064-.19.19-.476.255-.668 0 .096-.033.16-.064.255-.096.16-.16.35-.223.54z",
    fill: "white"
  }));
};

SvgFct.displayName = "SvgFct";
SvgFct.defaultProps = {
  size: 24,
  color: "#417BA4"
};

function _extends$h4() { _extends$h4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h4.apply(this, arguments); }
var Svg$h0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFil = function SvgFil(props) {
  return createElement(Svg$h0, _extends$h4({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.949 9.681c.279-1.172.615-2.226.972-2.914.131-.328.664-1.115 1.248-1.635.973-.866 2.064-1.086 3.2-.373l-.1.159.1-.159c.58.364.813.738.71 1.091-.075.262-.362.472-.515.45a.93.93 0 01-.668-.18 1.264 1.264 0 01-.406-.542c-.159-.375-.367-.502-.623-.472-.185.021-.4.14-.469.219l-.176.195a2.922 2.922 0 00-.363.476c-.357.595-.686 1.685-1.143 3.943l3.027.443-.166 1.213-3.073-.45-.13.798-.035.2c-.018.103-.037.215-.06.335l3.102.455-.177 1.211-3.175-.465c-.367 1.559-.85 3.229-1.191 3.888-.132.33-.664 1.115-1.248 1.635-.973.866-2.064 1.086-3.2.373-.58-.364-.813-.739-.71-1.091.075-.263.362-.472.516-.45a.933.933 0 01.667.18c.167.123.304.302.406.542.159.374.367.503.623.473.185-.022.4-.14.469-.22.68-.758 1.22-2.217 1.901-5.588l-3.027-.444.167-1.213 3.072.45.131-.797c.03-.179.06-.358.094-.536l-3.09-.452.177-1.212 3.163.464z",
    fill: "white"
  }));
};

SvgFil.displayName = "SvgFil";
SvgFil.defaultProps = {
  size: 24,
  color: "#42C1CA"
};

function _extends$h5() { _extends$h5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h5.apply(this, arguments); }
var Svg$h1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFldc = function SvgFldc(props) {
  return createElement(Svg$h1, _extends$h5({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M16.65 5.355c.068.052.128.097.184.146.149.131.298.263.443.398.115.11.223.227.334.342.009.009.016.03.013.042-.067.26-.17.507-.306.736a2.99 2.99 0 01-.418.551 3.29 3.29 0 01-.728.567 6.684 6.684 0 01-.355.187c-.38.193-.786.301-1.198.377-.281.053-.566.09-.848.13-.372.05-.745.092-1.116.146-.548.08-1.084.204-1.592.44-.56.26-1.026.64-1.342 1.202-.211.375-.296.784-.293 1.217.007.83.291 1.548.782 2.187.3.39.642.736 1.002 1.063.249.227.503.448.751.675.318.293.636.585.908.926.142.18.283.364.405.56.209.334.375.694.483 1.079.06.21.096.423.113.642a3.03 3.03 0 01-.085.97c-.033.129-.034.131-.163.155-.18.033-.361.068-.543.097-.132.02-.266.033-.4.048-.046.006-.093.008-.14.012h-.028c0-.011 0-.022.003-.03.04-.108.085-.214.124-.322.084-.232.14-.473.17-.718.049-.431-.03-.868-.228-1.254-.138-.261-.313-.5-.52-.71a10.42 10.42 0 00-.904-.814 14.711 14.711 0 01-1.481-1.39 7.57 7.57 0 01-.76-.976 4.805 4.805 0 01-.575-1.204 3.535 3.535 0 01-.02-2.039c.11-.385.258-.747.486-1.072.302-.43.69-.75 1.137-.998.45-.251.93-.416 1.424-.54.398-.1.8-.175 1.206-.225.458-.055.915-.102 1.373-.154a5.781 5.781 0 001.105-.207c.329-.1.63-.272.883-.504.218-.204.38-.449.497-.73.107-.258.16-.531.198-.808.008-.061.012-.124.02-.2h-.001zm-5.295 9.62c.164-.033.32-.06.476-.094.399-.089.792-.195 1.162-.384.364-.185.687-.44.952-.75.27-.32.491-.671.607-1.088.072-.264.097-.54.075-.812a3.237 3.237 0 00-.551-1.55 6.28 6.28 0 00-.81-.966l-.161-.157c-.008-.008-.014-.016-.025-.03l.285-.044.617-.094c.108-.017.216-.034.324-.049.013-.001.031.013.042.024.191.224.388.443.572.673.24.299.443.626.608.978.146.314.253.641.306.988.037.242.053.487.028.731-.072.685-.276 1.318-.677 1.872a3.51 3.51 0 01-.901.855c-.403.266-.841.473-1.302.617-.197.063-.396.117-.595.173a.064.064 0 01-.053-.011c-.32-.285-.64-.573-.958-.86-.006-.004-.01-.01-.02-.022h-.001zM12.942 7.7l-.483.075-.547.085c-.064.01-.129.022-.194.029a.093.093 0 01-.066-.021 5.671 5.671 0 01-.586-.626c-.097-.124-.196-.248-.283-.38-.292-.454-.52-.937-.617-1.481a2.977 2.977 0 01.073-1.395c.008-.03.017-.045.052-.052.201-.034.4-.08.6-.112.165-.026.334-.04.5-.06l.136-.013c-.011.027-.018.045-.026.06a3.29 3.29 0 00-.294.93c-.068.442.003.893.204 1.292.165.334.392.617.648.878.267.27.557.513.847.755l.037.036h-.001zm-2.38 8.466l-.32.034c-.135.015-.27.025-.405.046-.208.032-.416.064-.622.11-.752.166-1.338.565-1.657 1.332a4.32 4.32 0 00-.26.87l-.013.05c-.043-.032-.083-.06-.119-.09-.15-.134-.299-.266-.445-.403-.106-.099-.206-.204-.31-.305-.036-.034-.043-.067-.03-.116.142-.512.422-.977.81-1.342.25-.232.53-.43.832-.589.424-.232.878-.366 1.343-.466.054-.011.11-.018.162-.032.033-.009.055 0 .078.022l.434.397.48.441a.632.632 0 01.042.041zm3.245-3.284c-.038-.008-.075-.017-.111-.028l-2.588-.81-.996-.31c-.127-.04-.193-.144-.183-.25.014-.158.066-.267.214-.296a.26.26 0 01.121.01c.281.086.56.176.84.263l1.981.618.79.245a.255.255 0 01.185.278c-.021.167-.121.276-.253.28zm-5.468 4.873c.024.006.053.01.08.019l3.604 1.125c.124.039.197.143.186.264-.014.163-.1.272-.228.284a.317.317 0 01-.117-.017c-.994-.309-1.987-.62-2.98-.93l-.62-.193c-.115-.037-.192-.135-.183-.247.011-.149.066-.262.199-.296.017-.005.036-.006.06-.01zm7.598-11.823c-.011.032-.026.102-.059.16-.052.094-.16.129-.265.096l-1.738-.543-1.866-.581c-.106-.033-.184-.096-.197-.216-.013-.135.05-.315.226-.336a.249.249 0 01.1.014l3.611 1.127c.12.038.188.126.188.279zM10.75 10.78c.007-.155.075-.272.196-.296a.303.303 0 01.143.008c.365.111.728.226 1.092.34l1.374.428a.255.255 0 01.183.29c-.028.172-.13.277-.27.262-.071-.01-.14-.038-.211-.06l-1.787-.558-.538-.168a.245.245 0 01-.182-.246zm-.25 1.417c.049.013.085.02.12.03l2.265.708.187.058c.139.045.207.174.17.321-.027.116-.083.206-.203.226a.26.26 0 01-.117-.01c-.288-.088-.575-.178-.862-.268l-1.603-.5c-.099-.03-.174-.09-.19-.198-.02-.12.012-.232.109-.31.037-.029.087-.04.124-.056zm-2.087 6.89c.01-.162.081-.288.228-.304a.24.24 0 01.095.01l2.493.777c.133.043.198.174.165.316-.029.12-.09.204-.208.23a.135.135 0 01-.067.002l-2.33-.727c-.069-.022-.138-.042-.207-.065a.247.247 0 01-.169-.239zm.748-2.04l.082.02 2.46.769c.12.037.195.142.186.26-.012.16-.095.27-.22.286a.313.313 0 01-.127-.016c-.663-.206-1.327-.415-1.99-.622-.159-.05-.318-.098-.475-.148-.115-.038-.185-.133-.175-.252.011-.154.072-.255.2-.288.017-.005.034-.005.059-.008zm5.716-10.171c-.08-.024-.16-.046-.238-.07-.77-.24-1.54-.483-2.312-.724-.153-.048-.215-.172-.173-.335.026-.105.08-.18.181-.203a.27.27 0 01.135.005c.682.21 1.366.424 2.049.637l.438.137a.248.248 0 01.17.27c-.013.1-.041.195-.136.244-.035.018-.075.026-.114.039zm.738-2.025c-.014.1-.041.208-.155.264a.242.242 0 01-.184.005l-1.774-.555-.692-.217c-.146-.045-.209-.171-.169-.327.027-.105.078-.187.184-.21a.286.286 0 01.14.008c.466.144.932.291 1.397.436l1.069.333c.116.037.184.128.184.263z",
    fill: "white"
  }));
};

SvgFldc.displayName = "SvgFldc";
SvgFldc.defaultProps = {
  size: 24,
  color: "#C40E09"
};

function _extends$h6() { _extends$h6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h6.apply(this, arguments); }
var Svg$h2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFlo = function SvgFlo(props) {
  return createElement(Svg$h2, _extends$h6({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.985 15.223c-.859.98-.88 2.325.01 3.22.84-.81.841-2.32-.01-3.22zm0-9.144c-2.028 2.346-1.951 5.12 0 7.424 1.985-2.352 1.99-5.112 0-7.425zm1.435 6.769c1.687-1.726 3.746-2.12 6.08-1.747-.752 1.725-1.814 3.103-3.688 3.824.414-.325.79-.59 1.132-.895a3.799 3.799 0 001.175-1.861c.064-.234-.018-.3-.233-.334-.785-.126-1.523.039-2.227.36-1.185.54-2.15 1.372-3.055 2.275-.016.017-.023.041-.051.093 1.773.067 3.124.775 3.924 2.411-1.039.231-1.99.182-2.872-.385.665.204 1.327.353 2.055.008-.09-.15-.143-.326-.262-.424-.328-.268-.664-.538-1.035-.742-.574-.314-1.215-.461-1.925-.606.958 1.677.718 3.2-.453 4.675-.544-.686-.925-1.404-1.03-2.252-.105-.85.134-1.623.545-2.362-.908-.145-2.866.905-3.169 1.715.703.356 1.388.194 2.094-.069-.507.522-1.969.736-2.922.422.791-1.613 2.135-2.323 3.949-2.39-.134-.136-.233-.24-.336-.34-.755-.727-1.556-1.395-2.498-1.88-.77-.398-1.579-.647-2.466-.514-.105.015-.209.041-.356.071.27 1.388 1.2 2.248 2.35 2.973-1.209-.146-3.249-2.259-3.646-3.776 2.332-.378 4.402.036 6.082 1.8-1.39-3.095-.65-5.835 1.403-8.398 2.036 2.543 2.783 5.263 1.435 8.348",
    fill: "white"
  }));
};

SvgFlo.displayName = "SvgFlo";
SvgFlo.defaultProps = {
  size: 24,
  color: "#2080A2"
};

function _extends$h7() { _extends$h7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h7.apply(this, arguments); }
var Svg$h3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFsn = function SvgFsn(props) {
  return createElement(Svg$h3, _extends$h7({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.5 9.159c-.756-.79-2.311-1.452-5.21-1.858a44.937 44.937 0 00-2.753-.299c-.715-.043-1.409-.086-2.08-.086-1.114 1.665-2.165 3.673-3.09 6.086-1.009 2.647-1.912 5.253-2.542 7.623h-.189c.063-2.541.483-5.423 1.345-8.413.568-1.942 1.24-3.652 1.997-5.146C3.573 7.43 1.135 8.476 0 9.97.968 7.6 3.846 5.593 8.238 4.888c2.333-3.48 5.085-5.04 7.376-4.356.798.235 1.47.747 2.017 1.473-.064-.042-.127-.085-.21-.106-1.681-.683-3.95.298-6.157 2.733h.105c4.938-.021 7.438 2.071 8.132 4.527zm-6.178 3.202c1.345 0 2.438 1.132 2.438 2.52 0 1.388-1.093 2.52-2.438 2.52-1.344 0-2.437-1.132-2.437-2.52 0-1.409 1.093-2.52 2.438-2.52z",
    fill: "white"
  }));
};

SvgFsn.displayName = "SvgFsn";
SvgFsn.defaultProps = {
  size: 24,
  color: "#1D9AD7"
};

function _extends$h8() { _extends$h8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h8.apply(this, arguments); }
var Svg$h4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFtc = function SvgFtc(props) {
  return createElement(Svg$h4, _extends$h8({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.452 4.5s1.235 1.098.359 3.332c-.167.411-.398.792-.686 1.13l-3.049 3.577-2.446 3.194s-2.81-.462-3.902.671l4.631.206s-.989 1.082-4.89.307c0 0 .053 1.086 1.822 1.395 0 0-1.563.517-2.5-.98 0 0 0 1.086 1.093 1.548 0 0-.885.205-1.614-.723l-1.247 1.338s-.26.052-.104-.204l1.04-1.236s.104-.877-.522-.569c0 0-.415.154-.26.62 0 0-.625-.513.105-1.184l-1.407-1.394 1.821.979-.78-1.908 1.298 1.651s-.108-1.855.467-2.369c0 0 .155 1.804.885 1.959l-.053-3.764.782-.67.103 2.368s.207.257.414-.05c0 0 .47-.774.47-3.041l1.248-1.185.156.929s.21.359.47.05l.259-1.803S14.08 6.767 18.452 4.5zm-8.325 10.463c4.316-3.968 6.608-7.833 6.603-7.833-2.131 1.492-6.603 7.833-6.603 7.833z",
    fill: "white"
  }));
};

SvgFtc.displayName = "SvgFtc";
SvgFtc.defaultProps = {
  size: 24,
  color: "#27323A"
};

function _extends$h9() { _extends$h9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h9.apply(this, arguments); }
var Svg$h5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFuel = function SvgFuel(props) {
  return createElement(Svg$h5, _extends$h9({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M19.149 7.5h-4.871l-1.445 3.623H8.278V9.257h4.555L13.5 7.5H6.601a.322.322 0 00-.324.32v3.302h-1.11L4.5 12.878h1.777v3.298c0 .179.147.324.329.324h3.338l.667-1.756H8.278v-1.867h3.777L10.611 16.5h2.222l1.556-3.623h4.785c.18 0 .326-.144.326-.321v-4.71a.349.349 0 00-.351-.346zm-1.538 3.345a.279.279 0 01-.28.277h-2.275l.777-1.864h1.496a.28.28 0 01.283.276v1.311z",
    fill: "white"
  }));
};

SvgFuel.displayName = "SvgFuel";
SvgFuel.defaultProps = {
  size: 24,
  color: "#4096D0"
};

function _extends$ha() { _extends$ha = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ha.apply(this, arguments); }
var Svg$h6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgFun = function SvgFun(props) {
  return createElement(Svg$h6, _extends$ha({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.525 20.175a7.26 7.26 0 01-2.625-1.35 8.671 8.671 0 01-1.95-2.1 8.422 8.422 0 01-1.2-2.775 8.325 8.325 0 010-3.6A9.833 9.833 0 014.875 7.5a7.74 7.74 0 013.15-2.85 8.13 8.13 0 011.425-.6c.75.9 1.5 1.875 2.25 2.85.075.15.225.225.3.375a5.775 5.775 0 00-2.175.525A5.13 5.13 0 008.25 9.075a6.315 6.315 0 00-.975 1.875c-.2.817-.174 1.672.075 2.475l3.225-2.55c.75.975 1.5 1.875 2.25 2.85-1.05.825-2.175 1.65-3.225 2.55 1.05 1.35 2.175 2.775 3.225 4.2a8.01 8.01 0 01-3.3-.3zm7.147-9.086a4.627 4.627 0 00-.097-.364c-.101.08-2.332 1.785-3.225 2.55-.75-.975-1.5-1.875-2.25-2.85 1.05-.825 2.175-1.65 3.225-2.55-1.05-1.35-2.1-2.7-3.225-4.125 0-.075-.075-.075-.075-.15h1.05a8.25 8.25 0 015.25 1.95 8.1 8.1 0 011.8 2.1c.56.86.919 1.833 1.05 2.85a9.262 9.262 0 01-.075 3.525 7.41 7.41 0 01-1.2 2.7 8.048 8.048 0 01-1.875 2.025 6.577 6.577 0 01-2.475 1.35 52.319 52.319 0 01-1.875-2.4 5.718 5.718 0 01-.6-.825 4.62 4.62 0 003.675-1.8 4.853 4.853 0 00.9-1.875c.14-.57.147-1.273.023-2.11zm-3.542 6.28c.518.708 1.056 1.4 1.613 2.078a6.107 6.107 0 001.94-1.144 7.536 7.536 0 001.759-1.905 6.843 6.843 0 001.108-2.492 8.756 8.756 0 00.068-3.334 6.293 6.293 0 00-.976-2.634 7.55 7.55 0 00-1.68-1.958 7.685 7.685 0 00-4.82-1.817c.695.885 1.4 1.788 2.627 3.367l.33.423-.408.349a42.25 42.25 0 01-1.634 1.32c-.052.042-.69.531-1.168.902.197.251.426.538.776.975.345.431.573.718.77.97.348-.287.728-.589 1.182-.941.074-.058 1.272-.98 1.61-1.245l.643-.505.242.78c.28.9.309 1.86.086 2.771a5.41 5.41 0 01-1.003 2.09 5.183 5.183 0 01-3.092 1.919l.027.031z",
    fill: "white"
  }));
};

SvgFun.displayName = "SvgFun";
SvgFun.defaultProps = {
  size: 24,
  color: "#ED1968"
};

function _extends$hb() { _extends$hb = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hb.apply(this, arguments); }
var Svg$h7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGame = function SvgGame(props) {
  return createElement(Svg$h7, _extends$hb({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.652 9.514h8.313v1.866H9.652V9.514zm8.313 3.108H18v4.907s-6.485 4.699-11.522-.414c0 0-2.76-2.799-1.76-6.876 0 0 .794-5.078 6.831-5.7 0 0 3.726-.519 6.14 2.245L16.241 8.2s-3.071-3.178-7.176-.69c0 0-3.346 1.866-1.966 6.565 0 0 1.518 4.076 6.278 3.247 0 0 1.621-.369 2.45-1.083v-1.751H9.651v-1.866h8.313z",
    fill: "white"
  }));
};

SvgGame.displayName = "SvgGame";
SvgGame.defaultProps = {
  size: 24,
  color: "#2D475B"
};

function _extends$hc() { _extends$hc = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hc.apply(this, arguments); }
var Svg$h8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGas = function SvgGas(props) {
  return createElement(Svg$h8, _extends$hc({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.75 16.935l-5.242-2.443V9.075l5.242-1.859v9.718zM11.117 19.5L6 17.116V7.468l5.117 2.386V19.5zm7.508-12.632l-.085.03-5.032 1.786-.126.045-2.133.756-5.047-2.352 7.18-2.548.063-.022.132-.047.047-.016 5.047 2.352-.047.016z",
    fill: "white"
  }));
};

SvgGas.displayName = "SvgGas";
SvgGas.defaultProps = {
  size: 24,
  color: "#58BF00"
};

function _extends$hd() { _extends$hd = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hd.apply(this, arguments); }
var Svg$h9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgGbp = function SvgGbp(props) {
  return createElement(Svg$h9, _extends$hd({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.315 11.111V9.362c0-2.757 1.665-4.487 4.556-4.487 2.2 0 3.428.931 4.379 2.13L15.388 8.43c-.713-.874-1.388-1.387-2.496-1.387-1.328 0-2.12.912-2.12 2.377v1.691h4.933v1.978h-4.934v3.251h6.44v2.035H6.75v-1.483l1.565-.456v-3.347H6.75v-1.978h1.565z",
    fill: "white"
  }));
};

SvgGbp.displayName = "SvgGbp";
SvgGbp.defaultProps = {
  size: 24,
  color: "#BC3FE0"
};

function _extends$he() { _extends$he = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$he.apply(this, arguments); }
var Svg$ha = styled("svg")({
  flex: "none"
}, space, color);

var SvgGbx = function SvgGbx(props) {
  return createElement(Svg$ha, _extends$he({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.774 8.255v1.544H8.25c-.457 0-1.02.161-1.44.458-.52.369-.81.922-.81 1.745 0 .824.29 1.377.81 1.745.42.297.983.458 1.44.458h1.5v1.545h-1.5a4.086 4.086 0 01-2.29-.73c-.921-.654-1.459-1.678-1.459-3.018 0-1.34.538-2.364 1.459-3.018a4.085 4.085 0 012.29-.73h3.525zm-3.75 4.636v-1.545h3.75v4.404h-1.499v-2.859h-2.25zm6.226-3.096V8.25h5.25v7.5h-6.752V9.8h1.5v4.404H18V9.796l-3.75-.001z",
    fill: "white"
  }));
};

SvgGbx.displayName = "SvgGbx";
SvgGbx.defaultProps = {
  size: 24,
  color: "#1666AF"
};

function _extends$hf() { _extends$hf = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hf.apply(this, arguments); }
var Svg$hb = styled("svg")({
  flex: "none"
}, space, color);

var SvgGbyte = function SvgGbyte(props) {
  return createElement(Svg$hb, _extends$hf({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 20.25a8.25 8.25 0 100-16.5 8.25 8.25 0 000 16.5z",
    fill: "white"
  }));
};

SvgGbyte.displayName = "SvgGbyte";
SvgGbyte.defaultProps = {
  size: 24,
  color: "#302C2C"
};

function _extends$hg() { _extends$hg = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hg.apply(this, arguments); }
var Svg$hc = styled("svg")({
  flex: "none"
}, space, color);

var SvgGeneric = function SvgGeneric(props) {
  return createElement(Svg$hc, _extends$hg({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.752 7.391A5.96 5.96 0 0118 11.46l-2.135-.531a4.017 4.017 0 00-2.895-2.75c-2.15-.536-4.32.742-4.849 2.854-.529 2.111.787 4.256 2.938 4.79a4.03 4.03 0 003.85-1.072l2.135.53a5.982 5.982 0 01-3.9 2.54l-.607 2.43-1.947-.484.483-1.931a6.22 6.22 0 01-.973-.242l-.483 1.931-1.947-.485.608-2.43c-1.784-1.407-2.682-3.747-2.103-6.061.578-2.314 2.473-3.96 4.71-4.367l.607-2.431 1.947.484-.483 1.931c.33.054.656.135.974.242l.482-1.931 1.947.484-.608 2.431z",
    fill: "white"
  }));
};

SvgGeneric.displayName = "SvgGeneric";
SvgGeneric.defaultProps = {
  size: 24,
  color: "#EFB914"
};

function _extends$hh() { _extends$hh = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hh.apply(this, arguments); }
var Svg$hd = styled("svg")({
  flex: "none"
}, space, color);

var SvgGno = function SvgGno(props) {
  return createElement(Svg$hd, _extends$hh({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.583 7.875l.15.248a8.113 8.113 0 011.142 4.153c-.014 4.401-3.536 7.974-7.875 7.974h-.014c-4.338 0-7.874-3.6-7.861-8.002 0-1.476.408-2.91 1.156-4.152l.136-.234.721.73a2.835 2.835 0 00-.34.676 3.068 3.068 0 001.823 3.918 3.018 3.018 0 002.706-.345L12 14.553l1.918-1.945c.177.124.38.221.598.304a2.943 2.943 0 003.768-1.808 3 3 0 00-.3-2.621l.599-.607zM7.023 9.489l2.257 2.276a1.54 1.54 0 01-.98.345c-.883 0-1.605-.731-1.605-1.627 0-.373.123-.718.327-.994zm7.874 2.138l2.23-2.262c.178.263.272.58.272.91 0 .897-.72 1.628-1.605 1.628a1.54 1.54 0 01-.897-.276zm-2.87 1.711L5.526 6.716l.258-.276a8.337 8.337 0 016.148-2.69h.014a8.39 8.39 0 016.257 2.827l.245.277-6.42 6.484h-.001zm-5.44-6.622l5.44 5.532L17.4 6.827c-1.441-1.463-3.4-2.304-5.44-2.304h-.014a7.561 7.561 0 00-5.359 2.193z",
    fill: "white"
  }));
};

SvgGno.displayName = "SvgGno";
SvgGno.defaultProps = {
  size: 24,
  color: "#00A6C4"
};

function _extends$hi() { _extends$hi = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hi.apply(this, arguments); }
var Svg$he = styled("svg")({
  flex: "none"
}, space, color);

var SvgGnt = function SvgGnt(props) {
  return createElement(Svg$he, _extends$hi({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.6 3.43l.961.964-1.821 1.872c.386.589.592 1.278.59 1.982a3.56 3.56 0 01-1.006 2.506 3.347 3.347 0 01-1.774.98v1.632c.675.139 1.292.48 1.77.976a3.561 3.561 0 011.01 2.508 3.561 3.561 0 01-1.01 2.508 3.41 3.41 0 01-2.455 1.042 3.39 3.39 0 01-2.456-1.042A3.579 3.579 0 018.4 16.85a3.58 3.58 0 011.007-2.505 3.347 3.347 0 011.773-.98v-1.632a3.419 3.419 0 01-1.77-.976 3.579 3.579 0 01-1.01-2.51c0-.943.359-1.838 1.01-2.507a3.41 3.41 0 012.456-1.043c.688 0 1.35.21 1.915.6L15.6 3.43zm-3.735 11.246a2.023 2.023 0 00-1.486.632 2.2 2.2 0 00-.62 1.542c0 .58.22 1.122.62 1.542a2.062 2.062 0 001.485.632 2.025 2.025 0 001.485-.632c.4-.413.623-.966.62-1.542 0-.58-.22-1.121-.622-1.545a2.02 2.02 0 00-1.482-.629zm1.482-4.872c.402-.414.625-.968.623-1.545a2.16 2.16 0 00-.62-1.542 2.062 2.062 0 00-1.485-.632 2.024 2.024 0 00-1.486.632 2.2 2.2 0 00-.62 1.542c0 .58.22 1.122.62 1.542a2.063 2.063 0 001.485.631c.57 0 1.095-.22 1.483-.628z",
    fill: "white"
  }));
};

SvgGnt.displayName = "SvgGnt";
SvgGnt.defaultProps = {
  size: 24,
  color: "#002D64"
};

function _extends$hj() { _extends$hj = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hj.apply(this, arguments); }
var Svg$hf = styled("svg")({
  flex: "none"
}, space, color);

var SvgGrc = function SvgGrc(props) {
  return createElement(Svg$hf, _extends$hj({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.04 3.75c.397.24.792.484 1.192.717 1.902 1.103 3.803 2.204 5.706 3.302.126.071.181.152.181.306-.004 2.619-.003 5.238.006 7.857 0 .17-.078.242-.203.314-2.262 1.31-4.524 2.621-6.785 3.933-.034.02-.065.047-.097.071h-.083c-.682-.402-1.365-.808-2.05-1.206-1.615-.938-3.232-1.875-4.85-2.807-.138-.079-.183-.169-.182-.326.008-2.598.009-5.197.004-7.795 0-.186.064-.28.217-.368 2.241-1.293 4.48-2.59 6.718-3.888.052-.03.096-.073.143-.11h.083zm2.104 13.11c.31.212.613.435.925.66.017-.008.043-.018.066-.03 1.013-.586 2.027-1.17 3.037-1.763.06-.036.112-.139.112-.21.006-2.345.005-4.688-.002-7.032a.283.283 0 00-.117-.207c-.997-.586-2-1.162-2.998-1.746-.104-.06-.162-.042-.25.026-.242.19-2.624 1.645-3.557 2.205-.729.437-1.441.897-2.005 1.553-.778.903-.85 2.156-.17 3.138.336.488.786.858 1.267 1.188.384.261.78.504 1.17.756-.01.014-.017.03-.027.036-.514.298-1.027.6-1.548.89-.05.027-.154 0-.211-.036a8.074 8.074 0 01-1.511-1.26c-1.297-1.36-1.561-3.59-.615-5.217A5.535 5.535 0 019.48 7.95c.945-.618 3.577-2.18 3.926-2.394-.03-.039-.038-.06-.054-.07-.414-.241-.825-.487-1.245-.717-.061-.034-.173-.022-.24.013-.23.12-.452.256-.676.388-.198.115-.396.232-.623.367l1.079.678c-.552.325-1.073.637-1.6.94-.042.023-.132.005-.178-.027-.26-.176-.516-.36-.763-.555-.109-.086-.181-.095-.302-.023-.981.573-1.965 1.142-2.951 1.707-.109.062-.144.135-.144.26.004 2.324.003 4.648 0 6.97 0 .125.032.198.143.263.98.561 1.956 1.128 2.93 1.699.109.063.18.06.29-.012.698-.468 3.896-2.472 4.785-3.025.15-.094.277-.228.414-.344l-.023-.052H10.93c.338-.586.652-1.14.979-1.687.03-.05.14-.07.213-.07 1.506-.004 3.012-.002 4.517-.002.06 0 .12.006.193.01.003.071.02.135.006.19-.099.412-.165.837-.314 1.23-.356.935-1.015 1.654-1.819 2.207-.877.604-3.67 2.25-4.145 2.533.023.04.026.056.036.062.288.17.598.313.861.517.379.292.709.29 1.088 0 .273-.21.592-.357.923-.552l-1.098-.686c.03-.026.047-.047.069-.06.502-.291 1.005-.585 1.512-.87.048-.026.146-.012.194.022zm2.17-7.003c.26.46.452 1.05.48 1.505-.508 0-.998.003-1.49-.004-.045 0-.115-.053-.13-.096-.24-.741-.752-1.268-1.357-1.71-.43-.314-.887-.591-1.332-.885-.037-.024-.074-.05-.135-.092.101-.061.18-.11.261-.157.414-.24.825-.485 1.245-.716.075-.042.21-.068.271-.028.877.577 1.661 1.25 2.188 2.183z",
    fill: "white"
  }));
};

SvgGrc.displayName = "SvgGrc";
SvgGrc.defaultProps = {
  size: 24,
  color: "#5411B3"
};

function _extends$hk() { _extends$hk = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hk.apply(this, arguments); }
var Svg$hg = styled("svg")({
  flex: "none"
}, space, color);

var SvgGto = function SvgGto(props) {
  return createElement(Svg$hg, _extends$hk({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.532 10.5H6.015v5.416a2.041 2.041 0 00.615 1.48c.399.391.943.61 1.507.604h3.396l-.001-7.5zm.127-2.834h.595c.588-1.013 1.126-1.701 1.632-2.073.624-.46 1.263-.464 1.764.028.468.46.556 1.035.248 1.59a2.21 2.21 0 01-.348.455h2.181c.51 0 1.019.418 1.019 1 0 .5-.427 1-1.018 1H12.38V8.332h-.849v1.334H6.269c-.509 0-1.019-.419-1.019-1 0-.5.427-1 1.019-1h2.204a2.471 2.471 0 01-.366-.43c-.365-.557-.32-1.147.156-1.615.5-.492 1.14-.487 1.764-.028.506.372 1.045 1.061 1.633 2.073zm-.986 0c-.435-.693-.823-1.163-1.155-1.407-.307-.225-.475-.226-.655-.049-.185.182-.197.338-.041.575.177.271.55.576 1.086.88h.765zm2.567 0h.915c.512-.294.85-.591.997-.855.128-.228.1-.402-.102-.6-.18-.178-.349-.177-.655.048-.332.244-.721.714-1.154 1.407h-.001zm-.859 2.833h5.518v5.417a2.042 2.042 0 01-.615 1.48c-.403.393-.945.61-1.508.604h-3.395v-7.5z",
    fill: "white"
  }));
};

SvgGto.displayName = "SvgGto";
SvgGto.defaultProps = {
  size: 24,
  color: "#7F27FF"
};

function _extends$hl() { _extends$hl = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hl.apply(this, arguments); }
var Svg$hh = styled("svg")({
  flex: "none"
}, space, color);

var SvgGup = function SvgGup(props) {
  return createElement(Svg$hh, _extends$hl({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.992 9.51L9.904 7.405A24.427 24.427 0 0112 4.5c.767.912 1.467 1.88 2.092 2.894l-2.1 2.115zm4.289 2.107c.59 1.651 1.454 3.303.63 4.888a5.627 5.627 0 01-2.334 2.352c-2.714 1.44-6.074.382-7.504-2.352-.832-1.585.137-3.367.728-5.018.54-1.217 1.087-2.34 1.708-3.418l2.483 2.5 2.496-2.513c.657 1.135 1.224 2.304 1.793 3.562v-.001z",
    fill: "white"
  }));
};

SvgGup.displayName = "SvgGup";
SvgGup.defaultProps = {
  size: 24,
  color: "#37DCD8"
};

function _extends$hm() { _extends$hm = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hm.apply(this, arguments); }
var Svg$hi = styled("svg")({
  flex: "none"
}, space, color);

var SvgGvt = function SvgGvt(props) {
  return createElement(Svg$hi, _extends$hm({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M19.5 9.895c0 4.056-3.365 7.355-7.5 7.355s-7.5-3.3-7.5-7.354c0-.298.018-.598.056-.895h1.346a5.96 5.96 0 00-.067.895c0 3.334 2.766 6.047 6.166 6.047 3.244 0 5.911-2.47 6.15-5.591H8.61c.203 1.457 1.352 2.615 2.833 2.855 1.481.238 2.947-.498 3.616-1.815h1.444c-.656 1.891-2.467 3.163-4.505 3.165-2.621 0-4.755-2.092-4.755-4.662 0-.3.03-.6.087-.895h12.114c.038.297.056.595.056.895z",
    fill: "white"
  }));
};

SvgGvt.displayName = "SvgGvt";
SvgGvt.defaultProps = {
  size: 24,
  color: "#16B9AD"
};

function _extends$hn() { _extends$hn = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hn.apply(this, arguments); }
var Svg$hj = styled("svg")({
  flex: "none"
}, space, color);

var SvgGxs = function SvgGxs(props) {
  return createElement(Svg$hj, _extends$hn({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M5.265 5.27c.953-.995 2.692-1.035 3.676-.067a220.216 220.216 0 013.05 3.042c1.072-1.017 2.074-2.103 3.15-3.117 1.022-.924 2.762-.812 3.67.223.932.977.917 2.68-.05 3.628-.995 1.013-2.003 2.012-3.007 3.017 1.026 1.056 2.095 2.072 3.112 3.142.912 1 .825 2.704-.164 3.623-.973.982-2.717.985-3.689-.002-1.01-.992-1.998-2.007-3.002-3.003-1.07 1.03-2.092 2.112-3.175 3.132-1.036.92-2.783.782-3.676-.273-.9-.974-.878-2.634.06-3.577a162.95 162.95 0 012.675-2.676l1.13 1.129c-.882.91-1.81 1.782-2.679 2.706-.585.6-.07 1.719.753 1.706.5.044.844-.37 1.168-.681.86-.877 1.733-1.737 2.593-2.613-1.875-1.891-3.78-3.757-5.646-5.656-.974-.981-.943-2.73.052-3.683h-.001zm1.09 2.543c.992 1.035 2.023 2.033 3.033 3.05.487-.493.978-.983 1.471-1.472-.977-.984-1.95-1.976-2.941-2.947-.316-.341-.856-.468-1.268-.224-.573.278-.753 1.13-.296 1.593zM16.06 6.47c-1.865 1.83-3.692 3.7-5.546 5.538.5.486.998.972 1.487 1.47.374-.369.746-.742 1.119-1.116.376.376.75.754 1.13 1.127-.368.375-.739.747-1.113 1.118 1.006 1.012 1.992 2.042 3.03 3.021.528.555 1.551.218 1.703-.513.164-.517-.208-.965-.56-1.29a1612.764 1612.764 0 01-4.946-4.945c.377-.376.752-.754 1.125-1.132.375.373.75.747 1.133 1.114.986-1.022 2.032-1.987 3.003-3.025.49-.476.294-1.387-.331-1.644-.42-.217-.933-.064-1.235.277z",
    fill: "white"
  }));
};

SvgGxs.displayName = "SvgGxs";
SvgGxs.defaultProps = {
  size: 24,
  color: "#35A5F3"
};

function _extends$ho() { _extends$ho = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ho.apply(this, arguments); }
var Svg$hk = styled("svg")({
  flex: "none"
}, space, color);

var SvgHpb = function SvgHpb(props) {
  return createElement(Svg$hk, _extends$ho({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.429 11.454s.995-2.212-.956-4.35c0 0-1.11-1.425-3.405-1.312l.458-.18c.076-.03.157-.051.238-.062l.451-.058 3.176-.488s1.123-.22 1.974.023c.242.07.463.2.637.379.47.476 1.412 1.733.795 3.723 0 0-.613 2.213-2.908 2.738 0 0-.575.15-.46-.413zm-.142 1.233s1.435 1.967 4.307 1.413c0 0 1.816-.21 2.888-2.203l-.076.48a.962.962 0 01-.068.231l-.178.41-1.192 2.925s-.378 1.059-1.026 1.653c-.185.169-.412.288-.657.344-.656.152-2.24.306-3.673-1.229 0 0-1.63-1.643-.92-3.847 0-.002.16-.56.595-.177zm-1.039-.71s-2.452.258-3.37 2.981c0 0-.709 1.653.535 3.548l-.388-.3a.975.975 0 01-.173-.172l-.277-.354-2.013-2.455s-.755-.845-.963-1.688a1.4 1.4 0 01.016-.733c.187-.635.83-2.063 2.898-2.529 0 0 2.262-.583 3.871 1.107.002 0 .42.412-.135.595z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.5,
    d: "M12.83 12.12s2.444-.319 3.292-3.064c0 0 .665-1.67-.628-3.534l.396.29c.066.05.125.106.177.168l.286.346 2.077 2.405s.776.825 1.007 1.663c.065.24.065.492 0 .732-.17.64-.776 2.084-2.831 2.601 0 0-2.247.638-3.899-1.01.002 0-.427-.401.122-.598zm-1.229.452s-1.05 2.187.845 4.372c0 0 1.072 1.451 3.372 1.395l-.464.169a1.013 1.013 0 01-.24.055l-.452.047-3.187.41s-1.127.193-1.973-.071a1.464 1.464 0 01-.627-.396c-.458-.487-1.367-1.767-.7-3.74 0 0 .668-2.197 2.977-2.665 0 .002.58-.135.449.424zm.082-1.152s-1.464-1.947-4.327-1.35c0 0-1.813.233-2.856 2.242l.069-.48a.974.974 0 01.064-.233l.173-.413 1.147-2.943s.364-1.063 1.002-1.666c.185-.172.41-.293.654-.352.655-.163 2.237-.337 3.69 1.177 0 0 1.654 1.62.977 3.834 0-.002-.153.56-.593.183z",
    fill: "white"
  }));
};

SvgHpb.displayName = "SvgHpb";
SvgHpb.defaultProps = {
  size: 24,
  color: "#1591CA"
};

function _extends$hp() { _extends$hp = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hp.apply(this, arguments); }
var Svg$hl = styled("svg")({
  flex: "none"
}, space, color);

var SvgHsr = function SvgHsr(props) {
  return createElement(Svg$hl, _extends$hp({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.063 5.625h3.265c-.393.622-.634 1.31-.619 2.055.972.01 1.946.01 2.918 0a3.434 3.434 0 00-.612-2.055h3.288c-.226.475-.61.915-.574 1.472-.015 2.493.005 4.988-.002 7.48.322 0 .648 0 .975.003.237-.473.449-.955.618-1.455.976.025 1.958-.028 2.93.103-.962.83-1.464 2.01-2.09 3.085-2.486.005-4.97-.008-7.458.007-.117.907.442 1.532 1.09 2.055H7.595c.365-.482 1.1-.793 1.023-1.5.025-2.41 0-4.822.008-7.235h2.13v1.485h2.826V9.422h-5.9L6.214 12c.488.86.977 1.719 1.469 2.578h.726v1.735H6.19C5.38 14.873 4.54 13.45 3.75 12v-.002c.793-1.448 1.635-2.87 2.44-4.31.829 0 1.656 0 2.483-.008a3.579 3.579 0 00-.611-2.055zm2.694 7.25v1.703h2.825v-1.703h-2.825zm5.186-5.188h2.212c.606.975 1.023 2.1 1.898 2.88.018.058.05.176.067.233-.934.123-1.88.028-2.823.075-.12-.52-.355-.998-.616-1.455l-.738.002V7.687zm-2.284 8.843c.653.002 1.31 0 1.963-.002-.014.835.57 1.352 1.143 1.847h-4.227c.542-.515 1.176-1.003 1.121-1.845z",
    fill: "white"
  }));
};

SvgHsr.displayName = "SvgHsr";
SvgHsr.defaultProps = {
  size: 24,
  color: "#56428E"
};

function _extends$hq() { _extends$hq = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hq.apply(this, arguments); }
var Svg$hm = styled("svg")({
  flex: "none"
}, space, color);

var SvgHtml = function SvgHtml(props) {
  return createElement(Svg$hm, _extends$hq({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.015 12.709v5.994l4.46-1.201L17.523 5.96h-5.508v4.898l.228-.71h.597l-.825 2.56zm-5.538 5.643L5.25 4.875h13.5l-1.227 13.477-5.538 1.523-5.508-1.523zm3.872-5.095v-.556l-1.851-.738 1.852-.742v-.557L7.705 11.74v.444l2.644 1.074zm5.95-1.074l-2.645 1.074v-.556l1.852-.74-1.852-.74v-.557l2.645 1.075v.444zm-4.284.525v-1.85l-.988 3.08h.591l.397-1.23z",
    fill: "white"
  }));
};

SvgHtml.displayName = "SvgHtml";
SvgHtml.defaultProps = {
  size: 24,
  color: "#CFA967"
};

function _extends$hr() { _extends$hr = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hr.apply(this, arguments); }
var Svg$hn = styled("svg")({
  flex: "none"
}, space, color);

var SvgHuc = function SvgHuc(props) {
  return createElement(Svg$hn, _extends$hr({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.625 10.875h6.75V7.5h2.25v12h-2.25v-6.375h-6.75V16.5h-2.25v-12h2.25v6.375z",
    fill: "white"
  }));
};

SvgHuc.displayName = "SvgHuc";
SvgHuc.defaultProps = {
  size: 24,
  color: "#FFC018"
};

function _extends$hs() { _extends$hs = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hs.apply(this, arguments); }
var Svg$ho = styled("svg")({
  flex: "none"
}, space, color);

var SvgHush = function SvgHush(props) {
  return createElement(Svg$ho, _extends$hs({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.255 13.993c0-.345.002-.69 0-1.034-.001-.096.026-.17.116-.208.082-.036.168-.01.24.073.215.25.428.503.642.755.075.087.15.175.223.265a.132.132 0 01.029.075c.001.364.002.728 0 1.09a.636.636 0 01-.578.642.632.632 0 01-.666-.544c-.006-.042-.006-.084-.006-.127v-.987zm.002-6.758l-.002-.044V5.142c.001-.315.217-.58.51-.632a.623.623 0 01.737.616c.007.698.003 1.397.004 2.095l-.004.036c-.145-.249-.346-.373-.62-.373-.272 0-.474.12-.624.351zm-.002 9.46c.153.232.357.351.631.35.273 0 .472-.125.62-.356v1.735c0 .17.005.343-.01.51a.621.621 0 01-.653.565.628.628 0 01-.586-.624c-.004-.67-.002-1.34-.002-2.01v-.17zm1.251-6.62v1.246c0 .119-.037.183-.127.22a.231.231 0 01-.27-.071l-.543-.636c-.094-.11-.188-.218-.28-.33a.13.13 0 01-.03-.075c-.002-.536-.002-1.072 0-1.607a.63.63 0 01.575-.632c.296-.033.59.188.659.498a.749.749 0 01.015.159l.001 1.229zm1.299-2.532V5.878c.001-.302.173-.548.44-.632.405-.128.81.178.812.619.002.416 0 .831 0 1.246v2.096c0 .31-.186.56-.47.638a.627.627 0 01-.778-.562 1.515 1.515 0 01-.004-.115V7.543zM10.02 15.57v1.924a.634.634 0 01-.52.635c-.36.069-.718-.224-.729-.598-.003-.107 0-.214 0-.322v-3.564c0-.3.191-.552.47-.624a.626.626 0 01.779.609c.002.646 0 1.293 0 1.94zm0-7.084v2.624a.634.634 0 01-.492.63.629.629 0 01-.757-.608c-.004-.38 0-.758-.002-1.137v-4.13c0-.309.202-.567.49-.632a.626.626 0 01.76.616c.003.674 0 1.347 0 2.022l.002.615zm3.784 6.139v-2.85c0-.284.121-.495.375-.614.406-.188.862.113.877.573v5.736c0 .313-.18.562-.462.643a.626.626 0 01-.786-.555 1.548 1.548 0 01-.004-.12v-2.814.001zm3.82-2.9v4.455a.637.637 0 01-.503.64c-.37.08-.737-.215-.747-.6V7.28c0-.288.145-.519.389-.62.413-.173.86.137.86.598v4.467h.001zm-10-.006v4.461a.634.634 0 01-.489.638c-.375.09-.75-.206-.761-.6V7.267c0-.307.184-.556.465-.634a.626.626 0 01.785.602c.003.491 0 .983 0 1.475v3.009z",
    fill: "white"
  }));
};

SvgHush.displayName = "SvgHush";
SvgHush.defaultProps = {
  size: 24,
  color: "#292929"
};

function _extends$ht() { _extends$ht = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ht.apply(this, arguments); }
var Svg$hp = styled("svg")({
  flex: "none"
}, space, color);

var SvgIcn = function SvgIcn(props) {
  return createElement(Svg$hp, _extends$ht({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M15.625 5.25h2v13.5h-2V5.25zM12.292 12h2v6.75h-2V12zM8.958 8.625h2V18.75h-2V8.625zm-3.333 6.75h2v3.375h-2v-3.375z",
    fill: "white"
  }));
};

SvgIcn.displayName = "SvgIcn";
SvgIcn.defaultProps = {
  size: 24,
  color: "#4C6F8C"
};

function _extends$hu() { _extends$hu = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hu.apply(this, arguments); }
var Svg$hq = styled("svg")({
  flex: "none"
}, space, color);

var SvgIcx = function SvgIcx(props) {
  return createElement(Svg$hq, _extends$hu({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.472 16.854l1.623-1.623a3.75 3.75 0 005.136-5.136l1.623-1.623a6 6 0 01-8.382 8.382zm-1.326-1.326a6 6 0 018.382-8.382l-1.623 1.623a3.75 3.75 0 00-5.136 5.136l-1.623 1.623zM18 7.5a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm-12 12a1.5 1.5 0 110-3 1.5 1.5 0 010 3z",
    fill: "white"
  }));
};

SvgIcx.displayName = "SvgIcx";
SvgIcx.defaultProps = {
  size: 24,
  color: "#1FC5C9"
};

function _extends$hv() { _extends$hv = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hv.apply(this, arguments); }
var Svg$hr = styled("svg")({
  flex: "none"
}, space, color);

var SvgIgnis = function SvgIgnis(props) {
  return createElement(Svg$hr, _extends$hv({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.109 4.5c1.139.665 2.21 1.436 3.338 2.119l-4.158 7.253c-.553-.968-1.07-1.956-1.615-2.93.785-2.156 1.682-4.274 2.435-6.442zM7.5 19.5c2.354-4.282 4.8-8.516 7.128-12.81.623 1.093 1.246 2.186 1.872 3.278-1.805 3.174-3.623 6.34-5.413 9.521-1.196 0-2.39-.015-3.587.011zm3.812-.017c.997-1.707 1.937-3.443 2.947-5.142.602.77 1.213 1.537 1.811 2.31-1.58.954-3.167 1.898-4.758 2.832z",
    fill: "white"
  }));
};

SvgIgnis.displayName = "SvgIgnis";
SvgIgnis.defaultProps = {
  size: 24,
  color: "#F9C011"
};

function _extends$hw() { _extends$hw = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hw.apply(this, arguments); }
var Svg$hs = styled("svg")({
  flex: "none"
}, space, color);

var SvgInk = function SvgInk(props) {
  return createElement(Svg$hs, _extends$hw({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.145 8.645a.493.493 0 01.587.284c.23.526.437 1.069.675 1.594.143.316.628.357.818.066.318-.527.572-1.086.882-1.62.254-.332.715-.17 1.064-.202.365-.024.635.437.428.753-1 1.87-2.008 3.732-3.009 5.602-.167.34-.714.34-.865-.016-.223-.543-.398-1.11-.612-1.652-.128-.356-.675-.412-.857-.072-.31.558-.58 1.141-.89 1.691-.15.251-.469.21-.715.21-.238-.015-.524.058-.706-.145a.522.522 0 01-.072-.631c.937-1.774 1.89-3.554 2.827-5.343.111-.203.207-.454.445-.518zm-3.272.138c.278-.016.556-.016.834 0 .31.033.508.43.357.713-.93 1.756-1.866 3.505-2.795 5.253-.112.195-.199.454-.437.518-.278.041-.563.017-.842.017-.34.016-.627-.43-.42-.729.969-1.813 1.937-3.635 2.906-5.456.08-.154.214-.307.397-.316zm9.855.016c.301-.09.62-.024.929-.049.238.009.54-.04.715.17.214.22.15.632-.12.77-.548.348-1.088.72-1.643 1.06-.35.243-.866-.17-.715-.575.135-.324.325-.622.477-.939.087-.162.166-.372.357-.437zm-2.629 4.841c.159-.097.358-.064.508.017.421.21.842.437 1.271.64.183.08.373.234.381.452.032.292-.215.575-.5.551-.611 0-1.223.007-1.827 0-.301 0-.54-.356-.428-.647.079-.211.198-.398.293-.6.072-.153.143-.34.302-.413z",
    fill: "white"
  }));
};

SvgInk.displayName = "SvgInk";
SvgInk.defaultProps = {
  size: 24,
  color: "#DF1A14"
};

function _extends$hx() { _extends$hx = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hx.apply(this, arguments); }
var Svg$ht = styled("svg")({
  flex: "none"
}, space, color);

var SvgIns = function SvgIns(props) {
  return createElement(Svg$ht, _extends$hx({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M10.085 9.215c-.57 0-1.032-.45-1.032-1.006a1.02 1.02 0 011.031-1.007c.57 0 1.032.45 1.032 1.007 0 .556-.462 1.006-1.031 1.006zm2.945-1.15a1.02 1.02 0 01-1.031-1.007 1.02 1.02 0 011.03-1.007c.57 0 1.032.45 1.032 1.007 0 .556-.461 1.007-1.031 1.007zm1.18 6.904c-.57 0-1.032-.45-1.032-1.007 0-.556.461-1.007 1.031-1.007.57 0 1.032.45 1.032 1.007 0 .556-.462 1.007-1.031 1.007zM4.34 13.53a.582.582 0 01-.59-.575c0-.318.264-.575.589-.575.324 0 .59.257.59.575a.581.581 0 01-.59.575zm1.62 3.741a.436.436 0 01-.443-.432c0-.238.198-.431.442-.431.245 0 .443.192.443.431a.437.437 0 01-.442.432zm4.713 2.876a.437.437 0 01-.442-.432c0-.238.198-.431.442-.431.245 0 .443.193.443.431a.437.437 0 01-.443.432zm7.661-2.589a.437.437 0 01-.442-.432c0-.238.198-.432.442-.432s.443.194.443.432a.438.438 0 01-.443.432zm-4.714-.862a.44.44 0 01-.442-.432c0-.239.198-.431.442-.431s.443.192.443.43a.438.438 0 01-.443.433zm2.652-2.014a.437.437 0 01-.442-.432c0-.239.197-.431.442-.431.244 0 .443.192.443.431a.438.438 0 01-.443.432zm-3.094 5.465a.583.583 0 01-.59-.575c0-.317.265-.575.59-.575.325 0 .589.257.589.575a.582.582 0 01-.589.575zm2.651-7.192a.582.582 0 01-.588-.575c0-.318.263-.576.588-.576.326 0 .59.258.59.575a.584.584 0 01-.59.576zm.886 5.754a.586.586 0 01-.543-.353.582.582 0 01-.047-.223c0-.317.264-.575.589-.575.325 0 .59.258.59.576a.583.583 0 01-.59.575zM5.074 15.832a.728.728 0 01-.737-.719c0-.396.33-.718.737-.718.406 0 .736.322.736.718 0 .396-.33.72-.736.72zm7.072 2.877a1.02 1.02 0 01-1.031-1.008c0-.556.461-1.007 1.031-1.007.57 0 1.031.452 1.031 1.008a1.02 1.02 0 01-1.03 1.007zm-5.599-4.89a1.02 1.02 0 01-1.03-1.008 1.02 1.02 0 011.03-1.007c.57 0 1.032.451 1.032 1.008a1.02 1.02 0 01-1.031 1.007zm5.6 2.3a.728.728 0 01-.738-.719c0-.396.33-.718.737-.718s.737.322.737.718c0 .397-.33.719-.737.719zM8.61 9.792a.437.437 0 01-.442-.432c0-.239.198-.432.442-.432.245 0 .443.193.443.432a.437.437 0 01-.443.432zm2.799 1.725a.874.874 0 01-.884-.862c0-.477.396-.864.884-.864.487 0 .883.386.883.863a.874.874 0 01-.883.864v-.001zm2.063.863a.582.582 0 01-.59-.576c0-.317.264-.575.59-.575.325 0 .588.258.588.575a.584.584 0 01-.588.575zm1.03-7.191a.437.437 0 01-.442-.432c0-.238.198-.432.443-.432.244 0 .442.194.442.432a.437.437 0 01-.442.432zm-2.062-.001a.728.728 0 01-.736-.72.725.725 0 01.736-.718.727.727 0 01.738.719.727.727 0 01-.738.719zm.443 4.603a.582.582 0 01-.589-.576c0-.318.263-.575.589-.575.325 0 .589.258.589.575a.582.582 0 01-.59.575zm-5.599 6.33a.874.874 0 01-.883-.864c0-.477.396-.863.883-.863s.884.386.884.863a.873.873 0 01-.884.864zm8.545.862a.874.874 0 01-.884-.864c0-.476.396-.862.884-.862s.883.386.883.862a.874.874 0 01-.883.864zm-1.178 2.014a.874.874 0 01-.884-.863c0-.477.396-.864.883-.864.488 0 .884.387.884.864a.873.873 0 01-.884.862h.001zm-6.925 0a1.02 1.02 0 01-1.03-1.008c0-.556.461-1.006 1.03-1.006.57 0 1.032.45 1.032 1.006a1.02 1.02 0 01-1.031 1.008zm-3.093-7.48a.874.874 0 01-.884-.863c0-.476.395-.863.884-.863.488 0 .883.386.883.863a.874.874 0 01-.883.864z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.5,
    d: "M9.053 12.955c-.652 0-1.18-.515-1.18-1.15 0-.636.529-1.151 1.18-1.151.652 0 1.18.515 1.18 1.15 0 .636-.529 1.15-1.18 1.15zm6.187-1.725c-.651 0-1.179-.516-1.179-1.152 0-.635.528-1.15 1.18-1.15.65 0 1.179.515 1.179 1.15 0 .636-.528 1.151-1.18 1.151zm3.24 4.89a.874.874 0 01-.883-.863c0-.477.396-.863.884-.863.487 0 .883.386.883.863a.873.873 0 01-.883.864zm.886-3.452a.876.876 0 01-.884-.864c0-.476.396-.862.884-.862.487 0 .883.386.883.862a.874.874 0 01-.883.864zm-3.389-4.027a.728.728 0 01-.736-.72.725.725 0 01.736-.719.727.727 0 01.737.72.727.727 0 01-.737.718zm.146-2.302a.582.582 0 01-.588-.575c0-.318.264-.575.588-.575.326 0 .59.258.59.575a.583.583 0 01-.59.575zm1.326.575a.437.437 0 01-.442-.431c0-.238.198-.432.442-.432.245 0 .443.194.443.432a.437.437 0 01-.442.431zm2.358 3.453a.438.438 0 01-.442-.432c0-.238.199-.432.443-.432.243 0 .442.194.442.432a.437.437 0 01-.442.432zm-12.67-3.74a.437.437 0 01-.442-.431c0-.239.197-.432.442-.432s.443.193.443.432a.437.437 0 01-.443.431zm-.589 3.74a.437.437 0 01-.442-.432c0-.238.198-.432.442-.432.245 0 .443.194.443.432a.437.437 0 01-.443.432zm1.18.575a.437.437 0 01-.443-.431c0-.239.198-.432.442-.432.245 0 .443.193.443.431a.437.437 0 01-.443.433zM9.2 5.476a.437.437 0 01-.443-.432c0-.238.198-.431.443-.431.244 0 .442.193.442.431a.437.437 0 01-.442.432zm10.608 8.632a.438.438 0 01-.443-.432c0-.239.199-.432.443-.432.243 0 .442.193.442.432a.437.437 0 01-.442.432zm-1.474-4.604c-.57 0-1.03-.45-1.03-1.006 0-.557.46-1.007 1.03-1.007.57 0 1.032.45 1.032 1.007a1.02 1.02 0 01-1.032 1.006zm-.884 2.301a.729.729 0 01-.737-.718c0-.398.33-.719.736-.719a.727.727 0 01.737.719.729.729 0 01-.736.718zM7.433 8.64a.728.728 0 01-.737-.718c0-.398.33-.72.737-.72a.73.73 0 01.737.72.727.727 0 01-.737.718zm3.24-2.014a.728.728 0 01-.737-.718c0-.398.33-.72.737-.72.408 0 .737.323.737.72a.727.727 0 01-.737.718zm-1.915.288a.582.582 0 01-.588-.575c0-.318.263-.575.588-.575.326 0 .59.258.59.575a.582.582 0 01-.59.575zM5.518 9.215a.582.582 0 01-.589-.575c0-.317.263-.575.589-.575.325 0 .589.258.589.575a.582.582 0 01-.589.575zm12.375 4.604a.582.582 0 01-.589-.576c0-.318.264-.575.589-.575.326 0 .589.258.589.575a.584.584 0 01-.589.576zm-6.335.288c-.57 0-1.03-.451-1.03-1.007 0-.557.461-1.007 1.03-1.007.57 0 1.032.45 1.032 1.007a1.02 1.02 0 01-1.032 1.007zm-1.915.575a.582.582 0 01-.589-.575c0-.318.263-.575.589-.575.325 0 .589.257.589.575a.584.584 0 01-.589.575zm.294 2.301a.874.874 0 01-.883-.864c0-.476.395-.862.883-.862s.883.386.883.862a.874.874 0 01-.883.864zm0 1.725a.582.582 0 01-.589-.574c0-.319.264-.576.589-.576.325 0 .59.258.59.576a.582.582 0 01-.59.575v-.001z",
    fill: "white"
  }));
};

SvgIns.displayName = "SvgIns";
SvgIns.defaultProps = {
  size: 24,
  color: "#B2A3F6"
};

function _extends$hy() { _extends$hy = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hy.apply(this, arguments); }
var Svg$hu = styled("svg")({
  flex: "none"
}, space, color);

var SvgIon = function SvgIon(props) {
  return createElement(Svg$hu, _extends$hy({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M5.27 14.257A2.036 2.036 0 013 12.232a2.034 2.034 0 012.012-2.039c.72-3.307 3.652-5.783 7.159-5.783.655 0 1.29.086 1.894.247a2.025 2.025 0 013.125-.308c.38.382.594.9.592 1.44 0 .351-.088.682-.244.97a7.357 7.357 0 011.962 5.014 7.358 7.358 0 01-2.178 5.24c.245.335.389.75.389 1.198a2.033 2.033 0 01-2.03 2.039 2.03 2.03 0 01-1.89-1.293c-.53.12-1.074.18-1.62.18-3.18 0-5.887-2.035-6.901-4.88zm.367-.079c.975 2.676 3.533 4.586 6.534 4.586.521 0 1.029-.058 1.517-.166a2.032 2.032 0 013.388-1.867 6.986 6.986 0 002.053-4.958 6.978 6.978 0 00-1.804-4.694 2.02 2.02 0 01-3.008.15 2.035 2.035 0 01-.593-1.44c0-.281.057-.549.16-.792a6.94 6.94 0 00-1.713-.213c-3.312 0-6.084 2.325-6.785 5.44a2.036 2.036 0 011.672 2.008 2.039 2.039 0 01-1.422 1.946h.001zm6.534-.363a2.036 2.036 0 01-2.031-2.041c0-1.128.909-2.041 2.031-2.041s2.032.913 2.032 2.04a2.038 2.038 0 01-2.032 2.042z",
    fill: "white"
  }));
};

SvgIon.displayName = "SvgIon";
SvgIon.defaultProps = {
  size: 24,
  color: "#57BEEA"
};

function _extends$hz() { _extends$hz = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hz.apply(this, arguments); }
var Svg$hv = styled("svg")({
  flex: "none"
}, space, color);

var SvgIop = function SvgIop(props) {
  return createElement(Svg$hv, _extends$hz({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.592 6.212l.299-.537a.817.817 0 01.714-.425h6.716c.278 0 .537.144.688.381h3.043v5.355l.337.592a.855.855 0 010 .844l-.337.592v2.304l-2.578 2.234-.444.78a.818.818 0 01-.709.418H8.605a.818.818 0 01-.714-.424l-.019-.034H4.874v-5.4l-.267-.479a.855.855 0 010-.828l.266-.479V8.681l2.72-2.469zm1.013-.123L5.32 12l3.284 5.91h6.716L18.679 12 15.32 6.09H8.605zm.303.534h6.112L18.075 12l-3.055 5.378H8.91L5.92 12l2.987-5.377zm1.413 2.288l-1.642 3.05 1.643 3.052h3.507l1.641-3.051-1.642-3.051H10.32z",
    fill: "white"
  }));
};

SvgIop.displayName = "SvgIop";
SvgIop.defaultProps = {
  size: 24,
  color: "#4CB8D1"
};

function _extends$hA() { _extends$hA = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hA.apply(this, arguments); }
var Svg$hw = styled("svg")({
  flex: "none"
}, space, color);

var SvgIost = function SvgIost(props) {
  return createElement(Svg$hw, _extends$hA({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.375 8.25v7.5L12 19.5l-6.375-3.75v-7.5L12 4.5l6.375 3.75zm-6.576 4.055l-.592.35 1.106.647.59-.347 1.573.926-2.348 1.38-4.871-2.84-.02 1.383 4.894 2.842 4.703-2.765-2.756-1.622.555-.327-1.107-.647-.551.326-.772-.455.675-.4-1.107-.647-.673.398-1.315-.774 2.348-1.381 3.245 1.897 1.19-.704-4.438-2.578-4.702 2.766 2.496 1.469-.47.277 1.107.648.467-.276.773.454z",
    fill: "white"
  }));
};

SvgIost.displayName = "SvgIost";
SvgIost.defaultProps = {
  size: 24,
  color: "#1C1C1C"
};

function _extends$hB() { _extends$hB = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hB.apply(this, arguments); }
var Svg$hx = styled("svg")({
  flex: "none"
}, space, color);

var SvgItc = function SvgItc(props) {
  return createElement(Svg$hx, _extends$hB({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.186 14.512c.337.13.561.451.564.81a.863.863 0 01-.426.745.877.877 0 01-.863.015L12.94 18.55a.87.87 0 01-.851.95.87.87 0 01-.891-.848L8.992 17.39h-.05v-.027l-2.324-1.328a.865.865 0 01-.494.153.87.87 0 01-.865-.745.866.866 0 01.624-.953V9.528a.868.868 0 01-.63-.76.865.865 0 01.493-.853.877.877 0 01.98.155l4.478-2.565a.87.87 0 01.862-1.005.87.87 0 01.853 1.05l4.37 2.503a.867.867 0 01.585-.223.865.865 0 01.312 1.675v5.008zm-3.088-1.953v4.262l2.004-1.093a.87.87 0 01.597-1.255V9.545a.87.87 0 01-.668-1.086l-1.9-1.089v3.963h-.003l-.007.26-.107.05-.685.41.654.39.105.049.003.046.004.02h.002zm-3.03-6.327a.874.874 0 01-.652-.29L9.428 7.08v4.209l.816.486 1.03-.606a.77.77 0 111.522-.03l1.064.633.789-.473V7.094l-1.96-1.123a.869.869 0 01-.621.26zm.51 6.316l.812-.489-.816-.486a.776.776 0 01-1.064.017l-.802.466.799.476a.776.776 0 011.07.016zm-5.647 3.11l2.01 1.153v-4.12l.004-.132.034-.034.168-.1.624-.366-.564-.333-.262-.133v-.16h-.003V7.357l-1.97 1.13c.115.45-.15.91-.6 1.038v4.968a.873.873 0 01.541.458c.108.223.114.48.018.707zm5.137 2.095c.273 0 .53.128.694.347l1.852-1.013v-4.302l-.754-.45-1.065.64a.769.769 0 01-1.087.807.768.768 0 01-.433-.83l-1.044-.62-.806.47v4.285l1.894 1.085a.87.87 0 01.748-.419z",
    fill: "white"
  }));
};

SvgItc.displayName = "SvgItc";
SvgItc.defaultProps = {
  size: 24,
  color: "#102044"
};

function _extends$hC() { _extends$hC = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hC.apply(this, arguments); }
var Svg$hy = styled("svg")({
  flex: "none"
}, space, color);

var SvgJnt = function SvgJnt(props) {
  return createElement(Svg$hy, _extends$hC({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 19.5a2.72 2.72 0 01-1.383-.379l-3.98-2.34a2.838 2.838 0 01-1.387-2.445V9.662a2.848 2.848 0 011.388-2.444l3.979-2.34c.421-.248.9-.378 1.389-.379.484 0 .96.13 1.377.379l3.98 2.34a2.84 2.84 0 011.387 2.445v4.672a2.848 2.848 0 01-1.387 2.445l-3.98 2.34c-.42.248-.897.379-1.383.379zm-2.289-4.822l-.737.75a2.017 2.017 0 001.467.617c1.148-.002 2.08-.948 2.081-2.118v-.638c.315.185.673.282 1.037.281a1.998 1.998 0 001.473-.609l-.736-.75c-.195.2-.46.313-.737.313a1.048 1.048 0 01-1.037-1.056V7.946h-1.037v5.988c0 .585-.464 1.058-1.038 1.058-.277-.001-.542-.114-.736-.314z",
    fill: "white"
  }));
};

SvgJnt.displayName = "SvgJnt";
SvgJnt.defaultProps = {
  size: 24,
  color: "#0050DB"
};

function _extends$hD() { _extends$hD = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hD.apply(this, arguments); }
var Svg$hz = styled("svg")({
  flex: "none"
}, space, color);

var SvgJpy = function SvgJpy(props) {
  return createElement(Svg$hz, _extends$hD({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.161 14.033v1.409h3.797v1.716h-3.797v1.967h-2.322v-1.967H7.042v-1.716h3.797v-1.409H7.042v-1.716h3.128L5.625 5.625h2.814l3.6 5.65 3.6-5.65h2.736l-4.565 6.692h3.148v1.716h-3.797z",
    fill: "white"
  }));
};

SvgJpy.displayName = "SvgJpy";
SvgJpy.defaultProps = {
  size: 24,
  color: "#EAC749"
};

function _extends$hE() { _extends$hE = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hE.apply(this, arguments); }
var Svg$hA = styled("svg")({
  flex: "none"
}, space, color);

var SvgKcs = function SvgKcs(props) {
  return createElement(Svg$hA, _extends$hE({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.155 12l3.88 3.998 2.45-2.523a1.084 1.084 0 011.565 0 1.165 1.165 0 010 1.614l-3.232 3.33a1.093 1.093 0 01-1.566 0L8.59 13.615v2.856c0 .627-.499 1.141-1.107 1.141-.612 0-1.108-.511-1.108-1.141V7.53c0-.63.496-1.142 1.108-1.142.611 0 1.108.512 1.108 1.142v2.856l4.662-4.804a1.092 1.092 0 011.566 0l3.232 3.33a1.165 1.165 0 010 1.613 1.084 1.084 0 01-1.567 0l-2.449-2.523L10.155 12zm3.882-1.142c.612 0 1.108.511 1.108 1.142 0 .63-.496 1.142-1.108 1.142-.612 0-1.109-.511-1.109-1.142 0-.63.497-1.142 1.109-1.142z",
    fill: "white"
  }));
};

SvgKcs.displayName = "SvgKcs";
SvgKcs.defaultProps = {
  size: 24,
  color: "#0093DD"
};

function _extends$hF() { _extends$hF = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hF.apply(this, arguments); }
var Svg$hB = styled("svg")({
  flex: "none"
}, space, color);

var SvgKin = function SvgKin(props) {
  return createElement(Svg$hB, _extends$hF({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.276 13.505V9.892h.844c.182 0 .33.146.33.325v.312c0 .34.293.63.636.63s.603-.29.603-.63v-.3a.34.34 0 01.341-.337h.94v.913a.34.34 0 01-.341.338h-.319a.618.618 0 00-.62.612c0 .339.317.613.66.613h.281c.188 0 .34.15.34.335v.802h.756a.47.47 0 01.475.465v.275a.47.47 0 01-.475.466h-.282a.469.469 0 01-.475-.466v-.619h-.943a.336.336 0 01-.338-.335v-.309a.638.638 0 00-.631-.625c-.343 0-.61.3-.61.656v.28c0 .184-.15.333-.335.333h-.837v.62a.47.47 0 01-.475.464H9.52a.47.47 0 01-.475-.465v-.275a.47.47 0 01.475-.465h.756zm4.451-3.733h-.758v-.74a.47.47 0 01.476-.465h.282a.47.47 0 01.475.465v.275a.47.47 0 01-.475.466v-.001zm-4.451 0H9.52a.47.47 0 01-.475-.465v-.275a.47.47 0 01.475-.465H9.8a.47.47 0 01.475.465v.74zm1.706-1.084a.47.47 0 01-.475-.465v-.275a.47.47 0 01.475-.465h.282a.47.47 0 01.475.466v.275a.47.47 0 01-.475.464h-.282zm0 7.347a.469.469 0 01-.475-.465v-.275a.47.47 0 01.475-.465h.282a.47.47 0 01.475.465v.276a.47.47 0 01-.475.464h-.282zm3.695-3.734a.469.469 0 01-.475-.465v-.275a.47.47 0 01.475-.465h.28a.47.47 0 01.476.465v.275a.47.47 0 01-.475.466l-.281-.001zm-7.512 0a.468.468 0 01-.474-.465v-.275a.47.47 0 01.474-.465h.282a.47.47 0 01.475.465v.275a.47.47 0 01-.476.466l-.28-.001zm5.825 3.766a.435.435 0 01.562.228.417.417 0 01-.232.55.436.436 0 01-.563-.227.416.416 0 01.233-.551zm-3.94-9.394a.435.435 0 01.563.228.42.42 0 01-.233.55.435.435 0 01-.563-.228.419.419 0 01.232-.55h.001zm6.415 3.32a.42.42 0 01.234-.55.435.435 0 01.562.228.417.417 0 01-.232.55.435.435 0 01-.563-.227zm-9.481 3.854a.418.418 0 01.233-.55.434.434 0 01.564.228.418.418 0 01-.233.55.435.435 0 01-.564-.228zm0-4.176a.435.435 0 01.796-.002.418.418 0 01-.234.553.435.435 0 01-.561-.227.419.419 0 01-.001-.324zm6.883-2.22a.418.418 0 01.002-.779.435.435 0 01.56.227.421.421 0 010 .324.435.435 0 01-.562.228zm2.598 6.074a.434.434 0 01.796-.002.418.418 0 01-.234.553.436.436 0 01-.56-.227.418.418 0 01-.002-.324zm-6.662 3.44a.418.418 0 01.003-.778.435.435 0 01.56.227.42.42 0 010 .324.435.435 0 01-.563.228zm6.332-1.222a.25.25 0 01.348 0 .237.237 0 010 .341.25.25 0 01-.4-.077.237.237 0 01.053-.263zM7.763 7.434a.25.25 0 01.349 0 .238.238 0 010 .341.25.25 0 01-.402-.078.237.237 0 01.054-.262v-.001zm8.373.341a.236.236 0 010-.34.249.249 0 01.348 0 .237.237 0 010 .34.25.25 0 01-.348 0zm-8.373 8.31a.237.237 0 010-.341.25.25 0 01.349 0 .237.237 0 010 .34.25.25 0 01-.349 0zm10.148-4.386c0-.133.111-.241.247-.241s.246.108.246.241a.244.244 0 01-.246.24.243.243 0 01-.246-.24h-.001zm-11.944 0c0-.133.11-.241.247-.241.135 0 .246.108.246.241a.244.244 0 01-.246.24.243.243 0 01-.247-.24zm6.158-5.54a.244.244 0 01-.248-.24c0-.134.111-.242.248-.242.135 0 .246.108.246.241a.244.244 0 01-.247.24v.001zm0 11.682a.243.243 0 01-.248-.24c0-.133.111-.241.248-.241.135 0 .246.108.246.24a.244.244 0 01-.247.241zm7.633-6.143c0-.132.111-.24.247-.24.135 0 .246.108.246.24a.244.244 0 01-.34.225.243.243 0 01-.153-.224zm-15.823-.12c.103 0 .186.082.186.18a.184.184 0 01-.186.182.183.183 0 01-.184-.18c0-.1.083-.181.184-.181zm7.82-7.587c0-.133.11-.241.246-.241s.246.108.246.24c0 .133-.11.241-.246.241a.244.244 0 01-.246-.24zm7.294 10.579a.373.373 0 01.682.002.362.362 0 01-.001.279.37.37 0 01-.603.114.36.36 0 01-.078-.396zm-3.998 3.892a.242.242 0 01.132.316.249.249 0 01-.454-.003.236.236 0 01.135-.314.253.253 0 01.187.002v-.001zM4.831 8.467a.246.246 0 01.151.223.235.235 0 01-.112.2.248.248 0 01-.362-.11.235.235 0 01.055-.263.252.252 0 01.268-.05zm-.687 6.187a.31.31 0 01.569.003.298.298 0 01-.17.393.31.31 0 01-.4-.165.299.299 0 01.002-.232v.001zM14.898 4.69a.298.298 0 01.005-.557.31.31 0 01.4.165.298.298 0 01-.17.394.31.31 0 01-.235-.002zm4.606 3.65a.188.188 0 01.142.001.18.18 0 01-.003.334.187.187 0 01-.24-.1.176.176 0 01.041-.196.181.181 0 01.06-.039zM8.69 4.462a.185.185 0 01.354.072.18.18 0 01-.114.166.187.187 0 01-.2-.04.18.18 0 01-.04-.197zm.048 14.222c.024 0 .048.005.07.015a.18.18 0 01.099.236.186.186 0 01-.34-.001.18.18 0 010-.139.185.185 0 01.17-.111zm8.731-1.275a.25.25 0 01-.402-.078.237.237 0 01.053-.262.248.248 0 01.175-.071.248.248 0 01.228.148.236.236 0 01-.054.264v-.001zM5.951 6.025a.376.376 0 01.603.117.356.356 0 01-.08.393.373.373 0 01-.603-.116.356.356 0 01.08-.394zm11.644.067a.186.186 0 01.3.059.179.179 0 01-.039.196.188.188 0 01-.301-.058.177.177 0 01.04-.197zM6.02 17.052a.186.186 0 01.301.058.178.178 0 01-.04.196.187.187 0 01-.3-.058.178.178 0 01.04-.197zm6.042 3.198a.304.304 0 01-.308-.3c0-.167.137-.302.308-.302.17 0 .307.135.307.301a.304.304 0 01-.307.301z",
    fill: "white"
  }));
};

SvgKin.displayName = "SvgKin";
SvgKin.defaultProps = {
  size: 24,
  color: "#005FFF"
};

function _extends$hG() { _extends$hG = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hG.apply(this, arguments); }
var Svg$hC = styled("svg")({
  flex: "none"
}, space, color);

var SvgKmd = function SvgKmd(props) {
  return createElement(Svg$hC, _extends$hG({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 3.75l5.611 2.405a.7.7 0 01.371.375L20.25 12l-2.267 5.535a.697.697 0 01-.378.38L12 20.25l-5.605-2.335a.7.7 0 01-.378-.38L3.75 12l2.268-5.47a.699.699 0 01.37-.376L12 3.75zm0 3.356L8.574 8.574 7.106 12l1.468 3.426L12 16.894l3.426-1.468L16.894 12l-1.468-3.426L12 7.106zm0 1.468l2.447.979.979 2.447-.979 2.447-2.447.979-2.447-.979L8.574 12l.979-2.447L12 8.574z",
    fill: "white"
  }));
};

SvgKmd.displayName = "SvgKmd";
SvgKmd.defaultProps = {
  size: 24,
  color: "#326464"
};

function _extends$hH() { _extends$hH = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hH.apply(this, arguments); }
var Svg$hD = styled("svg")({
  flex: "none"
}, space, color);

var SvgKnc = function SvgKnc(props) {
  return createElement(Svg$hD, _extends$hH({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.377 15.773a.409.409 0 00-.028.42l-4.445 3.478a.444.444 0 00-.197-.088l-.135-8.562a.445.445 0 00.135-.053l4.67 4.805zm.125-.119l-4.667-4.802a.408.408 0 00.065-.355l4.745-2.31a.435.435 0 00.242.15l-.236 7.258a.445.445 0 00-.149.06v-.001zm-5.055 3.958l-2.513-3.377a.412.412 0 000-.574.43.43 0 00-.28-.133l-.784-7.1a.425.425 0 00.33-.41.411.411 0 00-.098-.266l3.154-3.385c.04.023.085.04.133.05v5.778a.425.425 0 00-.35.413.428.428 0 00.357.415l.135 8.562a.445.445 0 00-.084.027zm.118-9.417V4.418a.442.442 0 00.205-.101l4.82 3.431a.407.407 0 00-.026.29l-4.743 2.31a.441.441 0 00-.256-.153zm-.088-6.445c.145 0 .263.113.263.253a.257.257 0 01-.263.253.258.258 0 01-.262-.253c0-.14.117-.253.262-.253zM7.762 7.766c.146 0 .263.112.263.252a.258.258 0 01-.263.254.258.258 0 01-.262-.254c0-.14.118-.253.263-.253zm.85 7.928c.146 0 .263.114.263.254a.258.258 0 01-.263.253.258.258 0 01-.262-.253c0-.14.117-.254.262-.254zm8.376-8.021c.144 0 .262.113.262.252a.257.257 0 01-.262.254.258.258 0 01-.263-.254c0-.14.117-.252.262-.252zm-5.51 2.682c.144 0 .262.113.262.253a.257.257 0 01-.263.253.258.258 0 01-.262-.253c0-.14.117-.253.262-.253zm.148 9.389c.145 0 .262.113.262.253a.258.258 0 01-.262.253.258.258 0 01-.263-.253c0-.14.118-.253.263-.253zm5.116-3.99c.145 0 .263.113.263.253a.258.258 0 01-.263.253.258.258 0 01-.262-.253c0-.14.117-.253.262-.253z",
    fill: "white"
  }));
};

SvgKnc.displayName = "SvgKnc";
SvgKnc.defaultProps = {
  size: 24,
  color: "#188C92"
};

function _extends$hI() { _extends$hI = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hI.apply(this, arguments); }
var Svg$hE = styled("svg")({
  flex: "none"
}, space, color);

var SvgKrb = function SvgKrb(props) {
  return createElement(Svg$hE, _extends$hI({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.82 11.03c.178-.031.336-.098.474-.2.138-.1.268-.271.39-.505l2.72-5.24a1.45 1.45 0 01.386-.425.9.9 0 01.526-.16h1.724l-3.386 6.164c-.15.253-.32.46-.51.619-.19.158-.405.28-.638.362.363.094.667.246.915.46.245.21.478.507.695.889l3.259 6.506h-1.898c-.383 0-.691-.206-.924-.615l-2.671-5.513c-.138-.246-.288-.421-.45-.527a1.257 1.257 0 00-.611-.183v2.798h-1.492v-2.81H9.232v6.85H7.125v-15h2.107v6.553h1.097V7.813h1.492v3.218h-.001z",
    fill: "white"
  }));
};

SvgKrb.displayName = "SvgKrb";
SvgKrb.defaultProps = {
  size: 24,
  color: "#00AEEF"
};

function _extends$hJ() { _extends$hJ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hJ.apply(this, arguments); }
var Svg$hF = styled("svg")({
  flex: "none"
}, space, color);

var SvgLbc = function SvgLbc(props) {
  return createElement(Svg$hF, _extends$hJ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.132 12.888l-.598-.15.182-.727 1.863.466-.465 1.864-.728-.182.162-.646-6.654 4.12-7.38-3.688v-2.813l7.668-4.796 7.031 3.43v1.158l-7.319 4.547-5.435-2.695.333-.672 5.062 2.51 6.61-4.107v-.272l-6.237-3.042-6.962 4.354v1.935l6.59 3.293 6.277-3.887z",
    fill: "white"
  }));
};

SvgLbc.displayName = "SvgLbc";
SvgLbc.defaultProps = {
  size: 24,
  color: "#006149"
};

function _extends$hK() { _extends$hK = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hK.apply(this, arguments); }
var Svg$hG = styled("svg")({
  flex: "none"
}, space, color);

var SvgLend = function SvgLend(props) {
  return createElement(Svg$hG, _extends$hK({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.86 15.335L8.773 19.5l-1.166-1.279 2.833-2.887-2.94-2.995 1.255-1.28 4.105 4.276zm2.385-2.394l1.255-1.28-2.94-2.995 2.833-2.887L15.227 4.5l-4.105 4.165 4.123 4.276zm-5.97-2.375l4.124 4.275 1.255-1.279L10.53 9.36l-1.255 1.206z",
    fill: "white"
  }));
};

SvgLend.displayName = "SvgLend";
SvgLend.defaultProps = {
  size: 24,
  color: "#0FA9C9"
};

function _extends$hL() { _extends$hL = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hL.apply(this, arguments); }
var Svg$hH = styled("svg")({
  flex: "none"
}, space, color);

var SvgLink$1 = function SvgLink(props) {
  return createElement(Svg$hH, _extends$hL({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.25 13.963v1.787a.75.75 0 101.5 0v-1.787a1.126 1.126 0 10-1.5 0zM7.5 10.5V9a4.5 4.5 0 019 0v1.5a.75.75 0 01.75.75v6a.75.75 0 01-.75.75h-9a.75.75 0 01-.75-.75v-6a.75.75 0 01.75-.75zm9 0H9.375V9.075c0-1.491 1.175-2.7 2.625-2.7s2.625 1.209 2.625 2.7V10.5H12h4.5z",
    fill: "white"
  }));
};

SvgLink$1.displayName = "SvgLink";
SvgLink$1.defaultProps = {
  size: 24,
  color: "#01A6FB"
};

function _extends$hM() { _extends$hM = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hM.apply(this, arguments); }
var Svg$hI = styled("svg")({
  flex: "none"
}, space, color);

var SvgLkk = function SvgLkk(props) {
  return createElement(Svg$hI, _extends$hM({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.504 19.5v-2.742L12 12.18l4.482 4.579V19.5L12 14.92 7.504 19.5zM3.75 10.225h6.352L12 12.18H5.648L3.75 10.225zm16.5 0l-1.898 1.954H12V3.75l1.898 1.94v4.535h6.352z",
    fill: "white"
  }));
};

SvgLkk.displayName = "SvgLkk";
SvgLkk.defaultProps = {
  size: 24,
  color: "#9D01EB"
};

function _extends$hN() { _extends$hN = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hN.apply(this, arguments); }
var Svg$hJ = styled("svg")({
  flex: "none"
}, space, color);

var SvgLrc = function SvgLrc(props) {
  return createElement(Svg$hJ, _extends$hN({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 4.5l6.75 9.4L12 19.5l-6.75-5.6L12 4.5zm-.88 5l-2.935 4 2.934 2.4V9.5zm1.76 0v6.4l2.935-2.4-2.934-4z",
    fill: "white"
  }));
};

SvgLrc.displayName = "SvgLrc";
SvgLrc.defaultProps = {
  size: 24,
  color: "#2AB6F6"
};

function _extends$hO() { _extends$hO = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hO.apply(this, arguments); }
var Svg$hK = styled("svg")({
  flex: "none"
}, space, color);

var SvgLsk = function SvgLsk(props) {
  return createElement(Svg$hK, _extends$hO({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M10.687 18.718c-.01.011-.032.021-.042.032H9.48c-.021 0-.032-.01-.042-.021l-3.431-3.876a.067.067 0 010-.062l4.273-7.377c.021-.03.073-.03.094 0l1.195 2.069c.01.01.01.031 0 .053l-2.89 4.983c-.01.02 0 .041.01.063l1.726 1.943a.079.079 0 00.042.02h2.038c.052 0 .072.053.041.084l-1.85 2.09zm1.267-14.186c.022-.043.074-.043.084 0l5.957 10.237c.011.022 0 .043-.01.063l-3.43 3.876a.079.079 0 01-.043.021h-2.786c-.052 0-.073-.052-.041-.083l1.86-2.11 1.748-1.965c.02-.021.02-.042.01-.062l-3.307-5.705-1.247-2.152c-.01-.01-.01-.031 0-.053l1.205-2.067z",
    fill: "white"
  }));
};

SvgLsk.displayName = "SvgLsk";
SvgLsk.defaultProps = {
  size: 24,
  color: "#0D4EA0"
};

function _extends$hP() { _extends$hP = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hP.apply(this, arguments); }
var Svg$hL = styled("svg")({
  flex: "none"
}, space, color);

var SvgLtc = function SvgLtc(props) {
  return createElement(Svg$hL, _extends$hP({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.82 14.41l-1.07.416.516-2.07 1.083-.434L9.909 6h3.848l-1.14 4.647 1.058-.428-.51 2.062-1.07.428-.636 2.613h5.791L16.595 18H6.94l.881-3.59z",
    fill: "white"
  }));
};

SvgLtc.displayName = "SvgLtc";
SvgLtc.defaultProps = {
  size: 24,
  color: "#BFBBBB"
};

function _extends$hQ() { _extends$hQ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hQ.apply(this, arguments); }
var Svg$hM = styled("svg")({
  flex: "none"
}, space, color);

var SvgLun = function SvgLun(props) {
  return createElement(Svg$hM, _extends$hQ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.86 4.536a.286.286 0 01.279 0L18.308 8a.27.27 0 010 .47l-5.366 3.026a1.243 1.243 0 00-.73-.405V9.446a1.21 1.21 0 001.025-1.183c0-.664-.552-1.202-1.234-1.202-.682 0-1.234.538-1.234 1.202 0 .59.439 1.081 1.016 1.182v1.648a1.24 1.24 0 00-.72.402L5.699 8.483a.269.269 0 010-.472l6.162-3.473-.001-.002zm6.466 4.365a.284.284 0 01.38.098.271.271 0 01.039.137l.005 6.724a.27.27 0 01-.14.236l-5.973 3.367c-.186.105-.418-.026-.418-.235l-.005-5.77a1.24 1.24 0 00.74-.416l1.492.836a1.17 1.17 0 00-.027.471c.094.658.719 1.115 1.393 1.023.675-.093 1.145-.701 1.05-1.359-.094-.658-.72-1.115-1.394-1.022a1.233 1.233 0 00-.841.508l-1.463-.82a1.153 1.153 0 00-.019-.859l5.181-2.92V8.9zm-13.07.234c0-.159.133-.272.279-.272.049 0 .098.013.14.037l5.186 2.924c-.115.273-.121.577-.018.855l-1.461.82a1.234 1.234 0 00-.842-.508c-.675-.093-1.298.365-1.393 1.022-.096.657.375 1.265 1.05 1.358.675.093 1.297-.365 1.393-1.022a1.17 1.17 0 00-.027-.472l1.491-.836c.187.219.447.366.733.415l-.005 5.772c0 .209-.232.34-.418.234l-5.975-3.367a.27.27 0 01-.139-.235l.006-6.725",
    fill: "white"
  }));
};

SvgLun.displayName = "SvgLun";
SvgLun.defaultProps = {
  size: 24,
  color: "#F55749"
};

function _extends$hR() { _extends$hR = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hR.apply(this, arguments); }
var Svg$hN = styled("svg")({
  flex: "none"
}, space, color);

var SvgMaid = function SvgMaid(props) {
  return createElement(Svg$hN, _extends$hR({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M15.184 9.5v9.73L6.969 14.5c-2.43-1.423-2.276-2.308-2.276-4.23l8.447 4.884v-4.462l2.045-1.193V9.5z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.6,
    d: "M13.14 15.154l-8.446-4.885 8.215-4.73c2.43-1.386 3.125-.808 4.822.153l-8.447 4.885 3.857 2.23v2.347z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.2,
    d: "M9.283 10.577l8.447-4.885v9.462c0 2.808-.848 3.115-2.546 4.077V9.5l-3.896 2.229-2.006-1.154v.001z",
    fill: "white"
  }));
};

SvgMaid.displayName = "SvgMaid";
SvgMaid.defaultProps = {
  size: 24,
  color: "#5592D7"
};

function _extends$hS() { _extends$hS = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hS.apply(this, arguments); }
var Svg$hO = styled("svg")({
  flex: "none"
}, space, color);

var SvgMana = function SvgMana(props) {
  return createElement(Svg$hO, _extends$hS({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 3.75c4.546 0 8.25 3.704 8.25 8.25 0 4.546-3.704 8.25-8.25 8.25-4.546 0-8.25-3.704-8.25-8.25 0-4.546 3.704-8.25 8.25-8.25zm6.641 7.417l.949 1.072V12c0-4.183-3.407-7.59-7.59-7.59-4.15 0-7.54 3.35-7.59 7.491l.388-.008L6.06 9.682h1.733l.709 2.326 1.41-.363.735.405.916-1.155.651.379.66.24.405-.207.041-.041a2.836 2.836 0 01-2.054-2.714c0-1.551 1.27-2.805 2.821-2.805A2.817 2.817 0 0116.58 9.87h.33l1.023 1.42.71-.124zM12 19.59a7.629 7.629 0 002.69-.487c-.528-.157-1.188-.289-1.832-.42-.355-.075-.726-.149-1.072-.223a17.1 17.1 0 00-.891-.182c-.966-.181-1.601-.305-1.7-.792-.082-.404.24-.792 1.171-1.435.446-.297.495-.47.487-.503 0-.017-.148-.413-2.343-.652l-.255-.025c-.017.346-.397.594-.916.594-.537 0-.924-.264-.924-.627 0-.016 0-.033.016-.082a1.053 1.053 0 00-.157-.009c-.1.024-.202.035-.305.033a1.356 1.356 0 01-.38-.05c-.23 0-.461-.008-.676-.008A7.603 7.603 0 0012 19.59zm3.531-.875a7.583 7.583 0 003.968-5.56l-1.113-1.262-.76.132-1.072-1.477h-.124l-.495.396-.619-.833-1.03 1.097c.024-.017.057-.025.082-.033.371-.116.66-.289.759-.627.09.305.363.479.676.594.041.017.083.025.124.041h.008c.627.24 1.065.735 1.106 1.32.09.124.223.223.371.297.099.033.206.066.297.116.017 0 .025.008.033.008h-.008c.536.272.899.75.899 1.303 0 .207-.124.62-1.064.776a.62.62 0 00-.52.61v.76c0 .19-.165.346-.363.33-.173-.017-.297-.174-.297-.347v-.743a.62.62 0 00-.52-.61 2.23 2.23 0 01-.404-.099v1.295c0 .248-.181.833-1.914.833-1.724 0-1.914-.585-1.914-.833 0-.685.553-1.262 1.32-1.468.297-.116.528-.28.61-.57.108.355.446.529.809.644h-.008c.165.058.313.14.445.231v-1.072a.62.62 0 00-.52-.611c-.94-.157-1.064-.578-1.064-.775 0-.198.05-.388.132-.561l-.429.222-.99-.363-.214-.123-1.832 2.318-.52-.413.859-1.08-.405-.223-1.765.454-.751-2.467h-.866l-1.254 2.194-.76.025c.042.505.13 1.005.265 1.493h.38c.032-.14.156-.511.585-1.765l.314-.916.288.932c.256.743.404 1.172.487 1.436.074-.215.157-.462.264-.768l.313-.915.314.915c.19.561.322.95.412 1.221.182.017.355.033.52.05 1.832.198 2.731.545 2.904 1.114.19.61-.511 1.089-.742 1.245-.644.438-.825.652-.883.743.173.099.71.206 1.155.289.28.05.594.107.916.181.346.075.71.149 1.056.215.99.198 1.93.38 2.549.684zm-.726-2.565c-.033-.462-.594-.842-1.254-.842s-1.221.38-1.254.842c.115.082.544.214 1.254.214s1.139-.132 1.254-.214zm1.922-2.813c-.66 0-1.22.379-1.254.841.116.082.553.214 1.254.214s1.139-.131 1.254-.214c-.033-.462-.594-.842-1.254-.842zm-.338-.809c-.033-.462-.594-.841-1.254-.841s-1.221.379-1.254.841c.115.082.553.214 1.254.214s1.138-.132 1.254-.214zm-.503-2.797a2.13 2.13 0 00-.277-2.693 2.155 2.155 0 00-1.522-.631 2.155 2.155 0 00-.23 4.298l1.534-1.642.495.668zm-8.762 5.041c.146.044.3.044.446 0l-.223-.668-.223.668zm-1.361-.701c.14 0 .28.008.429.008-.041-.149-.124-.388-.215-.652-.09.256-.165.495-.214.644zm3.168-4.43a1.916 1.916 0 01-1.353-3.267 1.916 1.916 0 012.706 0c.359.358.56.845.561 1.353A1.92 1.92 0 018.931 9.64zm0-3.168a1.254 1.254 0 100 2.507 1.254 1.254 0 000-2.508z",
    fill: "white"
  }));
};

SvgMana.displayName = "SvgMana";
SvgMana.defaultProps = {
  size: 24,
  color: "#BFB5AF"
};

function _extends$hT() { _extends$hT = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hT.apply(this, arguments); }
var Svg$hP = styled("svg")({
  flex: "none"
}, space, color);

var SvgMcap = function SvgMcap(props) {
  return createElement(Svg$hP, _extends$hT({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.649 5.298c.418-.122.861.002 1.222.22 1.609.922 3.225 1.83 4.848 2.727.624.33 1.04 1.01 1.031 1.71-.002 2.32-.008 4.642-.004 6.963.026.161-.084.345-.267.328-.72.005-1.441.002-2.162.001-.157.023-.309-.109-.293-.268-.069-1.977-.042-3.955-.022-5.933 0-.247-.048-.508-.208-.709-.162-.212-.418-.32-.646-.447-.375-.196-.729-.434-1.117-.606-.147-.058-.338-.121-.477-.01-.154.145-.152.374-.168.569-.028.97-.031 1.94-.008 2.91-.001.23.006.496-.169.675-.18.175-.45.178-.685.182-.426-.004-.852.011-1.277-.01-.18-.019-.396-.03-.513-.187-.105-.155-.1-.351-.11-.53-.002-1.019.011-2.039 0-3.057-.01-.18-.007-.383-.135-.525-.122-.126-.317-.085-.464-.032-.318.125-.604.315-.906.473-.303.174-.627.322-.887.56-.169.153-.214.387-.219.603-.004 2.003.002 4.004-.015 6.006.017.151-.073.336-.25.333-.742.009-1.485.004-2.227.002-.149.015-.285-.116-.27-.264.03-2.433.011-4.868.013-7.302a1.386 1.386 0 01.718-1.253c1.691-.948 3.386-1.89 5.07-2.85.19-.107.383-.22.597-.279z",
    fill: "white"
  }));
};

SvgMcap.displayName = "SvgMcap";
SvgMcap.defaultProps = {
  size: 24,
  color: "#033B4A"
};

function _extends$hU() { _extends$hU = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hU.apply(this, arguments); }
var Svg$hQ = styled("svg")({
  flex: "none"
}, space, color);

var SvgMco = function SvgMco(props) {
  return createElement(Svg$hQ, _extends$hU({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.985 3.763l7.14 4.113v8.25l-7.132 4.124-.058-.014-7.06-4.11v-8.25l7.06-4.113h.05zm-.023.854l-6.337 3.69v7.387l6.336 3.69.774-.448 5.64-3.244V8.308l-5.64-3.262-.773-.429zm-5.355 7.958l1.875-1.403 1.659 1.059v1.905l1.255 1.209-.001.567-1.21 1.132h-1.02l-2.557-4.47h-.001zm5.927 3.339l-.002-.57 1.25-1.208v-1.905l1.64-1.072 1.872 1.416-2.545 4.457h-1.008l-1.207-1.118zm-1.777-3.683l-.611-1.598h3.628l-.598 1.598.177 1.787-1.4.002-1.384.003.188-1.792zm1.196-2.036l-3.449-.002.642-2.865h5.597l.675 2.869-3.465-.002z",
    fill: "white"
  }));
};

SvgMco.displayName = "SvgMco";
SvgMco.defaultProps = {
  size: 24,
  color: "#103F68"
};

function _extends$hV() { _extends$hV = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hV.apply(this, arguments); }
var Svg$hR = styled("svg")({
  flex: "none"
}, space, color);

var SvgMda = function SvgMda(props) {
  return createElement(Svg$hR, _extends$hV({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M15.497 5.994c.912.975 1.378 2.199 1.378 3.63 0 1.453-.466 2.678-1.379 3.652a4.528 4.528 0 01-2.614 1.39v.85h2.067v.935h-2.088v.497h2.088v.871h-2.067V19.5h-1.764v-1.68H9.07v-.872h2.068v-.497H9.071v-.934h2.048v-.872a4.533 4.533 0 01-2.595-1.39c-.932-.975-1.399-2.2-1.399-3.651 0-1.473.446-2.697 1.379-3.652.931-.975 2.088-1.452 3.507-1.452 1.398 0 2.553.477 3.486 1.494zm-1.905 5.54c.384-.498.588-1.142.588-1.93 0-.768-.203-1.41-.629-1.909-.405-.518-.932-.767-1.54-.767-.629 0-1.155.249-1.561.747-.407.498-.61 1.12-.61 1.909 0 .808.204 1.452.61 1.95.405.497.932.746 1.56.746.65 0 1.196-.248 1.582-.746z",
    fill: "white"
  }));
};

SvgMda.displayName = "SvgMda";
SvgMda.defaultProps = {
  size: 24,
  color: "#01A64F"
};

function _extends$hW() { _extends$hW = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hW.apply(this, arguments); }
var Svg$hS = styled("svg")({
  flex: "none"
}, space, color);

var SvgMds = function SvgMds(props) {
  return createElement(Svg$hS, _extends$hW({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M10.665 11.692a1.13 1.13 0 110-2.26 1.13 1.13 0 010 2.26zm2.774 0a1.13 1.13 0 110-2.26 1.13 1.13 0 010 2.26zm-2.775 2.774a1.13 1.13 0 110-2.26 1.13 1.13 0 010 2.26zm2.774 0a1.13 1.13 0 110-2.26 1.13 1.13 0 010 2.26zm2.774-3.082a.823.823 0 110-1.646.823.823 0 010 1.646zm0 2.774a.822.822 0 110-1.644.822.822 0 010 1.644zm-8.424-2.774a.822.822 0 110-1.644.822.822 0 010 1.643zm0 2.774a.822.822 0 110-1.645.822.822 0 010 1.645zm2.876 2.773a.82.82 0 110-1.643.822.822 0 010 1.643zm2.774 0a.82.82 0 01-.597-1.411.82.82 0 11.598 1.411zM10.665 8.61a.822.822 0 11-.05-1.644.822.822 0 01.05 1.644zm2.774 0a.822.822 0 11-.05-1.643.822.822 0 01.05 1.643zm-2.774-3.083a.514.514 0 110-1.026.514.514 0 110 1.027zm2.774 0a.513.513 0 110-1.026.514.514 0 010 1.027zm5.548 5.549a.513.513 0 110-1.027.513.513 0 010 1.027zm0 2.774a.514.514 0 110-1.027.514.514 0 010 1.027zM5.014 11.076a.514.514 0 110-1.027.514.514 0 010 1.027zm0 2.774a.514.514 0 110-1.028.514.514 0 010 1.028zm5.65 5.65a.513.513 0 110-1.027.513.513 0 010 1.027zm2.774 0a.514.514 0 110-1.027.514.514 0 010 1.027z",
    fill: "white"
  }));
};

SvgMds.displayName = "SvgMds";
SvgMds.defaultProps = {
  size: 24,
  color: "#1E252C"
};

function _extends$hX() { _extends$hX = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hX.apply(this, arguments); }
var Svg$hT = styled("svg")({
  flex: "none"
}, space, color);

var SvgMed = function SvgMed(props) {
  return createElement(Svg$hT, _extends$hX({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18 9.046v6.686l-1.902 1.11V12.38L12 14.832l-4.098-2.455v4.465L6 15.732V9.045l6 3.604 6-3.604zm-5.977 8.338l1.755-1.05 1.732 1.05-3.487 2.116-3.486-2.116 1.732-1.05 1.754 1.05zm3.465-10.768l-1.734 1.05L12 6.616l-1.754 1.05-1.733-1.05L12 4.5l3.488 2.117z",
    fill: "white"
  }));
};

SvgMed.displayName = "SvgMed";
SvgMed.defaultProps = {
  size: 24,
  color: "#00B0FF"
};

function _extends$hY() { _extends$hY = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hY.apply(this, arguments); }
var Svg$hU = styled("svg")({
  flex: "none"
}, space, color);

var SvgMiota = function SvgMiota(props) {
  return createElement(Svg$hU, _extends$hY({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.693 5.077a.954.954 0 01-1.63.675.956.956 0 01-.281-.675c0-.526.427-.952.955-.952s.956.426.956.952zm-.689 3.319a.809.809 0 01-.81-.808c0-.445.363-.806.81-.806a.808.808 0 110 1.614zm-.251 1.99a.684.684 0 01-.632-.945.684.684 0 11.894.893.684.684 0 01-.262.051zm-.04 1.028a.585.585 0 11-1.17 0 .585.585 0 011.17 0zm-.926 1.293a.5.5 0 11-1.002 0 .5.5 0 011.003 0h-.001zm-1.013.917a.43.43 0 11-.86 0 .43.43 0 01.86 0zm5.156-5.556a.813.813 0 01-1.582-.369.812.812 0 111.582.369zm-.389 2.102a.688.688 0 11-1.34-.313.688.688 0 011.34.313zm-.723 1.678a.581.581 0 11-1.132-.264.582.582 0 011.133.264zm-.931 1.277a.497.497 0 01-.968-.225.495.495 0 01.773-.29.494.494 0 01.195.515zm-1.018.892a.427.427 0 11-.83-.195.427.427 0 01.83.195zm-1.016.563a.368.368 0 01-.714-.166.368.368 0 01.714.166zm5.328-3.642a.692.692 0 01-1.245-.602.692.692 0 011.245.602zm-.72 1.661a.589.589 0 01-1.06-.51.592.592 0 011.085.061.586.586 0 01-.026.45zm-.907 1.26a.51.51 0 01-.938-.054.505.505 0 01.023-.387.509.509 0 01.915.442zm-1.01.891a.443.443 0 01-.588.204.438.438 0 01-.109-.732.439.439 0 01.493-.06.44.44 0 01.205.588zm-1.015.55a.377.377 0 01-.68-.329.378.378 0 01.68.328zm-.955.276a.321.321 0 01-.59-.034.32.32 0 11.59.034zm.777 3.642a.95.95 0 01.23-1.744.958.958 0 01.724.094.95.95 0 01-.229 1.745.957.957 0 01-.724-.095h-.001zm-2.243-1.149a.804.804 0 01.194-1.477.805.805 0 11.42 1.557.81.81 0 01-.614-.08zm-1.651-1.38a.68.68 0 01.164-1.25.685.685 0 01.855.746.682.682 0 01-1.02.504zm-1.126-1.48a.583.583 0 11.584-1.01.583.583 0 01-.584 1.01zm-.662-1.445a.501.501 0 11.502-.867.5.5 0 01-.12.917.503.503 0 01-.382-.05zm-.292-1.333a.43.43 0 11.43-.746.43.43 0 01-.43.746zm2.813 7.445a.81.81 0 110-1.62.81.81 0 110 1.62zM11 18.272a.685.685 0 01.448-1.185.684.684 0 11.045 1.37.69.69 0 01-.493-.185zm-1.099-1.46a.58.58 0 11.796-.848.577.577 0 01.027.82.583.583 0 01-.823.027zm-.644-1.444a.492.492 0 01-.022-.7.498.498 0 01.858.323.497.497 0 01-.836.377zm-.267-1.323a.425.425 0 01.278-.736.425.425 0 11.028.85.428.428 0 01-.306-.114zm.018-1.16a.363.363 0 01-.017-.515.367.367 0 01.518-.017.367.367 0 01-.501.533zm.506 6.42a.688.688 0 01.183-.957.693.693 0 011.07.699.688.688 0 01-.81.548.694.694 0 01-.443-.29zm-1.084-1.451a.586.586 0 01.596-.907.59.59 0 01.468.686.585.585 0 01-.687.467.59.59 0 01-.377-.246zm-.644-1.412a.506.506 0 01.515-.783.51.51 0 01.405.593.504.504 0 01-.595.402.51.51 0 01-.325-.212zm-.27-1.316a.439.439 0 01.447-.68.442.442 0 01.352.515.437.437 0 01-.186.281.442.442 0 01-.613-.116zm.03-1.152a.375.375 0 01.382-.58.378.378 0 01.242.157.377.377 0 01-.624.423zm.236-.962a.32.32 0 11.521-.374.32.32 0 01-.521.374zm-3.555-1.157a.957.957 0 011.424.702.951.951 0 01-.47.948.957.957 0 01-1.424-.7.951.951 0 01.47-.95zm2.122-1.357a.81.81 0 011.106.295.806.806 0 01-.91 1.181.812.812 0 01-.594-.673.805.805 0 01.398-.804zm2.026-.733a.686.686 0 011.02.502.682.682 0 01-1.27.43.68.68 0 01.25-.932zm1.85-.23a.585.585 0 01.756.86.581.581 0 01-.615.208.583.583 0 01-.14-1.067zm1.586.153a.502.502 0 01.685.184.503.503 0 01-.87.5.5.5 0 01.185-.684zm1.303.416a.433.433 0 01.633.484.429.429 0 01-.528.304.43.43 0 01-.105-.788zM5.71 8.43a.813.813 0 011.013.542.813.813 0 01-1.555.468.808.808 0 01.542-1.01zm2.021-.715a.686.686 0 01.398 1.313.686.686 0 11-.398-1.313zm1.82-.215a.58.58 0 11.335 1.11.58.58 0 01-.335-1.11zm1.575.167a.496.496 0 11-.171.09.495.495 0 01.171-.09zm1.282.433a.426.426 0 01.246.815.425.425 0 01-.246-.815zm.998.596a.365.365 0 01.455.244c.014.046.019.094.014.141a.364.364 0 01-.257.314.365.365 0 01-.213-.699zm-5.828-2.78a.69.69 0 11.101 1.378.692.692 0 01-.1-1.378h-.001zm1.805-.209a.587.587 0 11.027 1.175.587.587 0 01-.027-1.175zm1.548.154a.508.508 0 01.074 1.01.507.507 0 01-.074-1.01zm1.278.426a.44.44 0 11.029.88.44.44 0 01-.03-.88z",
    fill: "white"
  }));
};

SvgMiota.displayName = "SvgMiota";
SvgMiota.defaultProps = {
  size: 24,
  color: "#242424"
};

function _extends$hZ() { _extends$hZ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$hZ.apply(this, arguments); }
var Svg$hV = styled("svg")({
  flex: "none"
}, space, color);

var SvgMith = function SvgMith(props) {
  return createElement(Svg$hV, _extends$hZ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M13.617 14.915c-.01-.018-.011-.025-.015-.027-.465-.22-.93-.44-1.396-.658-.025-.011-.075-.008-.091.009-.203.217-.4.44-.602.663.146.107 1.982.108 2.104.013zM9.362 9.543l-.047-.097c-.039.027-.09.048-.115.085-.43.64-.857 1.28-1.281 1.923-.027.04-.025.1-.038.15.053-.01.111-.008.154-.034.364-.22.725-.444 1.083-.674a.298.298 0 00.12-.187c.049-.375.082-.752.124-1.166zm8.997 5.438h.62c.119 0 .165-.046.089-.16-.394-.602-.786-1.204-1.181-1.803-.021-.033-.07-.048-.105-.07-.019.037-.051.075-.055.115-.046.586-.087 1.173-.132 1.76-.008.111.03.161.145.159.206-.005.412-.002.62-.002zm-13.3-.046c.094.023.14.044.187.045l2.008.001c.13 0 .163-.046.108-.17-.21-.477-.416-.956-.616-1.436-.059-.14-.113-.134-.205-.035-.357.386-.717.768-1.076 1.15l-.406.445zm9.896-3.46c.043.085.058.122.08.154l.905 1.315c.375.544.748 1.088 1.126 1.63.025.037.075.057.112.085.02-.045.051-.088.057-.135.015-.127.018-.254.026-.382.04-.581.086-1.162.12-1.742.015-.248-.092-.375-.327-.434l-1.88-.47c-.056-.013-.115-.01-.219-.02zm-.159-3.85l-.057.01c-.008.114-.019.23-.023.346l-.083 2.828c-.003.104.027.158.135.183.649.157 1.297.323 1.947.483.056.014.118 0 .177 0-.015-.058-.018-.123-.046-.174A1616.78 1616.78 0 0014.9 7.77c-.028-.052-.069-.097-.104-.145zm-2.914 5.78c.018-.1.036-.16.038-.22.01-.314.01-.629.024-.943a1.022 1.022 0 00-.2-.668c-.596-.826-1.19-1.654-1.782-2.482-.027-.038-.038-.087-.057-.13l-.07.042c-.017.063-.044.125-.051.189-.053.51-.098 1.02-.154 1.528a.345.345 0 00.095.297c.671.748 1.338 1.5 2.008 2.25.036.04.08.074.15.137zm.433-.157l.045.03c.041-.032.09-.058.123-.098a459.85 459.85 0 001.705-2.082.276.276 0 00.058-.153c.027-.927.05-1.853.072-2.779.001-.051-.028-.103-.044-.154-.041.04-.099.072-.122.12-.525 1.112-1.027 2.235-1.577 3.332-.291.58-.245 1.18-.26 1.785v-.001zm-2.627 1.733c.36 0 .722.005 1.083-.004a.345.345 0 00.22-.094c.252-.263.487-.542.738-.806.093-.098.072-.158-.007-.245a114.7 114.7 0 01-1.259-1.387c-.1-.113-.158-.112-.248.011-.57.78-1.147 1.556-1.721 2.335-.029.04-.04.091-.059.137.05.018.1.05.152.05.367.005.733.003 1.1.003zm.373-2.974c-.2-.232-.395-.45-.58-.679-.078-.095-.138-.105-.243-.04-.627.395-1.261.779-1.886 1.175-.114.073-.203.184-.299.283-.09.091-.077.191-.028.304.243.557.481 1.117.722 1.675.091.21.126.214.266.027.371-.495.741-.993 1.11-1.488l.938-1.257zm4.347-.591c-.05.079-.072.127-.105.165a489.71 489.71 0 01-1.788 2.171c-.097.118-.047.164.063.214.688.316 1.373.636 2.062.95.088.039.184.06.28.062.568.005 1.135.004 1.703.001.052 0 .106-.024.159-.037-.019-.056-.027-.12-.06-.167a691.822 691.822 0 00-1.574-2.289l-.74-1.07zm-2.413 4.332c-2.582 0-5.163 0-7.745.002-.2 0-.382-.023-.47-.239-.082-.204.014-.356.149-.499.77-.824 1.552-1.638 2.302-2.48.287-.32.508-.702.75-1.063.776-1.161 1.547-2.326 2.327-3.484a.725.725 0 01.316-.273c.17-.063.314.034.422.189.628.897 1.26 1.79 1.891 2.686.13.183.176.177.272-.031l1.946-4.238c.076-.166.178-.308.375-.317.206-.01.331.115.428.292.976 1.772 1.93 3.558 2.945 5.307.614 1.058 1.324 2.056 1.99 3.081.083.126.166.252.247.379.098.154.156.322.064.493-.09.165-.256.196-.431.196h-7.778",
    fill: "white"
  }));
};

SvgMith.displayName = "SvgMith";
SvgMith.defaultProps = {
  size: 24,
  color: "#00316D"
};

function _extends$h_() { _extends$h_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h_.apply(this, arguments); }
var Svg$hW = styled("svg")({
  flex: "none"
}, space, color);

var SvgMkr = function SvgMkr(props) {
  return createElement(Svg$hW, _extends$h_({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M5.878 9.042v7.833H4.5v-10.5l7.281 5.27v5.23h-1.379v-4.558L5.88 9.042zm7.72 3.275v4.558h-1.379v-5.23l7.281-5.27v10.5h-1.378V9.042l-4.524 3.275z",
    fill: "white"
  }));
};

SvgMkr.displayName = "SvgMkr";
SvgMkr.defaultProps = {
  size: 24,
  color: "#1ABC9C"
};

function _extends$h$() { _extends$h$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h$.apply(this, arguments); }
var Svg$hX = styled("svg")({
  flex: "none"
}, space, color);

var SvgMln = function SvgMln(props) {
  return createElement(Svg$hX, _extends$h$({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.47 15.093l3.954 2.319v1.297L5.25 15.664V7.72L12 3.75l6.75 3.971v7.943l-5.174 3.045V17.41l3.953-2.318-1.02-.59.133-.231 1.008.582v-5.89l-5.115 3.032v8.67L12 21l-.536-.334v-8.67L6.35 8.965v5.888l1.007-.581.133.232-1.02.589zm5.381-9.982L6.885 8.024 12 11.057l5.115-3.033-4.996-2.93v1.202h-.268V5.11zm0 1.944h.268v1.242h-.268V7.054zm0 2h.268v1.243l-.134.061-.133-.06V9.056zm4.17 4.838l-.133.232-1.077-.622.134-.232 1.076.623v-.001zm-1.698-1l-.135.232-1.076-.623.015-.145.119-.085 1.077.62zm-6.345 1l1.076-.622.134.233-1.076.62-.134-.231zm1.7-1l1.075-.622.12.086.014.146-1.076.621-.134-.232z",
    fill: "white"
  }));
};

SvgMln.displayName = "SvgMln";
SvgMln.defaultProps = {
  size: 24,
  color: "#0B1529"
};

function _extends$i0() { _extends$i0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i0.apply(this, arguments); }
var Svg$hY = styled("svg")({
  flex: "none"
}, space, color);

var SvgMnx = function SvgMnx(props) {
  return createElement(Svg$hY, _extends$i0({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.147 20.24C6.99 19.803 3.75 16.28 3.75 12c0-4.281 3.24-7.804 7.397-8.24v2.528A5.775 5.775 0 006.252 12a5.775 5.775 0 004.895 5.712v2.527zm1.631-16.49c3.923.36 7.053 3.463 7.461 7.378h-2.522a5.775 5.775 0 00-4.938-4.856V3.75zm7.472 9.013c-.361 3.967-3.513 7.125-7.472 7.487v-2.522a5.775 5.775 0 004.955-4.965h2.517z",
    fill: "white"
  }));
};

SvgMnx.displayName = "SvgMnx";
SvgMnx.defaultProps = {
  size: 24,
  color: "#00ADEF"
};

function _extends$i1() { _extends$i1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i1.apply(this, arguments); }
var Svg$hZ = styled("svg")({
  flex: "none"
}, space, color);

var SvgMnz = function SvgMnz(props) {
  return createElement(Svg$hZ, _extends$i1({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M19.177 15.987c.049.197-.148.295-.296.247h-2.458c-.148 0-.246-.05-.345-.1-.147-.049-.245-.245-.295-.443v-.049l-2.311-8.524c-.05 0-.197.147-.246.147-.05.049-.148.099-.197.049-.098-.049-.148-.196-.098-.295.097-.246.344-.395.59-.444.295-.05.54-.05.835-.05h1.82c.148 0 .296 0 .443.05.148.099.197.296.246.444.098.345.147.69.246 1.035l1.18 4.435.442 1.774c.148.542.345 1.134.443 1.725v-.001zm-5.705 0c.049.197-.148.295-.295.247h-2.46c-.147 0-.245-.05-.345-.1-.146-.049-.245-.245-.294-.443v-.049L7.767 7.118c-.05 0-.197.147-.246.147-.05.049-.148.099-.197.049-.098-.049-.147-.196-.098-.295.098-.246.344-.395.59-.444.295-.05.54-.05.836-.05h1.82c.147 0 .295 0 .442.05.148.099.197.296.246.444.098.345.148.69.246 1.035l1.18 4.435.443 1.774c.148.542.344 1.134.443 1.725v-.001zm-4.525-1.873l-.59 1.873a.473.473 0 01-.443.345H5.308a.494.494 0 01-.492-.493v-.099L6.88 7.955c.05-.1.148-.198.246-.198.148 0 .246.099.246.198l1.574 6.16zm5.803-.148l-.344 1.036c-.05.098-.098.147-.197.147-.098 0-.147-.05-.197-.147l-1.721-6.013.345-1.232c0-.099.098-.147.197-.147.097 0 .196.048.196.147l1.721 6.21z",
    fill: "white"
  }));
};

SvgMnz.displayName = "SvgMnz";
SvgMnz.defaultProps = {
  size: 24,
  color: "#7F368A"
};

function _extends$i2() { _extends$i2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i2.apply(this, arguments); }
var Svg$h_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgMod = function SvgMod(props) {
  return createElement(Svg$h_, _extends$i2({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    opacity: 0.5,
    d: "M17.239 15.755V6.06l-4.734 4.837 4.734 4.858z",
    fill: "white"
  }), createElement("path", {
    d: "M6.75 5.25l.228.234 6.35 6.506L6.75 18.74V5.25z",
    fill: "white"
  }));
};

SvgMod.displayName = "SvgMod";
SvgMod.defaultProps = {
  size: 24,
  color: "#09547D"
};

function _extends$i3() { _extends$i3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i3.apply(this, arguments); }
var Svg$h$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgMona = function SvgMona(props) {
  return createElement(Svg$h$, _extends$i3({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M17.648 10.06l-1.07-4.81-2.097 3.31a10.572 10.572 0 00-4.963 0L7.426 5.25l-1.072 4.81c-1.151.921-1.854 2.125-1.854 3.447 0 2.895 3.357 5.242 7.498 5.242 4.14 0 7.498-2.348 7.498-5.242-.001-1.322-.698-2.525-1.85-3.447h.002zm-9.816 2.202h-.5l1.22-1.407h.888l-1.608 1.407zM11.96 15.7l-2.075-3.653.512-.293.463.814h2.266l.483-.818.507.302L11.96 15.7zm4.21-3.438l-1.61-1.407h.894l1.218 1.407h-.503zm-4.2 2.262l-.776-1.365h1.581l-.806 1.365z",
    fill: "white"
  }));
};

SvgMona.displayName = "SvgMona";
SvgMona.defaultProps = {
  size: 24,
  color: "#DEC799"
};

function _extends$i4() { _extends$i4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i4.apply(this, arguments); }
var Svg$i0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgMth = function SvgMth(props) {
  return createElement(Svg$i0, _extends$i4({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M5.25 7.176l3.175 5.327V18c-1.753 0-3.175-1.377-3.175-3.076V7.176z",
    fill: "white",
    fillOpacity: 0.5
  }), createElement("path", {
    d: "M15.574 12.497l3.174-5.324h.001v7.752C18.75 16.623 17.328 18 15.574 18v-5.503z",
    fill: "white",
    fillOpacity: 0.6
  }), createElement("path", {
    d: "M11.998 12.344l-1.588 2.664c-.33-.083-.683-.402-1.062-.958L5.25 7.176c1.519-.85 3.461-.345 4.338 1.125l2.41 4.043z",
    fill: "white",
    fillOpacity: 0.8
  }), createElement("path", {
    d: "M14.412 8.295c.877-1.471 2.82-1.975 4.338-1.126l-4.098 6.874A3.2 3.2 0 0112 15.426a3.247 3.247 0 01-1.425-.326l-.165-.092 4.002-6.713z",
    fill: "white"
  }));
};

SvgMth.displayName = "SvgMth";
SvgMth.defaultProps = {
  size: 24,
  color: "#104FCA"
};

function _extends$i5() { _extends$i5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i5.apply(this, arguments); }
var Svg$i1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgMtl = function SvgMtl(props) {
  return createElement(Svg$i1, _extends$i5({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M6 6.75h.75v10.5H6V6.75zM9.75 9h.75v6.75h-.75V9zm3.75 1.5h.75v3.75h-.75V10.5zm3.75-3.75H18v10.5h-.75V6.75z",
    fill: "white"
  }));
};

SvgMtl.displayName = "SvgMtl";
SvgMtl.defaultProps = {
  size: 24,
  color: "#1E1F25"
};

function _extends$i6() { _extends$i6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i6.apply(this, arguments); }
var Svg$i2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgMusic = function SvgMusic(props) {
  return createElement(Svg$i2, _extends$i6({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M13.988.17A12 12 0 0012 0C5.37 0 0 5.37 0 12c0 2.546.8 4.898 2.145 6.848.825-1.212 2.728-2.048 4.934-2.048 1.515 0 2.885.4 3.866 1.043L13.988.169zm6.376 3.236c2.072 4.582.254 7.03.254 7.03-1.406-4.23-5.478-4.848-5.478-4.848s-2.68 14.436-2.68 14.618c0 1.564-1.66 2.885-3.915 3.285C9.667 23.828 10.83 24 12 24c6.63 0 12-5.37 12-12 0-3.37-1.394-6.412-3.636-8.594z",
    fill: "#FBBF02"
  }));
};

SvgMusic.displayName = "SvgMusic";
SvgMusic.defaultProps = {
  size: 24,
  color: "white"
};

function _extends$i7() { _extends$i7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i7.apply(this, arguments); }
var Svg$i3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgMzc = function SvgMzc(props) {
  return createElement(Svg$i3, _extends$i7({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.608 8.675v1.397h1.66l-.75.862h-1.115v1.082h1.16l-.568.86h-.591v2.209l-.955 1.302v-3.51h-1.32l.728-.861h.592v-1.082H9.584l.75-.861h1.115V8.624c-.55-.595-1.308-.893-2.275-.893-1.854 0-3.321 1.977-3.321 3.942 0 1.31.3 2.42.899 3.334L5.716 16.21C4.905 15.008 4.5 13.636 4.5 12.092c0-3.39 2.918-5.343 4.98-5.343 1.264 0 2.231.53 2.903 1.588 1.286-.882 2.6-1.323 3.945-1.323 2.058 0 3.172 2.512 3.172 4.912 0 3.194-2.15 4.427-2.934 4.57a.155.155 0 01-.154-.06.146.146 0 01.039-.208c1.214-.816 1.82-2.066 1.82-3.75 0-3.675-1.887-4.526-3.275-4.526a4.27 4.27 0 00-2.388.722z",
    fill: "white"
  }));
};

SvgMzc.displayName = "SvgMzc";
SvgMzc.defaultProps = {
  size: 24,
  color: "#FFAA05"
};

function _extends$i8() { _extends$i8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i8.apply(this, arguments); }
var Svg$i4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNano = function SvgNano(props) {
  return createElement(Svg$i4, _extends$i8({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.712 8.25c-.643 0-1.187.52-1.187 1.187 0 .94-.148 1.188-1.188 1.188h-.099a1.161 1.161 0 00-1.063 1.162v.025c0 .915-.173 1.138-1.188 1.138-.049 0-.098 0-.123.025-.594.074-1.064.569-1.064 1.162 0 .644.52 1.188 1.188 1.188.618 0 1.137-.495 1.162-1.088v-.1c0-.84.272-1.162 1.162-1.187h.025c.619 0 1.139-.495 1.163-1.113v-.075c0-.865.272-1.187 1.188-1.187.643 0 1.187-.519 1.187-1.187 0-.618-.52-1.138-1.163-1.138zm-6.976 2.374a1.198 1.198 0 011.089 1.139c0 .668-.52 1.187-1.188 1.187a1.188 1.188 0 01-1.187-1.187c0-.841-.272-1.162-1.188-1.162-.915 0-1.187.32-1.187 1.187v.074c-.024.593-.544 1.088-1.162 1.088a1.188 1.188 0 01-1.188-1.187c0-.619.47-1.114 1.064-1.162h.099c1.039 0 1.187-.223 1.187-1.163a1.188 1.188 0 012.375 0c0 .94.148 1.186 1.187 1.186h.099zm-7.174 4.7a1.187 1.187 0 110-2.373 1.187 1.187 0 010 2.374z",
    fill: "white"
  }));
};

SvgNano.displayName = "SvgNano";
SvgNano.defaultProps = {
  size: 24,
  color: "#4A90E2"
};

function _extends$i9() { _extends$i9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i9.apply(this, arguments); }
var Svg$i5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNas = function SvgNas(props) {
  return createElement(Svg$i5, _extends$i9({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M9.547 13.991l2.36 4.787 1.212-3.58-3.57-1.207h-.002zm-4.314-2.076l3.573 1.212 1.213-3.577-4.786 2.364zm4.523 1.518c.056.03.08.047.106.056 1.152.392 2.302.786 3.457 1.168.094.03.227.005.32-.04 1.32-.645 2.637-1.296 3.954-1.947.375-.185.749-.372 1.158-.576-.09-.035-.137-.054-.186-.07-1.115-.38-2.23-.76-3.349-1.129a.523.523 0 00-.358.023c-1.404.682-2.803 1.376-4.202 2.067l-.9.447zm4.874-3.05c-.847-1.72-1.684-3.415-2.542-5.155l-2.61 7.7 5.152-2.544zM3.75 12.003c.82-.406 1.595-.792 2.37-1.174 1.319-.65 2.637-1.301 3.958-1.947a.49.49 0 00.273-.31c.516-1.54 1.04-3.077 1.561-4.615.02-.057.043-.112.079-.206.053.102.091.174.127.247 1.01 2.047 2.016 4.095 3.034 6.138.049.099.18.181.291.22 1.527.526 3.057 1.043 4.586 1.563l.221.078c-.141.072-.245.126-.35.178-1.971.973-3.941 1.948-5.915 2.914a.66.66 0 00-.37.424c-.51 1.525-1.031 3.046-1.55 4.569-.014.041-.031.082-.065.169-.133-.266-.248-.494-.36-.721-.918-1.862-1.837-3.723-2.75-5.588a.538.538 0 00-.34-.304c-1.532-.512-3.06-1.035-4.59-1.555-.055-.019-.11-.042-.21-.08",
    fill: "white"
  }));
};

SvgNas.displayName = "SvgNas";
SvgNas.defaultProps = {
  size: 24,
  color: "#222222"
};

function _extends$ia() { _extends$ia = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ia.apply(this, arguments); }
var Svg$i6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNav = function SvgNav(props) {
  return createElement(Svg$i6, _extends$ia({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.99 16.5h-3.597l-2.849-5.254L7.348 16.5H3.75l3.763-9h3.598l2.959 5.457L16.652 7.5h3.598l-4.26 9z",
    fill: "white"
  }));
};

SvgNav.displayName = "SvgNav";
SvgNav.defaultProps = {
  size: 24,
  color: "#7D59B5"
};

function _extends$ib() { _extends$ib = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ib.apply(this, arguments); }
var Svg$i7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNcash = function SvgNcash(props) {
  return createElement(Svg$i7, _extends$ib({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.733 13.856c.131.058.18.237.109.4a.334.334 0 01-.259.208l-1.668 3.078a.404.404 0 01-.122.381.408.408 0 01-.322.126l-3.254 1.948a.393.393 0 01-.308.245c-.16.03-.313-.028-.386-.137l-3.824-.268a.4.4 0 01-.338.071c-.19-.041-.32-.192-.312-.347l-2.954-2.132a.396.396 0 01-.345-.105c-.13-.117-.176-.287-.127-.416L4.409 14.09c-.132-.026-.247-.156-.277-.329-.025-.155.026-.301.122-.38l.179-4.265a.409.409 0 01-.053-.387c.06-.174.205-.285.348-.277L7.915 5.11c-.027-.158.093-.325.281-.384a.399.399 0 01.353.047l4.588-.834c.06-.135.227-.215.409-.182.165.028.289.141.318.272l2.12 1.209a.428.428 0 01.354.043.44.44 0 01.214.321l.913.614a.398.398 0 01.345.067c.17.123.232.338.135.48l-.006.008 1.337 2.61c.127-.017.258.082.304.238.051.172-.02.347-.156.39-.137.045-.29-.058-.34-.23l-.008-.037-2.752-1.473a.42.42 0 01-.173.14v7.346a.425.425 0 01.243.48l1.118 1.14a.354.354 0 01.181-.026l1.688-2.982a.338.338 0 01-.016-.321c.071-.164.236-.248.368-.19zm.002.357c.029-.066.009-.138-.044-.161-.052-.022-.118.011-.147.077-.028.065-.009.136.044.16.053.023.118-.011.147-.076zm-1.998 3.594c.06-.06.07-.149.023-.198-.047-.05-.134-.042-.195.017-.06.06-.07.15-.023.2.047.049.135.04.195-.02zm-.472-.188l.008-.018-1.072-1.09a.404.404 0 01-.435-.004.413.413 0 01-.152-.175h-1.439a.424.424 0 01-.173.186l.14 2.03a.401.401 0 01.143.102l2.98-1.031zm-3.126 2.09l2.6-1.558-2.37.82a.388.388 0 01-.235.263l-.072.423a.333.333 0 01.077.052zm-.244.403c.083-.015.139-.082.127-.151-.012-.068-.09-.111-.172-.095-.082.015-.14.082-.127.15.012.069.09.112.172.096zm-.378-.298a.398.398 0 01.22-.173l.068-.401a.418.418 0 01-.16-.107l-2.984.482 2.856.199zm-2.79-3.253l-.971 2.863 3.762-.607-2.662-2.31a.415.415 0 01-.13.054zm-1.25 2.667l.926-2.73a.42.42 0 01-.14-.167H8.57a.53.53 0 01-.035.06l.943 2.837zm-.114.551c.082.018.16-.023.174-.09.015-.067-.04-.137-.122-.156-.083-.017-.16.022-.175.09-.014.069.04.138.123.156zM6.298 17.22l2.854 2.06-.902-2.713a.413.413 0 01-.355-.127l-1.592.694a.33.33 0 01-.005.086zm-.267-.448c.04.017.078.04.112.07l1.638-.713a.432.432 0 01.075-.227l-2.532-2.616.707 3.486zm-.018.456c.046-.05.03-.14-.032-.196-.063-.056-.15-.061-.195-.01-.045.053-.031.142.032.198.063.056.15.06.195.008zm-1.342-3.25l.872 2.02-.585-2.878-.23.49a.43.43 0 01-.057.369zm-.021-3.255l-.105 2.514.208-.442a.418.418 0 01.018-.42l-.121-1.652zM4.5 8.736c-.029.081.002.165.066.189.064.022.138-.024.166-.105.027-.081-.002-.165-.066-.189-.065-.022-.138.024-.167.105H4.5zm.633 3.865c0-.085-.062-.155-.137-.155-.076 0-.138.07-.138.155 0 .086.062.155.138.155.075 0 .137-.069.137-.155zM4.96 8.936a.45.45 0 01-.102.17l.217 2.992L6.41 7.877l-1.429.97a.49.49 0 01-.02.089zm2.27-2.69L5.404 8.16l.936-.634a.448.448 0 01.333-.37l.557-.908zm.94-.904L6.98 7.278c.029.051.04.112.036.175l.881.27a.41.41 0 01.673.112h1.476a.418.418 0 01.292-.233l.802-1.705a.43.43 0 01-.083-.195l-2.45-.543a.429.429 0 01-.232.168.438.438 0 01-.204.015zm.044-.49c-.08.025-.129.099-.11.165.02.067.102.1.181.075.08-.025.13-.1.11-.165-.02-.067-.1-.1-.181-.075zm4.686-.573l-3.699.673 1.935.429a.411.411 0 01.469-.145l1.295-.957zm.454.073l-1.38 1.02 3.784.105.009-.029-2.006-1.143a.41.41 0 01-.321.071.445.445 0 01-.086-.024zm.178-.465c-.082-.015-.16.029-.17.098-.012.067.044.135.127.15.083.015.16-.029.171-.098.012-.067-.045-.135-.128-.15zm2.425 2.044a.466.466 0 01-.131-.121l-3.947-.11a.363.363 0 01-.016.069l1.593 1.837a.416.416 0 01.465.23h1.693a.421.421 0 01.199-.202l.144-1.703zm.03 1.919a.168.168 0 00-.165.17c0 .094.074.17.165.17a.168.168 0 00.167-.17.169.169 0 00-.166-.17h-.001zm.074-2.4c-.041.072-.01.169.07.216.078.048.176.027.217-.045.042-.072.011-.17-.069-.216-.079-.048-.177-.027-.218.045zm2.936 3.988l-2.72-3.44-.137 1.627a.425.425 0 01.262.36l2.595 1.453zm-1.72-2.998l-.61-.41 1.97 2.566-.958-1.715a.435.435 0 01-.222-.082c-.128-.091-.195-.233-.18-.359zm.286-.042c-.04.057-.015.142.054.192.068.048.156.042.195-.015.039-.057.015-.143-.053-.192-.07-.048-.157-.042-.195.015h-.001zM13.385 8.02c0 .091.072.166.162.166a.165.165 0 00.163-.166.165.165 0 00-.163-.167.165.165 0 00-.163.167h.001zm.09 3.58a.169.169 0 00-.167.169c0 .094.075.17.167.17a.168.168 0 00.165-.17.166.166 0 00-.165-.17zm-2.173-6.018c0 .093.074.169.165.169a.168.168 0 00.167-.17.169.169 0 00-.167-.17.167.167 0 00-.165.17zm.121.477l-.76 1.617a.426.426 0 01.114.559l2.536 3.143a.432.432 0 01.071-.023V8.411a.425.425 0 01-.192-.611l-1.545-1.78a.415.415 0 01-.224.04zm-1.17 1.96c0 .095.075.17.167.17.09 0 .165-.075.165-.17a.169.169 0 00-.165-.17.169.169 0 00-.167.17zm-2.22 0c0 .092.072.167.162.167.09 0 .163-.075.163-.166a.164.164 0 00-.163-.167.164.164 0 00-.162.167zm.162 7.958a.167.167 0 00-.165.17c0 .094.074.17.165.17a.168.168 0 00.167-.17.167.167 0 00-.167-.17zM6.548 7.382c-.054.065-.059.154-.007.2.05.045.136.031.192-.034.055-.064.059-.153.008-.199-.051-.046-.136-.031-.193.033zM5.33 12.377a.417.417 0 01.063.223.417.417 0 01-.061.221l2.701 2.792V8.41a.424.424 0 01-.252-.376l-.917-.281a.435.435 0 01-.095.065l-1.44 4.558zm8.47 3.345c.18 0 .332.116.39.277h1.409a.42.42 0 01.226-.243V8.411a.419.419 0 01-.226-.243h-1.662a.423.423 0 01-.227.243v3.007a.427.427 0 01.18.351.42.42 0 01-.415.425.42.42 0 01-.389-.575l-2.571-3.186a.416.416 0 01-.485-.265H8.585a.424.424 0 01-.227.243v7.345a.422.422 0 01.227.243h1.661a.423.423 0 01.228-.243v-3.053a.426.426 0 01.216-.786.42.42 0 01.39.572l2.613 3.247a.447.447 0 01.107-.014zm.18 3.035c-.09 0-.165.067-.165.151 0 .084.075.151.165.151.092 0 .167-.068.167-.15 0-.082-.075-.152-.166-.152h-.001zm-.346-2.61c0 .094.075.17.165.17a.168.168 0 00.168-.17.169.169 0 00-.167-.17.168.168 0 00-.166.17zm-3.11-3.805c0 .094.075.17.167.17a.168.168 0 00.165-.17.167.167 0 00-.165-.17.168.168 0 00-.167.17zm.113 3.635a.168.168 0 00-.167.17c0 .094.075.17.166.17a.168.168 0 00.166-.17.167.167 0 00-.165-.17zm.162-.221a.424.424 0 01.244.478l2.695 2.337a.438.438 0 01.077-.035l-.138-1.983a.425.425 0 01-.24-.611l-2.582-3.21a.374.374 0 01-.056.02v3.004zm5.355.39a.167.167 0 00-.166-.169.168.168 0 00-.167.17c0 .094.075.17.167.17a.168.168 0 00.166-.17v-.001zM4.37 13.88c.067-.011.11-.089.096-.173-.015-.085-.08-.144-.147-.132-.067.011-.11.09-.095.174.013.085.08.144.146.131zM19.35 9.595c-.054.017-.083.088-.062.156.02.068.08.11.135.092.055-.017.082-.088.063-.156-.02-.069-.081-.11-.135-.092h-.001z",
    fill: "white"
  }));
};

SvgNcash.displayName = "SvgNcash";
SvgNcash.defaultProps = {
  size: 24,
  color: "#36A9CF"
};

function _extends$ic() { _extends$ic = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ic.apply(this, arguments); }
var Svg$i8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNdz = function SvgNdz(props) {
  return createElement(Svg$i8, _extends$ic({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.94 13.032c-.066.02-.129.045-.19.073l-2.757-2.865a1.433 1.433 0 00-.855-2.096V6.14L9.4 5.727l1.704-.986a1.788 1.788 0 011.792 0l3.389 1.962-1.34.775a1.434 1.434 0 10-1.005 2.678v2.876zm.853 0v-2.877a1.431 1.431 0 00.819-2.08l1.522-.88.728.42a1.78 1.78 0 01.888 1.54v5.69c0 .634-.338 1.22-.889 1.54l-3.067 1.775v-2.393a1.432 1.432 0 00-.001-2.735zm-1.67.652a1.433 1.433 0 00.817 2.083v2.888l-1.044.604a1.788 1.788 0 01-1.792 0l-3.649-2.112 1.371-1.07a1.433 1.433 0 001.472.226 1.433 1.433 0 00-.161-2.703v-2.698c.079-.022.155-.05.228-.085l2.758 2.867zm-3.839-.06a1.433 1.433 0 00-.92 1.731l-1.703 1.332-.522-.302a1.779 1.779 0 01-.889-1.54v-5.69c0-.634.338-1.22.889-1.54l2.404-1.391.742.414v1.53a1.432 1.432 0 000 2.71v2.746zm.466-3.482a.62.62 0 11-.045-1.238.62.62 0 01.045 1.238zm0 5.457a.621.621 0 11-.045-1.242.621.621 0 01.045 1.242zm4.616-6.192a.62.62 0 11-.044-1.24.62.62 0 01.044 1.24zm0 5.612a.62.62 0 11-.001-1.24.62.62 0 01.001 1.24z",
    fill: "white"
  }));
};

SvgNdz.displayName = "SvgNdz";
SvgNdz.defaultProps = {
  size: 24,
  color: "#622FBA"
};

function _extends$id() { _extends$id = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$id.apply(this, arguments); }
var Svg$i9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgNebl = function SvgNebl(props) {
  return createElement(Svg$i9, _extends$id({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M15.27 10.245v3.588l-3.23 1.775v-3.586l3.23-1.776v-.001zm3.855-.92v5.349c0 .38-.105.752-.302 1.075a2.207 2.207 0 01-.828.79l-2.41 1.323v-3.53l.305-.167V9.906l2.95-1.622c.184.315.285.671.285 1.042zm-13.12 7.213a2.208 2.208 0 01-.806-.755 2.072 2.072 0 01-.324-1.108V11.25l3.318 2.591v.144l.005.149.258.152 3.312 1.821.273.15V19.5a2.347 2.347 0 01-1.171-.287l-4.865-2.675zm-.138-8.993l3.508-1.92 2.385 2.31-3.567 1.967v.3l-3.31 1.818-.008-2.695c0-.38.105-.754.304-1.077.174-.285.41-.525.688-.704v.001zm12.128-.083c.351.192.643.476.846.821l-2.95 1.622v-.027l-.305-.167-3.25-1.786 3.25-1.788 2.409 1.325zm-13.113 4.56l3.311-1.82v3.64l-3.31-1.821zm7.16-4.237V4.5c.38.006.754.104 1.088.287l2.456 1.35-3.25 1.787-.295-.139zm-.274.15L8.462 6.119l2.552-1.404A2.355 2.355 0 0112.04 4.5v3.285l-.273.15zm.294 8.333l.273-.15 3.212 1.766-2.417 1.329c-.334.182-.708.28-1.089.286v-3.242l.021.011zm3.524-1.936v3.53l-.04.022-3.21-1.766 3.25-1.786z",
    fill: "white"
  }));
};

SvgNebl.displayName = "SvgNebl";
SvgNebl.defaultProps = {
  size: 24,
  color: "#50479E"
};

function _extends$ie() { _extends$ie = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ie.apply(this, arguments); }
var Svg$ia = styled("svg")({
  flex: "none"
}, space, color);

var SvgNeo = function SvgNeo(props) {
  return createElement(Svg$ia, _extends$ie({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.75 16.935l-5.242-2.443V9.075l5.242-1.859v9.718zM11.117 19.5L6 17.116V7.468l5.117 2.386V19.5zm7.508-12.632l-.085.03-5.032 1.786-.126.045-2.133.756-5.047-2.352 7.18-2.548.063-.022.132-.047.047-.016 5.047 2.352-.047.016z",
    fill: "white"
  }));
};

SvgNeo.displayName = "SvgNeo";
SvgNeo.defaultProps = {
  size: 24,
  color: "#58BF00"
};

function _extends$if() { _extends$if = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$if.apply(this, arguments); }
var Svg$ib = styled("svg")({
  flex: "none"
}, space, color);

var SvgNeos = function SvgNeos(props) {
  return createElement(Svg$ib, _extends$if({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.875 7.019l6.107 3.694v2.323L9.697 10.46V19.5H7.875V7.018zm8.25 9.963l-6.107-3.695v-2.322l4.285 2.575V4.5h1.822v12.482z",
    fill: "white"
  }));
};

SvgNeos.displayName = "SvgNeos";
SvgNeos.defaultProps = {
  size: 24,
  color: "#E5F300"
};

function _extends$ig() { _extends$ig = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ig.apply(this, arguments); }
var Svg$ic = styled("svg")({
  flex: "none"
}, space, color);

var SvgNgc = function SvgNgc(props) {
  return createElement(Svg$ic, _extends$ig({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M15.375 12.632L10.353 19.5l.185-5.58H9.375l.476-4.9 5.313-.732-1.745 4.444 1.956-.1zm-4.123 4.873v-1.313a.181.181 0 00-.185-.177.181.181 0 00-.185.177v1.313c0 .098.082.177.185.177a.18.18 0 00.184-.177zm-1.375-3.964h1.058l-.049 2.02c0 .053.02.104.06.142.039.037.092.06.147.06h.01a.203.203 0 00.206-.194l.048-2.383H10.3l.354-3.914a.16.16 0 00-.044-.123.172.172 0 00-.125-.053h-.03a.167.167 0 00-.17.148l-.408 4.296zm0-4.95l1.957-1.616c.104-1.616-.953-1.869-.953-1.869l.159-.606c1.745.505 1.48 2.424 1.48 2.424l2.538 1.06-5.18.607z",
    fill: "white"
  }));
};

SvgNgc.displayName = "SvgNgc";
SvgNgc.defaultProps = {
  size: 24,
  color: "#F80000"
};

function _extends$ih() { _extends$ih = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ih.apply(this, arguments); }
var Svg$id = styled("svg")({
  flex: "none"
}, space, color);

var SvgNio = function SvgNio(props) {
  return createElement(Svg$id, _extends$ih({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 10.323H8.383L12 4.125l3.617 6.198H12zm.491 7.302l1.886-3.232 1.809-3.098 3.689 6.33h-7.384zm-2.868-3.232l1.886 3.232H4.125l3.69-6.33 1.807 3.098z",
    fill: "white"
  }));
};

SvgNio.displayName = "SvgNio";
SvgNio.defaultProps = {
  size: 24,
  color: "#70C9C9"
};

function _extends$ii() { _extends$ii = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ii.apply(this, arguments); }
var Svg$ie = styled("svg")({
  flex: "none"
}, space, color);

var SvgNlc2 = function SvgNlc2(props) {
  return createElement(Svg$ie, _extends$ii({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.613 10.29l-1.455-2.863c.303-.66.454-1.035.454-1.121 0-.31-.204-.536-.611-.681h4.46c-.549.247-1.038.866-1.465 1.857l-1.383 2.807zm-2.187 4.445l-.678 1.38h4.002c1.813 0 3.025-.34 3.636-1.02l-2.139 3.28H5.31c1.18-.227 2.372-1.65 3.574-4.27.405-.806.776-1.55 1.115-2.231l1.428 2.861zm-7.676.453c.886-.526 4.125-6.13 4.125-7.706 0-.371-.224-.722-.672-1.052h3.483l3.025 5.941 2.934-5.941h3.605c-1.528.402-4.553 7.61-4.553 8.448 0 .165.03.268.092.31h-3.178L9.891 9.74l-2.688 5.447H3.75z",
    fill: "white"
  }));
};

SvgNlc2.displayName = "SvgNlc2";
SvgNlc2.defaultProps = {
  size: 24,
  color: "#F28F01"
};

function _extends$ij() { _extends$ij = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ij.apply(this, arguments); }
var Svg$if = styled("svg")({
  flex: "none"
}, space, color);

var SvgNlg = function SvgNlg(props) {
  return createElement(Svg$if, _extends$ij({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.136 11.103c.124-.002.203.015.252.06.053.048.074.126.085.248.35 4.034-2.701 7.681-6.748 8.055-4.173.386-7.796-2.625-8.192-6.81-.386-4.064 2.666-7.751 6.74-8.122 2.306-.21 4.299.515 5.976 2.112.017.017.013.086-.006.106-.377.383-.757.763-1.14 1.14-.022.021-.1.018-.124-.004-1.73-1.585-3.735-2.054-5.927-1.256-2.217.808-3.486 2.48-3.737 4.835-.338 3.187 2.068 5.996 5.276 6.238 2.909.22 5.544-1.84 6.027-4.713.004-.029-.06-.1-.093-.1-1.797-.005-3.593-.004-5.388-.01-.047 0-.133-.087-.135-.134-.01-.502-.01-1.004 0-1.506.001-.045.081-.126.125-.127 1.197-.007 5.87.004 7.008-.013l.001.001z",
    fill: "white"
  }));
};

SvgNlg.displayName = "SvgNlg";
SvgNlg.defaultProps = {
  size: 24,
  color: "#2AB0FD"
};

function _extends$ik() { _extends$ik = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ik.apply(this, arguments); }
var Svg$ig = styled("svg")({
  flex: "none"
}, space, color);

var SvgNmc = function SvgNmc(props) {
  return createElement(Svg$ig, _extends$ik({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M14.446 17.625v-.002c.116.003.232-.01.344-.037.657-.154 1.213-.727 1.345-1.347l2.615-9.822-2.079-.01-1.714 6.425-4.636-6.447-.002.003.002-.008-.766-.005a1.425 1.425 0 00-.344.037c-.656.155-1.212.729-1.345 1.348L5.25 17.584l2.08.009 1.713-6.426 4.636 6.448h.002l.765.01zM9.5 9.455l.362-1.358 4.636 6.45-.362 1.357-4.635-6.45H9.5z",
    fill: "white"
  }));
};

SvgNmc.displayName = "SvgNmc";
SvgNmc.defaultProps = {
  size: 24,
  color: "#186C9D"
};

function _extends$il() { _extends$il = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$il.apply(this, arguments); }
var Svg$ih = styled("svg")({
  flex: "none"
}, space, color);

var SvgNuls = function SvgNuls(props) {
  return createElement(Svg$ih, _extends$il({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M10.802 14.52L12 16.098V19.5l-4.5-1.997V8.714c0-.13.058-.253.159-.34l.512-.438a.477.477 0 01.693.072l4.098 5.374 2.264 1.384v-7.41l-2-.998-.098 4.647L12.069 9.6l-.048-5.1L16.5 6.584v8.748l-1.018.839-3.205-1.79-3.558-4.668-.049 7.09 2.119 1.086.013-3.369z",
    fill: "white"
  }));
};

SvgNuls.displayName = "SvgNuls";
SvgNuls.defaultProps = {
  size: 24,
  color: "#82BD39"
};

function _extends$im() { _extends$im = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$im.apply(this, arguments); }
var Svg$ii = styled("svg")({
  flex: "none"
}, space, color);

var SvgNxs = function SvgNxs(props) {
  return createElement(Svg$ii, _extends$im({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M1.504 17.82c.454-1.323 1.328-2.755 2.546-4.17a1.5 1.5 0 012.091-2.107A26.233 26.233 0 019.219 9.21c5.2-3.377 10.697-4.455 13.377-2.849a11.926 11.926 0 011.366 4.677c-.866 2.834-3.725 6.22-7.799 8.865-2.81 1.825-5.707 2.98-8.2 3.4a12.04 12.04 0 01-6.46-5.484zm2.812-3.896c-1.758 2.03-2.462 4.12-1.61 5.433 1.287 1.982 5.64 1.44 9.72-1.21 4.082-2.65 6.347-6.406 5.06-8.389-1.288-1.982-5.64-1.44-9.721 1.21a17.98 17.98 0 00-1.288.919 1.5 1.5 0 01-2.16 2.037z",
    fill: "white"
  }));
};

SvgNxs.displayName = "SvgNxs";
SvgNxs.defaultProps = {
  size: 24,
  color: "#4099CD"
};

function _extends$in() { _extends$in = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$in.apply(this, arguments); }
var Svg$ij = styled("svg")({
  flex: "none"
}, space, color);

var SvgNxt = function SvgNxt(props) {
  return createElement(Svg$ij, _extends$in({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.561 12.625c-.38 0-.688-.28-.688-.625v-.626h-3.459c-.38 0-.688-.28-.688-.624 0-.345.308-.625.688-.625h4.147c.38 0 .689.28.689.625V12c0 .345-.308.625-.689.625zm-3.411 0h1.376c.38 0 .689.28.689.624 0 .345-.308.626-.689.626h-2.112a.74.74 0 01-.317-.07l-4.014-2.43H9.926c-.38 0-.688-.28-.688-.625s.307-.625.688-.625h1.377c.148 0 .285.043.398.116l3.924 2.385h.525v-.001zm-4.847 0c.38 0 .688.28.688.624 0 .345-.308.626-.688.626H9.925a.74.74 0 01-.317-.07l-4.014-2.43H4.439c-.38 0-.689-.28-.689-.625s.308-.625.689-.625h1.376c.14 0 .28.04.398.116l3.924 2.385h1.165v-.001zm-6.865 0h1.377c.38 0 .688.28.688.625s-.308.625-.688.625H4.438c-.38 0-.688-.28-.688-.625s.308-.625.689-.625z",
    fill: "white"
  }));
};

SvgNxt.displayName = "SvgNxt";
SvgNxt.defaultProps = {
  size: 24,
  color: "#008FBB"
};

function _extends$io() { _extends$io = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$io.apply(this, arguments); }
var Svg$ik = styled("svg")({
  flex: "none"
}, space, color);

var SvgOax = function SvgOax(props) {
  return createElement(Svg$ik, _extends$io({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M10.568 14.001l-.468.998H9.064L11.879 9l1.877 4h-1.062l-.84-1.736-.841 1.765-.445.972zm4.09.975l2.197-2.963-2.213-2.985h1.212l1.605 2.183-.584.803.584.802-1.605 2.182h-2.222l-.47-.997H14.2l.459.975zm3.394-2.975l-.593-.816 1.606-2.182h1.185l-2.198 2.998zm0 0l2.198 2.998h-1.185l-1.605-2.182.592-.816zM8.566 9.869a2.974 2.974 0 01.814 2.133c.01.788-.28 1.55-.814 2.131-.541.607-1.21.867-2 .867a2.681 2.681 0 01-2.002-.867 3 3 0 01-.814-2.131 2.973 2.973 0 01.518-1.737l.69.735a2.117 2.117 0 00.272 2.449 1.798 1.798 0 001.335.607c.504 0 .985-.22 1.335-.607.357-.373.555-.888.542-1.421 0-.531-.195-1.041-.543-1.422a1.75 1.75 0 00-1.335-.578 1.642 1.642 0 00-.937.263l-.69-.735a2.562 2.562 0 011.63-.552 2.632 2.632 0 011.999.865z",
    fill: "white"
  }));
};

SvgOax.displayName = "SvgOax";
SvgOax.defaultProps = {
  size: 24,
  color: "#164B79"
};

function _extends$ip() { _extends$ip = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ip.apply(this, arguments); }
var Svg$il = styled("svg")({
  flex: "none"
}, space, color);

var SvgOmg = function SvgOmg(props) {
  return createElement(Svg$il, _extends$ip({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.049 12.496a3.046 3.046 0 100 6.092 3.046 3.046 0 000-6.092zm0 5.171a2.125 2.125 0 110-4.252 2.125 2.125 0 010 4.253v-.001zM15.554 6a3.046 3.046 0 100 6.091 3.046 3.046 0 000-6.091zm0 5.17a2.124 2.124 0 110-4.248 2.124 2.124 0 010 4.248zM9.05 6h3.045v.921h-.864A3.048 3.048 0 119.048 6zm2.125 3.045a2.125 2.125 0 10-4.25-.003 2.125 2.125 0 004.25.004v-.001z",
    fill: "white"
  }));
};

SvgOmg.displayName = "SvgOmg";
SvgOmg.defaultProps = {
  size: 24,
  color: "#1A56F0"
};

function _extends$iq() { _extends$iq = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iq.apply(this, arguments); }
var Svg$im = styled("svg")({
  flex: "none"
}, space, color);

var SvgOmni = function SvgOmni(props) {
  return createElement(Svg$im, _extends$iq({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.549 5.166a8.198 8.198 0 00-2.393 2.397V5.166H7.55zm11.253 2.332a8.197 8.197 0 00-2.35-2.332h2.35v2.332zm-2.316 11.313a8.2 8.2 0 002.316-2.31v2.31h-2.316zm-11.33-2.374a8.197 8.197 0 002.358 2.374H5.156v-2.374zM19.5 12c0 4.136-3.364 7.5-7.5 7.5S4.5 16.136 4.5 12 7.864 4.5 12 4.5s7.5 3.364 7.5 7.5zM12 17.469A5.476 5.476 0 0017.469 12 5.476 5.476 0 0012 6.531 5.476 5.476 0 006.531 12 5.476 5.476 0 0012 17.469z",
    fill: "white"
  }));
};

SvgOmni.displayName = "SvgOmni";
SvgOmni.defaultProps = {
  size: 24,
  color: "#1C347A"
};

function _extends$ir() { _extends$ir = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ir.apply(this, arguments); }
var Svg$in = styled("svg")({
  flex: "none"
}, space, color);

var SvgOnt = function SvgOnt(props) {
  return createElement(Svg$in, _extends$ir({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M18.75 18.163L7.483 7.14A6.653 6.653 0 0112.15 5.25c3.645 0 6.6 2.89 6.6 6.457v6.456zM5.25 5.837L16.517 16.86a6.653 6.653 0 01-4.667 1.891c-3.645 0-6.6-2.89-6.6-6.457V5.837z",
    fill: "white"
  }));
};

SvgOnt.displayName = "SvgOnt";
SvgOnt.defaultProps = {
  size: 24,
  color: "#32A4BE"
};

function _extends$is() { _extends$is = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$is.apply(this, arguments); }
var Svg$io = styled("svg")({
  flex: "none"
}, space, color);

var SvgOot = function SvgOot(props) {
  return createElement(Svg$io, _extends$is({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.26 18.745c-1.23.013-2.263-.209-3.237-.693-.06-.03-.105-.031-.165.003a5.385 5.385 0 01-1.913.646c-.288.038-.579.078-.869.019a1.025 1.025 0 01-.56-1.695c.344-.39.602-.848.758-1.345a.161.161 0 00-.02-.15 6.43 6.43 0 01-.958-2.788c-.22-2.192.461-4.069 2.032-5.608a6.437 6.437 0 013.647-1.803c1.903-.278 3.637.161 5.16 1.341 1.36 1.053 2.205 2.44 2.5 4.133.374 2.144-.167 4.053-1.605 5.685-1.063 1.206-2.413 1.923-4.001 2.177-.302.048-.607.062-.77.078zm-4.823-1.791l.105-.03c.427-.144.83-.35 1.195-.613.264-.186.525-.195.803-.036a4.86 4.86 0 001.923.628c1.115.119 2.168-.093 3.109-.698 1.627-1.044 2.437-2.547 2.35-4.493-.057-1.246-.545-2.323-1.43-3.2-1.065-1.056-2.362-1.537-3.864-1.434-1.012.071-1.928.419-2.707 1.07-1.51 1.26-2.092 2.875-1.758 4.812.11.637.364 1.222.722 1.762a.825.825 0 01.129.674 6.12 6.12 0 01-.36 1.087c-.067.153-.139.302-.216.47h-.001zm4.568-7.81l.428.868c.15.308.304.615.45.926.037.081.088.11.172.12.63.088 1.259.18 1.888.271l.07.015c-.116.12-.224.238-.337.348-.356.347-.712.693-1.07 1.036-.063.06-.087.117-.07.209.112.632.217 1.266.323 1.9l.005.063c-.035-.014-.061-.022-.085-.035-.556-.293-1.114-.586-1.668-.883-.075-.041-.134-.045-.212-.003-.557.298-1.118.591-1.678.885-.023.013-.046.023-.09.044.028-.17.052-.323.078-.474.088-.512.176-1.024.27-1.535.014-.075-.028-.11-.07-.151-.448-.439-.895-.878-1.343-1.314-.026-.026-.062-.04-.093-.06l.023-.036.687-.098c.432-.062.864-.125 1.296-.184.07-.01.1-.047.13-.105.282-.577.568-1.152.852-1.728.01-.02.022-.04.045-.078z",
    fill: "white"
  }));
};

SvgOot.displayName = "SvgOot";
SvgOot.defaultProps = {
  size: 24,
  color: "#25AAE1"
};

function _extends$it() { _extends$it = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$it.apply(this, arguments); }
var Svg$ip = styled("svg")({
  flex: "none"
}, space, color);

var SvgOst = function SvgOst(props) {
  return createElement(Svg$ip, _extends$it({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M17.311 17.998c-1.326-1.295-2.962-1.83-4.772-1.942-1.54-.095-3.012.163-4.389.868a5.36 5.36 0 00-1.377 1c-.026.027-.057.051-.084.076a7.957 7.957 0 01-.783-11.62c3.24-3.49 8.88-3.51 12.15-.036a7.953 7.953 0 01-.745 11.654zm-8.296-6.152c0 1.621 1.327 2.925 2.978 2.928 1.66.003 3.002-1.305 3.004-2.924.002-1.614-1.35-2.936-3-2.932-1.647.003-2.983 1.316-2.982 2.928z",
    fill: "white"
  }));
};

SvgOst.displayName = "SvgOst";
SvgOst.defaultProps = {
  size: 24,
  color: "#BBDFD0"
};

function _extends$iu() { _extends$iu = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iu.apply(this, arguments); }
var Svg$iq = styled("svg")({
  flex: "none"
}, space, color);

var SvgOx = function SvgOx(props) {
  return createElement(Svg$iq, _extends$iu({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.643 19.125h-1.287c-.966 0-1.24-.895-1.24-1.58 0-.684.05-.993.05-1.302 0-.488-.247-1.705-.693-2.215-.869-.994-1.417-1.884-1.417-3.176-.755-.39-2.092-.749-2.606-1.334C4.934 8.932 4.5 8.1 4.5 6.91c0-.304.064-.733.194-1.287.296.926.752 1.56 1.367 1.905.901.506 1.917.88 2.784.88h6.31c.867 0 1.882-.375 2.784-.88.614-.345 1.071-.98 1.367-1.905.13.554.194.983.194 1.287 0 1.188-.435 2.02-.95 2.605-.514.586-1.85.945-2.607 1.335 0 1.292-.547 2.182-1.416 3.176-.446.51-.692 1.728-.692 2.215 0 .309.048.619.048 1.303 0 .684-.273 1.58-1.24 1.58z",
    fill: "white"
  }));
};

SvgOx.displayName = "SvgOx";
SvgOx.defaultProps = {
  size: 24,
  color: "#4392CD"
};

function _extends$iv() { _extends$iv = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iv.apply(this, arguments); }
var Svg$ir = styled("svg")({
  flex: "none"
}, space, color);

var SvgPart = function SvgPart(props) {
  return createElement(Svg$ir, _extends$iv({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.568 4.63c.483-.21.828.235 1.127.534.532.452 1.039.933 1.519 1.44.275.3.163.85-.21 1.017-.289.158-.64.04-.861-.18-.58-.555-1.134-1.137-1.736-1.668-.373-.305-.296-.967.161-1.143zm5.275 1.538c.328-.176.853-.033.944.358.139.347-.084.69-.328.921a78.324 78.324 0 00-1.58 1.617.674.674 0 01-.793.168c-.388-.16-.492-.743-.2-1.038.658-.67 1.238-1.42 1.957-2.025v-.001zm-10.475.108c.34-.206.763-.07 1.016.21.568.574 1.155 1.128 1.729 1.693.38.35.114 1.095-.416 1.098-.444.067-.68-.372-.976-.612-.521-.43-.998-.91-1.47-1.395-.267-.275-.188-.78.117-.994zm.44 3.39c.573-.221 1.132.5.775.998-.423.55-.972.993-1.433 1.513-.272.28-.525.71-.979.655-.53-.02-.796-.757-.41-1.115.696-.667 1.249-1.51 2.048-2.052v.001zm11.608 1.595c.393-.257.987.036 1 .51.058.446-.385.681-.628.981-.43.516-.9.998-1.387 1.461-.355.336-1.018.1-1.082-.386-.083-.502.388-.813.685-1.134.492-.457.907-.995 1.412-1.432zM8.302 14.79c.382-.229.962.043.971.507.071.448-.372.686-.614.985-.428.518-.905.993-1.386 1.462-.313.316-.98.164-1.069-.29-.151-.439.22-.792.504-1.067.55-.515 1.028-1.103 1.594-1.597zm6.796-.017c.212-.073.48-.079.659.074.662.63 1.367 1.214 1.99 1.886.192.194.209.52.081.755-.18.42-.796.431-1.095.133-.605-.57-1.186-1.169-1.793-1.737-.367-.285-.281-.946.158-1.111zm-5.1 1.608c.315-.17.686-.009.912.232.568.57 1.146 1.13 1.736 1.677.39.37.126 1.123-.424 1.129-.444.052-.675-.389-.973-.63a17.385 17.385 0 01-1.462-1.388c-.28-.298-.167-.854.211-1.02zM8.986 5.201a.651.651 0 01-1.302 0 .651.651 0 011.301 0zm1.896 1.731a.65.65 0 11-1.302 0 .65.65 0 011.302 0zm-5.08 1.59a.651.651 0 11-1.302.044.651.651 0 011.301-.044zM16.13 5.15a.651.651 0 11-1.303 0 .651.651 0 011.304 0zm3.37 3.21a.65.65 0 11-1.3 0 .65.65 0 011.3 0zm-1.778 1.87a.65.65 0 11-1.302 0 .65.65 0 011.302 0zm1.775 5.254a.65.65 0 11-1.3 0 .65.65 0 011.3 0zm-5.075 1.587a.651.651 0 11-1.301.044.651.651 0 011.301-.044zm1.872 1.779a.651.651 0 11-1.301.044.651.651 0 011.301-.044zm-7.124 0a.651.651 0 01-1.302 0 .651.651 0 011.3 0h.002zm-1.588-5.095a.65.65 0 11-1.301.044.65.65 0 011.3-.044zm-1.78 1.89a.652.652 0 11-1.303.044.652.652 0 011.302-.044",
    fill: "white"
  }));
};

SvgPart.displayName = "SvgPart";
SvgPart.defaultProps = {
  size: 24,
  color: "#03E8B0"
};

function _extends$iw() { _extends$iw = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iw.apply(this, arguments); }
var Svg$is = styled("svg")({
  flex: "none"
}, space, color);

var SvgPasl = function SvgPasl(props) {
  return createElement(Svg$is, _extends$iw({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.31 15.117a.383.383 0 01.501.21.386.386 0 01-.208.502L9.05 16.89l-.34 1.86H6.953l.192-1.07-1.036.43a.383.383 0 01-.5-.503.386.386 0 01.207-.209l1.492-.619.113-.63-2.016.837a.382.382 0 01-.5-.21.386.386 0 01.208-.503l2.47-1.025 1.798-9.99h5.08c3.11-.108 4.665.931 4.665 3.116 0 2.771-2.026 4.915-5.464 4.915H9.705l-.212 1.167 1.115-.463a.382.382 0 01.5.209.386.386 0 01-.208.502l-1.572.654-.115.63 2.097-.871zm-.428-8.285l-.878 4.818h3.913c2.409 0 3.322-1.638 3.322-2.827 0-1.188-.574-1.991-2.491-1.991h-3.865z",
    fill: "white"
  }));
};

SvgPasl.displayName = "SvgPasl";
SvgPasl.defaultProps = {
  size: 24,
  color: "#00ACFF"
};

function _extends$ix() { _extends$ix = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ix.apply(this, arguments); }
var Svg$it = styled("svg")({
  flex: "none"
}, space, color);

var SvgPay = function SvgPay(props) {
  return createElement(Svg$it, _extends$ix({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M20.183 11.772a.85.85 0 00-.162-.225c-1.426-1.616-4.33-4.797-4.33-4.797l-3.687 4.034-3.735-3.996s-2.937 3.21-4.377 4.842c-.187.185-.187.518-.019.714.748.852 4.42 4.902 4.42 4.902L12 13.186l3.679 4.064 4.438-4.91s.093-.097.114-.162a.558.558 0 00-.047-.406zm-14.245.45c-.12-.143-.079-.365.033-.5.47-.534 2.348-2.55 2.348-2.55l2.617 2.78-2.622 2.867s-1.605-1.713-2.376-2.598zm11.992.094c-.056.095-.12.184-.192.266l-2.033 2.209L13.08 12l2.583-2.831s1.488 1.541 2.17 2.37c.058.072.126.14.155.232.062.179.023.378-.06.544",
    fill: "white"
  }));
};

SvgPay.displayName = "SvgPay";
SvgPay.defaultProps = {
  size: 24,
  color: "#302C2C"
};

function _extends$iy() { _extends$iy = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iy.apply(this, arguments); }
var Svg$iu = styled("svg")({
  flex: "none"
}, space, color);

var SvgPink = function SvgPink(props) {
  return createElement(Svg$iu, _extends$iy({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    opacity: 0.5,
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M17.589 6.697l-1.402 1.412a5.429 5.429 0 00-3.865-1.612c-2.936 0-5.332 2.333-5.458 5.258h-.006v5.341A7.503 7.503 0 014.875 12c0-4.142 3.335-7.5 7.447-7.5a7.4 7.4 0 015.267 2.197zm0 10.606a7.4 7.4 0 01-5.145 2.197v-1.998a5.429 5.429 0 003.742-1.61l1.403 1.411z",
    fill: "white"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.76 18.588v-6.833h.006c.105-1.953 1.711-3.505 3.678-3.505 2.034 0 3.683 1.66 3.683 3.71 0 2.048-1.649 3.708-3.682 3.708a3.647 3.647 0 01-1.863-.507v4.133a7.368 7.368 0 01-1.821-.705v-.001zm3.684-4.754a1.868 1.868 0 001.862-1.874 1.869 1.869 0 00-1.862-1.876 1.869 1.869 0 00-1.862 1.876c0 1.034.834 1.874 1.862 1.874z",
    fill: "white"
  }));
};

SvgPink.displayName = "SvgPink";
SvgPink.defaultProps = {
  size: 24,
  color: "#ED79AA"
};

function _extends$iz() { _extends$iz = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iz.apply(this, arguments); }
var Svg$iv = styled("svg")({
  flex: "none"
}, space, color);

var SvgPirl = function SvgPirl(props) {
  return createElement(Svg$iv, _extends$iz({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.695 12.079c.065.193.16.375.283.538l-1.87-1.888a1.05 1.05 0 010-1.478l2.36-2.36a1.88 1.88 0 00.14-.116l.068-.06 1.91-1.911a1.032 1.032 0 011.465.002l6.257 6.302a1.056 1.056 0 01-.755 1.66 1.068 1.068 0 01-.693-.163l-5.528-5.58-.006-.007-.018-.02-2.957 2.958-.045.038a.25.25 0 01-.005.006l2.922 2.945a1.05 1.05 0 01-.465 1.749 1.033 1.033 0 01-1.003-.27l-1.497-1.508c-.022-.02-.044-.045-.07-.072l-.07-.07a1.934 1.934 0 01-.14-.177l.034.04-.023-.03a1.897 1.897 0 01-.294-.528zm6.11 1.93l-2.926-2.947a1.05 1.05 0 01.337-1.703 1.034 1.034 0 011.13.228l1.498 1.508c.021.018.043.045.07.071l.069.069c.039.043.075.09.108.137l.016.02a3.481 3.481 0 00-.064-.089L17 13.273a1.05 1.05 0 010 1.48l-2.36 2.36c-.05.036-.097.074-.143.114l-1.967 1.968a1.032 1.032 0 01-1.466 0l-6.358-6.41a1.056 1.056 0 01.139-1.408 1.037 1.037 0 011.404.008l5.538 5.591.019.023 2.951-2.95.043-.036.005-.005z",
    fill: "white"
  }));
};

SvgPirl.displayName = "SvgPirl";
SvgPirl.defaultProps = {
  size: 24,
  color: "#96B73D"
};

function _extends$iA() { _extends$iA = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iA.apply(this, arguments); }
var Svg$iw = styled("svg")({
  flex: "none"
}, space, color);

var SvgPivx = function SvgPivx(props) {
  return createElement(Svg$iw, _extends$iA({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.875 9.18h4.615v.942H7.875v-.941zm9 .443c0 2.23-1.582 3.671-3.771 3.671h-3.031V18h-1.2v-5.77h4.068c1.631 0 2.696-.969 2.696-2.607 0-1.618-1.065-2.56-2.677-2.56h-1.266l-3.032.01V6h4.432c2.198 0 3.78 1.393 3.78 3.623h.001v0z",
    fill: "white",
    stroke: "white"
  }));
};

SvgPivx.displayName = "SvgPivx";
SvgPivx.defaultProps = {
  size: 24,
  color: "#5E4778"
};

function _extends$iB() { _extends$iB = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iB.apply(this, arguments); }
var Svg$ix = styled("svg")({
  flex: "none"
}, space, color);

var SvgPlr = function SvgPlr(props) {
  return createElement(Svg$ix, _extends$iB({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M6.308 15.677h-.074v3.073H4.5V8.344h1.695v.48h.067c.592-.567 1.345-.583 1.768-.583 1.773 0 2.936 1.69 2.936 3.947v.292c0 2.348-1.346 3.748-2.966 3.748-.758.002-1.32-.171-1.692-.552zm3.047-3.057v-.513c0-1.47-.56-2.453-1.558-2.453-1.079 0-1.657 1.143-1.657 2.453v.51c0 1.249.57 2.205 1.687 2.205.88-.003 1.528-.688 1.528-2.202zm2.45-7.37h1.736v10.932h-1.736V5.25zm6.697 4.807c-.974 0-1.94.772-1.94 1.749v4.383h-1.727V8.417h1.6v.478h.065c.389-.41 1.339-.601 2.12-.59.078 0 .014.002.09.002l.008 1.75h-.216zm-.73 4.264H19.5v1.861h-1.727v-1.86z",
    fill: "white"
  }));
};

SvgPlr.displayName = "SvgPlr";
SvgPlr.defaultProps = {
  size: 24,
  color: "#00BFFF"
};

function _extends$iC() { _extends$iC = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iC.apply(this, arguments); }
var Svg$iy = styled("svg")({
  flex: "none"
}, space, color);

var SvgPoa = function SvgPoa(props) {
  return createElement(Svg$iy, _extends$iC({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M3.75 18L12 3.75 20.25 18H3.75zm5.154-7.257c.964-.643 1.997-.968 3.096-.968s2.132.325 3.096.968L12 5.395l-3.096 5.348zM7.441 13.27l-2.248 3.883h13.614l-2.248-3.882c-1.357 1.492-2.882 2.25-4.559 2.25s-3.203-.758-4.56-2.25zM12 14.675c1.454 0 2.783-.668 4.003-2.025-1.22-1.36-2.55-2.027-4.003-2.027-1.454 0-2.783.668-4.003 2.026 1.22 1.359 2.55 2.027 4.003 2.027v-.001zm0-.362c-.87 0-1.576-.732-1.576-1.634 0-.902.705-1.633 1.576-1.633.87 0 1.576.732 1.576 1.633 0 .902-.705 1.633-1.576 1.633zm0-.848c.42 0 .759-.352.759-.786a.773.773 0 00-.759-.786.773.773 0 00-.759.786c0 .435.34.787.759.787v-.001z",
    fill: "white"
  }));
};

SvgPoa.displayName = "SvgPoa";
SvgPoa.defaultProps = {
  size: 24,
  color: "#444FA1"
};

function _extends$iD() { _extends$iD = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iD.apply(this, arguments); }
var Svg$iz = styled("svg")({
  flex: "none"
}, space, color);

var SvgPoe = function SvgPoe(props) {
  return createElement(Svg$iz, _extends$iD({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.569 5.799a3.212 3.212 0 00-2.262-.924 3.2 3.2 0 00-2.262.924l-7.393 7.28a.375.375 0 00-.108.286v3.747L4.5 19.125h1.127l1.514-1.49h3.783a.383.383 0 00.283-.122l7.355-7.243.007-.008a3.123 3.123 0 00.931-2.219 3.128 3.128 0 00-.931-2.242v-.002zm-4.3.846l.313-.307a2.44 2.44 0 011.724-.702c.648 0 1.259.25 1.725.702.007.007.015.02.029.028.443.452.683 1.039.683 1.67 0 .637-.255 1.239-.712 1.698l-.32.315h-2.86l1.878-1.85a.386.386 0 00.014-.536c-.008-.008-.008-.015-.015-.022a.404.404 0 00-.56 0l-1.891 1.863v-2.86l-.007.001zm-6.357 10.23l1.542-1.519h2.86l-1.543 1.52H7.912zm4.488-4.427l1.827-1.799h2.859l-1.826 1.799H12.4zm2.234.616l-1.703 1.677h-2.858l1.702-1.677h2.859zM11.819 9.06l1.833-1.806v2.852l-1.833 1.813V9.059zm-2.328 2.292l1.703-1.676v2.851L9.49 14.204V11.35zm-2.182 2.15l1.564-1.533v2.851l-1.564 1.533v-2.851z",
    fill: "white"
  }));
};

SvgPoe.displayName = "SvgPoe";
SvgPoe.defaultProps = {
  size: 24,
  color: "#DCD6CC"
};

function _extends$iE() { _extends$iE = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iE.apply(this, arguments); }
var Svg$iA = styled("svg")({
  flex: "none"
}, space, color);

var SvgPoly = function SvgPoly(props) {
  return createElement(Svg$iA, _extends$iE({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M20.25 8.447l-.033-.53-.163.445-.92.772-1.053.157-.315-.292.923-1.225.945-.274-1.023.021-1.487 1.036-1.394-.096-1.958-.961-1.156.224-3.608 2.885-1.739.537-.716.699-1.279.017-.634 1.133-.89.246.841.11.783-1.015 1.209.242-.023 1.086-.603 1.563-.345 1.446-.372.577.942-.2-.107-.59.801-1.589 1.542-.598.597-.95 1.009-.706 2.002.281 2.017-.85-.341 1.345-.897.079-.256 1.104.767-.492 1.272-.53.994-1.5.063-.708.534.53 1.553.937.883-.403-.052-1.979-.256-.766 1.153-.281.79-.937z",
    fill: "white"
  }));
};

SvgPoly.displayName = "SvgPoly";
SvgPoly.defaultProps = {
  size: 24,
  color: "#4C5A95"
};

function _extends$iF() { _extends$iF = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iF.apply(this, arguments); }
var Svg$iB = styled("svg")({
  flex: "none"
}, space, color);

var SvgPot = function SvgPot(props) {
  return createElement(Svg$iB, _extends$iF({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M9.025 13.635l-.293 1.49-.532 2.738c-.015.083-.036.139-.141.137-.662-.01-1.323-.015-1.985-.023-.015 0-.032-.01-.074-.026l1.492-7.455H6.236c.003-.055.001-.088.007-.12.077-.403.16-.805.23-1.209.02-.112.07-.14.175-.14.308.003.615-.008.921.002.147.005.203-.037.231-.181.171-.891.354-1.78.53-2.669.02-.106.044-.178.182-.178 1.506.004 3.013-.01 4.519.01.879.01 1.76.056 2.625.233.298.062.6.141.876.264.793.353 1.271.963 1.404 1.809.206 1.313-.072 2.52-.915 3.571-.623.774-1.476 1.209-2.43 1.473-.755.209-1.531.274-2.313.275-1.016.003-2.032 0-3.048 0h-.204v-.001zm.416-2.053h.212c1.075 0 2.15.002 3.225-.002.229 0 .46-.01.688-.037.868-.104 1.527-.52 1.948-1.275.181-.328.242-.708.172-1.076-.088-.523-.4-.864-.93-.96a7.37 7.37 0 00-1.177-.128c-1.104-.02-2.208-.012-3.313-.015-.04 0-.08.006-.133.011l-.183.936h3.068l-.282 1.454H9.658l-.217 1.091z",
    fill: "white"
  }));
};

SvgPot.displayName = "SvgPot";
SvgPot.defaultProps = {
  size: 24,
  color: "#105B2F"
};

function _extends$iG() { _extends$iG = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iG.apply(this, arguments); }
var Svg$iC = styled("svg")({
  flex: "none"
}, space, color);

var SvgPowr = function SvgPowr(props) {
  return createElement(Svg$iC, _extends$iG({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M20.996 11.966a.154.154 0 01-.085.173l-.057.027-1.73 1.734.67 2.508a.155.155 0 01-.108.19l-2.407.645-.663 2.483a.154.154 0 01-.188.11l-2.543-.683-1.798 1.802a.153.153 0 01-.217 0l-1.777-1.781-2.462.661a.152.152 0 01-.161-.055.154.154 0 01-.026-.053l-.665-2.483-2.406-.646a.152.152 0 01-.113-.13.154.154 0 01.005-.06l.648-2.427-1.867-1.873a.154.154 0 010-.218l1.816-1.821-.65-2.427a.154.154 0 01.11-.19l2.517-.676.655-2.452a.155.155 0 01.189-.11l2.38.64 1.806-1.81a.158.158 0 01.218 0l1.828 1.831 2.461-.661a.154.154 0 01.188.109l.018.065.008.03.63 2.358 2.517.676c.083.023.13.107.109.189l-.67 2.508 1.692 1.697a.154.154 0 01.128.119zm-1.964 1.59l1.01-1.011-1.138.53.128.481zm.368 2.57l-.527-1.974-1.048 1.05 1.575.924zm-1.657-.615l-.371 1.389 1.878-.505-1.507-.883v-.001zm-1.349 3.852l.543-2.027-1.481.397.938 1.63zm-1.878-.844l-.38.382 1.492.4-1.112-.782zm-2.384 1.955l1.41-1.414-1.41-.379v1.793zm-.307-1.765l-1.389.372 1.388 1.393v-1.765zm-3.892.726l1.91-.512-1.024-1.026-.886 1.538zm-.81-2.1l.424 1.586.127-1.437-.551-.149zm-2.318-.94l1.883.505-.375-1.4-1.508.894zm1.356-1.163l-.996-1-.506 1.89 1.502-.89zm-2.61-3.053l1.455 1.458.389-1.458H3.55zm1.56-1.181l-.157-.585-1.226 1.229 1.383-.644zm-.504-3.076l.506 1.895 1.012-1.015-1.518-.88zm1.753.645l.387-1.446-1.987.534 1.59.921.01-.01zm1.329-3.78l-.507 1.897 1.385-.372-.878-1.525zm1.757.687l.366-.368-1.437-.386 1.07.754zm2.379-1.949l-1.418 1.421 1.418.381V3.525zm.307 1.83l1.44-.387-1.44-1.443v1.83zm4.047-.768l-2.013.54 1.079 1.082.934-1.622zm.227 1.971l.471.126-.362-1.355-.109 1.229zm2.888 1.095l-1.982-.532.383 1.434 1.598-.903v.001zM17.85 8.821l1.074 1.076.53-1.982-1.604.906zm2.581 3.023l-1.347-1.35-.362 1.35h1.71zm-1.774.308l.165.619 1.328-.619H18.657zm-.233.804l.115-.052-.05-.188-.064.24zm-.103.389l-.338 1.26.798-.798-.16-.602-.3.14zm-.93 2.292l-1.713 1.716 1.35-.362.362-1.354zm-2.151 1.72l2.31-2.315.407-1.528-3.887 1.812 1.17 2.031zm-.066.503l-.436.437 1.158.815-.722-1.252zm-.818.169l.126.088.167-.168-.293.08zm-.388.103l-1.344.361 1.17.315.467-.47-.292-.206h-.001zm-2.533.361l-2.165-.581.915.918 1.25-.336zm-3.417-1.4l-.015.16.237.063-.222-.223zm-.285-.285L6.707 15.78l.324 1.213.67.18.032-.364v-.002zm-1.62-2.06l-.543-2.032-.314 1.173.857.858zm-.77-2.877l-.152-.57-1.225.57h1.378zm.349-.805l-.218.102.096.357.122-.459zm.104-.388l.405-1.516-.996.999.188.705.403-.188zm.999-2.548l1.394-1.397-1.1.295-.294 1.103V8.13zm2.013-2.017l.417-.418-1.107-.78.69 1.198zm.87-.1l-.197-.138-.263.262.46-.123zm.388-.104l1.37-.367-1.28-.344-.455.455.365.256zm2.557-.367l2.078.558-.878-.88-1.2.322zm3.433 1.48l.021-.234-.347-.093.326.327zm.284.285l.961.964-.332-1.243-.59-.159-.04.438zm1.555 1.995l.594 2.223.343-1.283-.937-.939zm-4.33 5.146l.35.61 4.146-1.931.26-.974h-2.41l-.123 1.375a.153.153 0 01-.213.128.154.154 0 01-.072-.062l-.748-1.268-1.19 2.122zm-.588 1.048l.659-.308-.247-.427-.412.735zm-2.615-.278l3.665 2.58.963-.258-1.2-2.083-1.116.52a.153.153 0 01-.2-.216l.7-1.247-2.422.027-.39.676v.001zm-.155.268L9.03 17.529l3 .805 1.61-.432-3.433-2.416zm.187-.941l-.972.011.687.484.285-.495zm-1.942-2.366l-.4 4.514.701.701 1.202-2.086-1.101-.774a.154.154 0 01.087-.281l1.488-.017-1.215-2.057h-.762zm-.308 0h-2.4l.803 3.004 1.222 1.225.375-4.229zm.887-.308l-.48-.812-.071.812h.55zm1.087-2.866l-4.062 1.893-.26.973h2.375l.117-1.316a.154.154 0 01.285-.065l.752 1.273L10.5 9.668l-.383-.663h.001zm-.154-.268L8.74 6.615 6.636 8.726 6.16 10.51l3.804-1.772zm3.755.121l-3.712-2.613-.972.261 1.208 2.1 1.2-.56a.154.154 0 01.2.217l-.703 1.25 2.417-.026.362-.629zm.155-.268l1.193-2.072-3.038-.816-1.635.439 3.48 2.449zm-.16.892l.878-.009-.62-.437-.258.447zm1.887 2.671h-.592l.515.871.078-.871zm-4.926-2.797l.465-.828-.742.346.277.482zm2.673 4.85l1.225-2.186-1.309-2.215-.003-.008-2.495.027-1.26 2.246 1.278 2.162 2.549-.028.015.002zm2.956-6.498l-.366 4.137h2.318l-.796-2.978-1.156-1.16zm-.675 4.137l.392-4.422-.71-.712-1.185 2.057 1.035.727a.155.155 0 01-.088.281l-1.458.016 1.213 2.053h.801zm.475-5.368l.12-1.352-.69 1.198.57.154zM7.976 17.565l-.124 1.393.712-1.235-.588-.158z",
    fill: "white"
  }));
};

SvgPowr.displayName = "SvgPowr";
SvgPowr.defaultProps = {
  size: 24,
  color: "#05BCA9"
};

function _extends$iH() { _extends$iH = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iH.apply(this, arguments); }
var Svg$iD = styled("svg")({
  flex: "none"
}, space, color);

var SvgPpc = function SvgPpc(props) {
  return createElement(Svg$iD, _extends$iH({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.75 5.625c9.07.335 12.567 5.78 10.811 10.637-.497 1.352-1.026 2.093-2.137 2.863.045-.195.091-.39.127-.59.657-3.79-.588-8.35-6.684-10.87 4.85 2.886 6.806 8.021 4.545 11.336-3.85.605-6.662-2.682-6.662-6.47V5.626z",
    fill: "white"
  }));
};

SvgPpc.displayName = "SvgPpc";
SvgPpc.defaultProps = {
  size: 24,
  color: "#3CB054"
};

function _extends$iI() { _extends$iI = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iI.apply(this, arguments); }
var Svg$iE = styled("svg")({
  flex: "none"
}, space, color);

var SvgPpp = function SvgPpp(props) {
  return createElement(Svg$iE, _extends$iI({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M17.484 5.283a.997.997 0 010 1.385l-2.348 2.406a.969.969 0 01-.256.188.893.893 0 01-1.082-.158L11.46 6.708l-4.504 4.62 1.088 1.112a.878.878 0 01-.006 1.215.829.829 0 01-1.186.005l-1.73-1.765a.88.88 0 010-1.224l.012-.011a.14.14 0 00.011-.011l5.718-5.865.002-.001.018-.02A.86.86 0 0112 4.658a.923.923 0 01.15.125l2.238 2.29 1.745-1.79a.942.942 0 011.352 0h-.001zm1.393 6.827a.874.874 0 01.001 1.22l-.012.011a.15.15 0 00-.011.011l-5.74 5.886a.86.86 0 01-1.316-.091l-2.188-2.238-1.735 1.783a.94.94 0 01-.924.257.97.97 0 01-.678-.694.994.994 0 01.251-.947l2.347-2.405a.936.936 0 01.492-.272.899.899 0 01.84.252l2.344 2.399 4.496-4.608-1.088-1.113a.878.878 0 01.005-1.215.828.828 0 011.187-.005l1.705 1.744.001.001.003.002.02.022z",
    fill: "white"
  }));
};

SvgPpp.displayName = "SvgPpp";
SvgPpp.defaultProps = {
  size: 24,
  color: "#348F8D"
};

function _extends$iJ() { _extends$iJ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iJ.apply(this, arguments); }
var Svg$iF = styled("svg")({
  flex: "none"
}, space, color);

var SvgPpt = function SvgPpt(props) {
  return createElement(Svg$iF, _extends$iJ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.037 6.237c-.987 0-1.788-.55-1.788-1.228 0-.68.8-1.229 1.788-1.229.987 0 1.786.55 1.786 1.229 0 .678-.8 1.228-1.786 1.228zm-.925 13.713V6.828h3.984c.148 0 .252.11.252.258v7.281c0 .147-.105.273-.252.273H12.9v5.31c0 .148-.113.282-.26.282h-1.251a.287.287 0 01-.277-.281v-.001zm-.672-5.31H8.933a.284.284 0 01-.281-.274v-7.28c0-.148.133-.258.28-.258h1.508v7.812z",
    fill: "white"
  }));
};

SvgPpt.displayName = "SvgPpt";
SvgPpt.defaultProps = {
  size: 24,
  color: "#152743"
};

function _extends$iK() { _extends$iK = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iK.apply(this, arguments); }
var Svg$iG = styled("svg")({
  flex: "none"
}, space, color);

var SvgPrl = function SvgPrl(props) {
  return createElement(Svg$iG, _extends$iK({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M18.21 15.65c.064.646-.138 1.283-.763 1.697-.299.2-.633.278-.991.278-2.97-.002-5.94 0-8.91-.002a1.71 1.71 0 01-1.671-1.128c-.093-.272-.107-.55-.096-.845h1.807c.174 0 .29-.127.25-.286a.375.375 0 00-.104-.16c-.737-.736-1.476-1.47-2.215-2.204l-.677-.674c-.254-.251-.376-.555-.331-.909.022-.174.079-.345.135-.513a7.577 7.577 0 011.475-2.587 7.701 7.701 0 013.512-2.322 7.463 7.463 0 012.754-.357c2.202.132 4.036 1.027 5.489 2.678a7.396 7.396 0 011.582 2.932c.113.404.006.768-.293 1.066-.562.56-1.13 1.117-1.694 1.676-.415.41-.829.822-1.243 1.233-.136.135-.123.316.033.396a.35.35 0 00.152.03c.57.002 1.141.001 1.712.001h.088zm-11.879.405c.009.242.073.456.214.644.234.312.55.459.942.458h9.02c.036 0 .071-.002.105-.004a1.08 1.08 0 00.843-.457 1.07 1.07 0 00.208-.64H6.331zm7.702-5.81l.05.032c.74.552 1.21 1.275 1.389 2.18.097.492.084.983-.032 1.471a3.49 3.49 0 01-.562 1.232.266.266 0 00-.051.227c.052.204.283.27.436.12.225-.217.445-.44.668-.66l2.691-2.676a.75.75 0 00.233-.694c-.022-.117-.064-.232-.104-.344a8.175 8.175 0 00-1.266-2.344 6.836 6.836 0 00-1.478-1.413.14.14 0 01-.055-.085.51.51 0 00-.708-.419.132.132 0 01-.095.001 6.84 6.84 0 00-2.52-.651 7.949 7.949 0 00-2.078.117 6.696 6.696 0 00-1.652.544.133.133 0 01-.13 0 .5.5 0 00-.72.434c0 .045-.017.071-.052.098-.23.182-.468.356-.682.554-1.008.934-1.694 2.074-2.134 3.366-.111.327-.037.607.206.85l2.67 2.654c.224.223.447.445.672.666.13.128.326.105.41-.045.058-.105.044-.207-.024-.303a3.46 3.46 0 01-.64-1.69 3.43 3.43 0 01.173-1.484c.038-.109.084-.216.129-.328l1.059.623a2.335 2.335 0 001.036 2.94 2.345 2.345 0 002.927-.554c.345-.41.527-.886.538-1.423.015-.8-.316-1.437-.938-1.933l.634-1.063zm3.498 2.28c-.02-.125-.037-.24-.057-.354a5.247 5.247 0 00-.369-1.23c-.018-.045-.023-.08 0-.126a.497.497 0 00-.277-.68.508.508 0 00-.685.508.493.493 0 00.364.44.203.203 0 01.155.136c.228.558.355 1.137.373 1.74a.147.147 0 01-.033.098c-.343.345-.689.688-1.033 1.03-.012.011-.026.02-.031.026.328-1.628-.072-3.038-1.379-4.1-1.358-1.103-2.872-1.188-4.461-.47l-.485-.839c.173-.077.34-.157.51-.228.438-.175.899-.288 1.369-.337.06-.007.104.003.152.051a.496.496 0 00.714-.004.143.143 0 01.13-.048 5.047 5.047 0 012.989 1.366c.067.064.131.13.197.196.116.117.244.12.363.006l.788-.762.073-.07c.095.12.19.235.279.355a7.733 7.733 0 011.162 2.288.26.26 0 01-.068.281l-.693.69-.047.037zm-.95-3.983l-.673.652c-.02-.017-.039-.033-.056-.05a5.49 5.49 0 00-2.515-1.38c-.264-.064-.538-.094-.807-.137-.048-.008-.08-.018-.11-.063a.509.509 0 00-.85.002.146.146 0 01-.093.057c-1.735.19-3.097 1.003-4.095 2.424a.136.136 0 01-.102.062.5.5 0 00-.382.72.123.123 0 010 .09c-.21.479-.35.984-.417 1.502-.004.033-.01.064-.018.109l-.065-.06c-.214-.214-.427-.43-.645-.641-.1-.098-.133-.201-.086-.338.505-1.447 1.307-2.686 2.558-3.61.014-.011.029-.02.042-.032.045-.04.087-.05.153-.033a.502.502 0 00.63-.393.115.115 0 01.053-.07c.324-.16.662-.29 1.01-.387.82-.233 1.659-.294 2.507-.233a6.26 6.26 0 012.253.576c.045.02.068.045.075.097a.504.504 0 00.69.393c.024-.009.063-.01.081.003.307.212.589.452.85.716.005.006.007.013.013.024zm-2.747 4.636c.005.998-.818 1.82-1.827 1.826a1.837 1.837 0 01-1.842-1.82c-.005-1 .817-1.82 1.828-1.826a1.83 1.83 0 011.84 1.819zm-5.774.947l-.474-.476c-.195-.195-.391-.387-.585-.583a.147.147 0 01-.042-.096c.018-.62.153-1.231.396-1.802a.107.107 0 01.085-.071c.337-.079.494-.373.374-.694-.007-.022-.007-.056.004-.075A4.97 4.97 0 019.21 8.956c.002-.002.004-.002.015-.005l.199.34.417.72c.084.146.193.179.338.09.378-.229.798-.383 1.235-.452a3.532 3.532 0 012.2.34c.007.003.013.008.026.019l-.629 1.055c-1.189-.446-2.171-.18-2.965.808l-1.055-.62c.095-.127.184-.25.277-.37.037-.049.08-.094.123-.14.064-.072.064-.113-.002-.18a17.493 17.493 0 00-.175-.176c-.08-.078-.119-.078-.194.003-.32.343-.577.74-.759 1.171a3.943 3.943 0 00-.298 1.92c.02.21.062.418.097.647zm3.936-6.007a.288.288 0 01-.282-.283.29.29 0 01.285-.28.288.288 0 01.281.283.287.287 0 01-.284.28zm-3.45-1.06a.28.28 0 01.288.275.283.283 0 11-.567 0 .279.279 0 01.28-.276zm8.101 3.825a.279.279 0 01-.005-.558.28.28 0 01.26.383.277.277 0 01-.255.175zm-1.202-3.826c.16 0 .281.12.28.28a.278.278 0 01-.277.277.28.28 0 01-.111-.537.276.276 0 01.108-.02zM7.63 10.603a.278.278 0 01-.282.28.277.277 0 01-.197-.477.278.278 0 01.196-.08.278.278 0 01.283.277z",
    fill: "white"
  }));
};

SvgPrl.displayName = "SvgPrl";
SvgPrl.defaultProps = {
  size: 24,
  color: "#1061E3"
};

function _extends$iL() { _extends$iL = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iL.apply(this, arguments); }
var Svg$iH = styled("svg")({
  flex: "none"
}, space, color);

var SvgPura = function SvgPura(props) {
  return createElement(Svg$iH, _extends$iL({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.394 6h5.823c1.611.095 3.383.758 4.095 2.295.89 1.958.448 4.712-1.558 5.83-1.85 1.057-4.062.64-6.093.727-.054 1 .225 2.165-.472 3.01-.28.406-1.567.888-1.567.888s-.118-1.087-.162-3.533c-.028-.675.082-1.432.662-1.87.679-.584 1.641-.402 2.466-.432 1.245-.033 2.553.158 3.735-.322 1.733-.71 1.796-3.604.049-4.333-1.784-.692-3.755-.063-5.588-.445C8.952 7.582 8.579 6.762 8.394 6zM5.25 9.322c1.522.028 3.048-.053 4.568.039 1.104.084 1.83 1.085 1.945 2.108-1.533-.008-3.07.049-4.603-.019-.942-.054-1.638-.82-1.91-1.663v-.464z",
    fill: "white"
  }));
};

SvgPura.displayName = "SvgPura";
SvgPura.defaultProps = {
  size: 24,
  color: "#333333"
};

function _extends$iM() { _extends$iM = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iM.apply(this, arguments); }
var Svg$iI = styled("svg")({
  flex: "none"
}, space, color);

var SvgQash = function SvgQash(props) {
  return createElement(Svg$iI, _extends$iM({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 3.75a8.25 8.25 0 100 16.5 8.25 8.25 0 000-16.5zm7.83 7.912l-.667.007-.003-.28.668-.005.003.278h-.001zm-.171-1.442l-.662.092-.038-.277.661-.091.039.277zm-.57-1.756l.116.255-.609.276-.115-.254.607-.277h.001zm-.834-1.272l.184.21-.502.441-.184-.21.502-.44zm-.979-1.044l.212.183-.436.505-.212-.182.436-.506zm-1.166-.944l.234.152-.364.56-.234-.152.364-.56zm-1.327-.655l.27.071-.17.646-.27-.072.17-.644v-.001zm-1.46-.359l.279.023-.056.666-.278-.023.056-.666zm-1.51-.176h.28v.668h-.28v-.668zm-1.24.176l.055.665-.279.024-.055-.665.279-.024zm-1.46.359l.17.645-.27.072-.17-.645.27-.072zm-1.326.654l.363.561-.235.152-.363-.56.235-.152zM6.62 6.15l.436.505-.212.182-.435-.505.211-.183zM5.642 7.19l.503.441-.185.21-.502-.44.184-.21V7.19zM4.81 8.463l.607.277-.114.255-.608-.278.115-.254zm-.532 1.48l.662.091-.038.278-.662-.092.038-.278zm-.207 1.44l.668.006-.003.28-.667-.007.002-.28zm.062 1.569l.664-.068.028.278-.664.067-.028-.277zm.302 1.42l.651-.151.064.272-.651.152-.064-.273zm.728 1.698l-.138-.244.58-.331.139.243-.58.332zm.947 1.19l-.204-.192.46-.486.203.192-.46.486zm1.069.95l-.228-.162.388-.544.227.162-.388.544zm1.247.833l-.247-.13.31-.59.248.13-.31.59zm1.381.531l-.276-.046.11-.659.276.047-.11.658zm1.207.227l-.005-.668.28-.003.005.668-.28.003zM5.055 12A6.953 6.953 0 0112 5.055 6.953 6.953 0 0118.945 12 6.953 6.953 0 0112 18.945 6.953 6.953 0 015.055 12zm7.49 7.86l-.01.002-.06-.665.278-.025.009-.002.06.665-.277.026zm1.488-.313l-.116-.657.275-.05.117.66-.276.047zm1.42-.49l-.228-.628.263-.095.228.628-.262.095zm1.262-.773l-.413-.525.219-.174.413.525-.22.174zm1.075-1.047l-.48-.464.194-.202.48.465-.194.2zm.879-1.13l-.54-.393.165-.226.54.393-.165.227zm.714-1.342l-.631-.22.092-.264.63.22-.091.264zm.394-1.522l-.668-.03.013-.28.668.03-.013.28zm-5.125 2.306c.111.12.114.303.004.412-.11.11-.293.104-.412-.01l-.208-.21-.474-.48a2.076 2.076 0 01-.987.2H11.27c-1.18.044-2.271-.546-2.183-2.463.004-.08-.005-1.112-.005-1.194l.002-.774c-.002-1.912.465-2.78 1.754-3.086.146-.035.944-.053 1.096-.053h.068c.153 0 .857.018 1.003.053 1.288.307 1.755 1.174 1.753 3.086l.002.775c0 .082-.008 1.113-.004 1.194.048 1.035-.249 1.485-.718 1.93l.405.41.208.21zm-1.994-.696c.149 0 .297-.021.44-.063l-.268-.27-.208-.211c-.113-.12-.115-.303-.005-.411.11-.11.293-.105.412.008l.208.21.374.38a.956.956 0 00.055-.055c.35-.366.516-.672.483-1.414-.002-.053-.003-.053.002-.985l.002-.238-.001-.523c-.001-.32-.002-.207-.002-.252.001-.847-.095-1.584-.301-1.916-.123-.198-.334-.42-.974-.574-.29-.024-.58-.037-.871-.038h-.07c-.192 0-.837.019-.963.038-.64.154-.852.376-.974.574-.207.332-.303 1.069-.301 1.917l-.002.25v.762c.006.931.006.933.003.985-.034.742.133 1.048.483 1.414.325.34.727.413 1.008.413l.06-.002h1.349l.06.001z",
    fill: "white"
  }));
};

SvgQash.displayName = "SvgQash";
SvgQash.defaultProps = {
  size: 24,
  color: "#1347E8"
};

function _extends$iN() { _extends$iN = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iN.apply(this, arguments); }
var Svg$iJ = styled("svg")({
  flex: "none"
}, space, color);

var SvgQiwi = function SvgQiwi(props) {
  return createElement(Svg$iJ, _extends$iN({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.942 14.584c.039.3-.047.417-.142.417-.095 0-.229-.117-.371-.349-.143-.232-.2-.495-.124-.63.047-.088.152-.127.276-.078.247.097.343.475.361.64zm-1.332.66c.295.252.38.542.228.756a.497.497 0 01-.39.174.672.672 0 01-.448-.165c-.266-.233-.343-.62-.172-.834a.367.367 0 01.306-.135c.152 0 .323.067.476.203zM5.25 11.17C5.25 7.486 8.182 4.5 11.8 4.5c3.62 0 6.552 2.987 6.552 6.67a6.805 6.805 0 01-.924 3.424c-.019.029-.067.019-.076-.02-.228-1.639-1.209-2.54-2.637-2.812-.124-.02-.143-.097.019-.116.438-.039 1.056-.03 1.38.03.02-.171.03-.343.029-.515 0-2.434-1.943-4.412-4.333-4.412s-4.332 1.978-4.332 4.412 1.943 4.412 4.332 4.412h.2a6.061 6.061 0 01-.086-1.193c.01-.271.068-.31.182-.097.6 1.058 1.456 2.008 3.133 2.385 1.37.311 2.741.67 4.217 2.58.133.165-.066.339-.218.203-1.505-1.357-2.876-1.803-4.123-1.803-1.4.01-2.352.195-3.315.195-3.618 0-6.55-2.989-6.55-6.673z",
    fill: "white"
  }));
};

SvgQiwi.displayName = "SvgQiwi";
SvgQiwi.defaultProps = {
  size: 24,
  color: "#FF8C00"
};

function _extends$iO() { _extends$iO = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iO.apply(this, arguments); }
var Svg$iK = styled("svg")({
  flex: "none"
}, space, color);

var SvgQlc = function SvgQlc(props) {
  return createElement(Svg$iK, _extends$iO({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.367 3.752c3.848.207 6.962 2.877 7.726 6.651.1.498.128 1.013.155 1.523.025.45-.268.754-.674.753-.397 0-.658-.288-.667-.735-.073-3.29-2.295-6.004-5.504-6.69-.48-.102-.98-.104-1.471-.16a.662.662 0 01-.61-.693c.01-.36.28-.63.656-.648.13-.006.26 0 .39 0zM11.65 20.25c-3.692-.111-7.013-2.91-7.714-6.534-.106-.555-.147-1.124-.184-1.689-.022-.345.198-.592.518-.675a.633.633 0 01.71.297c.067.128.1.29.102.438.055 3.153 2.187 5.866 5.247 6.621.552.137 1.134.158 1.704.219.326.034.587.255.63.572.041.3-.148.636-.435.707-.185.046-.385.031-.578.044zm.339-11.252c1.633-.005 3.004 1.333 3.015 2.944.004.554-.505.904-.975.665-.255-.13-.364-.345-.375-.632a1.652 1.652 0 00-1.4-1.6 1.643 1.643 0 00-1.872 1.308c-.172.886.383 1.75 1.247 1.936.118.026.24.04.36.047.402.02.684.297.681.675-.003.382-.305.666-.715.67-1.287.01-2.5-.928-2.851-2.206-.525-1.909.91-3.801 2.885-3.807zm5.666 2.818c-.015.127-.01.287-.056.43-.098.302-.42.478-.735.427-.328-.054-.561-.323-.565-.69-.005-.56-.096-1.103-.325-1.61-.76-1.677-2.06-2.576-3.903-2.663-.451-.022-.75-.287-.747-.69.003-.403.305-.667.762-.665 2.753.005 5.158 2.135 5.507 4.878.024.185.04.37.062.582zm-11.296.345c-.038-.305.04-.606.389-.766.459-.213.94.116.949.655a4.313 4.313 0 001.815 3.473 4.284 4.284 0 002.374.784c.582.015.92.437.735.915-.103.27-.331.427-.643.424-1.652-.015-3.045-.634-4.158-1.847a5.494 5.494 0 01-1.46-3.637zm8.651 2.115c-.028.335-.143.548-.395.665-.25.117-.504.1-.705-.086a20.32 20.32 0 01-1.05-1.048c-.233-.248-.21-.64.018-.886.232-.25.648-.301.902-.068.377.343.733.71 1.08 1.085.091.099.117.259.15.337v.001z",
    fill: "white"
  }));
};

SvgQlc.displayName = "SvgQlc";
SvgQlc.defaultProps = {
  size: 24,
  color: "#610089"
};

function _extends$iP() { _extends$iP = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iP.apply(this, arguments); }
var Svg$iL = styled("svg")({
  flex: "none"
}, space, color);

var SvgQrl = function SvgQrl(props) {
  return createElement(Svg$iL, _extends$iP({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M19.221 15.907a.285.285 0 01.279.288v1.43h-4.71l-.017-1.245a.28.28 0 01.1-.213.428.428 0 01.063-.065c2.075-1.448 2.872-4.204 1.906-6.588-.967-2.384-3.429-3.734-5.885-3.225-2.456.508-4.224 2.733-4.224 5.317-.002 1.767.84 3.42 2.25 4.421a.18.18 0 01.072.075.298.298 0 01.172.269l-.018 1.245H4.5v-1.431c0-.159.125-.288.279-.288.154 0 .279.129.279.288v.864h3.601l.01-.538h-.01C6.59 15.008 5.7 12.296 6.462 9.806c.764-2.49 3.003-4.182 5.534-4.182 2.531 0 4.77 1.692 5.533 4.182.763 2.49-.126 5.202-2.197 6.704l.01.547h3.6v-.863a.285.285 0 01.28-.288h-.001zm-3.719-3.882c.621.79.81 1.495.54 1.96-.207.362-.648.557-1.287.557a4.89 4.89 0 01-1.188-.176c-.351 1.226-.919 2.015-1.567 2.015-.648 0-1.215-.79-1.558-2.015a4.892 4.892 0 01-1.188.176c-.64 0-1.08-.195-1.287-.557-.333-.576.045-1.477.909-2.397a5.214 5.214 0 01-.37-.427c-.62-.79-.81-1.487-.54-1.97.208-.362.648-.557 1.288-.557.402.01.801.07 1.188.177.351-1.226.919-2.016 1.567-2.016.648 0 1.215.79 1.558 2.025a4.896 4.896 0 011.188-.176c.64 0 1.08.195 1.287.557.27.483.081 1.18-.54 1.97-.115.149-.238.291-.369.427.131.135.254.277.37.427zm-.738-3.038a5.1 5.1 0 00-1.107.158c.097.44.165.888.207 1.338.355.262.695.548 1.018.855.126-.13.242-.27.35-.4.514-.66.703-1.226.514-1.57-.171-.316-.63-.38-.982-.38zm-1.98 4.004c.26-.158.513-.325.747-.492a10 10 0 00.036-.91c0-.316-.018-.623-.036-.911-.243-.17-.493-.332-.748-.483A15.995 15.995 0 0012 9.777c-.268.125-.53.264-.783.418-.27.157-.514.316-.748.483a9.859 9.859 0 00-.036.91c0 .315.018.623.036.91.487.342.998.646 1.531.91.268-.124.53-.263.783-.417zm.71-.028c-.18.111-.35.223-.53.335-.18.11-.36.213-.54.306.295.133.599.248.909.344.063-.307.117-.633.162-.985zm-1.899.64l-.54-.306c-.18-.111-.36-.223-.532-.334.033.332.087.66.162.985.31-.098.613-.213.91-.345zm-1.477-1.374c-.01-.214-.017-.427-.018-.64 0-.223.01-.428.018-.642a7.882 7.882 0 00-.747.641c.237.228.487.442.747.64zm.405-1.997c.17-.119.344-.23.522-.334.19-.112.37-.214.55-.307a7.911 7.911 0 00-.91-.343 13.05 13.05 0 00-.162.984zm1.891-.641c.18.093.36.195.54.307.18.11.36.223.532.334a7.454 7.454 0 00-.162-.984 8.638 8.638 0 00-.91.343zm1.486 1.365c.009.215.018.418.018.641 0 .223-.01.437-.018.642.26-.214.513-.428.738-.642a7.332 7.332 0 00-.738-.64v-.001zm-1.891-3.808c-.459 0-.927.65-1.234 1.755a9.87 9.87 0 011.234.482c.4-.187.812-.348 1.234-.481-.307-1.106-.784-1.756-1.234-1.756zm-3.736 2.22c-.198.344-.01.92.513 1.56.107.139.225.269.35.408.322-.307.66-.592 1.018-.853.041-.45.11-.897.207-1.338a4.645 4.645 0 00-1.107-.158c-.351 0-.801.066-.981.381zm.981 4.83a4.298 4.298 0 001.107-.168c-.096-.44-.165-.887-.207-1.336a8.915 8.915 0 01-1.027-.855c-.774.827-1.08 1.57-.854 1.978.17.316.63.381.981.381zm2.755 1.84c.45 0 .927-.651 1.234-1.756a9.866 9.866 0 01-1.234-.483c-.4.189-.812.35-1.234.483.307 1.105.784 1.755 1.234 1.755zm3.736-2.22c.19-.335 0-.91-.512-1.57a6.966 6.966 0 00-.351-.4c-.322.308-.66.593-1.018.855-.042.45-.11.897-.207 1.338.361.096.733.15 1.107.157.352 0 .802-.065.982-.38zm-3.736-3.586c.727 0 1.319.606 1.324 1.356 0 .748-.588 1.355-1.312 1.356-.725.002-1.314-.602-1.318-1.35-.003-.747.582-1.357 1.306-1.362zm0 2.369c.535-.005.968-.451.973-1.004 0-.554-.435-1.002-.973-1.002s-.973.448-.973 1.002c0 .555.436 1.004.973 1.004z",
    fill: "white"
  }));
};

SvgQrl.displayName = "SvgQrl";
SvgQrl.defaultProps = {
  size: 24,
  color: "#252525"
};

function _extends$iQ() { _extends$iQ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iQ.apply(this, arguments); }
var Svg$iM = styled("svg")({
  flex: "none"
}, space, color);

var SvgQsp = function SvgQsp(props) {
  return createElement(Svg$iM, _extends$iQ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M8.625 12A3.38 3.38 0 0112 8.625 3.38 3.38 0 0115.375 12c0 .49-.107.954-.296 1.375l-2.227-2.228-1.704 1.705 2.228 2.227a3.352 3.352 0 01-1.376.296A3.379 3.379 0 018.625 12zm8.86 0a5.454 5.454 0 00-.885-2.983l2.15-2.151-1.616-1.616-2.15 2.151A5.454 5.454 0 0012 6.515a5.46 5.46 0 00-2.983.885L6.866 5.25 5.25 6.865l2.151 2.152a5.46 5.46 0 000 5.967l-2.151 2.15 1.615 1.616 2.152-2.151c.859.559 1.882.886 2.983.886a5.454 5.454 0 002.983-.886l2.151 2.151 1.616-1.616-2.151-2.15A5.454 5.454 0 0017.485 12",
    fill: "white"
  }));
};

SvgQsp.displayName = "SvgQsp";
SvgQsp.defaultProps = {
  size: 24,
  color: "#454545"
};

function _extends$iR() { _extends$iR = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iR.apply(this, arguments); }
var Svg$iN = styled("svg")({
  flex: "none"
}, space, color);

var SvgQtum = function SvgQtum(props) {
  return createElement(Svg$iN, _extends$iR({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.985 17.727l-1.48-1.317-2.994 2.246a.6.6 0 01-.115.668.59.59 0 01-.415.176.587.587 0 01-.574-.483h-3.232a.587.587 0 01-.574.483.59.59 0 01-.584-.594.6.6 0 01.053-.248l-2.66-1.98a.576.576 0 01-.802-.027.59.59 0 01-.169-.418c0-.225.123-.42.305-.522l-.978-3.12A.59.59 0 014.125 12a.59.59 0 01.66-.589l.96-3.12a.596.596 0 01-.306-.524.59.59 0 01.584-.594c.152 0 .29.058.393.154l2.68-1.934a.6.6 0 01-.08-.299.59.59 0 01.585-.594c.285 0 .522.208.573.483h3.233a.587.587 0 01.575-.483c.322 0 .583.266.583.594a.6.6 0 01-.071.285l2.662 1.958a.577.577 0 01.403-.164c.322 0 .583.266.583.594a.597.597 0 01-.265.499l.957 3.142a.584.584 0 01.622.592.59.59 0 01-.602.594l-1.123 3.623 1.438 1.279a.863.863 0 01.58-.223c.484 0 .876.399.876.89a.884.884 0 01-.876.892.884.884 0 01-.876-.892c0-.159.04-.307.112-.436zm-4.954.587l1.115-2.511a.595.595 0 01-.192-.292l-2.587.377a.598.598 0 01-.141.296l1.535 2.171a.573.573 0 01.27-.04zm.295.113l2.901-2.177-1.25-.545a.58.58 0 01-.565.221l-1.105 2.487a.563.563 0 01.019.013zm-.799.105l-1.545-2.183a.574.574 0 01-.382 0l-1.545 2.183c.044.056.079.12.1.188h3.27a.596.596 0 01.102-.188zm5.046-6.022a.595.595 0 01-.284-.51c0-.21.106-.394.267-.5l-.904-2.97-.203 2.906c.233.078.402.3.402.564a.594.594 0 01-.397.563l.2 2.914.919-2.967zm-1.69-.958l-1.188-2.329a.575.575 0 01-.3.017l-1.044 2.3a.595.595 0 01.156.718.598.598 0 01-.163.207l1.076 2.29a.578.578 0 01.232.01l1.215-2.333a.596.596 0 01.015-.88zm.28 1.033a.563.563 0 01-.04-.009l-1.213 2.328a.596.596 0 01.182.528l1.305.568-.234-3.415zm-.005-1.169l.215-3.085a.586.586 0 01-.282-.208l-1.004.42a.608.608 0 01-.146.52l1.203 2.356.015-.003zm-3.08 1.17a.578.578 0 01-.252-.013L12.234 15.4c.048.057.085.121.109.191l2.6-.378a.597.597 0 01.21-.337l-1.075-2.291v.001zm.007-1.17l1.048-2.308a.596.596 0 01-.197-.362l-2.606-.379a.596.596 0 01-.123.188l1.604 2.877a.575.575 0 01.275-.016h-.001zm-.512 1.01a.596.596 0 01-.176-.426c0-.16.063-.307.165-.413l-1.605-2.879a.575.575 0 01-.276.014l-1.655 2.87a.598.598 0 01-.011.827l1.626 2.794a.576.576 0 01.352.017l1.58-2.805zm-8.532.063l.931 2.974.22-2.882a.593.593 0 01-.46-.581.593.593 0 01.47-.583l-.227-2.875-.918 2.981a.596.596 0 01.237.477c0 .203-.101.383-.253.489zm2.916 2.27a.577.577 0 01.26.008l1.028-2.295A.596.596 0 019.017 12c0-.186.084-.352.215-.46l-1.044-2.3a.578.578 0 01-.22.004L6.71 11.562a.598.598 0 01.01.867l1.238 2.33h-.001zM8.2 15.92a.576.576 0 01-.585-.205l-1.013.441a.61.61 0 01-.028.274l2.681 1.996a.51.51 0 01.024-.017l-1.08-2.49v.001zm-.707-.475a.597.597 0 01.2-.56l-1.21-2.277-.235 3.075c.099.042.184.11.246.197l.999-.435zm1.147-.224l2.599.37a.596.596 0 01.147-.234l-1.622-2.787a.574.574 0 01-.25.017l-1.042 2.326c.086.083.144.19.168.308zm-.015.298a.596.596 0 01-.166.262l1.097 2.532a.582.582 0 01.265.041l1.536-2.17a.597.597 0 01-.141-.295l-2.591-.37zM7.498 8.528L6.5 8.111a.588.588 0 01-.25.204l.24 3.039 1.212-2.232a.597.597 0 01-.204-.593zm.712-.446l1.032-2.43-2.665 1.925c.027.082.037.17.027.257l1.027.43a.578.578 0 01.58-.182zm.437.655a.596.596 0 01-.197.371l1.047 2.308a.578.578 0 01.283.018l1.636-2.839a.596.596 0 01-.165-.23l-2.604.372zm-.18-.512c.063.06.112.135.145.217l2.598-.37a.596.596 0 01.12-.299L9.838 5.637a.574.574 0 01-.293.049l-1.077 2.54h-.001zm6.992-.158a.581.581 0 01.501.208l1.02-.426a.61.61 0 01.022-.26l-2.647-1.946 1.103 2.424h.001zm-.492.383a.594.594 0 01.217-.282l-1.132-2.484a.58.58 0 01-.307-.047l-1.493 2.136a.607.607 0 01.12.3l2.595.377zm-1.452-2.997a.597.597 0 01-.088-.173h-3.272a.598.598 0 01-.09.172l1.496 2.14a.573.573 0 01.458 0l1.496-2.14z",
    fill: "white"
  }));
};

SvgQtum.displayName = "SvgQtum";
SvgQtum.defaultProps = {
  size: 24,
  color: "#2E9AD0"
};

function _extends$iS() { _extends$iS = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iS.apply(this, arguments); }
var Svg$iO = styled("svg")({
  flex: "none"
}, space, color);

var SvgR = function SvgR(props) {
  return createElement(Svg$iO, _extends$iS({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.875 18.479l2.6-1.36V8.06l3.714 2.083-2.785 1.45v2.99l6.221 4.168v-2.809l-3.807-2.627 3.157-1.631v-2.9l-6.5-3.533-2.6 1.359v11.87z",
    fill: "white"
  }));
};

SvgR.displayName = "SvgR";
SvgR.defaultProps = {
  size: 24,
  color: "#771A4E"
};

function _extends$iT() { _extends$iT = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iT.apply(this, arguments); }
var Svg$iP = styled("svg")({
  flex: "none"
}, space, color);

var SvgRads = function SvgRads(props) {
  return createElement(Svg$iP, _extends$iT({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.603 5.746a2.856 2.856 0 110 5.712 2.856 2.856 0 010-5.712zm2.855 9.652a2.855 2.855 0 11-2.856-2.856 3.94 3.94 0 003.94-3.94 2.856 2.856 0 112.856 2.857 3.94 3.94 0 00-3.94 3.94zm3.94 2.856a2.856 2.856 0 110-5.712 2.856 2.856 0 010 5.712zm0-1.995a.86.86 0 100-1.721.86.86 0 000 1.721zm-6.795 0a.86.86 0 100-1.722.86.86 0 000 1.722zm6.795-6.796a.86.86 0 100-1.722.86.86 0 000 1.722zm-6.795 0a.861.861 0 100-1.722.861.861 0 000 1.722z",
    fill: "white"
  }));
};

SvgRads.displayName = "SvgRads";
SvgRads.defaultProps = {
  size: 24,
  color: "#9D4BEF"
};

function _extends$iU() { _extends$iU = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iU.apply(this, arguments); }
var Svg$iQ = styled("svg")({
  flex: "none"
}, space, color);

var SvgRcn = function SvgRcn(props) {
  return createElement(Svg$iQ, _extends$iU({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M10.77 4.97c.638-.118 1.29-.105 1.935-.072.744.087 1.49.243 2.174.55a7.23 7.23 0 013.317 2.798c.294.43.492.91.691 1.389.185-.294.35-.6.51-.908a.416.416 0 01.383-.249.437.437 0 01.468.383c.018.18-.095.335-.169.49-.234.473-.536.91-.849 1.336-.058.061-.034.147-.027.222.348 2.052-.314 4.237-1.725 5.784a7.351 7.351 0 01-2.983 2.002c-1.318.462-2.77.566-4.134.243-1.977-.428-3.726-1.732-4.72-3.461-.218-.35-.356-.74-.528-1.111-.188.288-.347.592-.507.895a.483.483 0 01-.398.266c-.286 0-.545-.308-.43-.582a7.516 7.516 0 01.96-1.578c.08-.085.07-.205.054-.31-.14-.903-.099-1.824.12-2.71C5.49 7.852 7.56 5.77 10.07 5.122c.232-.055.465-.113.701-.153zM8.999 6.478a6.424 6.424 0 00-2.956 3.249 6.355 6.355 0 00-.434 2.623c.14-.105.275-.22.402-.342.746-.666 1.62-1.182 2.533-1.593 1.697-.771 3.566-1.104 5.423-1.194-.628-.65-1.309-1.251-1.936-1.902.198-.218.412-.419.627-.62.244.22.469.46.707.686.772.768 1.568 1.515 2.328 2.294-.81.807-1.641 1.595-2.451 2.403-.068.064-.14.125-.215.181-.204-.205-.44-.385-.604-.626.498-.522 1.065-.98 1.543-1.52-.857.012-1.709.133-2.547.3-.678.12-1.329.35-1.979.568-1.362.51-2.618 1.322-3.576 2.41-.057.056-.048.14-.034.21.114.486.327.94.561 1.38.773 1.393 2.108 2.469 3.642 2.955.897.276 1.854.383 2.787.253a6.445 6.445 0 003.505-1.602c1.398-1.233 2.183-3.111 2.062-4.956-.148.115-.28.246-.418.37a10.058 10.058 0 01-3.183 1.85 14.863 14.863 0 01-4.745.899c.141.184.315.339.48.503.483.471.96.948 1.451 1.412-.189.223-.41.417-.618.62-.209-.17-.39-.367-.585-.554-.73-.708-1.453-1.425-2.182-2.136a2.38 2.38 0 01-.278-.3c.316-.34.679-.632 1.002-.963.555-.537 1.095-1.088 1.657-1.618.21.204.43.399.617.625-.5.517-1.031 1.004-1.537 1.515.555.027 1.102-.068 1.653-.12.397-.042.788-.132 1.18-.214 2.014-.465 3.975-1.421 5.327-2.997-.518-2.238-2.42-4.08-4.685-4.6-1.508-.384-3.153-.165-4.524.55z",
    fill: "white"
  }));
};

SvgRcn.displayName = "SvgRcn";
SvgRcn.defaultProps = {
  size: 24,
  color: "#3555F9"
};

function _extends$iV() { _extends$iV = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iV.apply(this, arguments); }
var Svg$iR = styled("svg")({
  flex: "none"
}, space, color);

var SvgRdd = function SvgRdd(props) {
  return createElement(Svg$iR, _extends$iV({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    opacity: 0.75,
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.52 20.25c-4.29 0-7.77-3.445-7.77-7.694 0-4.248 3.48-7.693 7.77-7.693 4.293 0 7.772 3.445 7.772 7.693 0 4.25-3.48 7.694-7.772 7.694zm1.343-13.183c1.812.742 3.114 2.138 4.038 4.019l.697-.486c-.783-1.884-2.23-3.364-4.557-4.324l-.178.791z",
    fill: "white"
  }), createElement("path", {
    d: "M20.244 6.99c0-1.789-1.466-3.24-3.274-3.24-1.807 0-3.273 1.451-3.273 3.24 0 .172.013.342.04.51 1.09.635 1.965 1.546 2.665 2.683.187.032.378.05.568.05 1.808 0 3.274-1.452 3.274-3.242z",
    fill: "white"
  }));
};

SvgRdd.displayName = "SvgRdd";
SvgRdd.defaultProps = {
  size: 24,
  color: "#E30613"
};

function _extends$iW() { _extends$iW = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iW.apply(this, arguments); }
var Svg$iS = styled("svg")({
  flex: "none"
}, space, color);

var SvgRdn = function SvgRdn(props) {
  return createElement(Svg$iS, _extends$iW({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.5 4.504h6.083c.074-.022.111.045.16.083a11.154 11.154 0 011.534 1.792 11.36 11.36 0 011.479 2.96 9.995 9.995 0 01.487 3.46h-3.101a3.75 3.75 0 00.017-.467c-.033-1.104-.373-2.186-.91-3.145-.573-1.026-1.374-1.912-2.285-2.648-.991-.802-2.107-1.435-3.27-1.946-.064-.03-.132-.054-.194-.089zM9.752 10c1.04 1.882 2.079 3.765 3.116 5.65.25.454.502.907.75 1.362-1.291.827-2.578 1.66-3.868 2.488V10h.002z",
    fill: "white"
  }));
};

SvgRdn.displayName = "SvgRdn";
SvgRdn.defaultProps = {
  size: 24,
  color: "#2A2A2A"
};

function _extends$iX() { _extends$iX = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iX.apply(this, arguments); }
var Svg$iT = styled("svg")({
  flex: "none"
}, space, color);

var SvgRep = function SvgRep(props) {
  return createElement(Svg$iT, _extends$iX({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.437 12.234a3.21 3.21 0 00-1.073-1.467l-.005-.006a3.116 3.116 0 00-.16-.113l-.01-.008a3.613 3.613 0 00-.164-.101l-.015-.009a1.912 1.912 0 00-.167-.086l-.017-.01a4.515 4.515 0 00-.177-.078l-.02-.008a3.253 3.253 0 00-.596-.183c-.118.214-.27.407-.449.573.421.033.828.168 1.186.392l.02.012.1.068.044.031.089.068.05.04c.027.022.052.045.077.068l.051.049.07.07.051.055.062.073.049.06.056.076c.019.024.032.044.047.066l.05.076.043.072.044.077c.015.025.027.052.04.08.013.026.026.049.037.074.014.034.028.067.04.1.072.178.122.364.15.553l.083.303c.034.126.353 1.242 1.091 1.617.847.435 1.968.971 2.41 1.183l-5.825 3.42v-2.343c0-.37.75-.803 1.097-.955l.02-.012c.072-.035.143-.073.21-.114l.03-.014c.15-.091.293-.193.427-.306l.036-.032.041-.037c.043-.038.084-.077.124-.117l.021-.02c.044-.044.089-.086.128-.138l.037-.042c.033-.039.064-.079.095-.12l.027-.033c.037-.05.072-.1.106-.152l.012-.015c.047-.073.088-.146.132-.222a3.315 3.315 0 01-.418-.642c-.046.13-.104.256-.172.377a3.719 3.719 0 01-.088.153l-.014.02a2.675 2.675 0 01-.089.124l-.027.034a2.06 2.06 0 01-.095.115l-.019.021a2.593 2.593 0 01-.764.574l-.054.028c-.148.065-1.45.642-1.45 1.52v2.345l-5.843-3.426c.376-.23 1.474-.868 2.377-1.15.353-.107 1.103.355 1.528.695l.026.022c.056.053.115.103.177.15l.021.02c.135.107.279.204.43.29l.101.054.02.01c.099.05.199.095.302.135l.045.017.03.012c.148.054.3.096.454.128.12-.216.277-.411.461-.576a2.623 2.623 0 01-.72-.158l-.04-.015-.076-.03-.04-.017-.074-.035a2.598 2.598 0 01-.483-.304l-.233-.207a4.28 4.28 0 00-.69-.484c-.577-.323-1.06-.428-1.431-.314-.772.239-1.643.702-2.173 1.008l5.833-10.288v4.506c0 .16-.24.576-1.042.93l-.055.03a3.143 3.143 0 00-.228.122l-.015.007a3.235 3.235 0 00-.674.528l-.007.008c-.076.078-.148.16-.215.245l-.009.011a3.929 3.929 0 00-.095.127l-.01.015c-.028.04-.055.082-.082.123l-.008.013a2.767 2.767 0 00-.076.13l-.018.03c-.021.042-.043.087-.065.126l-.01.02-.054.12-.019.046c-.017.041-.033.086-.049.127l-.015.045a1.716 1.716 0 00-.031.098l-.016.053c-.043.151-.074.305-.094.46l-.007.07a1.893 1.893 0 00-.008.095c-.002.033 0 .064-.006.096-.005.032 0 .039 0 .06v.07c0 .158.012.316.036.473.252.06.495.151.725.27a2.487 2.487 0 01-.113-.7v-.042c0-.057 0-.114.007-.173v-.045c0-.05.01-.099.017-.147v-.021a1.61 1.61 0 01.031-.162l.009-.041c.011-.045.022-.089.037-.133l.009-.028a1.83 1.83 0 01.053-.152l.015-.034.053-.124.014-.032c.024-.048.05-.096.075-.143l.015-.023c.023-.04.048-.08.074-.12l.019-.028c.03-.045.062-.087.096-.133l.006-.008c.032-.041.066-.08.1-.12l.019-.022c.158-.174.34-.326.54-.452l.276-.128c.148-.065 1.444-.659 1.444-1.537V4.955l5.879 10.365c-.525-.252-1.448-.699-2.168-1.065-.41-.21-.691-.95-.763-1.216l-.08-.31a3.083 3.083 0 00-.128-.492l-.006-.003zm3.982 3.262l-6.48-11.419a.65.65 0 00-.568-.327.65.65 0 00-.566.327l-6.473 11.42a.627.627 0 00.233.852l6.478 3.81a.66.66 0 00.666 0l6.477-3.807a.627.627 0 00.233-.851l.002-.005h-.002z",
    fill: "white"
  }));
};

SvgRep.displayName = "SvgRep";
SvgRep.defaultProps = {
  size: 24,
  color: "#602A52"
};

function _extends$iY() { _extends$iY = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iY.apply(this, arguments); }
var Svg$iU = styled("svg")({
  flex: "none"
}, space, color);

var SvgReq = function SvgReq(props) {
  return createElement(Svg$iU, _extends$iY({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.5 4.5h4.955c.677.005 1.18.043 1.512.112A4.042 4.042 0 0116.66 6.44c.689 1.093.779 2.519.255 3.694a4.024 4.024 0 01-2.625 2.235c-.736.209-1.508.131-2.264.145 1.294 2.103 2.585 4.208 3.874 6.313l-1.071.674c-2.247-3.66-3.93-6.405-5.052-8.235 1.195-.006 2.39.009 3.584-.008 1.378-.036 2.583-1.231 2.611-2.582.09-1.168-.682-2.333-1.811-2.717-.312-.12-.803-.175-1.472-.165L7.5 5.791V4.5z",
    fill: "white"
  }));
};

SvgReq.displayName = "SvgReq";
SvgReq.defaultProps = {
  size: 24,
  color: "#6CFCCD"
};

function _extends$iZ() { _extends$iZ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$iZ.apply(this, arguments); }
var Svg$iV = styled("svg")({
  flex: "none"
}, space, color);

var SvgRhoc = function SvgRhoc(props) {
  return createElement(Svg$iV, _extends$iZ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.862 6.93a8.38 8.38 0 014.315-1.65c.159-.032.331.068.326.244.015.42.005.84.005 1.26.01.13-.059.3-.209.303-1.384.153-2.7.719-3.843 1.5-.108.061-.084.201-.075.303.08.737.026 1.479.047 2.217 3.73.011 7.463-.001 11.195.007.177-.016.365.086.35.284.02 1.257.005 2.513.008 3.768.003.683-.142 1.39-.556 1.947-.652.877-1.8 1.403-2.89 1.21-.773-.116-1.44-.595-1.908-1.204a8.405 8.405 0 01-4.383 1.662c-.161.002-.282-.156-.257-.31.005-.44-.01-.881.007-1.32.038-.233.324-.188.495-.227 1.307-.203 2.558-.752 3.627-1.53a28.007 28.007 0 01-.058-2.451c-3.744-.024-7.49-.002-11.234-.012-.165.019-.324-.105-.308-.28-.003-1.322-.002-2.645.002-3.968.007-.691.225-1.39.684-1.917.603-.687 1.514-1.126 2.438-1.072.885.035 1.697.538 2.222 1.236zM5.025 8.911c-.001.775-.002 1.55.002 2.327.925 0 1.849.013 2.774-.008.001-.755.011-1.51-.005-2.267-.014-.724-.669-1.365-1.396-1.35-.71-.029-1.358.593-1.375 1.298zm11.782 3.968c-.008.737-.002 1.474-.005 2.21-.004.295.085.583.255.823.356.508 1.064.73 1.643.505.535-.198.888-.757.882-1.32 0-.739.003-1.477-.003-2.216-.924-.008-1.848-.004-2.772-.003v.001z",
    fill: "white"
  }));
};

SvgRhoc.displayName = "SvgRhoc";
SvgRhoc.defaultProps = {
  size: 24,
  color: "#CC1E46"
};

function _extends$i_() { _extends$i_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i_.apply(this, arguments); }
var Svg$iW = styled("svg")({
  flex: "none"
}, space, color);

var SvgRic = function SvgRic(props) {
  return createElement(Svg$iW, _extends$i_({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.608 15.018c.225-.341.438-.66.639-.96H5.949a.07.07 0 01-.07-.07v-.477a.07.07 0 01.07-.07h2.716c1.453-2.121 2.18-2.995 2.18-3.084 0-.137-.03-.206-.526-.206-.978 0-2.587-.698-2.587-2.604 0-1.038 1.678-2.297 2.658-2.297.454 0 .524.193.315.205-.56.035-1.784 1.152-1.784 2.228 0 .72.64 1.954 2.063 1.954 1.681 0 3.117-2.673 6.609-2.673 2.098 0 2.657 1.64 2.657 2.09 0 .45-.655.686-1.538.686-.884 0-.917-1.577-2.693-1.577-2.788 0-5.163 3.02-6.303 5.278h1.968a.07.07 0 01.07.07v.477a.071.071 0 01-.02.05.072.072 0 01-.05.02H9.425a7.02 7.02 0 00-.345.96h1.973c.038 0 .07.03.07.07v.478a.07.07 0 01-.07.07H8.992c.037.874.77 1.662 2.202 2.364h-5.49c.493-.793.993-1.582 1.5-2.365H5.322a.07.07 0 01-.07-.07v-.477a.07.07 0 01.069-.07h2.288z",
    fill: "white"
  }));
};

SvgRic.displayName = "SvgRic";
SvgRic.defaultProps = {
  size: 24,
  color: "#60E4DD"
};

function _extends$i$() { _extends$i$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i$.apply(this, arguments); }
var Svg$iX = styled("svg")({
  flex: "none"
}, space, color);

var SvgRise = function SvgRise(props) {
  return createElement(Svg$iX, _extends$i$({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M9.454 6.866c-.643 0-1.164-.53-1.164-1.182 0-.654.521-1.184 1.164-1.184.643 0 1.164.53 1.164 1.184 0 .654-.52 1.182-1.164 1.182zM14.585 19.5a1.174 1.174 0 01-1.164-1.183c0-.653.522-1.183 1.164-1.183.644 0 1.165.53 1.165 1.183 0 .654-.521 1.183-1.165 1.183zm-4.654-8.842a1.035 1.035 0 01-1.466-.2A1.074 1.074 0 018.66 8.97l5.369-4.171a1.035 1.035 0 011.466.199 1.074 1.074 0 01-.195 1.49l-5.369 4.17zm.04 4.251a1.035 1.035 0 01-1.466-.199 1.074 1.074 0 01.195-1.49l5.369-4.17a1.034 1.034 0 011.466.198 1.074 1.074 0 01-.195 1.49L9.97 14.909zm0 4.372a1.035 1.035 0 01-1.466-.199 1.074 1.074 0 01.195-1.49l5.369-4.17a1.034 1.034 0 011.466.198 1.074 1.074 0 01-.195 1.49L9.97 19.28z",
    fill: "white"
  }));
};

SvgRise.displayName = "SvgRise";
SvgRise.defaultProps = {
  size: 24,
  color: "#F49352"
};

function _extends$j0() { _extends$j0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j0.apply(this, arguments); }
var Svg$iY = styled("svg")({
  flex: "none"
}, space, color);

var SvgRlc = function SvgRlc(props) {
  return createElement(Svg$iY, _extends$j0({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M17.762 9.665c.043-.043.128-.043.211-.043 1.265 0 2.277 1.07 2.277 2.357 0 1.2-.885 2.143-2.023 2.357h-.254c-.421 0-.843-.129-1.223-.343a.705.705 0 00-.421-.129.839.839 0 00-.463.129c-.296.171-.422.471-.422.814v.386a2.31 2.31 0 01-2.024 2.1h-.253c-.421 0-.843-.128-1.223-.343a.95.95 0 00-.463-.128.843.843 0 00-.464.128c-.295.172-.422.472-.422.815v.385c-.084 1.115-.97 1.972-2.065 2.1h-.211c-1.265 0-2.277-1.072-2.277-2.357.042-1.2.885-2.186 2.024-2.315h.253c.421 0 .843.13 1.222.344.124.087.271.131.422.128a.839.839 0 00.464-.128c.295-.172.421-.472.421-.815-.084-1.242.802-2.357 2.024-2.485h.253c.421 0 .843.128 1.223.342a.953.953 0 00.464.129.84.84 0 00.463-.129c.295-.171.422-.471.422-.814-.084-1.243.843-2.357 2.065-2.486zm-4.847-2.958c.084-.042.127-.042.253-.042 1.265 0 2.277 1.07 2.277 2.357-.042 1.2-.885 2.185-2.024 2.313h-.253c-.422 0-.843-.128-1.223-.342a.705.705 0 00-.421-.129.839.839 0 00-.464.129c-.295.171-.422.471-.422.814v.386c-.084 1.114-.969 1.97-2.066 2.1h-.21c-1.265 0-2.277-1.071-2.277-2.357 0-1.157.843-2.1 1.981-2.271h.254c.421 0 .843.128 1.222.342.123.087.271.132.422.129a.839.839 0 00.463-.129c.296-.171.422-.471.422-.814-.084-1.243.844-2.357 2.066-2.486zM8.277 3.75c1.257 0 2.276 1.037 2.276 2.314 0 1.279-1.02 2.314-2.276 2.314C7.019 8.378 6 7.343 6 6.064 6 4.787 7.02 3.75 8.277 3.75z",
    fill: "white"
  }));
};

SvgRlc.displayName = "SvgRlc";
SvgRlc.defaultProps = {
  size: 24,
  color: "#FFD800"
};

function _extends$j1() { _extends$j1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j1.apply(this, arguments); }
var Svg$iZ = styled("svg")({
  flex: "none"
}, space, color);

var SvgRpx = function SvgRpx(props) {
  return createElement(Svg$iZ, _extends$j1({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M19.272 11.799c.54 0 .978.428.978.956a.967.967 0 01-.978.956.978.978 0 01-.909-.603h-2.79l-1.029 1.83c-.17.301-.634.212-.674-.13l-.231-1.954-.855 6.34c-.057.422-.688.402-.717-.022l-.701-10.25-.743 6.79c-.045.405-.64.426-.712.024l-.787-4.317-.363 1.422a.36.36 0 01-.349.267H4.86a.356.356 0 01-.36-.353c0-.195.161-.352.36-.352h3.27l.704-2.753c.095-.37.636-.35.705.024l.637 3.501.914-8.36c.047-.428.689-.416.718.014l.736 10.755.76-5.643c.056-.412.667-.408.716.005l.436 3.686.588-1.047a.36.36 0 01.316-.182h3.003a.979.979 0 01.909-.604z",
    fill: "white"
  }));
};

SvgRpx.displayName = "SvgRpx";
SvgRpx.defaultProps = {
  size: 24,
  color: "#8D181B"
};

function _extends$j2() { _extends$j2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j2.apply(this, arguments); }
var Svg$i_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgRub = function SvgRub(props) {
  return createElement(Svg$i_, _extends$j2({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.875 11.428h1.323V5.25h3.41c.633 0 1.21.074 1.733.223.522.148.969.375 1.341.678.373.303.665.688.876 1.152.211.465.317 1.02.317 1.666 0 .645-.113 1.207-.335 1.685-.211.46-.523.868-.914 1.19a3.834 3.834 0 01-1.36.708 5.93 5.93 0 01-1.695.232h-1.883v1.957h3v1.278h-3v2.731h-1.49v-2.73H7.875v-1.28h1.323v-1.956H7.875v-1.356zm4.732 0c.858 0 1.532-.203 2.023-.61.49-.406.736-1.023.736-1.85 0-.825-.246-1.426-.736-1.8-.491-.375-1.165-.563-2.022-.563h-1.92v4.823h1.92z",
    fill: "white"
  }));
};

SvgRub.displayName = "SvgRub";
SvgRub.defaultProps = {
  size: 24,
  color: "#64D1FF"
};

function _extends$j3() { _extends$j3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j3.apply(this, arguments); }
var Svg$i$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgRvn = function SvgRvn(props) {
  return createElement(Svg$i$, _extends$j3({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.125 20.25L9.838 7.658l1.523 9.45-4.236 3.142zM9.891 7.586l4.123 9.532-2.582-.045L9.89 7.585v.001zm.062-.072l5.4.767-1.252 8.837-4.149-9.604zm4.245 9.468l1.217-8.62.796 1.011-2.013 7.61zM15.335 8.2l-5.27-.75L14.81 5.89l.525 2.31zm-5.295-.83l3.23-2.24 1.54.678-4.77 1.562zm-.08-.027l.623-1.192 2.634-1.056-3.256 2.248zm.623-1.245l.297-.93 2.17-.073-2.467 1.002zm.28-1.003l.7-.75 1.506.678-2.206.072zm.744-.794l1.05-.515 1.357 1.589L11.607 4.3zm1.2-.452l1.566.686-.28.848-1.287-1.534zm1.338 1.561l.289-.866.35 1.192-.639-.325zm-1.453-1.66h1.147l.568.631a.036.036 0 01-.04.058l-1.675-.689zm1.812.722l2.333.651a.054.054 0 010 .105l-1.982.544-.35-1.3z",
    fill: "white"
  }));
};

SvgRvn.displayName = "SvgRvn";
SvgRvn.defaultProps = {
  size: 24,
  color: "#384182"
};

function _extends$j4() { _extends$j4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j4.apply(this, arguments); }
var Svg$j0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSalt = function SvgSalt(props) {
  return createElement(Svg$j0, _extends$j4({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.375 7.834l4.353 9.16H8.022l4.353-9.16zm0-4.084l-7.125 15H19.5l-7.125-15z",
    fill: "white"
  }));
};

SvgSalt.displayName = "SvgSalt";
SvgSalt.defaultProps = {
  size: 24,
  color: "#1BEEF4"
};

function _extends$j5() { _extends$j5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j5.apply(this, arguments); }
var Svg$j1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSan = function SvgSan(props) {
  return createElement(Svg$j1, _extends$j5({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M20.25 12.03c-.035 4.58-3.748 8.254-8.308 8.22-4.564-.035-8.229-3.764-8.192-8.335.038-4.527 3.76-8.195 8.287-8.165 4.56.03 8.246 3.747 8.213 8.28zm-15.903-.027c.008 4.215 3.418 7.618 7.642 7.628 4.227.007 7.677-3.419 7.662-7.639-.015-4.395-3.656-7.71-7.846-7.638-4.051.07-7.466 3.513-7.458 7.649zm9.664-3.582l-.305.977c-.569-.094-1.095-.206-1.629-.258-.316-.031-.645.051-.767.407-.126.366-.141.755.161 1.037.31.289.675.518 1.016.774.313.236.657.441.93.716.74.747.871 1.653.568 2.63-.18.579-.61.945-1.159 1.167-.84.34-2.27.172-3.073-.368l.352-1.023c.512.135.98.297 1.461.374.46.073.94.002 1.176-.467.237-.472.162-.97-.21-1.349-.286-.293-.645-.515-.98-.759-.224-.162-.474-.29-.691-.459a2.353 2.353 0 01-.716-2.835 1.558 1.558 0 011.102-.923c.941-.224 1.854-.122 2.764.36V8.42zm-6.06 3.443a.953.953 0 01-.943.952.976.976 0 01-.962-.978.971.971 0 01.971-.933.945.945 0 01.934.959zm9.07-.933c.523 0 .913.386.92.912a.953.953 0 01-.957.973.954.954 0 01-.94-.959c0-.548.398-.926.976-.926z",
    fill: "white"
  }));
};

SvgSan.displayName = "SvgSan";
SvgSan.defaultProps = {
  size: 24,
  color: "#2B77B3"
};

function _extends$j6() { _extends$j6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j6.apply(this, arguments); }
var Svg$j2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSbd = function SvgSbd(props) {
  return createElement(Svg$j2, _extends$j6({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.402 6.172c.162.028-.241 1.102-.016 2.33.195 1.052 2.63 5.127 2.53 6.525-.078.878-2.078 2.936-2.288 2.799-.23-.064.607-1.463.296-2.628-.361-1.359-2.505-4.872-2.502-6.423 0-1.135 1.836-2.677 1.98-2.603zm4.582-1.605c.206.035-.307 1.407-.02 2.969.247 1.344 3.354 6.54 3.225 8.321-.1 1.12-2.649 3.744-2.919 3.57-.293-.08.776-1.864.38-3.35-.46-1.732-3.194-6.212-3.192-8.19 0-1.448 2.342-3.412 2.526-3.32zm4.729 1.605c.162.028-.24 1.102-.017 2.33.195 1.052 2.63 5.127 2.531 6.525-.077.878-2.078 2.936-2.289 2.799-.23-.064.608-1.463.297-2.628-.36-1.359-2.505-4.872-2.503-6.423 0-1.135 1.838-2.677 1.981-2.603z",
    fill: "white"
  }));
};

SvgSbd.displayName = "SvgSbd";
SvgSbd.defaultProps = {
  size: 24,
  color: "#4BA2F2"
};

function _extends$j7() { _extends$j7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j7.apply(this, arguments); }
var Svg$j3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSberbank = function SvgSberbank(props) {
  return createElement(Svg$j3, _extends$j7({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M17.01 5.526l.71.644-8.95 5.108L4.44 8.785l.404-.805 3.928 2.233 8.24-4.688v.001zM15.21 4.5l.95.483-7.39 4.224-3.44-1.952.586-.703L8.77 8.181 15.21 4.5zm3.137 2.333l.526.704L8.77 13.31l-4.878-2.776.222-.885 4.657 2.656 9.576-5.472zm1.457 2.595c.298.832.446 1.703.446 2.615 0 .912-.148 1.798-.445 2.655l-.203.543a8.357 8.357 0 01-1.761 2.615 8.136 8.136 0 01-2.633 1.73 8.132 8.132 0 01-6.438 0 8.503 8.503 0 01-2.611-1.73 7.926 7.926 0 01-1.761-2.615 8.21 8.21 0 01-.648-3.198V11.5l5.02 2.836L19.36 8.302l.445 1.126z",
    fill: "white"
  }));
};

SvgSberbank.displayName = "SvgSberbank";
SvgSberbank.defaultProps = {
  size: 24,
  color: "#48B254"
};

function _extends$j8() { _extends$j8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j8.apply(this, arguments); }
var Svg$j4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSc = function SvgSc(props) {
  return createElement(Svg$j4, _extends$j8({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 5.625A6.375 6.375 0 0118.375 12v6.375H12a6.375 6.375 0 110-12.75zm3.825 10.2v-3.767c0-2.115-1.691-3.873-3.805-3.883a3.83 3.83 0 00-3.845 3.845c.01 2.114 1.768 3.805 3.883 3.805h3.767z",
    fill: "white"
  }));
};

SvgSc.displayName = "SvgSc";
SvgSc.defaultProps = {
  size: 24,
  color: "#20EE82"
};

function _extends$j9() { _extends$j9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j9.apply(this, arguments); }
var Svg$j5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSky = function SvgSky(props) {
  return createElement(Svg$j5, _extends$j9({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.02 9.602l-3.609 8.023H12.97l3.799-8.445c.438.071.86.214 1.252.422zM11.705 4.89L6.153 17.233c-1.416-.672-2.403-2.144-2.403-3.858 0-2.348 1.846-4.25 4.125-4.25 0-2.246 1.69-4.08 3.83-4.236zm4.42 4.236l-3.823 8.5h-1.563l4.802-10.672c.37.635.585 1.376.585 2.172zm1.421 8.237l2.45-5.442c.162.456.254.945.254 1.457 0 1.829-1.125 3.386-2.704 3.985zm1.082-7.36c.342.27.645.59.89.958l-2.99 6.644a3.751 3.751 0 01-.402.021h-.927l3.429-7.624zm-6.613-5.127c.585.002 1.14.13 1.643.36l-5.573 12.39h-.21a3.97 3.97 0 01-1.468-.283l5.608-12.467zm3.2 1.588l-5.021 11.162H8.509l5.496-12.214c.466.269.877.627 1.21 1.053z",
    fill: "white"
  }));
};

SvgSky.displayName = "SvgSky";
SvgSky.defaultProps = {
  size: 24,
  color: "#0072FF"
};

function _extends$ja() { _extends$ja = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ja.apply(this, arguments); }
var Svg$j6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSlr = function SvgSlr(props) {
  return createElement(Svg$j6, _extends$ja({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.94 16.5c.088.273 1.175 1.398 2.305 1.398 1.675 0 2.654-1.011 2.654-2.473 0-1.355-.678-2.129-2.391-2.882-2.07-.838-3.351-2.065-3.351-4.108 0-2.257 1.638-3.935 4.104-3.935 1.299 0 2.615.817 3.052 1.364l-1.048 1.09c-.414-.257-.911-.906-2.06-.906-1.732 0-2.391 1.183-2.391 2.172 0 1.355.772 2.022 2.522 2.796 2.146.947 3.239 2.13 3.239 4.258 0 2.237-1.458 4.226-4.452 4.226-1.224 0-2.531-.817-3.317-1.818L8.941 16.5zm1.397-7.727c-.261-.546-.087-1.09-.087-1.09 6.633-1.092 5.412 5.362 5.412 5.362-.524-1-1.048-1.181-1.048-1.181.087-3.728-4.277-3.091-4.277-3.091zm2.968 5.909c.263.637-.04 1.299-.04 1.299-7.553.973-5.513-5.932-5.515-5.932.4 1.06.898 1.308.898 1.308-.142 4.325 4.657 3.325 4.657 3.325z",
    fill: "white"
  }));
};

SvgSlr.displayName = "SvgSlr";
SvgSlr.defaultProps = {
  size: 24,
  color: "#FDA616"
};

function _extends$jb() { _extends$jb = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jb.apply(this, arguments); }
var Svg$j7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSls = function SvgSls(props) {
  return createElement(Svg$j7, _extends$jb({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M5.717 15.533a5.18 5.18 0 01-.38-1.16 4.047 4.047 0 01-.087-.64h.67a4.646 4.646 0 00.408 1.535c.402.852 1.012 1.338 1.899 1.338.693 0 1.23-.277 1.608-.766a2.44 2.44 0 00.502-1.422c0-.59-.223-1.025-.67-1.393-.362-.3-.78-.51-1.643-.869l-.152-.063c-.897-.371-1.311-.575-1.714-.893-.556-.44-.852-.985-.852-1.683 0-.837.301-1.545.84-2.046a2.747 2.747 0 011.87-.721c.96 0 1.694.4 2.181 1.1v-.952h2.166v9.56h.644v-2.683a.66.66 0 010-.066l.67.023v.034a4.47 4.47 0 00.395 1.502c.4.851 1.011 1.338 1.897 1.338.693 0 1.23-.278 1.608-.767.321-.413.502-.961.502-1.422 0-.59-.223-1.025-.67-1.393-.362-.3-.78-.51-1.642-.869l-.153-.063c-.897-.371-1.31-.575-1.714-.893-.556-.44-.851-.985-.851-1.683 0-.836.3-1.545.839-2.046a2.747 2.747 0 011.871-.72c.96 0 1.693.4 2.18 1.1v-.912h.671v3.317h-.67c0-.693-.16-1.395-.473-1.914-.368-.612-.923-.947-1.708-.947a2.063 2.063 0 00-1.405.539c-.405.378-.635.918-.635 1.583 0 .495.2.863.607 1.185.338.266.716.452 1.554.8l.152.063c.925.383 1.383.614 1.815.97.59.488.903 1.099.903 1.883 0 .597-.227 1.28-.634 1.808-.502.647-1.235 1.025-2.147 1.025-.632 0-1.175-.192-1.62-.547a2.975 2.975 0 01-.672-.77v1.17h-1.984V7.541h-.825v2.713h-.671c0-.693-.159-1.395-.472-1.914-.369-.612-.924-.947-1.708-.947a2.063 2.063 0 00-1.405.539c-.405.378-.635.918-.635 1.583 0 .495.2.863.607 1.185.338.266.716.452 1.553.8l.153.063c.925.383 1.383.614 1.815.97.59.488.903 1.099.903 1.883 0 .597-.227 1.28-.635 1.808-.502.647-1.234 1.025-2.146 1.025-.633 0-1.175-.192-1.62-.547a2.996 2.996 0 01-.687-.79v1.149h-.67v-3.33h.67v2.18a3.97 3.97 0 01-.203-.379z",
    fill: "white"
  }));
};

SvgSls.displayName = "SvgSls";
SvgSls.defaultProps = {
  size: 24,
  color: "#8E9495"
};

function _extends$jc() { _extends$jc = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jc.apply(this, arguments); }
var Svg$j8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSmart = function SvgSmart(props) {
  return createElement(Svg$j8, _extends$jc({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.65 8.182h5.67v-2.5H12.9V4.5h-1.44v1.182H7.5v2.59l3.96 3.41-3.96 4v2.772h3.96V19.5h1.44v-1.046h3.6v-2.5h-5.94l4.275-4.272-4.185-3.5z",
    fill: "white"
  }));
};

SvgSmart.displayName = "SvgSmart";
SvgSmart.defaultProps = {
  size: 24,
  color: "#FAC000"
};

function _extends$jd() { _extends$jd = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jd.apply(this, arguments); }
var Svg$j9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgSngls = function SvgSngls(props) {
  return createElement(Svg$j9, _extends$jd({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.685 15.925l-.7 1.302-.698-1.302C7.064 15.598 3.75 12.45 3.75 12.45c0-.007 3.22-3.058 7.357-3.46l.547-.938.332-.551.562.938.317.55C17 9.384 20.22 12.45 20.22 12.45s-3.314 3.149-7.537 3.476zM4.449 12.45c-.008 0 3.184 2.181 6.39 2.643l-1.562-2.926.424-.736.39.729-.007.007 1.52 2.993c.122.007.245.007.368.007.122 0 .237 0 .36-.007l1.116-2.226.815-1.518.424.737-1.563 2.932c3.207-.454 6.398-2.582 6.398-2.642 0-.053-3.04-2.084-6.167-2.605l.475.827-.396.795-1.03-1.726a7.836 7.836 0 00-.418-.015c-.138 0-.282.007-.426.015l-1.052 1.726-.388-.759.496-.855c-3.127.528-6.167 2.604-6.167 2.604z",
    fill: "white"
  }));
};

SvgSngls.displayName = "SvgSngls";
SvgSngls.defaultProps = {
  size: 24,
  color: "#B30D23"
};

function _extends$je() { _extends$je = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$je.apply(this, arguments); }
var Svg$ja = styled("svg")({
  flex: "none"
}, space, color);

var SvgSnm = function SvgSnm(props) {
  return createElement(Svg$ja, _extends$je({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12 20.25c-4.551-.014-8.25-3.707-8.25-8.25S7.449 3.764 12 3.75c4.551.014 8.25 3.707 8.25 8.25s-3.699 8.241-8.25 8.25zm7.316-6.938a.836.836 0 01-1.084.442c.291.304.474.713.474 1.162 0 .132-.018.255-.045.378.309-.627.53-1.294.655-1.98v-.002zm-.765.083zm.186-4.52a3.46 3.46 0 01-.62 3.402.85.85 0 01.43-.122c.433 0 .787.331.824.759a7.258 7.258 0 00-.634-4.039zm-.423 1.158a2.869 2.869 0 00-4.897-2.025 2.869 2.869 0 00-.843 2.025 2.869 2.869 0 004.896 2.024 2.872 2.872 0 00.844-2.024zm-2.984 4.885c0-.623.345-1.195.898-1.486-.7.163-1.434.106-2.1-.164a3.487 3.487 0 011.202 1.713c.005-.027 0-.046 0-.063zm.164 1.108c0 .276-.034.55-.1.817a.806.806 0 01.72-.444c.043 0 .085.004.127.013a1.697 1.697 0 01-.784-.84c.024.15.036.302.037.454zm1.521-.05a1.065 1.065 0 001.067-1.059c0-.585-.479-1.058-1.067-1.058a1.06 1.06 0 00-1.061 1.058c0 .586.479 1.059 1.062 1.059zm.701-2.989a.85.85 0 01.105-.4c-.302.28-.65.505-1.03.667.074-.008.147-.017.224-.017.303-.001.601.08.861.236a.818.818 0 01-.159-.487v.001zM12 12.537c.45 0 .896.086 1.313.254a3.466 3.466 0 01-1.313-2.19 3.474 3.474 0 01-1.312 2.19A3.59 3.59 0 0112 12.536v.001zm0-4.63c-.317 0-.628-.089-.897-.258.473.499.786 1.128.898 1.806a3.495 3.495 0 01.898-1.807c-.269.17-.58.26-.898.259zm1.704-1.699c0 .38-.128.75-.364 1.05a3.474 3.474 0 011.185-.582c-.019 0-.032.005-.046.005a.833.833 0 01-.775-.527c-.003.018 0 .037 0 .054zm1.294-1.003c.188.154.31.381.31.64a.828.828 0 01-.497.759 3.5 3.5 0 013.298 1.172 7.529 7.529 0 00-3.11-2.572l-.001.001zm-.524.232a.414.414 0 10-.002.829.414.414 0 00.002-.83zm-1.959-.85a1.697 1.697 0 011.13 1.195.829.829 0 01.826-.768c.027 0 .054.004.08.009a7.53 7.53 0 00-2.036-.436zm-1.59 1.622a1.076 1.076 0 002.15 0 1.076 1.076 0 00-2.149 0zm-1.48-1.186a.502.502 0 01.082-.01.825.825 0 01.825.769 1.698 1.698 0 011.13-1.195c-.711.054-1.395.2-2.036.436zm.852 1.186c0-.019 0-.037.005-.055a.834.834 0 01-.774.527c-.02 0-.033-.005-.046-.005.427.117.83.316 1.185.582a1.673 1.673 0 01-.37-1.05zm-1.184-.36a.414.414 0 10.828 0 .414.414 0 00-.828 0zM5.892 7.78a3.485 3.485 0 013.297-1.172.825.825 0 01-.187-1.4 7.461 7.461 0 00-3.11 2.572zm-.206 2.253a2.869 2.869 0 004.897 2.025 2.869 2.869 0 00.843-2.024 2.868 2.868 0 00-2.87-2.863 2.874 2.874 0 00-2.87 2.862zm2.984 4.885c0 .018-.005.04-.005.059a3.509 3.509 0 011.203-1.713c-.667.27-1.4.326-2.1.163a1.687 1.687 0 01.902 1.49zm-2.387-1.932a.789.789 0 01-.165.486 1.675 1.675 0 011.085-.217 3.432 3.432 0 01-1.03-.668c.072.12.11.259.11.4zm-.365 1.931a1.061 1.061 0 102.122 0 1.061 1.061 0 00-2.122 0zm1.836 1.495c.042-.004.083-.014.128-.014.305 0 .583.172.72.445a3.465 3.465 0 01-.1-.817c0-.154.011-.307.031-.459a1.678 1.678 0 01-.779.845zm-3.13-3.502a.83.83 0 01.825-.76c.151.002.3.044.428.124a3.46 3.46 0 01-.62-3.403 7.343 7.343 0 00-.632 4.038zm.825-.337a.414.414 0 10-.001.828.414.414 0 00.001-.828zm-.154 2.345c0-.435.17-.852.473-1.163a.837.837 0 01-1.084-.441c.127.699.347 1.363.656 1.98a1.692 1.692 0 01-.045-.377zm2.131 1.621a1.684 1.684 0 01-1.59-.39 7.514 7.514 0 001.422 1.567.803.803 0 01-.187-.509c0-.268.134-.517.356-.667v-.001zm.064.667a.391.391 0 10.783 0 .391.391 0 00-.783 0zm3.503 2.159a3.506 3.506 0 01-2.304-2.23c0 .022.009.044.009.072a.81.81 0 01-1.162.728 7.435 7.435 0 003.457 1.43zm3.873-3.339a2.865 2.865 0 10-5.731 0A2.867 2.867 0 0012 18.887a2.87 2.87 0 002.865-2.862v.001zm1.603 1.908a.81.81 0 01-1.062-.335.806.806 0 01-.1-.392c.001-.024.004-.049.01-.073a3.507 3.507 0 01-2.306 2.231 7.476 7.476 0 003.457-1.431h.001zm.041-.728a.391.391 0 100 .001zm1.653-1.057a1.683 1.683 0 01-1.59.39c.223.15.356.4.356.667a.803.803 0 01-.187.51 7.502 7.502 0 001.421-1.568v.001z",
    fill: "white"
  }));
};

SvgSnm.displayName = "SvgSnm";
SvgSnm.defaultProps = {
  size: 24,
  color: "#0B1C26"
};

function _extends$jf() { _extends$jf = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jf.apply(this, arguments); }
var Svg$jb = styled("svg")({
  flex: "none"
}, space, color);

var SvgSnt = function SvgSnt(props) {
  return createElement(Svg$jb, _extends$jf({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.975 11.265a6.862 6.862 0 00-1.248.108c.339-3.135 2.952-5.51 6.063-5.51 1.905 0 3.21.934 3.21 2.864 0 1.931-1.567 2.864-3.852 2.864-1.688 0-2.486-.325-4.173-.325v-.001zm-.123 1.144c-2.285 0-3.852.933-3.852 2.864 0 1.93 1.305 2.864 3.21 2.864 3.111 0 5.724-2.374 6.063-5.51-.412.074-.83.11-1.248.108-1.688 0-2.486-.326-4.173-.326",
    fill: "white"
  }));
};

SvgSnt.displayName = "SvgSnt";
SvgSnt.defaultProps = {
  size: 24,
  color: "#5B6DEE"
};

function _extends$jg() { _extends$jg = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jg.apply(this, arguments); }
var Svg$jc = styled("svg")({
  flex: "none"
}, space, color);

var SvgSpank = function SvgSpank(props) {
  return createElement(Svg$jc, _extends$jg({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M6.344 16.606v.105H5.237v-2l-.035.111-1.058-.32.598-1.927-.074.108-.918-.61 1.147-1.675-.109.087-.698-.848L5.741 8.32l-.21.08-.397-1.018 1.971-.745-.23.015-.077-1.088 2.064-.142-.187-.042.25-1.063 1.972.449-.125-.071.553-.945 1.72.978-.068-.07.81-.745 1.34 1.415-.029-.057.995-.478.86 1.735-.008-.049 1.093-.17.323 2.004.022-.143 1.095.17-.328 2.035.08-.164.996.479-.921 1.86.135-.142.81.745-1.433 1.512.174-.098.553.944-1.799 1.024.18-.042.25 1.063-1.989.452.154.01-.077 1.089-1.99-.137.1.038-.397 1.018-1.905-.72.121.096-.697.848-1.572-1.255.078.113-.918.611-1.126-1.643.034.108-1.059.32-.588-1.898zm0-1.296l.692-.209.537 1.733.598-.398 1.022 1.493.457-.555 1.415 1.13.254-.651 1.707.645.05-.704 1.826.126-.164-.702 1.79-.407-.37-.633 1.598-.909-.548-.502 1.262-1.334-.673-.324.812-1.64-.737-.115.29-1.8-.705.11-.289-1.8-.634.304-.806-1.627-.518.474-1.247-1.317-.356.609-1.58-.898-.163.696-1.776-.404.052.727-1.823.125.269.692-1.718.65.463.561-1.441 1.15.608.404-1.038 1.518.7.211-.543 1.748h.728v1.823zm5.438-2.044c0-.276-.098-.487-.292-.633-.195-.15-.544-.305-1.05-.467a7.433 7.433 0 01-1.2-.488c-.802-.435-1.204-1.02-1.204-1.757 0-.383.107-.724.32-1.023.218-.302.527-.538.928-.707a3.507 3.507 0 011.36-.252c.506 0 .956.092 1.35.277.396.182.702.44.92.774.22.339.336.736.33 1.14h-1.458c0-.325-.102-.577-.306-.755-.204-.181-.49-.272-.86-.272-.355 0-.633.075-.83.229a.709.709 0 00-.296.593c0 .23.114.424.345.58.232.155.574.302 1.024.438.83.25 1.433.56 1.812.93.38.37.568.832.568 1.383 0 .614-.231 1.096-.694 1.447-.463.347-1.087.521-1.87.521a3.627 3.627 0 01-1.487-.297c-.446-.201-.788-.476-1.024-.823a2.116 2.116 0 01-.35-1.208H9.28c0 .782.466 1.174 1.399 1.174.346 0 .617-.07.811-.21a.696.696 0 00.292-.594zm4.447-4.348l-1.404 5.139-1.158-.082.876-5.297 1.686.24zm-1.225 5.674l-.365 1.816-1.54-.45.354-1.741 1.55.375z",
    fill: "white"
  }));
};

SvgSpank.displayName = "SvgSpank";
SvgSpank.defaultProps = {
  size: 24,
  color: "#FF3B81"
};

function _extends$jh() { _extends$jh = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jh.apply(this, arguments); }
var Svg$jd = styled("svg")({
  flex: "none"
}, space, color);

var SvgSphtx = function SvgSphtx(props) {
  return createElement(Svg$jd, _extends$jh({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M4.5 9.293v-.267h6.313v.267H4.5zm0-.776V8.25h6.313v.267H4.5zm2.662 7.98v-6.67h.254v6.67h-.254zm.736 0v-6.67h.252v6.67h-.253zm11.424-.546l-2.849-3.01.178-.188 2.849 3.009-.178.189zM12.389 8.25l2.849 3.01-.179.188-2.848-3.009.178-.189zm6.413 8.25l-2.849-3.01.179-.189 2.848 3.01-.178.189zM11.87 8.799l2.849 3.009-.18.189-2.848-3.009.18-.189zm4.066 3.576l.18-.189 3.206-3.387.178.189-3.206 3.387-.179.189-.34.36-.18.189L12.39 16.5l-.179-.189 3.207-3.387.178-.189.34-.36zm-.34-.738l3.206-3.387.179.189-3.206 3.387-.179.189-.34.36-.18.189-3.205 3.387-.18-.189 3.207-3.387.178-.189.342-.36.178-.189z",
    fill: "white"
  }));
};

SvgSphtx.displayName = "SvgSphtx";
SvgSphtx.defaultProps = {
  size: 24,
  color: "#00B098"
};

function _extends$ji() { _extends$ji = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ji.apply(this, arguments); }
var Svg$je = styled("svg")({
  flex: "none"
}, space, color);

var SvgSrn = function SvgSrn(props) {
  return createElement(Svg$je, _extends$ji({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.786 10.075c.23.094.46.046.643 0 .138.468.367.889.596 1.075-.137 1.17-.55 1.591-1.01 1.591-.641 0-.963-1.357-.963-1.59.138-.094.551-.375.735-1.076zm-.688 4.117c.276-.235.459-.609.688-1.217.184.094.46.046.643 0 .138.655.275 1.076.596 1.263-.091.748-.55 1.263-.963 1.263-.597 0-.872-.935-.964-1.31zm-3.672 1.45c.184-.235.184-.608.093-1.31.137.046.275.046.367 0 .275.654.504 1.075.872 1.31.046.327 0 .701-.138.748-.505.234-.964-.375-1.193-.749zM5.5 14.377c.092 0 .138 0 .23.047.321.842.872 1.31.872 1.31.184.374.275.748.137.748-.413.047-.734-.233-1.055-.842.046-.14 0-.234-.184-1.263zm-1.239 0c.459 1.965 1.331 1.872 1.285 1.778-.183-.327-.367-.467-.55-.608-.413-.421-.735-1.31-.735-1.17zm5.599 1.263c.322-.234.367-.748.413-1.402.184.045.412.045.55 0 .093.42.23 1.028.643 1.31-.046.514-.184.794-.505.84-.229.095-.872.095-1.101-.748zm-3.947-1.45c.184-.234.23-.608.276-1.122.138.046.321.046.412 0 .138.607.368.982.644 1.17.091.981 0 1.31-.184 1.31-.413 0-.964-.89-1.148-1.358zm-1.423 0c0-.093.046-.702.093-1.122h.183c.23.888.551 1.17.551 1.17.23 1.075.23 1.356.045 1.262-.412-.14-.733-.935-.872-1.31zm3.672 0c.23-.187.367-.514.459-1.122.23.093.459.046.597 0 .137.607.367.982.688 1.17 0 .513-.046 1.356-.688 1.215-.552-.14-1.01-1.076-1.056-1.263zm-.413-.14c-.551 0-.872-.89-.872-1.17.275-.28.412-.795.55-1.684.093.047.23.047.368 0 .046.983.321 1.404.55 1.638-.091.795-.32 1.216-.596 1.216zm-2.845-1.17c.091-.187.091-.234.367-1.684H5.5c0 .983.275 1.45.413 1.638-.045.514.046 1.216-.367 1.216-.183 0-.413-.234-.642-1.17zm-.918-1.637c.138.047.046 1.263.23 1.684 0 0 0 1.17-.092 1.076-.689-.842-.23-2.806-.138-2.76zm5.507 1.637c.321-.234.505-.748.78-1.684a1.1 1.1 0 00.55 0c.093.702.276 1.217.643 1.59-.091.749-.459 1.264-.918 1.264-.734 0-1.01-1.03-1.055-1.17zm-3.764-1.824c.368-.14.598-.936.643-1.03a.275.275 0 00.368 0c0 .609.183.89.32.983-.137.795-.321 1.731-.734 1.731-.367 0-.55-.842-.596-1.684zm-1.147 1.73c-.321 0-.413-1.215-.321-1.73 0 0 .275-.421.459-1.03.046 0 .138.048.184 0-.046.609.046.89.137 1.03 0 0-.229 1.73-.458 1.73H4.58zm3.488-1.73c.184-.094.55-.608.734-1.076.184.094.368.094.597.046.092.516.23.843.551 1.03-.138.842-.413 1.684-1.01 1.684-.55 0-.826-1.123-.872-1.684zm.413-1.263c-.275.749-.55 1.17-.917 1.17-.46 0-.505-.983-.505-1.077.367-.28.642-.841.871-1.31h.322c-.092.702.091 1.03.23 1.217h-.001zm-2.249-1.17c-.23.655-.137.983-.045 1.217-.367.935-.551 1.17-.826 1.17-.276-.047-.276-.61-.184-1.077.275-.187.872-1.263.872-1.31h.183zm-1.33.047c.137-.047-.368.655-.321.983.045.467-.506 1.263-.551 1.216-.183-.047.183-1.731.872-2.199zm6.516 1.123c-.138.515-.321 1.17-1.101 1.17-.413-.047-.642-.608-.734-1.077.459-.327.688-.889.826-1.31a.93.93 0 00.505 0c.091.702.32 1.03.505 1.217zM5.178 8.53c.091-.046.689-.841 1.01-.841.183.046-.321.514-.276.748-.138.234-.78 1.403-1.01 1.403-.183 0-.183-.608.276-1.31zm11.29 5.802c-.047.701-.047 1.075.091 1.31-.184.374-.688.935-1.192.748-.185-.047-.185-.421-.139-.749.413-.234.688-.701.872-1.31.092.047.23.047.368 0zm1.835 0c.046.046.138.046.23-.048-.184 1.03-.23 1.123-.184 1.264-.321.608-.642.842-1.055.842-.184 0-.092-.327.137-.749 0 0 .551-.467.872-1.31zm.735 1.216c-.184.187-.367.28-.506.608-.045.094.827.187 1.285-1.778-.091-.14-.367.749-.78 1.17h.001zm-5.279-1.216c0 .56.139 1.075.414 1.403-.23.795-.872.795-1.101.748-.322-.093-.413-.374-.505-.842.367-.327.55-.889.642-1.31.184.047.367.047.55 0zm4.13-1.31c0 .561.047.935.277 1.122-.184.468-.78 1.358-1.148 1.358-.184 0-.275-.328-.184-1.31.276-.188.505-.656.643-1.17a.422.422 0 00.413 0zm1.653.093c0 .375 0 .983.092 1.123-.183.375-.505 1.17-.872 1.31-.23.047-.184-.234.046-1.264 0 0 .322-.327.551-1.169h.183zm-4.085-.094c.093.656.184.983.46 1.123-.046.234-.551 1.17-1.056 1.263-.643.141-.688-.748-.688-1.216.32-.187.55-.608.688-1.17a.857.857 0 00.596 0zm1.745-.14c-.047.28-.413 1.17-.872 1.17-.275 0-.505-.468-.596-1.216.229-.188.504-.655.55-1.638.118.047.25.047.367 0 .183.843.322 1.404.551 1.684zm1.606-1.684c.23 1.45.275 1.498.367 1.684-.23.889-.459 1.17-.643 1.17-.412 0-.32-.748-.367-1.216.184-.188.413-.655.413-1.638.093.047.138 0 .23 0zm.963 1.684c.23-.374.139-1.59.23-1.684.138-.047.55 2.012-.137 2.76-.093.094-.093-1.076-.093-1.076zm-5.873-1.684c.138.936.367 1.45.78 1.684-.046.14-.413 1.17-1.056 1.17-.505.047-.78-.562-.918-1.264.321-.373.55-.888.643-1.59.091.047.321.047.55 0zm3.809-1.17c0 .094.275.89.596 1.123 0 .795-.23 1.685-.596 1.685-.413 0-.597-.889-.735-1.731.138-.14.322-.468.322-1.03a.44.44 0 00.412-.046zm2.064 1.03c.046.515-.045 1.73-.275 1.684-.23 0-.459-1.731-.459-1.731.093-.14.184-.467.138-.982a.138.138 0 00.184 0c.183.608.412 1.03.412 1.03zm-4.497-1.03c.184.422.505.937.78 1.077-.045.562-.367 1.684-.872 1.684-.688.047-.871-.796-1.01-1.684.276-.188.46-.561.505-1.03a.882.882 0 00.598-.046zm1.148.89c-.322.046-.597-.375-.918-1.123.183-.187.321-.562.23-1.216.137.046.229.046.32 0 .276.514.551 1.029.872 1.263 0 .14-.045 1.076-.505 1.076h.001zm1.468-1.123c.046-.187.138-.515-.137-1.216h.183c0 .046.642 1.17.872 1.31.092.514.092 1.029-.184 1.075-.229 0-.412-.233-.734-1.17v.001zm1.56-.14c.046-.328-.413-1.03-.367-.983.735.468 1.01 2.152.872 2.199-.045.047-.55-.795-.504-1.217h-.001zm-5.828 1.263c-.688.046-.872-.608-1.01-1.123.23-.14.46-.562.505-1.216a.93.93 0 00.505 0c.137.42.368.982.735 1.263-.046.56-.276 1.029-.736 1.076h.001zm4.268-3.228c.23 0 .918.795.963.841.506.749.506 1.31.322 1.31-.275 0-.872-1.17-1.01-1.403.046-.234-.458-.748-.275-.748zm-10.188.14c-.092.28-.138.561 0 .701-.276.562-.734 1.358-1.148 1.31-.458-.093-.091-1.17-.045-1.262.276-.14.917-1.03 1.148-1.03.137.047.045.281.045.281zm2.157-.046c0 .28.046.607.275.747-.183.562-.55 1.31-1.148 1.264-.412-.047-.504-.748-.412-1.264.412-.14.78-1.029 1.055-1.029.23 0 .23.234.23.282zm6.517.747c.092-.14.092-.42 0-.7 0-.047-.092-.281.045-.281.23 0 .873.888 1.148 1.029.046.093.412 1.17-.046 1.263-.459.046-.872-.795-1.148-1.31h.001zm-2.433 0c.184-.14.23-.467.276-.747 0-.048 0-.282.229-.282.23-.046.688.89 1.056 1.03.137.608.045 1.216-.413 1.263-.643.093-.964-.748-1.148-1.264zm-1.927-1.029c.459 0 .459.89.826 1.077 0 .234-.138 1.263-.872 1.263-.643 0-.78-.843-.826-1.263.55-.234.368-1.077.872-1.077z",
    fill: "white"
  }));
};

SvgSrn.displayName = "SvgSrn";
SvgSrn.defaultProps = {
  size: 24,
  color: "#1C1C1C"
};

function _extends$jj() { _extends$jj = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jj.apply(this, arguments); }
var Svg$jf = styled("svg")({
  flex: "none"
}, space, color);

var SvgStart = function SvgStart(props) {
  return createElement(Svg$jf, _extends$jj({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.802 14.168c-.01 1.555-.909 2.88-2.342 3.423a9.186 9.186 0 01-1.033.308c-.208.053-.321.156-.338.383-.02.287-.05.572-.09.855-.048.334-.163.411-.47.337-.53-.125-.586-.211-.516-.767.006-.047.013-.094.018-.142.053-.456-.012-.52-.448-.499-.196.01-.277.107-.296.299-.026.276-.053.552-.098.825-.044.278-.162.348-.43.289-.573-.124-.615-.188-.54-.793.095-.753.092-.744-.602-.954-.308-.093-.606-.222-.907-.341-.183-.072-.243-.208-.193-.412.063-.258.106-.523.16-.785.093-.446.309-.581.722-.42.73.288 1.48.465 2.26.484.705.017 1.402-.03 2.044-.375.425-.229.737-.564.894-1.045.232-.714.024-1.291-.645-1.579-.552-.236-1.143-.367-1.699-.594-.494-.2-1.007-.402-1.432-.717-.958-.709-1.125-1.755-.915-2.874.238-1.26 1.01-2.078 2.155-2.512.305-.115.443-.276.448-.618.005-.372.064-.743.11-1.112.034-.285.145-.364.41-.32.564.092.632.18.576.767-.021.228-.04.457-.067.684-.023.191.038.28.238.285.457.014.476.005.53-.467.035-.304.06-.608.102-.911.045-.336.154-.413.463-.35.521.108.58.187.528.73-.022.238-.033.478-.075.713-.047.27.036.395.304.457.51.119 1.016.269 1.518.425.377.117.392.16.32.551-.043.235-.086.47-.142.702-.103.437-.32.567-.736.427-.711-.24-1.425-.457-2.179-.489-.66-.027-1.31-.018-1.884.397-.807.584-.811 1.77.047 2.27.546.318 1.177.48 1.768.713.361.143.732.266 1.078.438.929.464 1.394 1.239 1.384 2.314",
    fill: "white"
  }));
};

SvgStart.displayName = "SvgStart";
SvgStart.defaultProps = {
  size: 24,
  color: "#01AEF0"
};

function _extends$jk() { _extends$jk = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jk.apply(this, arguments); }
var Svg$jg = styled("svg")({
  flex: "none"
}, space, color);

var SvgSteem = function SvgSteem(props) {
  return createElement(Svg$jg, _extends$jk({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.402 6.172c.162.028-.241 1.102-.016 2.33.195 1.052 2.63 5.127 2.53 6.525-.078.878-2.078 2.936-2.288 2.799-.23-.064.607-1.463.296-2.628-.361-1.359-2.505-4.872-2.502-6.423 0-1.135 1.836-2.677 1.98-2.603zm4.582-1.605c.206.035-.307 1.407-.02 2.969.247 1.344 3.354 6.54 3.225 8.321-.1 1.12-2.649 3.744-2.919 3.57-.293-.08.776-1.864.38-3.35-.46-1.732-3.194-6.212-3.192-8.19 0-1.448 2.342-3.412 2.526-3.32zm4.729 1.605c.162.028-.24 1.102-.017 2.33.195 1.052 2.63 5.127 2.531 6.525-.077.878-2.078 2.936-2.289 2.799-.23-.064.608-1.463.297-2.628-.36-1.359-2.505-4.872-2.503-6.423 0-1.135 1.838-2.677 1.981-2.603z",
    fill: "white"
  }));
};

SvgSteem.displayName = "SvgSteem";
SvgSteem.defaultProps = {
  size: 24,
  color: "#4BA2F2"
};

function _extends$jl() { _extends$jl = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jl.apply(this, arguments); }
var Svg$jh = styled("svg")({
  flex: "none"
}, space, color);

var SvgStorj = function SvgStorj(props) {
  return createElement(Svg$jh, _extends$jl({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.733 14.228a1.41 1.41 0 01.505 1.9 1.45 1.45 0 01-1.951.538c-.068-.036-.126-.08-.186-.123l-3.695 2.088c.01.067.014.136.015.204 0 .08 0 .153-.015.232a1.43 1.43 0 01-1.64 1.165c-.778-.124-1.312-.845-1.186-1.608l-3.718-2.103a2.47 2.47 0 01-.177.116c-.06.03-.12.066-.186.087a1.44 1.44 0 01-1.863-.778c-.296-.72.06-1.535.795-1.826V9.913a.92.92 0 01-.193-.088 3.126 3.126 0 01-.164-.109 1.395 1.395 0 01-.564-1.303 1.41 1.41 0 01.878-1.125 1.457 1.457 0 011.43.194l3.754-2.132c-.007-.066-.015-.123-.015-.19 0-.77.66-1.411 1.447-1.411.786 0 1.43.625 1.431 1.404 0 .066-.007.124-.014.19l3.783 2.146a1.453 1.453 0 012.115.444 1.397 1.397 0 01-.557 1.914c-.067.029-.134.066-.2.087v4.214c.059.022.116.049.17.08zm.26 1.761a1.063 1.063 0 00-.379-1.47 1.101 1.101 0 00-1.29.139l-1.7-.967a1.876 1.876 0 00-.652-2.402 2.75 2.75 0 00-.186-.466l2.568-1.426a1.121 1.121 0 001.39.1 1.078 1.078 0 00.434-1.126c-.133-.582-.727-.939-1.32-.808a1.078 1.078 0 00-.824 1.295l-2.596 1.448c-.505-.589-2.107-.982-2.107-.982v-3.21a1.005 1.005 0 00.72-1.06 1 1 0 00-.72-.86c-.542-.16-1.113.13-1.277.662a1 1 0 00.683 1.252v3.275s-.875.283-1.216.559c-.363.008-.718.1-1.039.27L7.041 8.836a1.05 1.05 0 00-.267-.974 1.099 1.099 0 00-1.792.288 1.061 1.061 0 00.197 1.181 1.1 1.1 0 001.543.052l2.204 1.236a2.243 2.243 0 00-.252 2.925l-1.937 1.099a1.117 1.117 0 00-1.689.22 1.08 1.08 0 00-.136.821c.142.58.736.938 1.328.8a1.08 1.08 0 00.816-1.303l2.07-1.171c.532.422 1.228.59 1.899.458.207.095.42.175.637.24v3.057a1.166 1.166 0 00-.689.575 1.119 1.119 0 00.653 1.572c.008 0 .016.007.023.007.608.182 1.254-.146 1.44-.742a1.122 1.122 0 00-.758-1.412v-2.998s.556-.05.816-.13a1.964 1.964 0 002.1-.43l1.735.998a1.063 1.063 0 00.512 1.171 1.111 1.111 0 001.499-.386zM5.988 14.971a.47.47 0 01.4.225c.038.07.059.147.06.226a.456.456 0 01-.46.451.456.456 0 01-.46-.45c0-.25.206-.452.46-.452zm6.499-9.816a.458.458 0 01-.46.45.456.456 0 01-.46-.45c0-.25.206-.452.46-.452s.46.203.46.452zm5.608 3.915a.46.46 0 01-.46-.452c0-.249.207-.451.46-.451.255 0 .46.202.46.451a.455.455 0 01-.46.451zM6.202 8.203a.441.441 0 01.171.611.457.457 0 01-.623.167.44.44 0 01-.17-.611.458.458 0 01.622-.167zm12.079 6.855a.442.442 0 01.17.61.48.48 0 01-.632.168.445.445 0 010-.787.462.462 0 01.462.008zm-6.714 3.761c0-.006.003-.011.007-.015a.456.456 0 01.519-.373.45.45 0 01.386.505.481.481 0 01-.474.386.46.46 0 01-.439-.503zm2.641-6.964a1.072 1.072 0 01.757 1.034c0 .037-.008.073-.008.11-.007.028-.007.058-.015.086v.023c-.015.065-.03.13-.06.195-.082.201-.224.371-.407.488-.045.022-.082.044-.126.066l-.023.008a.957.957 0 01-.274.08l-.037.006c-.052 0-.097.008-.148.008-.243 0-.477-.08-.668-.226l-.2.087a.834.834 0 01-.194.066h-.007c-.46.123-.947.074-1.373-.138h-.007c-.044-.022-.088-.044-.126-.066l-.015-.007c-.044-.029-.081-.058-.126-.087-.18.079-.374.118-.57.116-.06 0-.112 0-.164-.008l-.03-.007-.134-.021-.015-.007a1.014 1.014 0 01-.14-.037 1.605 1.605 0 01-.341-.16 1.293 1.293 0 01-.505-.582c0-.015-.008-.022-.015-.037a.74.74 0 00-.03-.072.351.351 0 01-.023-.051c-.007-.022-.021-.044-.021-.066a.209.209 0 00-.015-.065c-.008-.022-.008-.03-.015-.058-.008-.03-.008-.058-.015-.088 0-.022-.007-.036-.007-.05a1.39 1.39 0 010-.306c0-.022.007-.037.007-.052l.023-.116c.007-.015.007-.036.015-.05a.705.705 0 01.037-.117c.007-.015.007-.022.015-.036a.935.935 0 01.059-.131l.007-.015a1.483 1.483 0 011.231-.771.231.231 0 01.075-.008c.09 0 .179.008.267.023.038-.045.075-.081.119-.125l.037-.036c.044-.037.081-.072.126-.102l.023-.015c.029-.021.08-.058.103-.072.023-.015.06-.044.082-.051a.346.346 0 00.074-.036 1.4 1.4 0 01.163-.073l.037-.03c.298-.115.62-.152.935-.108h.008c.06.006.119.015.177.028h.008c.06.008.111.03.17.045l.008.007c.06.021.111.043.163.065l.015.008c.051.02.1.045.148.072l.008.007c.044.023.096.059.141.087l.008.008c.051.029.095.065.14.102l.007.007c.248.209.44.477.557.779v.007l.045.138c0 .015.007.03.007.044a.887.887 0 01.03.116l.022.167z",
    fill: "white"
  }));
};

SvgStorj.displayName = "SvgStorj";
SvgStorj.defaultProps = {
  size: 24,
  color: "#2683FF"
};

function _extends$jm() { _extends$jm = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jm.apply(this, arguments); }
var Svg$ji = styled("svg")({
  flex: "none"
}, space, color);

var SvgStorm = function SvgStorm(props) {
  return createElement(Svg$ji, _extends$jm({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M17.25 4.5l-9.022 6.188 4.557 2.906L6.75 19.5l9.977-6.906-4.496-2.906L17.25 4.5z",
    fill: "white"
  }));
};

SvgStorm.displayName = "SvgStorm";
SvgStorm.defaultProps = {
  size: 24,
  color: "#080D98"
};

function _extends$jn() { _extends$jn = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jn.apply(this, arguments); }
var Svg$jj = styled("svg")({
  flex: "none"
}, space, color);

var SvgStrat = function SvgStrat(props) {
  return createElement(Svg$jj, _extends$jn({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M12.04 13.78l7.195-4.188-7.195-4.263-7.124 4.263 7.124 4.188zm-7.505-2.19a.57.57 0 00.282.492l7.22 4.206 7.34-4.34a.555.555 0 01.831.48v1.969a.558.558 0 01-.27.478l-7.618 4.547a.549.549 0 01-.56.002L3.945 14.83a.397.397 0 01.097-.724.392.392 0 01.298.04l7.697 4.525 7.386-4.408v-1.425l-7.105 4.202a.548.548 0 01-.556.002l-7.338-4.275a1.362 1.362 0 01-.674-1.177V9.735a.473.473 0 01.71-.411l.456.268-.573.343a.39.39 0 01-.588-.273.397.397 0 01.188-.407l7.814-4.677a.549.549 0 01.563-.001l7.658 4.537a.558.558 0 01-.004.96l-7.659 4.459a.55.55 0 01-.555-.001l-7.695-4.525a.312.312 0 00.471-.272v1.856-.001z",
    fill: "white"
  }));
};

SvgStrat.displayName = "SvgStrat";
SvgStrat.defaultProps = {
  size: 24,
  color: "#1387C9"
};

function _extends$jo() { _extends$jo = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jo.apply(this, arguments); }
var Svg$jk = styled("svg")({
  flex: "none"
}, space, color);

var SvgSub = function SvgSub(props) {
  return createElement(Svg$jk, _extends$jo({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.088 3.985a.188.188 0 01.225 0l.943.707a.187.187 0 11-.226.3l-.83-.62-2.697 2.022 11.85 8.891a.19.19 0 010 .302l-.871.653a.187.187 0 01-.299-.178.189.189 0 01.074-.124l.67-.502-11.851-8.89a.186.186 0 010-.3l3.012-2.26zm3.013 0a.185.185 0 01.224-.001l6.027 4.52a.184.184 0 01.064.21.186.186 0 01-.178.128h-3.012a.191.191 0 01-.113-.037L11.16 5.839a.188.188 0 11.225-.301l3.905 2.928h2.385l-5.46-4.095-3.78 2.835a.188.188 0 11-.226-.302l3.893-2.919zM6.907 7.882a.189.189 0 01.226.301l-.631.473 11.85 8.89a.188.188 0 010 .302l-3.012 2.26a.19.19 0 01-.225 0l-.873-.655a.189.189 0 11.228-.301l.757.568 2.7-2.025L6.073 8.806a.19.19 0 010-.301l.833-.623h.002zm-.719 7.364v.002H9.2c.04-.001.08.012.112.037l3.912 2.933a.187.187 0 01.07.197.188.188 0 01-.295.105l-3.86-2.896H6.755l5.46 4.095 3.773-2.829a.189.189 0 11.226.302l-3.885 2.913a.188.188 0 01-.226 0l-6.028-4.52a.187.187 0 01-.184-.16.188.188 0 01.298-.179z",
    fill: "white"
  }));
};

SvgSub.displayName = "SvgSub";
SvgSub.defaultProps = {
  size: 24,
  color: "#E53431"
};

function _extends$jp() { _extends$jp = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jp.apply(this, arguments); }
var Svg$jl = styled("svg")({
  flex: "none"
}, space, color);

var SvgSumo = function SvgSumo(props) {
  return createElement(Svg$jl, _extends$jp({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M13.546 6.813c2.553 2.675 3.2 3.147 3.821 3.317-2.156-.27-3.373-.423-5.405-1.49l-1.282 1.493 8.07 1.792c-2.524 2.146-3.618 3.29-5.204 5.26h-3.053c-1.342-1.963-2.237-2.6-3.96-3.395 2.293.212 3.568.353 5.43 1.455l1.395-1.567-8.108-1.753c1.886-1.554 2.983-2.59 5.242-5.112h3.054zM10.68 6.44c.697-.859.982-1.276 1.357-1.94.368.684.652 1.106 1.32 1.94H10.68zm2.678 11.12c-.699.859-.985 1.276-1.358 1.94-.367-.684-.652-1.106-1.32-1.94h2.678z",
    fill: "white"
  }));
};

SvgSumo.displayName = "SvgSumo";
SvgSumo.defaultProps = {
  size: 24,
  color: "#2D9CDB"
};

function _extends$jq() { _extends$jq = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jq.apply(this, arguments); }
var Svg$jm = styled("svg")({
  flex: "none"
}, space, color);

var SvgSys = function SvgSys(props) {
  return createElement(Svg$jm, _extends$jq({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M13.534 11.327a.088.088 0 00-.085.031.082.082 0 00.017.117c3.284 2.383-1.39 7.84-10.466 2.033 7.695 7.242 18.41-.757 10.534-2.18zM9.151 8.141c-6.814 2.18.993 7.322 1.67 4.725a.081.081 0 00-.009-.065.085.085 0 00-.053-.037.09.09 0 00-.048 0c-1.003.327-6.526-1.218-1.56-4.623zM21 9.451c-5.9-4.207-16.971-.738-11.26 2.233a.089.089 0 00.118-.035.083.083 0 00.002-.073C7.538 6.667 19.336 8.16 21 9.45zm-4.896 6.114c3.12-1.418.583-6.271-3.543-5.334a.086.086 0 01-.104-.064.08.08 0 01.03-.082c3.21-2.413 9.236 3.218 3.617 5.48z",
    fill: "white"
  }));
};

SvgSys.displayName = "SvgSys";
SvgSys.defaultProps = {
  size: 24,
  color: "#0082C6"
};

function _extends$jr() { _extends$jr = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jr.apply(this, arguments); }
var Svg$jn = styled("svg")({
  flex: "none"
}, space, color);

var SvgTaas = function SvgTaas(props) {
  return createElement(Svg$jn, _extends$jr({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M3 9.75h.974v.916H3V9.75zm.974 3.58h2.832v.92H3v-2.668h2.857v.914H3.974v.835zm13.22-1.748H21v2.668h-2.858v-.92h1.884v-.833h-2.832v-.915zm2.848-.872h-2.85v-.916h2.85v.916zm-12.308.871h3.806v1.789h-.948v.88H7.734v-2.668zm2.833 1.75v-.834h-1.86v.833h1.86zM7.734 9.75h3.806v.916H7.734V9.75zm4.75 1.832h3.807v1.787h-.948v.881h-2.858v-2.668zm2.83 1.748v-.833h-1.86v.833h1.86zm-2.83-3.58h3.807v.916h-3.806V9.75z",
    fill: "white"
  }));
};

SvgTaas.displayName = "SvgTaas";
SvgTaas.defaultProps = {
  size: 24,
  color: "#002342"
};

function _extends$js() { _extends$js = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$js.apply(this, arguments); }
var Svg$jo = styled("svg")({
  flex: "none"
}, space, color);

var SvgTau = function SvgTau(props) {
  return createElement(Svg$jo, _extends$js({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M6.07 10.258l1.583 1.583H4.5l1.57-1.582zm1.583 1.913l-1.582 1.57-1.571-1.57h3.153zm2.139-2.14l-1.582 1.57V8.45l1.582 1.582zm-1.912 1.57l-1.57-1.57L7.88 8.45v3.153zm2.14-1.809l-1.57-1.57h3.152l-1.582 1.57zm0-3.482l1.582 1.582H8.45l1.57-1.582zm3.722-.228l-1.583 1.57V4.5l1.582 1.582zm-1.913 1.57l-1.57-1.57 1.57-1.582v3.152zM9.792 13.98L8.21 15.55v-3.152l1.582 1.582zm-3.482 0l1.57-1.582v3.152l-1.57-1.57zm7.659-4.188l-1.57-1.57h3.152l-1.582 1.57zm-1.57-1.9l1.57-1.583 1.582 1.582h-3.153zm-.796 8.228l-1.583 1.57-1.57-1.57h3.152zm-1.583-1.913l1.582 1.583H8.45l1.57-1.583zm7.671-4.176l-1.582 1.57V8.45l1.582 1.582zm-3.482 0l1.57-1.582v3.153l-1.57-1.57zm-3.95 7.898l1.57-1.581V19.5l-1.57-1.571zm1.9-1.581l1.583 1.582-1.583 1.57v-3.152zm1.81 1.342l-1.57-1.57h3.152l-1.582 1.57zm0-3.482l1.583 1.582h-3.154l1.572-1.582zm2.14-1.81l1.583 1.583-1.583 1.57v-3.153zm-1.9 1.583l1.57-1.583v3.152l-1.57-1.57zm3.71-.24l-1.57-1.57H19.5l-1.581 1.57zm0-3.482L19.5 11.84h-3.152l1.571-1.582z",
    fill: "white"
  }));
};

SvgTau.displayName = "SvgTau";
SvgTau.defaultProps = {
  size: 24,
  color: "#7B346E"
};

function _extends$jt() { _extends$jt = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jt.apply(this, arguments); }
var Svg$jp = styled("svg")({
  flex: "none"
}, space, color);

var SvgTel = function SvgTel(props) {
  return createElement(Svg$jp, _extends$jt({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.81 8.608c.475.385.774 1.181.669 1.765l-1.02 5.643c-.107.588-.669 1.236-1.248 1.439l-5.564 1.954c-.58.203-1.44.056-1.914-.329l-4.544-3.688c-.474-.384-.774-1.176-.667-1.764l1.02-5.644c.106-.588.668-1.234 1.248-1.438l5.565-1.955c.58-.204 1.44-.055 1.915.329l4.54 3.688zm-4.733 2.534l.226-1.148-2.124.004.3-1.512h-.686a4.32 4.32 0 01-2.061 1.669l-.193.99h.929s-.315 1.42-.42 1.944c-.263 1.335.397 2.281 1.411 2.281h1.716l.3-1.267H12.04c-.638 0-.604-.349-.48-.967l.395-1.997 2.122.003z",
    fill: "white"
  }));
};

SvgTel.displayName = "SvgTel";
SvgTel.defaultProps = {
  size: 24,
  color: "#14C8FF"
};

function _extends$ju() { _extends$ju = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ju.apply(this, arguments); }
var Svg$jq = styled("svg")({
  flex: "none"
}, space, color);

var SvgTen = function SvgTen(props) {
  return createElement(Svg$jq, _extends$ju({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M20.227 12.65c-.14 2.002-.939 3.728-2.396 5.181a8.812 8.812 0 01-1.155.979.782.782 0 00-.057-.076l3.517-6.094c.03.005.06.009.091.01zM16.3 19.061c-1.268.793-2.702 1.189-4.3 1.189-1.528 0-2.905-.362-4.133-1.086.184.109.372.208.563.3a.598.598 0 00.048-.098h7.044a.577.577 0 00.047.098c.25-.12.493-.255.73-.403zm-8.976-.247a8.838 8.838 0 01-1.163-.983c-1.452-1.453-2.248-3.18-2.388-5.18a.602.602 0 00.09-.011l3.518 6.093a.586.586 0 00-.057.08zM3.75 11.873c.03-2.226.832-4.13 2.41-5.712C7.774 4.553 9.72 3.75 12 3.75s4.224.804 5.831 2.411c1.605 1.605 2.412 3.542 2.419 5.808 0-.204-.008-.405-.023-.605a.601.601 0 00-.09.011L16.622 5.27a.613.613 0 00.059-.08 7.768 7.768 0 00-1.108-.655.637.637 0 00-.051.107H8.478a.629.629 0 00-.051-.107 7.79 7.79 0 00-1.107.651c.017.03.037.06.061.087l-3.518 6.102a.599.599 0 00-.091-.011 9.468 9.468 0 00-.021.51l-.001-.002zm16.01-.28a.628.628 0 00-.118.194h-2.907a.651.651 0 00-.154-.233.651.651 0 00-.234-.154V5.679l3.412 5.915zm-.118.633a.63.63 0 00.117.193l-3.412 5.909v-5.715a.65.65 0 00.234-.153.652.652 0 00.154-.234h2.907zm-15.284-.438a.628.628 0 00-.117-.194L7.652 5.68v5.722a.65.65 0 00-.234.154.651.651 0 00-.154.233H4.358zM8.47 5.095a.082.082 0 00.008-.015h7.044c.027.07.067.136.117.193l-2.153 3.72a.618.618 0 00-.431.073L8.471 5.095zm.008 6.693a.65.65 0 00-.154-.233.65.65 0 00-.234-.154V5.679l3.416 5.908a.638.638 0 00-.112.2H8.479zm5.499-1.933a.653.653 0 00.04-.23.623.623 0 00-.15-.413L15.91 5.68v5.72a.62.62 0 00-.096.044l-1.837-1.59v.001zm-1.203-.46a.596.596 0 00-.044.23.61.61 0 00.154.413l-.771 1.33a.583.583 0 00-.227 0L8.712 5.88l4.063 3.515zm-.165 2.393a.654.654 0 00-.116-.2l.768-1.331c.147.03.3.003.43-.073l1.838 1.59a.105.105 0 01-.007.015H12.61v-.001zm3.067.672c.065.068.145.12.234.154v5.714l-3.417-5.918a.622.622 0 00.11-.184h2.919a.652.652 0 00.154.234zm-3.782.176c.073.01.147.009.219-.004l3.175 5.499-4.06-3.511a.651.651 0 00-.109-.643l.775-1.341zm3.635 6.277a.123.123 0 01-.007.015H8.479a.635.635 0 00-.113-.195l2.148-3.712c.147.03.3.003.43-.073l4.586 3.965zm-4.79-5.156a.617.617 0 00-.431.073L8.47 12.242a.095.095 0 00.008-.016h2.919a.633.633 0 00.113.19l-.771 1.341zm-.713.402a.597.597 0 00-.043.23c0 .158.051.295.154.413l-2.047 3.53v-5.719a.606.606 0 00.095-.043l1.841 1.59zM7.42 12.46c.066.068.146.12.234.154v5.714L4.241 12.42a.63.63 0 00.117-.194h2.907a.653.653 0 00.154.234z",
    fill: "white"
  }));
};

SvgTen.displayName = "SvgTen";
SvgTen.defaultProps = {
  size: 24,
  color: "#0899CD"
};

function _extends$jv() { _extends$jv = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jv.apply(this, arguments); }
var Svg$jr = styled("svg")({
  flex: "none"
}, space, color);

var SvgTheta = function SvgTheta(props) {
  return createElement(Svg$jr, _extends$jv({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.22 4.5h7.56l.72.745v13.51l-.72.745H8.22l-.72-.745V5.245l.72-.745zm.72 13.51h6.12V5.99H8.94v12.02zm5.35-3.878h-1.565v1.697h-1.413v-1.696H9.747v-1.462h4.543v1.461zm0-4.186v1.46H9.747v-1.46h1.565V8.249h1.413v1.697h1.566z",
    fill: "white"
  }));
};

SvgTheta.displayName = "SvgTheta";
SvgTheta.defaultProps = {
  size: 24,
  color: "#2AB8E6"
};

function _extends$jw() { _extends$jw = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jw.apply(this, arguments); }
var Svg$js = styled("svg")({
  flex: "none"
}, space, color);

var SvgTix = function SvgTix(props) {
  return createElement(Svg$js, _extends$jw({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M4.5 8.54c0-.16.13-.29.29-.29h3.768c1.739 0 2.826.897 2.826 2.164 0 .529-.241 1.01-.724 1.442.675.385 1.014.962 1.014 1.73 0 1.804-1.74 2.164-2.899 2.164H4.789a.29.29 0 01-.289-.29v-.862c0-.16.13-.29.29-.29h3.985c.821 0 1.232-.265 1.232-.794 0-.528-.41-.817-1.232-.865H4.789a.29.29 0 01-.289-.289v-.862c0-.161.13-.29.29-.29h3.985c.58-.097.87-.337.87-.722 0-.528-.29-.793-.87-.793H4.789a.29.29 0 01-.289-.29V8.54zm7.826 0c0-.16.13-.29.29-.29h3.84c.16 0 .29.13.29.29v6.92a.29.29 0 01-.29.29H15.37a.29.29 0 01-.29-.29V9.982a.29.29 0 00-.289-.29h-2.175a.29.29 0 01-.29-.29l.001-.862zm5.434-.29h1.45c.16 0 .29.13.29.29v.862a.29.29 0 01-.29.29h-1.45a.29.29 0 01-.29-.29V8.54c0-.16.13-.29.29-.29z",
    fill: "white"
  }));
};

SvgTix.displayName = "SvgTix";
SvgTix.defaultProps = {
  size: 24,
  color: "#EF494D"
};

function _extends$jx() { _extends$jx = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jx.apply(this, arguments); }
var Svg$jt = styled("svg")({
  flex: "none"
}, space, color);

var SvgTkn = function SvgTkn(props) {
  return createElement(Svg$jt, _extends$jx({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.819 5.935L13.121 4.5l-.027 3.79h4.156v2.625h-4.184v4.547c0 1.38 2.34 1.543 3.221 1.083l.798 2.382c-1.955 1.136-7.294.866-7.294-3.438V5.934h.028zm-3.083 5.683c-.82 0-1.486-.8-1.486-1.786 0-.987.665-1.786 1.487-1.786.82 0 1.485.8 1.485 1.787 0 .986-.665 1.785-1.485 1.785z",
    fill: "white"
  }));
};

SvgTkn.displayName = "SvgTkn";
SvgTkn.defaultProps = {
  size: 24,
  color: "#24DD7B"
};

function _extends$jy() { _extends$jy = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jy.apply(this, arguments); }
var Svg$ju = styled("svg")({
  flex: "none"
}, space, color);

var SvgTnb = function SvgTnb(props) {
  return createElement(Svg$ju, _extends$jy({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.698 8.893h.003l-.023.097-.195.92h-.022l-1.285 5.465H8.542l1.31-5.464H7.653l-1.234 5.464H4.622l1.633-6.75h5.5l-.057.268zm3.106-.268h2.723c2.342.107 2.124 1.66 2.124 1.66h.599l-.218.643h-.545c-.162.59-1.252.911-1.252.911 1.252.161 1.198 1.125 1.198 1.125h.6l-.164.643h-.49c-.126.893-.917 1.326-1.567 1.533a4.015 4.015 0 01-1.215.182H13.17l1.634-6.697zM5.492 9.911H3.75l.327-1.286h1.742l-.327 1.286zm7.461 4.714l-1.416-3.322.6-2.57 1.415 3.16-.599 2.732zm4.166-3.322a.736.736 0 00.52-.211.717.717 0 000-1.023.74.74 0 00-.52-.212h-1.061l-.327 1.446h1.388zm-.367 2.786c.488 0 .884-.372.884-.83 0-.459-.393-.83-.884-.83h-1.276l-.394 1.66h1.67z",
    fill: "white"
  }));
};

SvgTnb.displayName = "SvgTnb";
SvgTnb.defaultProps = {
  size: 24,
  color: "#FFC04E"
};

function _extends$jz() { _extends$jz = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jz.apply(this, arguments); }
var Svg$jv = styled("svg")({
  flex: "none"
}, space, color);

var SvgTnc = function SvgTnc(props) {
  return createElement(Svg$jv, _extends$jz({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.67 10.353l4.224 7.272H6.184l1.403-2.327 6.309.001-1.599-2.61 1.372-2.336zm-4.313 1.692l4.295-7.14L19.5 14.75h-2.808l-3.09-5.37-1.5 2.666-2.745-.001zm3.664 2.714L4.5 14.72l5.855-9.844 1.395 2.36-3.227 5.188h3.125l1.373 2.336z",
    fill: "white"
  }));
};

SvgTnc.displayName = "SvgTnc";
SvgTnc.defaultProps = {
  size: 24,
  color: "#FF439B"
};

function _extends$jA() { _extends$jA = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jA.apply(this, arguments); }
var Svg$jw = styled("svg")({
  flex: "none"
}, space, color);

var SvgTnt = function SvgTnt(props) {
  return createElement(Svg$jw, _extends$jA({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M10.418 16.127l.118 2.623s1.406-.238 2.871 0l.117-2.623h-3.106zM8.72 14.1s4.101-.358 6.503 0l.234-2.861a44.314 44.314 0 00-6.855 0L8.72 14.1zM19.5 6.708s-7.852-1.67-15 .12l.527 3.277.645-1.251s6.738-1.013 12.773 0l.586 1.252.469-3.398z",
    fill: "white"
  }));
};

SvgTnt.displayName = "SvgTnt";
SvgTnt.defaultProps = {
  size: 24,
  color: "#FF4081"
};

function _extends$jB() { _extends$jB = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jB.apply(this, arguments); }
var Svg$jx = styled("svg")({
  flex: "none"
}, space, color);

var SvgTrig = function SvgTrig(props) {
  return createElement(Svg$jx, _extends$jB({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.592 5.25h8.83s.235 1.165 1.486 1.244c0 0 4.141 9.637-5.94 13.756 0 0-9.299-2.953-6.017-13.678 0 0 1.407-.079 1.641-1.322zm8.363.767h-7.89l-.01.168c-.067.367-.25.623-.52.795a1.418 1.418 0 01-.549.204l-.138.013-.039.133c-.727 2.483-.751 4.628-.179 6.458.47 1.5 1.32 2.73 2.439 3.712a9.36 9.36 0 001.946 1.315 8.141 8.141 0 00.896.386l.073.023.072-.03c2.779-1.188 4.46-2.983 5.214-5.22.622-1.845.567-3.81.102-5.67a10.657 10.657 0 00-.354-1.136l-.048-.118-.128-.008c-.364-.024-.596-.173-.74-.411a1.026 1.026 0 01-.138-.42l-.01-.194zm-7.534.409c4.775 0 7.163.002 7.163.002.033.14.086.28.165.413.191.319.5.534.932.595.113.318.21.64.292.968.447 1.79.5 3.68-.093 5.44-.71 2.106-2.285 3.8-4.914 4.943a7.64 7.64 0 01-.764-.337 8.953 8.953 0 01-1.86-1.255c-1.067-.936-1.874-2.104-2.319-3.528-.539-1.721-.524-3.745.145-6.1.209-.048.408-.13.59-.243.326-.205.563-.526.663-.898zm5.52 4.187h-.227c.022-.457-.079-1.45-1.313-1.726a1.959 1.959 0 00-1.083.05c-.481.171-1.056.6-1.077 1.676h-.168a.645.645 0 00-.645.64v2.682a.645.645 0 00.645.641h3.869a.645.645 0 00.645-.641v-2.681a.645.645 0 00-.645-.641h-.001zm-1.504 3.031h-.86l.228-1.13a.504.504 0 01.203-.968.505.505 0 11.202.968l.227 1.13zm-1.64-3.031c.02-.351.169-1.182 1.093-1.244 0 0 1.22-.067 1.198 1.244h-2.292z",
    fill: "white"
  }));
};

SvgTrig.displayName = "SvgTrig";
SvgTrig.defaultProps = {
  size: 24,
  color: "#30C0F2"
};

function _extends$jC() { _extends$jC = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jC.apply(this, arguments); }
var Svg$jy = styled("svg")({
  flex: "none"
}, space, color);

var SvgTrx = function SvgTrx(props) {
  return createElement(Svg$jy, _extends$jC({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18.559 9.2c-.6-.426-1.24-.88-1.868-1.33-.014-.01-.027-.02-.045-.031a.839.839 0 00-.246-.14l-.007-.004c-1.678-.412-3.355-.825-5.032-1.24L6.873 5.346l-.118-.032a1.14 1.14 0 00-.457-.06.316.316 0 00-.128.05l-.042.035a.517.517 0 00-.117.19L6 5.558v.161l.008.025c.944 2.689 1.915 5.417 2.851 8.056.72 2.032 1.47 4.137 2.2 6.204.046.14.174.232.334.246h.034a.389.389 0 00.347-.194l2.745-4.06 2.006-2.966.821-1.216c.45-.668.915-1.357 1.376-2.028l.024-.035V9.71c.01-.123.014-.376-.187-.51zm-3.216 1.48c-.645.34-1.303.691-1.965 1.04l1.158-1.259c.481-.527.984-1.073 1.476-1.607l.01-.01c.042-.056.094-.109.15-.165.037-.038.079-.077.117-.123.257.18.516.362.766.541.18.13.364.26.551.39-.757.393-1.511.79-2.263 1.192zm-1.656-.17c-.496.545-1.009 1.104-1.518 1.656-.989-1.216-1.98-2.43-2.974-3.642L7.861 6.897l-.003-.004c-.1-.115-.198-.242-.295-.361-.062-.081-.128-.159-.194-.24.402.105.808.204 1.206.299.35.085.714.172 1.07.264l6.035 1.486c-.67.725-1.342 1.46-1.993 2.17zm-1.744 6.851c.038-.369.08-.748.115-1.121.031-.3.062-.605.094-.896.048-.468.1-.953.142-1.428l.01-.084c.034-.303.069-.615.09-.928.04-.023.082-.043.125-.06.052-.024.104-.045.155-.077.8-.426 1.603-.85 2.405-1.272.801-.422 1.623-.858 2.437-1.29a706.411 706.411 0 00-2.208 3.262c-.62.916-1.258 1.862-1.892 2.794-.249.373-.51.752-.755 1.117-.278.408-.562.826-.839 1.245.035-.422.076-.847.121-1.262zM7.113 7.122c-.045-.127-.095-.257-.136-.38.936 1.146 1.878 2.3 2.797 3.417.475.58.95 1.156 1.424 1.74.094.109.188.225.278.337.117.144.235.296.363.44-.042.361-.076.727-.114 1.078a56.18 56.18 0 01-.076.743v.003c-.01.157-.031.316-.049.47l-.08.7-.003.024c-.062.71-.139 1.428-.211 2.124-.031.288-.059.583-.09.879-.018-.053-.038-.106-.056-.155a15.799 15.799 0 01-.152-.433l-.371-1.044-3.525-9.943",
    fill: "white"
  }));
};

SvgTrx.displayName = "SvgTrx";
SvgTrx.defaultProps = {
  size: 24,
  color: "black"
};

function _extends$jD() { _extends$jD = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jD.apply(this, arguments); }
var Svg$jz = styled("svg")({
  flex: "none"
}, space, color);

var SvgTzc = function SvgTzc(props) {
  return createElement(Svg$jz, _extends$jD({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.275 11.55v5.698c.153-.037.303-.08.45-.13v2.183a7.523 7.523 0 01-3 .091V11.55H8.1v-2.1h7.8v2.1h-2.625zm1.05 7.582v-2.257a5.4 5.4 0 10-4.65 0v2.258a7.5 7.5 0 114.65 0z",
    fill: "white"
  }));
};

SvgTzc.displayName = "SvgTzc";
SvgTzc.defaultProps = {
  size: 24,
  color: "#374851"
};

function _extends$jE() { _extends$jE = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jE.apply(this, arguments); }
var Svg$jA = styled("svg")({
  flex: "none"
}, space, color);

var SvgUbq = function SvgUbq(props) {
  return createElement(Svg$jA, _extends$jE({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M13.661 5.631l5.833 3.051-5.62 3.445-.213-6.496zM10.34 18.337l-5.833-3.051 5.62-3.446.213 6.497z",
    fill: "white",
    fillOpacity: 0.698
  }), createElement("path", {
    d: "M19.494 15.51l-8.11 4.74v-6.652l8.11-4.916v6.827zM4.506 8.46l8.11-4.71v6.626l-8.11 4.91V8.459z",
    fill: "white"
  }));
};

SvgUbq.displayName = "SvgUbq";
SvgUbq.defaultProps = {
  size: 24,
  color: "#00EA90"
};

function _extends$jF() { _extends$jF = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jF.apply(this, arguments); }
var Svg$jB = styled("svg")({
  flex: "none"
}, space, color);

var SvgUnity = function SvgUnity(props) {
  return createElement(Svg$jB, _extends$jF({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.966 17.049h.003c.892-.108 1.642-.378 2.25-.81.806-.578 1.208-1.311 1.208-2.2 0-.75-.294-1.378-.883-1.892-.59-.512-1.39-.824-2.399-.931a23.11 23.11 0 00-1.453-.113c-1.36-.082-2.243-.268-2.652-.56a1.305 1.305 0 01-.36-.392.927.927 0 01-.117-.457c0-.421.243-.777.732-1.056.49-.28 1.107-.422 1.859-.422.712 0 1.417.122 2.085.36 2.87 1.023 5.61 4.6 7.435 7.16-1.488.904-3.513 1.46-5.745 1.46-.657 0-1.313-.048-1.963-.147zm-3.21-1.457c-2.619-.956-3.766-3.319-2.472-5.614.036.322.155.632.347.9.24.337.593.61 1.055.826 1.617.702 4.589.253 5.813 1.145.412.3.618.683.618 1.15 0 .588-.287 1.069-.862 1.442-.574.373-1.32.56-2.24.56a6.644 6.644 0 01-2.258-.409z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.5,
    d: "M19.434 14.156v-4.39c.493.666.768 1.411.768 2.195 0 .784-.275 1.528-.768 2.195zm-1.237-5.595l.004 5.596c-1.757-2.495-4.383-5.633-7.61-6.682a7.962 7.962 0 00-1.72-.358c1-.246 2.027-.37 3.058-.367 2.505 0 4.751.702 6.268 1.811z",
    fill: "white"
  }));
};

SvgUnity.displayName = "SvgUnity";
SvgUnity.defaultProps = {
  size: 24,
  color: "#F58634"
};

function _extends$jG() { _extends$jG = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jG.apply(this, arguments); }
var Svg$jC = styled("svg")({
  flex: "none"
}, space, color);

var SvgUsd = function SvgUsd(props) {
  return createElement(Svg$jC, _extends$jG({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M16.875 14.366c0 1.927-1.565 3.207-3.874 3.4V19.5h-1.583v-1.752a8.621 8.621 0 01-4.293-1.736l1.164-1.594c1.037.806 2.019 1.332 3.202 1.508V12.49c-2.656-.666-3.893-1.63-3.893-3.61 0-1.893 1.546-3.19 3.82-3.365V4.5h1.583v1.051a7.118 7.118 0 013.42 1.332L15.4 8.53c-.8-.578-1.618-.946-2.473-1.12v3.329c2.765.665 3.947 1.734 3.947 3.627zM11.49 10.37V7.286c-1.145.088-1.745.702-1.745 1.473 0 .734.345 1.208 1.746 1.612h-.001zm3.239 4.118c0-.788-.383-1.261-1.801-1.665v3.173c1.146-.088 1.8-.667 1.8-1.508z",
    fill: "white"
  }));
};

SvgUsd.displayName = "SvgUsd";
SvgUsd.defaultProps = {
  size: 24,
  color: "#6CDE07"
};

function _extends$jH() { _extends$jH = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jH.apply(this, arguments); }
var Svg$jD = styled("svg")({
  flex: "none"
}, space, color);

var SvgUsdt = function SvgUsdt(props) {
  return createElement(Svg$jD, _extends$jH({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M13.481 10.401V8.616h4.083v-2.72H6.447v2.72h4.083V10.4c-3.318.152-5.812.81-5.812 1.597 0 .787 2.495 1.444 5.812 1.598v5.717h2.952v-5.718c3.312-.153 5.802-.81 5.802-1.596 0-.787-2.49-1.443-5.802-1.596V10.4zm.001 2.708v-.001a24.23 24.23 0 01-1.464.03c-.762 0-1.298-.02-1.487-.031v.003c-2.931-.13-5.119-.64-5.119-1.251 0-.611 2.189-1.121 5.12-1.251v1.993c.191.013.74.045 1.499.045.91 0 1.368-.037 1.452-.045v-1.993c2.925.13 5.108.641 5.108 1.25 0 .608-2.184 1.12-5.108 1.25",
    fill: "white"
  }));
};

SvgUsdt.displayName = "SvgUsdt";
SvgUsdt.defaultProps = {
  size: 24,
  color: "#3AA787"
};

function _extends$jI() { _extends$jI = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jI.apply(this, arguments); }
var Svg$jE = styled("svg")({
  flex: "none"
}, space, color);

var SvgUtk = function SvgUtk(props) {
  return createElement(Svg$jE, _extends$jI({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M10.765 16.724V6.77h-2.89V4.5h8.25v2.271h-2.89v9.953h-2.47zM10.1 19.5c-1.492 0-2.198-.717-2.198-2.233V7.421h2.17v9.744c0 .24.08.32.315.32h3.254c.236 0 .315-.08.315-.32V7.422h2.169v9.845c0 1.516-.707 2.233-2.197 2.233h-3.829z",
    fill: "white"
  }));
};

SvgUtk.displayName = "SvgUtk";
SvgUtk.defaultProps = {
  size: 24,
  color: "#30367A"
};

function _extends$jJ() { _extends$jJ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jJ.apply(this, arguments); }
var Svg$jF = styled("svg")({
  flex: "none"
}, space, color);

var SvgVen = function SvgVen(props) {
  return createElement(Svg$jF, _extends$jJ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.053 18.55L5.28 6.785a.285.285 0 01.255-.41h2.001c.107 0 .208.06.255.154l4.216 8.536a1.024 1.024 0 001.84 0l4.202-8.529a.286.286 0 01.256-.154h.248c.148 0 .242.154.175.282L12.893 18.55a1.024 1.024 0 01-1.84 0z",
    fill: "white"
  }));
};

SvgVen.displayName = "SvgVen";
SvgVen.defaultProps = {
  size: 24,
  color: "#15BDFF"
};

function _extends$jK() { _extends$jK = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jK.apply(this, arguments); }
var Svg$jG = styled("svg")({
  flex: "none"
}, space, color);

var SvgVeri = function SvgVeri(props) {
  return createElement(Svg$jG, _extends$jK({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M4.5 6c.828.002 1.657.002 2.484 0l1.568 8.385c.025.124.055.246.087.367.123-.487.2-.985.303-1.477L10.37 6h2.403c-.881 3.925-1.762 7.85-2.645 11.773H7.145L4.5 6.008V6zm9.236 3.699c.522-.657 1.358-.955 2.163-1.007.795-.056 1.652.016 2.325.49.596.417.924 1.122 1.079 1.823.188.88.198 1.782.197 2.678h-4.402c.003.662-.038 1.345.183 1.98.107.312.308.622.626.736.339.11.747.038.994-.235.33-.374.4-.897.471-1.376h1.998c-.045.795-.192 1.635-.712 2.26-.522.649-1.364.915-2.16.947-.866.033-1.806-.085-2.496-.668-.64-.535-.92-1.382-1.032-2.194a16.333 16.333 0 01-.065-2.822c.07-.916.236-1.887.83-2.613V9.7zm1.705.934c-.34.49-.35 1.122-.344 1.7h2.275c-.036-.55-.032-1.13-.28-1.633-.307-.621-1.279-.624-1.65-.066h-.001v-.001z",
    fill: "white"
  }));
};

SvgVeri.displayName = "SvgVeri";
SvgVeri.defaultProps = {
  size: 24,
  color: "#FF9933"
};

function _extends$jL() { _extends$jL = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jL.apply(this, arguments); }
var Svg$jH = styled("svg")({
  flex: "none"
}, space, color);

var SvgVia = function SvgVia(props) {
  return createElement(Svg$jH, _extends$jL({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M8.35 10.722H6.004v-1.29h1.852L6.435 5.72l1.173-.47 2.663 6.95 3.45.023 2.671-6.973 1.174.47-1.422 3.713h1.852v1.29H15.65l-.578 1.507L18 12.25l-.008 1.29-3.412-.022L12 20.25l-2.592-6.766L6 13.462l.008-1.289 2.905.019-.563-1.47zm2.415 2.77L12 16.716l1.229-3.208-2.464-.015z",
    fill: "white"
  }));
};

SvgVia.displayName = "SvgVia";
SvgVia.defaultProps = {
  size: 24,
  color: "#565656"
};

function _extends$jM() { _extends$jM = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jM.apply(this, arguments); }
var Svg$jI = styled("svg")({
  flex: "none"
}, space, color);

var SvgVib = function SvgVib(props) {
  return createElement(Svg$jI, _extends$jM({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M5.25 5.25H8.4l5.4 9.581V5.25h2.7v13.5h-3.6L5.25 5.25z",
    fill: "white"
  }));
};

SvgVib.displayName = "SvgVib";
SvgVib.defaultProps = {
  size: 24,
  color: "#FF1F43"
};

function _extends$jN() { _extends$jN = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jN.apply(this, arguments); }
var Svg$jJ = styled("svg")({
  flex: "none"
}, space, color);

var SvgVibe = function SvgVibe(props) {
  return createElement(Svg$jJ, _extends$jN({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.973 12.688c.547.147 1.087.318 1.573.617.216.133.418.289.6.464.27.3.252.617.006.934-.216.276-.51.452-.823.6-.792.381-1.632.598-2.49.727-.697.105-1.405.165-2.107.253a.255.255 0 00-.162.112c-.492.733-.978 1.468-1.47 2.202-.04.049-.076.1-.108.153-.52-.78-1.034-1.563-1.543-2.35a.246.246 0 00-.21-.123c-1.405-.1-2.79-.282-4.117-.757-.42-.147-.822-.33-1.17-.605-.02-.018-.043-.03-.06-.048-.51-.428-.523-.886-.03-1.327.39-.353.87-.552 1.368-.705.498-.153 1.002-.264 1.506-.393.024-.006.048-.006.09-.018-1.086-1.662-2.16-3.307-3.26-4.975.067-.006.115-.012.157-.012.679-.006 1.357 0 2.035-.006a.245.245 0 01.234.135c1.642 2.505 3.283 5.01 4.922 7.519a.732.732 0 00.084.117c.378-.57.744-1.116 1.104-1.662 1.32-1.995 2.64-3.988 3.961-5.98.048-.07.084-.123.192-.123.714.006 1.429.006 2.143.006.034 0 .067.002.102.006-1.114 1.681-2.23 3.361-3.35 5.04.283.07.553.129.823.2zm-10.3 1.41c.14.156.304.29.487.393.75.4 1.578.546 2.437.675-.012-.04-.012-.058-.018-.07-.487-.734-.967-1.474-1.453-2.208a.174.174 0 00-.15-.047 6.974 6.974 0 00-.834.335 1.671 1.671 0 00-.462.376.388.388 0 00-.006.546zm9.454.634c.327-.088.626-.258.87-.493.24-.24.24-.511 0-.758a.92.92 0 00-.204-.165c-.258-.129-.528-.252-.793-.38-.09-.048-.143-.013-.197.07-.283.435-.57.862-.859 1.292-.18.27-.36.546-.546.828a.578.578 0 00.145 0c.527-.129 1.062-.247 1.584-.394zm.006-7.982l-4.111 6.549L7.856 6.75h8.277z",
    fill: "white"
  }));
};

SvgVibe.displayName = "SvgVibe";
SvgVibe.defaultProps = {
  size: 24,
  color: "#338BE5"
};

function _extends$jO() { _extends$jO = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jO.apply(this, arguments); }
var Svg$jK = styled("svg")({
  flex: "none"
}, space, color);

var SvgVivo = function SvgVivo(props) {
  return createElement(Svg$jK, _extends$jO({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M17.287 7.708a1.18 1.18 0 011.642-.403c.563.353.74 1.103.395 1.678-1.278 2.128-2.72 4.356-3.923 6.057-1.755 2.482-2.135 3.335-3.401 3.335s-1.551-.752-3.356-3.342C7.57 13.496 6.226 11.437 4.69 9.006a1.235 1.235 0 01.356-1.686 1.18 1.18 0 011.652.364c1.517 2.401 4.945 7.407 5.31 7.853.383-.453 4.03-5.75 5.278-7.83z",
    fill: "white"
  }));
};

SvgVivo.displayName = "SvgVivo";
SvgVivo.defaultProps = {
  size: 24,
  color: "#408AF1"
};

function _extends$jP() { _extends$jP = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jP.apply(this, arguments); }
var Svg$jL = styled("svg")({
  flex: "none"
}, space, color);

var SvgVrc = function SvgVrc(props) {
  return createElement(Svg$jL, _extends$jP({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M15.199 6h3.551L12 19.5 5.25 6h3.528l3.245 6.835L15.2 6zM12 9.72c-.591 0-1.07-.493-1.07-1.1 0-.606.479-1.099 1.07-1.099.591 0 1.07.493 1.07 1.1 0 .606-.48 1.098-1.07 1.098zm4.849 3.03c.59 0 1.07.492 1.07 1.099s-.48 1.098-1.07 1.098c-.591 0-1.07-.491-1.07-1.098 0-.607.479-1.099 1.07-1.099z",
    fill: "white"
  }));
};

SvgVrc.displayName = "SvgVrc";
SvgVrc.defaultProps = {
  size: 24,
  color: "#418BCA"
};

function _extends$jQ() { _extends$jQ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jQ.apply(this, arguments); }
var Svg$jM = styled("svg")({
  flex: "none"
}, space, color);

var SvgVtc = function SvgVtc(props) {
  return createElement(Svg$jM, _extends$jQ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M1.974 12.428l1.463-1.666H8.64l3.197 4.078 8.366-11.59c.514.464.981.976 1.396 1.53.43.573.804 1.185 1.122 1.835L12.449 20.822c-.194.204-.398.306-.612.306-.214 0-.43-.102-.646-.306l-6.496-8.395H1.974z",
    fill: "white"
  }));
};

SvgVtc.displayName = "SvgVtc";
SvgVtc.defaultProps = {
  size: 24,
  color: "#048657"
};

function _extends$jR() { _extends$jR = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jR.apply(this, arguments); }
var Svg$jN = styled("svg")({
  flex: "none"
}, space, color);

var SvgWabi = function SvgWabi(props) {
  return createElement(Svg$jN, _extends$jR({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.418 5.601c-.081.326-.067.743.023.78.09.038.316-.177.449-.421.127-.225.24-.292.398-.234.207.08.174.153-.252.52-.354.308-.425.418-.33.513.056.058.099.048.302-.062.255-.134.397-.125.397.029 0 .071-.094.129-.44.263-.245.096-.487.22-.543.282-.113.125-.312.518-.548 1.097-.204.502-.398.871-.525 1.015-.104.114-.454.187-1.191.244-.345.029-.388.024-.407-.058a7.26 7.26 0 01-.127-.675c0-.014.175-.01.392.006.388.028.775.133.955.258.137.096.151.081.213-.187.075-.306.236-.708.481-1.206.185-.37.19-.398.17-.747-.023-.388-.09-.555-.32-.81-.086-.09-.138-.19-.123-.229a.576.576 0 00.028-.09c0-.01.042-.02.09-.02.056 0 .155.086.245.215.25.355.326.287.326-.301 0-.268.02-.383.08-.45.095-.105.171-.11.251-.015.047.058.047.12.006.283zm-3.759 2.006c.033.354.1.478.312.555.085.033.203.082.26.1.137.058.175.263.322 1.604.155 1.455.188 1.662.335 2.111.223.684.203 1.48-.056 2.279-.133.412-.28.598-.582.761-.605.32-1.23.087-1.716-.642a2.364 2.364 0 01-.369-1.804c.072-.335.109-.842.075-.968-.013-.061-.165-.252-.335-.435-.53-.55-1.087-1.536-.978-1.713.033-.048.056-.197.056-.326 0-.263-.075-.369-.406-.555-.218-.124-.232-.249-.052-.594.099-.201.156-.244.652-.498.506-.258.733-.33 1.485-.464.312-.058.538-.053.708.02.2.086.256.195.29.57v-.001zM8.187 9.392c0 .244.08.484.137.422.024-.024.075-.158.123-.297.075-.24.213-.383.308-.321.08.052.051.33-.053.502-.142.235-.142.68.005.977.147.288.449.603.582.603.08-.005.175-.12.435-.564l.33-.56.052.335c.053.378.029.492-.184.861-.237.417-.501.742-.6.742-.113 0-.37-.253-.587-.579-.085-.135-.32-.393-.52-.58l-.363-.34-.222.039a2.61 2.61 0 01-.412.043c-.17.005-.189-.005-.202-.124-.016-.105.008-.139.107-.163.108-.019.218-.02.327-.005.132.02.231.01.283-.028.08-.058.076-.068-.004-.163-.048-.058-.19-.135-.322-.177-.33-.105-.544-.25-.544-.36 0-.143.18-.176.326-.057.488.402.625.46.753.33.09-.09.066-.263-.086-.564-.132-.269-.18-.518-.109-.589.048-.052.17-.038.255.029.1.08.185.345.185.588zm8.646 4.313a28.46 28.46 0 00-.756.881c-.88 1.063-.969 1.178-.932 1.216.038.038.785-.292.955-.421.213-.168.6-.579.671-.719.034-.057.08-.234.114-.387.057-.287.213-.507.354-.507.095 0 .138.11.1.253a2.866 2.866 0 01-.236.465c-.119.196-.199.373-.19.393.047.07.223.037.426-.082.118-.068.288-.244.416-.426.25-.354.42-.507.572-.507.127 0 .279.162.246.258-.015.038-.233.225-.478.412-.425.32-.558.488-.482.612.043.072.435-.024.851-.21.709-.32.903-.34 1.017-.125.094.178-.138.287-1.045.488-.25.058-.525.149-.61.201l-.156.096.109.091c.094.077.193.091.661.091.421 0 .578.02.648.072.09.072.085.077-.047.196-.085.072-.165.11-.213.091-.208-.086-.912-.215-1.168-.215-.458 0-.496.168-.08.33.189.077.26.163.222.264-.042.115-.156.095-.567-.096-.832-.388-.983-.408-1.98-.278-.473.063-.61.068-.662.019-.104-.086-.086-.167.061-.296.118-.1 1.03-1.8.988-1.838-.024-.024-.945.306-1.612.583-.085.034-.085.03 0-.105.312-.512 1.215-1.088 2.264-1.446.544-.187.577-.191.804-.187.151.01.194.03.203.105.015.12-.175.417-.468.728zM5.994 15.396c.175.249.577.67.638.67.062 0 .01-.416-.104-.852-.104-.398-.113-.589-.033-.67.061-.062.27-.077.355-.02.033.02.07.293.099.705.052.751.09.89.274 1.01.118.081.127.081.184.005.029-.044.061-.221.067-.398.013-.474.127-.685.33-.617.156.047.17.244.052.617-.137.435-.16.752-.099 1.177.09.58.308 1.097.416.987.024-.019.037-.666.043-1.431.004-1.197.014-1.437.085-1.662.132-.412.16-.43.68-.43.856 0 2.444.23 2.657.382.227.163.18.221-.27.364-.978.302-1.455.36-2.046.245-.194-.04-.37-.063-.388-.053-.019.01 0 .12.038.244.118.388.085.627-.194 1.479-.146.436-.284.944-.302 1.125-.019.182-.072.364-.1.402-.123.148-.26.082-.482-.23-.279-.382-.719-.803-.974-.938-.109-.058-.468-.163-.794-.24-.586-.133-.775-.225-.704-.339.024-.043.127-.048.355-.029.415.043.449-.014.17-.277a3.526 3.526 0 00-1.03-.637c-.356-.143-.417-.191-.417-.306 0-.092.132-.188.26-.188.042 0 .232.13.416.293.388.33.657.488.804.465.27-.04-.053-.666-.558-1.088-.185-.153-.364-.34-.402-.412-.062-.12-.062-.133.024-.195a.439.439 0 01.26-.058c.146.015.18.043.354.35.104.186.255.434.336.55zm6.779-8.22c.241-.037.292.158.292.154.128.33.053.742.053.742-.17-.033-.298-.244-.298-.244-.1-.235-.047-.651-.047-.651v-.001zM9.364 8.541s.364.201.502.416c0 0 .094.225.023.388 0 0-.378-.177-.567-.474 0 .005-.123-.153.043-.33z",
    fill: "white"
  }));
};

SvgWabi.displayName = "SvgWabi";
SvgWabi.defaultProps = {
  size: 24,
  color: "#399B32"
};

function _extends$jS() { _extends$jS = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jS.apply(this, arguments); }
var Svg$jO = styled("svg")({
  flex: "none"
}, space, color);

var SvgWan = function SvgWan(props) {
  return createElement(Svg$jO, _extends$jS({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M5.25 8.318l2 .847v4.765L12 11.09l4.796 2.84V9.165l1.954-.847v8.98L12 13.312l-6.75 3.986v-8.98zm.227-.367L12 4.125l6.569 3.826-1.773.733L12 5.912 7.25 8.684l-1.773-.733zm1.41 8.866l1.477-.848 3.659 2.119 3.613-2.119 1.523.848-5.136 3.058-5.136-3.058z",
    fill: "white"
  }));
};

SvgWan.displayName = "SvgWan";
SvgWan.defaultProps = {
  size: 24,
  color: "#136AAD"
};

function _extends$jT() { _extends$jT = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jT.apply(this, arguments); }
var Svg$jP = styled("svg")({
  flex: "none"
}, space, color);

var SvgWaves = function SvgWaves(props) {
  return createElement(Svg$jP, _extends$jT({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 4.5l7.5 7.5-7.5 7.5L4.5 12 12 4.5z",
    fill: "white"
  }));
};

SvgWaves.displayName = "SvgWaves";
SvgWaves.defaultProps = {
  size: 24,
  color: "#0155FF"
};

function _extends$jU() { _extends$jU = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jU.apply(this, arguments); }
var Svg$jQ = styled("svg")({
  flex: "none"
}, space, color);

var SvgWax = function SvgWax(props) {
  return createElement(Svg$jQ, _extends$jU({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M21 14.222h-1.773l-1.258-1.077-1.253 1.072h-1.499l-.716-.87h-2.469l.625-.772h1.214l-.925-1.13-3.228 3.93H8.22l.934-1.142h-1.56l-.844-2.365-.837 2.348H4.33L3 10.53h1.215l.894 2.51L6 10.541h1.5l.889 2.493.888-2.494h1.219l-1.341 3.692.298-.364 2.739-3.334H13.7l2.279 2.781 1.096-.943-3.47-2.998h1.781L21 14.222zm-1.759-2.23l-.836-.717.835-.71 1.687.001-1.686 1.426z",
    fill: "white"
  }));
};

SvgWax.displayName = "SvgWax";
SvgWax.defaultProps = {
  size: 24,
  color: "#F89022"
};

function _extends$jV() { _extends$jV = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jV.apply(this, arguments); }
var Svg$jR = styled("svg")({
  flex: "none"
}, space, color);

var SvgWgr = function SvgWgr(props) {
  return createElement(Svg$jR, _extends$jV({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M19.42 8.54c.117.199.101.408-.015.612-.174.277-.335.56-.5.84l-1.366 2.33c-.91 1.546-1.82 3.092-2.733 4.637a.555.555 0 01-.533.29.573.573 0 01-.502-.323c-.112-.199-.228-.395-.345-.593l-1.15-1.958c-.085-.148-.173-.293-.271-.457-.097.163-.187.308-.273.457l-1.15 1.957a28.08 28.08 0 00-.345.594.572.572 0 01-.502.323.56.56 0 01-.533-.29c-.433-.728-.86-1.457-1.29-2.188-.483-.815-.964-1.631-1.443-2.449l-1.365-2.33c-.165-.28-.329-.563-.5-.84-.124-.204-.142-.413-.026-.612.114-.195.298-.29.534-.29 1.476.005 2.953.015 4.429.002.373-.002.595.14.77.451.372.665.769 1.314 1.152 1.972.16.277.319.557.482.834.012.02.033.037.052.054a.203.203 0 00.051-.053c.161-.277.319-.558.482-.835.386-.658.78-1.31 1.153-1.972.173-.31.396-.453.769-.45 1.476.012 2.952.002 4.43-.003.24 0 .424.095.538.29zm-8.133 4.317c.031-.051.029-.143.003-.196-.075-.153-.174-.298-.262-.449-.528-.901-1.057-1.8-1.582-2.704-.054-.092-.117-.125-.225-.125-.984.006-1.97.006-2.953.008-.047 0-.093.007-.16.012l3.597 6.14c.104-.172.191-.31.275-.453.439-.742.875-1.487 1.307-2.233zm3.008 2.686c1.204-2.055 2.396-4.09 3.6-6.14-.07-.005-.114-.012-.16-.012-.985-.002-1.97-.002-2.953-.008-.109 0-.171.033-.225.125l-1.583 2.704c-.088.148-.184.293-.262.449a.234.234 0 000 .196c.435.745.87 1.49 1.309 2.233.082.143.17.283.274.453z",
    fill: "white"
  }));
};

SvgWgr.displayName = "SvgWgr";
SvgWgr.defaultProps = {
  size: 24,
  color: "#B80000"
};

function _extends$jW() { _extends$jW = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jW.apply(this, arguments); }
var Svg$jS = styled("svg")({
  flex: "none"
}, space, color);

var SvgWings = function SvgWings(props) {
  return createElement(Svg$jS, _extends$jW({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M14.178 11.804l-2.284 1.773-.935-3.243-5.418-1.452 7.11.365 1.527 2.557z",
    fill: "white",
    fillOpacity: 0.305
  }), createElement("path", {
    d: "M6.203 17.995l12.236-9.497 1.061 2.36-1.391-.386-.049 2.448-11.857 5.075z",
    fill: "white",
    fillOpacity: 0.7
  }), createElement("path", {
    d: "M17.097 13.335l-3.56-6.12L4.5 6.75l6.887 1.846 1.868 6.367 3.842-1.628z",
    fill: "white"
  }));
};

SvgWings.displayName = "SvgWings";
SvgWings.defaultProps = {
  size: 24,
  color: "#0DC9F7"
};

function _extends$jX() { _extends$jX = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jX.apply(this, arguments); }
var Svg$jT = styled("svg")({
  flex: "none"
}, space, color);

var SvgWpr = function SvgWpr(props) {
  return createElement(Svg$jT, _extends$jX({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M2.995 4.069a12.072 12.072 0 011.987-1.804l3.34 11.938L9.8 7.875h2.805l1.479 6.329 1.753-6.329h2.812l.026.113 3.055 11.035a12.071 12.071 0 01-1.912 2.081l-2.578-9.307-1.47 5.308-.026.113h-3.14l-1.402-5.2-1.402 5.2h-3.14l-.026-.113L2.995 4.07z",
    fill: "white"
  }));
};

SvgWpr.displayName = "SvgWpr";
SvgWpr.defaultProps = {
  size: 24,
  color: "#FFE600"
};

function _extends$jY() { _extends$jY = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jY.apply(this, arguments); }
var Svg$jU = styled("svg")({
  flex: "none"
}, space, color);

var SvgWtc = function SvgWtc(props) {
  return createElement(Svg$jU, _extends$jY({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.81 9.875L13.3 10c-.46.112-.783.517-.783.982v3.404l-1.685.412a.517.517 0 01-.642-.492V8.64a.51.51 0 01.392-.492l2.586-.633a.517.517 0 01.642.491v1.869zm-5.689-.032L7.482 10c-.46.112-.784.517-.784.982v3.435l-1.555.381a.518.518 0 01-.643-.492V8.64a.51.51 0 01.391-.492l2.587-.633a.518.518 0 01.642.491v1.838h.001zm8.15-1.68l2.586-.632a.518.518 0 01.643.491v5.667a.508.508 0 01-.392.491l-2.586.633a.517.517 0 01-.642-.491V8.655c0-.232.161-.435.391-.491z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.504,
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M9.673 9.985v4.321c0 .083.01.165.03.246.129.503.62.824 1.133.76v.704a.508.508 0 01-.392.492l-2.585.633a.517.517 0 01-.643-.492v-5.667c0-.232.161-.435.391-.491l2.066-.506zm5.69.032v4.305c0 .083.01.165.03.246.139.542.7.872 1.255.737l.007-.002v.712a.51.51 0 01-.391.492l-2.587.633a.517.517 0 01-.642-.49v-5.668c0-.232.161-.435.392-.491l1.934-.474h.001z",
    fill: "white"
  }));
};

SvgWtc.displayName = "SvgWtc";
SvgWtc.defaultProps = {
  size: 24,
  color: "#8200FF"
};

function _extends$jZ() { _extends$jZ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$jZ.apply(this, arguments); }
var Svg$jV = styled("svg")({
  flex: "none"
}, space, color);

var SvgXas = function SvgXas(props) {
  return createElement(Svg$jV, _extends$jZ({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M19.494 10.853l-7.102 8.258-.319.389-7.568-8.563.024-.01-.029-.005 2.941-4.918.002.002L7.441 6h9.191l-.002.005 2.87 4.847-.006.001zm-9.852.345l-1.627 2.755 4.013 4.584 4.023-4.621-1.592-2.727-4.817.008zm-2.083 2.234l1.32-2.234-3.272.005 1.952 2.23zm7.292-2.884l3.715-.006-2.332-3.906-3.662.008 2.279 3.904zm3.578.634l-3.205.006 1.285 2.201 1.92-2.207zm-4.343-.633l-2.018-3.458-2.048 3.465 4.066-.006zm-6.3-3.895l-2.324 3.91 3.795-.007 2.31-3.91-3.78.007z",
    fill: "white"
  }));
};

SvgXas.displayName = "SvgXas";
SvgXas.defaultProps = {
  size: 24,
  color: "#FAA00D"
};

function _extends$j_() { _extends$j_ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j_.apply(this, arguments); }
var Svg$jW = styled("svg")({
  flex: "none"
}, space, color);

var SvgXbc = function SvgXbc(props) {
  return createElement(Svg$jW, _extends$j_({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M19.483 14.816l-.409 1.637-1.091-.272.408-1.638-1.637-.408.272-1.09 1.637.407.409-1.637 1.091.272-.408 1.637 1.637.408-.272 1.092-1.637-.408zm-4.026-4.496c-.152 1.013-.704 1.505-1.434 1.68.999.527 1.504 1.34 1.011 2.758-.612 1.76-2.044 1.916-3.946 1.56l-.472 1.891-1.115-.277.466-1.868c-.297-.073-.593-.15-.888-.23L8.61 17.71l-1.113-.277.472-1.896c-.26-.067-.525-.138-.795-.205l-1.451-.362.561-1.307s.821.218.81.203c.317.077.458-.134.514-.274l.745-2.991.119.03a.88.88 0 00-.117-.038l.533-2.136c.015-.242-.065-.546-.518-.66.018-.011-.809-.2-.809-.2l.304-1.219 1.537.384-.001.006c.231.057.47.112.713.167l.467-1.874 1.114.278-.458 1.837c.3.068.6.137.893.21l.455-1.824 1.115.277-.467 1.874c1.407.488 2.434 1.225 2.223 2.608zm-2.57 3.664c.368-1.478-2.056-1.845-2.812-2.034l-.625 2.51c.756.188 3.086.94 3.439-.477h-.002zm.365-3.672c.335-1.345-1.693-1.633-2.322-1.79l-.568 2.278c.63.158 2.569.8 2.89-.488z",
    fill: "white"
  }));
};

SvgXbc.displayName = "SvgXbc";
SvgXbc.defaultProps = {
  size: 24,
  color: "#F7931A"
};

function _extends$j$() { _extends$j$ = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j$.apply(this, arguments); }
var Svg$jX = styled("svg")({
  flex: "none"
}, space, color);

var SvgXby = function SvgXby(props) {
  return createElement(Svg$jX, _extends$j$({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M4.5 6.762c0-.011.157-.012 2.189-.01l2.189.002 1.245 2.095 1.266 2.13.02.036.199-.338c.108-.186.196-.341.195-.346l-1.058-1.785a232.64 232.64 0 01-1.054-1.785c0-.01.329-.011 2.304-.011 1.28 0 2.305.003 2.305.008 0 .014-4.887 8.322-4.898 8.325-.008.001-.723-1.207-2.457-4.153A879.806 879.806 0 014.5 6.762zm10.605-.007c0-.003.99-.005 2.198-.005H19.5l-.003.016c-.002.01-1.097 1.876-2.433 4.147-1.62 2.75-2.434 4.13-2.445 4.131-.01.002-.24-.38-1.009-1.675l-1.002-1.682c-.007-.003-.4.665-.397.674 0 .003.453.765 1.003 1.692.339.563.671 1.129.998 1.698-.007.027-2.202 3.747-2.211 3.749-.014.003-2.197-3.705-2.192-3.724.003-.008 5.215-8.887 5.295-9.02h.001z",
    fill: "white"
  }));
};

SvgXby.displayName = "SvgXby";
SvgXby.defaultProps = {
  size: 24,
  color: "#56F4F1"
};

function _extends$k0() { _extends$k0 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k0.apply(this, arguments); }
var Svg$jY = styled("svg")({
  flex: "none"
}, space, color);

var SvgXcp = function SvgXcp(props) {
  return createElement(Svg$jY, _extends$k0({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M17.61 7.5h-3.033a.462.462 0 00-.33.14l-5.531 5.646a.463.463 0 01-.33.14H7.372a.463.463 0 01-.33-.14l-.717-.73a.479.479 0 01-.138-.335v-1.033a.48.48 0 01.138-.336l.717-.73a.46.46 0 01.33-.14h1.014c.123 0 .242.05.33.14l.44.448a.461.461 0 00.66 0l1.064-1.083a.482.482 0 000-.672L9.725 7.64a.463.463 0 00-.33-.14H6.362a.463.463 0 00-.33.14L3.887 9.822a.48.48 0 00-.136.336v3.089c0 .126.05.248.136.336l2.145 2.185a.463.463 0 00.33.139h3.034a.465.465 0 00.33-.14l5.531-5.646a.463.463 0 01.33-.14h1.014c.124 0 .242.05.33.14l.717.73a.48.48 0 01.137.336v1.032a.48.48 0 01-.137.336l-.717.73a.462.462 0 01-.33.14h-1.014a.462.462 0 01-.33-.14l-.444-.452a.46.46 0 00-.656-.004l-1.313 1.307a.478.478 0 00-.14.34v3.03c0 .262.21.475.467.475h1.53a.471.471 0 00.467-.475v-1.125a.47.47 0 01.466-.475h1.977a.462.462 0 00.33-.138l2.145-2.185a.48.48 0 00.137-.336V10.16a.48.48 0 00-.136-.337L17.942 7.64a.463.463 0 00-.33-.139",
    fill: "white"
  }));
};

SvgXcp.displayName = "SvgXcp";
SvgXcp.defaultProps = {
  size: 24,
  color: "#ED1650"
};

function _extends$k1() { _extends$k1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k1.apply(this, arguments); }
var Svg$jZ = styled("svg")({
  flex: "none"
}, space, color);

var SvgXdn = function SvgXdn(props) {
  return createElement(Svg$jZ, _extends$k1({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M9.982 9h2.053c.992 0 2.762.602 2.762 3s-1.77 3-2.762 3H9.982V9zm1.132 4.785h.85c.709 0 1.559-.434 1.559-1.785s-.85-1.785-1.558-1.785h-.85v3.57zM15.577 9h.425l3.824 5.27V9h.424v6h-.425L16 9.846V15h-.425l.002-6zM3.75 9h1.416v1.5H3.75V9zm2.125 0H7.29v1.5H5.875V9zm2.124 0h1.417v1.5H7.998V9zm0 2.25h1.417v1.5H7.998v-1.5zm0 2.25h1.417V15H7.998v-1.5zm-2.124-2.25H7.29v1.5H5.875v-1.5z",
    fill: "white"
  }));
};

SvgXdn.displayName = "SvgXdn";
SvgXdn.defaultProps = {
  size: 24,
  color: "#4F7AA2"
};

function _extends$k2() { _extends$k2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k2.apply(this, arguments); }
var Svg$j_ = styled("svg")({
  flex: "none"
}, space, color);

var SvgXem = function SvgXem(props) {
  return createElement(Svg$j_, _extends$k2({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M4.609 8.966A14.873 14.873 0 014.5 7.227a15.165 15.165 0 017.81-1.974c.427.008 1.043.056 1.511.106a4.504 4.504 0 00-2.377 3.883 4.09 4.09 0 01-.135 1.015 3.398 3.398 0 01-6.351.504 1.106 1.106 0 01-.075-.225 15.128 15.128 0 01-.274-1.57zm12.46 6.42c-.179.277-.368.547-.564.813a4.423 4.423 0 00-.548-2.167 4.449 4.449 0 00-1.61-1.697l-.067-.042a5.706 5.706 0 01-.112-.067c-.852-.543-1.372-1.302-1.555-2.281a3.389 3.389 0 012.537-3.914 3.358 3.358 0 011.828.062c.464.146.933.338 1.506.605.33.156.663.328 1.017.528a15.08 15.08 0 01-.34 3.111 15.109 15.109 0 01-2.092 5.049zM14.79 18.14A15.39 15.39 0 0112 20.25a15.282 15.282 0 01-6.229-7.02 4.412 4.412 0 001.815.588 4.52 4.52 0 002.71-.58c.395-.224.83-.37 1.28-.426a3.39 3.39 0 013.677 2.404c.25.84.177 1.667-.213 2.48-.033.07-.061.125-.129.257l-.033.066a.438.438 0 01-.088.121z",
    fill: "white"
  }));
};

SvgXem.displayName = "SvgXem";
SvgXem.defaultProps = {
  size: 24,
  color: "#67B2E8"
};

function _extends$k3() { _extends$k3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k3.apply(this, arguments); }
var Svg$j$ = styled("svg")({
  flex: "none"
}, space, color);

var SvgXlm = function SvgXlm(props) {
  return createElement(Svg$j$, _extends$k3({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M9.584 10.145c.517-.92 1.044-1.834 1.583-2.742 1.577-2.65 5.793-2.925 6.022-2.76l-.002.005.003-.003c.23.165 1.395 4.312-.516 6.721-.65.819-1.31 1.629-1.98 2.431.697 1.096 1.172 2.948-.47 5.558-.078.123-.225.224-.236-.031-.025-.622-.242-1.858-1.427-3.013l-.075.088c-.364.438-.667.38-1.167.02l-.04-.03c-.058.22-.154.427-.283.614-.014.021-.031.04-.047.062-1.11 1.562-2.675 2.33-3.529 1.714-.853-.615-.675-2.383.389-3.98l.041-.067a1.95 1.95 0 01.465-.475c-.5-.361-.657-.633-.376-1.13l.04-.072c-1.465-.715-2.678-.503-3.265-.318-.243.078-.199-.1-.109-.217 1.854-2.418 3.712-2.642 4.98-2.375zm-.784 4.46a1.361 1.361 0 00-.19.218l-.03.045c-.75 1.099-.88 2.31-.286 2.73.594.418 1.69-.114 2.472-1.19.011-.015.024-.027.034-.042.052-.073.095-.15.13-.227l-1.113-.801-1.017-.732zm3.699-6.577a1.753 1.753 0 00.412 2.414 1.683 1.683 0 002.373-.418 1.752 1.752 0 00-.413-2.415 1.684 1.684 0 00-2.372.419z",
    fill: "white"
  }));
};

SvgXlm.displayName = "SvgXlm";
SvgXlm.defaultProps = {
  size: 24,
  color: "#14B6E7"
};

function _extends$k4() { _extends$k4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k4.apply(this, arguments); }
var Svg$k0 = styled("svg")({
  flex: "none"
}, space, color);

var SvgXmg = function SvgXmg(props) {
  return createElement(Svg$k0, _extends$k4({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M17.25 14.655l-1.112 4.095H6.75v-.685l5.092-5.789-4.99-6.282V5.25h9.249l.323 3.189h-.593c-.39-.727-.722-1.27-.996-1.631-.273-.361-.517-.585-.731-.675a2.008 2.008 0 00-.626-.157 8.164 8.164 0 00-.954-.049H9.896l3.937 4.905v.236l-4.866 5.524h5.554c.273 0 .523-.065.75-.195.226-.13.423-.294.588-.49.175-.203.33-.423.462-.655.142-.247.267-.503.373-.767l.556.17z",
    fill: "white"
  }));
};

SvgXmg.displayName = "SvgXmg";
SvgXmg.defaultProps = {
  size: 24,
  color: "#004A80"
};

function _extends$k5() { _extends$k5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k5.apply(this, arguments); }
var Svg$k1 = styled("svg")({
  flex: "none"
}, space, color);

var SvgXmr = function SvgXmr(props) {
  return createElement(Svg$k1, _extends$k5({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.977 3.926a8.112 8.112 0 017.7 10.692h-2.419v-6.82l-5.28 5.28-5.28-5.28v6.82h-2.42a8.303 8.303 0 01-.418-2.574 8.112 8.112 0 018.118-8.118zm-1.209 10.339L12 15.476l1.21-1.21 2.288-2.31v4.29h3.41a8.106 8.106 0 01-6.93 3.894 8.13 8.13 0 01-6.93-3.894h3.41v-4.29l2.31 2.31v-.001z",
    fill: "white"
  }));
};

SvgXmr.displayName = "SvgXmr";
SvgXmr.defaultProps = {
  size: 24,
  color: "#FF6600"
};

function _extends$k6() { _extends$k6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k6.apply(this, arguments); }
var Svg$k2 = styled("svg")({
  flex: "none"
}, space, color);

var SvgXmy = function SvgXmy(props) {
  return createElement(Svg$k2, _extends$k6({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.787 15.75c-.451 0-.947-.227-.947-.909 0-.336.263-1.369.786-3.099.107-.267.16-.507.16-.72 0-.408-.314-.817-.9-.817-.341 0-1.083.135-1.308.863-.15.485-.496 1.773-1.037 3.864-.21.545-.586.818-1.127.818-.811 0-.947-.591-.947-.955 0-.144.216-1.014.649-2.61.168-.532.252-.92.252-1.162 0-.364-.27-.818-.901-.818-.63 0-1.217.454-1.487 1.454-.18.667-.436 1.667-.767 3-.18.727-.586 1.091-1.217 1.091-.571 0-.871-.318-.901-.955l1.036-4.318H4.832a1.067 1.067 0 01-1.026-1.472A1.069 1.069 0 014.81 8.34h3.854c.54 0 .872.258.992.772.541-.68 1.262-.863 1.894-.863.632 0 1.442.364 1.803 1.182.495-.546 1.352-1.182 2.57-1.182 1.126 0 2.073.773 2.073 2.136 0 .515-.255 1.591-.766 3.228l1.977-.014c.579 0 1.043.482 1.043 1.075s-.464 1.075-1.037 1.075h-3.426z",
    fill: "white"
  }));
};

SvgXmy.displayName = "SvgXmy";
SvgXmy.defaultProps = {
  size: 24,
  color: "#EC1076"
};

function _extends$k7() { _extends$k7 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k7.apply(this, arguments); }
var Svg$k3 = styled("svg")({
  flex: "none"
}, space, color);

var SvgXp = function SvgXp(props) {
  return createElement(Svg$k3, _extends$k7({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.092 17.25H9.744l-.812-3.188 1.984-1.036.646 1.845.48-2.434 2.637-1.377-.146.731 1.523.015c.588-.01 1.043-.208 1.367-.595.324-.388.478-.908.462-1.562a1.736 1.736 0 00-.027-.251l2.048-1.07c.283.52.391 1.135.325 1.84-.11 1.03-.555 1.853-1.334 2.47-.78.618-1.773.927-2.98.927l-1.73-.007-.732 3.692h-2.363zm.316-8.242h1.313l-2.023 2.868-4.995 2.611 1.851-2.617-1.779-5.12h2.61l.922 3.592.79-1.335h1.312-1.313l1.409-2.257h1.661l3.845.008c.873.024 1.59.255 2.15.695l-2.1 1.098a1.327 1.327 0 00-.157-.02l-1.72-.015-.225 1.133-2.638 1.378.399-2.02h-1.312zM4.34 16.463l3.995-2.089-1.761 2.875H3.75l.575-.814.014.028z",
    fill: "white"
  }));
};

SvgXp.displayName = "SvgXp";
SvgXp.defaultProps = {
  size: 24,
  color: "#008200"
};

function _extends$k8() { _extends$k8 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k8.apply(this, arguments); }
var Svg$k4 = styled("svg")({
  flex: "none"
}, space, color);

var SvgXpa = function SvgXpa(props) {
  return createElement(Svg$k4, _extends$k8({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M19.181 9.634L13.1 7.891l-2.08 3.544-2.417-2.803 1.095-.14 1.129 1.325 1.252-2.219-5.512-1.58a.44.44 0 00-.553.525l2.443 9.807 2.622-4.416 2.417 2.803-1.095.14-1.128-1.325-2.483 4.137.368 1.478a.443.443 0 00.735.21l9.472-9.007a.435.435 0 00-.183-.736z",
    fill: "white"
  }));
};

SvgXpa.displayName = "SvgXpa";
SvgXpa.defaultProps = {
  size: 24,
  color: "#4FA784"
};

function _extends$k9() { _extends$k9 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k9.apply(this, arguments); }
var Svg$k5 = styled("svg")({
  flex: "none"
}, space, color);

var SvgXpm = function SvgXpm(props) {
  return createElement(Svg$k5, _extends$k9({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M18 11.671c0 3.318-2.57 4.446-4.732 4.446v.864h1.668v1.172h-1.668V19.5h-2.61v-1.347H9.063v-1.171h1.592v-.877c-.692 0-4.655-.164-4.655-4.674V6h2.591v5.639c0 2.354 2.075 2.332 2.075 2.332V6h2.602v7.971s2.14.12 2.14-2.365V6H18v5.671z",
    fill: "white"
  }));
};

SvgXpm.displayName = "SvgXpm";
SvgXpm.defaultProps = {
  size: 24,
  color: "#FFD81B"
};

function _extends$ka() { _extends$ka = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ka.apply(this, arguments); }
var Svg$k6 = styled("svg")({
  flex: "none"
}, space, color);

var SvgXrp = function SvgXrp(props) {
  return createElement(Svg$k6, _extends$ka({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.47 13.654c-.517-.306-1.1-.395-1.678-.416-.484-.017-1.207-.335-1.207-1.237a1.24 1.24 0 011.207-1.24c.578-.02 1.161-.109 1.679-.415 1.285-.76 1.852-2.355 1.345-3.784-.508-1.429-1.944-2.278-3.405-2.014-1.462.264-2.528 1.565-2.528 3.086 0 .606.212 1.165.48 1.683.226.435.34 1.245-.435 1.703-.578.341-1.298.125-1.658-.464-.303-.498-.67-.965-1.183-1.269a3.008 3.008 0 00-3.872.7 3.191 3.191 0 000 4.027 3.007 3.007 0 003.872.699c.514-.303.88-.77 1.184-1.268.25-.409.872-.93 1.657-.465.576.341.754 1.088.435 1.704-.27.517-.48 1.076-.48 1.683 0 1.52 1.066 2.821 2.528 3.085 1.461.264 2.897-.585 3.405-2.014.507-1.428-.06-3.024-1.345-3.784h-.001z",
    fill: "white"
  }));
};

SvgXrp.displayName = "SvgXrp";
SvgXrp.defaultProps = {
  size: 24,
  color: "#00AAE4"
};

function _extends$kb() { _extends$kb = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$kb.apply(this, arguments); }
var Svg$k7 = styled("svg")({
  flex: "none"
}, space, color);

var SvgXtz = function SvgXtz(props) {
  return createElement(Svg$k7, _extends$kb({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M13.643 19.5c-1.096 0-1.894-.258-2.395-.773-.5-.515-.75-1.071-.75-1.667 0-.217.043-.401.131-.55a.953.953 0 01.358-.352c.151-.085.337-.129.559-.129.22 0 .408.044.559.129.152.086.27.203.358.352.088.149.131.333.131.55 0 .264-.064.478-.192.645a.888.888 0 01-.454.326c.151.206.39.352.716.438.326.092.652.138.978.138.437.005.866-.12 1.232-.361.367-.24.637-.596.811-1.065.175-.47.263-1.003.263-1.598 0-.648-.096-1.2-.288-1.659-.187-.464-.463-.807-.83-1.03a2.243 2.243 0 00-1.188-.335c-.28 0-.629.114-1.048.343l-.769.378v-.378l3.46-4.536h-4.787v4.708c0 .39.087.71.262.962.174.252.443.378.803.378.28 0 .547-.091.804-.275.257-.184.481-.41.663-.67a.257.257 0 01.088-.112.178.178 0 01.114-.042c.064 0 .139.031.227.094.08.086.123.2.122.317a2.18 2.18 0 01-.043.241c-.199.435-.473.768-.822.997a2.06 2.06 0 01-1.152.343c-1.037 0-1.753-.2-2.15-.601-.395-.4-.593-.945-.593-1.632V8.366H6.375V7.49H8.82V5.497l-.558-.55V4.5h1.624l.612.309v2.68l6.323-.017.63.619-3.879 3.815c.235-.093.482-.151.734-.173.42 0 .89.132 1.415.396.53.257.937.613 1.222 1.065.286.447.47.877.55 1.29.082.36.126.729.132 1.099.006.709-.156 1.41-.472 2.044a3.027 3.027 0 01-1.432 1.409c-.649.31-1.36.47-2.079.464z",
    fill: "white"
  }));
};

SvgXtz.displayName = "SvgXtz";
SvgXtz.defaultProps = {
  size: 24,
  color: "#A6E000"
};

function _extends$kc() { _extends$kc = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$kc.apply(this, arguments); }
var Svg$k8 = styled("svg")({
  flex: "none"
}, space, color);

var SvgXuc = function SvgXuc(props) {
  return createElement(Svg$k8, _extends$kc({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M20.25 12a8.25 8.25 0 11-16.5 0 8.25 8.25 0 0116.5 0zm-2.828.26c.006-.094 0 0 0-.096 0-2.705-1.998-5.108-4.591-5.512V5.077l-1.68.523v1.053a5.412 5.412 0 00-4.577 5.343 5.417 5.417 0 004.758 5.374v1.551l1.68-.523v-1.085a5.422 5.422 0 004.081-3.51h-1.74a3.81 3.81 0 01-5.96.99 3.82 3.82 0 01-1.208-2.52l9.238-.014zm-8.985-1.662a3.82 3.82 0 017.108 0H8.438z",
    fill: "white"
  }));
};

SvgXuc.displayName = "SvgXuc";
SvgXuc.defaultProps = {
  size: 24,
  color: "#25AAE3"
};

function _extends$kd() { _extends$kd = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$kd.apply(this, arguments); }
var Svg$k9 = styled("svg")({
  flex: "none"
}, space, color);

var SvgXvc = function SvgXvc(props) {
  return createElement(Svg$k9, _extends$kd({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.588 8.057H6L7.248 6h3.1v8.038L16.285 6H19.5l-8.357 12H7.588V8.057z",
    fill: "white"
  }));
};

SvgXvc.displayName = "SvgXvc";
SvgXvc.defaultProps = {
  size: 24,
  color: "#B50126"
};

function _extends$ke() { _extends$ke = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ke.apply(this, arguments); }
var Svg$ka = styled("svg")({
  flex: "none"
}, space, color);

var SvgXvg = function SvgXvg(props) {
  return createElement(Svg$ka, _extends$ke({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M7.207 7.751L6 5.25h12l-1.194 2.501H18L11.963 20.25 6 7.751h1.207zm0 0l4.829 9.998 4.77-9.998H7.208z",
    fill: "white"
  }), createElement("path", {
    opacity: 0.504,
    d: "M12 18.375L6 5.25h12l-6 13.125z",
    fill: "white"
  }));
};

SvgXvg.displayName = "SvgXvg";
SvgXvg.defaultProps = {
  size: 24,
  color: "#00CBFF"
};

function _extends$kf() { _extends$kf = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$kf.apply(this, arguments); }
var Svg$kb = styled("svg")({
  flex: "none"
}, space, color);

var SvgXzc = function SvgXzc(props) {
  return createElement(Svg$kb, _extends$kf({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M14.044 14.361h2.542v2.223H8.948l9.482-9.489a1.101 1.101 0 00.24-1.18 1.09 1.09 0 00-1.008-.665H6.339A1.08 1.08 0 005.25 6.339v8.022l4.706-4.71H7.414V7.416h7.626l-9.47 9.489a1.101 1.101 0 00-.24 1.18 1.09 1.09 0 001.008.665h11.325a1.088 1.088 0 001.087-1.089v-8.01l-4.706 4.71z",
    fill: "white"
  }));
};

SvgXzc.displayName = "SvgXzc";
SvgXzc.defaultProps = {
  size: 24,
  color: "#23B852"
};

function _extends$kg() { _extends$kg = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$kg.apply(this, arguments); }
var Svg$kc = styled("svg")({
  flex: "none"
}, space, color);

var SvgYoyow = function SvgYoyow(props) {
  return createElement(Svg$kc, _extends$kg({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M16.117 12.431c.255.273.41.637.41 1.036 0 .847-.696 1.533-1.554 1.533a1.543 1.543 0 01-1.553-1.533c0-.399.155-.763.409-1.036a.558.558 0 01-.897-.431.54.54 0 01.118-.338 1.56 1.56 0 01-1.05.404 1.56 1.56 0 01-1.05-.404.54.54 0 01.118.338.55.55 0 01-.555.547.558.558 0 01-.341-.116c.253.273.408.637.408 1.036 0 .847-.696 1.533-1.553 1.533a1.544 1.544 0 01-1.554-1.533c0-.399.155-.763.409-1.036A.558.558 0 016.986 12a.54.54 0 01.117-.338 1.56 1.56 0 01-1.05.404A1.543 1.543 0 014.5 10.533C4.5 9.686 5.195 9 6.053 9s1.553.686 1.553 1.533c0 .399-.154.763-.408 1.036a.557.557 0 01.897.431.54.54 0 01-.118.338c.276-.251.645-.404 1.05-.404s.773.153 1.05.404A.54.54 0 019.959 12a.557.557 0 01.896-.431 1.517 1.517 0 01-.408-1.036C10.447 9.686 11.142 9 12 9s1.553.686 1.553 1.533c0 .399-.154.763-.409 1.036a.557.557 0 01.897.431.54.54 0 01-.117.338c.276-.251.645-.404 1.05-.404s.772.153 1.05.404a.54.54 0 01-.119-.338.557.557 0 01.897-.431 1.517 1.517 0 01-.409-1.036c0-.847.696-1.533 1.554-1.533.858 0 1.553.686 1.553 1.533 0 .847-.695 1.533-1.553 1.533a1.56 1.56 0 01-1.05-.404.54.54 0 01.118.338.55.55 0 01-.556.547.558.558 0 01-.34-.116h-.002z",
    fill: "white"
  }));
};

SvgYoyow.displayName = "SvgYoyow";
SvgYoyow.defaultProps = {
  size: 24,
  color: "#21A5DE"
};

function _extends$kh() { _extends$kh = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$kh.apply(this, arguments); }
var Svg$kd = styled("svg")({
  flex: "none"
}, space, color);

var SvgZcl = function SvgZcl(props) {
  return createElement(Svg$kd, _extends$kh({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.994 20.25c-4.556-.003-8.244-3.698-8.244-8.26 0-4.554 3.699-8.243 8.261-8.24 4.549.003 8.245 3.7 8.239 8.252-.009 4.501-3.627 8.242-8.256 8.248zm-3.362-4.477c.023-.045.041-.08.058-.108.738-1.302 1.478-2.603 2.217-3.902.648-1.139 1.295-2.278 1.939-3.418a.11.11 0 01.113-.068c.752.004 1.508.004 2.26.004h.108l-3.13 5.52a.86.86 0 00.079.003c1.89 0 3.777 0 5.664.003.064 0 .084-.024.098-.079a6.238 6.238 0 00-1.735-6.251 5.744 5.744 0 00-1.38-.973 6.161 6.161 0 00-3.963-.6c-1.38.245-2.543.897-3.496 1.928-.125.135-.239.28-.358.42.003.008.01.014.012.022h5.385c-.03.056-.05.097-.073.135-.328.582-.66 1.161-.985 1.744a.149.149 0 01-.152.087c-1.696-.003-3.392-.004-5.087-.003h-.103c-.859 2.702.355 6.091 3.401 7.447 2.949 1.317 6.041.105 7.491-1.918-2.786.006-5.574.008-8.363.006zm9.482 1.423c1.046-1.163 1.976-3.075 1.918-5.372-.047-1.893-.695-3.555-1.906-5.025-.378.38-.747.75-1.113 1.12 1.92 2.31 2.002 5.724.02 8.176l1.081 1.101z",
    fill: "white"
  }));
};

SvgZcl.displayName = "SvgZcl";
SvgZcl.defaultProps = {
  size: 24,
  color: "#C87035"
};

function _extends$ki() { _extends$ki = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ki.apply(this, arguments); }
var Svg$ke = styled("svg")({
  flex: "none"
}, space, color);

var SvgZec = function SvgZec(props) {
  return createElement(Svg$ke, _extends$ki({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.322 14.884h4.723v2.513h-2.907c.049.719.073 1.385.121 2.103h-2.446v-2.078H7.907c0-.82-.097-1.64.048-2.41.073-.41.509-.769.775-1.127.921-1.151 1.85-2.297 2.785-3.436.364-.437.727-.847 1.139-1.333h-4.53V6.603h2.69V4.5h2.348v2.051h2.931c0 .846.097 1.667-.048 2.436-.073.41-.509.77-.799 1.128a347.378 347.378 0 01-2.786 3.436c-.365.456-.745.901-1.138 1.333z",
    fill: "white"
  }));
};

SvgZec.displayName = "SvgZec";
SvgZec.defaultProps = {
  size: 24,
  color: "#ECB244"
};

function _extends$kj() { _extends$kj = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$kj.apply(this, arguments); }
var Svg$kf = styled("svg")({
  flex: "none"
}, space, color);

var SvgZel = function SvgZel(props) {
  return createElement(Svg$kf, _extends$kj({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M3.75 11.711l3.371-1.903 3.37 1.903v3.636l-3.37 1.903-3.371-1.903V11.71zm9.758 0l3.37-1.903 3.372 1.903v3.636l-3.371 1.903-3.37-1.903V11.71h-.002zm-.354 3.158l-1.183.65-1.124-.617v-3.48L7.772 9.685V8.422L11.97 6l4.198 2.422V9.72l-3.016 1.702v3.447z",
    fill: "white"
  }));
};

SvgZel.displayName = "SvgZel";
SvgZel.defaultProps = {
  size: 24,
  color: "#183C87"
};

function _extends$kk() { _extends$kk = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$kk.apply(this, arguments); }
var Svg$kg = styled("svg")({
  flex: "none"
}, space, color);

var SvgZen = function SvgZen(props) {
  return createElement(Svg$kg, _extends$kk({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M14 12.973l-1.01-.603V9.65l-2.37-1.384V7.013L14 8.976v3.996zm-1.377-2.75v1.15l-2.412 1.416v2.805l-.975.583v-3.965l3.386-1.99zM10.9 12.835l1.083-.626 2.316 1.38 2.332-1.38 1.05.628-3.393 1.998-3.388-2zm3.388 2.351l3.69-2.172v4.33L14.288 19.5l-3.69-2.168V13.01l3.69 2.178zm-5.353-3.15v4.32L5.25 14.21V9.872l3.674-2.164 3.7 2.163-3.689 2.166zm9.042-5.391v4.345L14.3 13.154V8.802l-3.679-2.14L14.305 4.5l3.672 2.146z",
    fill: "white"
  }));
};

SvgZen.displayName = "SvgZen";
SvgZen.defaultProps = {
  size: 24,
  color: "#234871"
};

function _extends$kl() { _extends$kl = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$kl.apply(this, arguments); }
var Svg$kh = styled("svg")({
  flex: "none"
}, space, color);

var SvgZil = function SvgZil(props) {
  return createElement(Svg$kh, _extends$kl({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M6.75 5.46l8.335 4.038 2.134-.961L8.92 4.5l-2.169.96z",
    fill: "white",
    fillOpacity: 0.304
  }), createElement("path", {
    d: "M15.085 9.488l2.134-.96v2.148l-2.134.961V9.488zm0 9.963v-6.703l2.134-.97v6.713l-2.134.96z",
    fill: "white",
    fillOpacity: 0.646
  }), createElement("path", {
    d: "M6.75 5.463v2.173l5.77 2.802-5.77 2.858v2.142l8.335 4.03v-2.156l-5.66-2.753 5.66-2.91v-2.15L6.75 5.464z",
    fill: "white"
  }));
};

SvgZil.displayName = "SvgZil";
SvgZil.defaultProps = {
  size: 24,
  color: "#49C1BF"
};

function _extends$km() { _extends$km = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$km.apply(this, arguments); }
var Svg$ki = styled("svg")({
  flex: "none"
}, space, color);

var SvgZilla = function SvgZilla(props) {
  return createElement(Svg$ki, _extends$km({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.629 4.705a29.025 29.025 0 00-.37 1.833c-.038.254-.196.592.244.774-.1.02-.132.033-.163.026-.313-.039-.634-.084-.947-.123-.07-.007-.157-.02-.22.013a.914.914 0 00-.395 1.196c.12.253.157.487.107.754a.374.374 0 00.037.201c.245.599.29 1.197.094 1.82-.031.098-.012.216-.006.32.013.201.025.403.044.604-.308-.247-.645-.468-.903-.767a1.494 1.494 0 01-.351-1.098c.006-.078-.057-.17-.107-.241-.145-.215-.313-.41-.433-.638-.169-.324-.376-.46-.715-.357-.169.052-.326.162-.47.273-.126.09-.233.208-.345.312-.013-.013-.032-.026-.044-.039.019-.045.025-.097.05-.143.176-.325.17-.319-.075-.592-.47-.526-.879-1.092-1.054-1.807-.088-.357-.195-.709-.288-1.06-.471.585-.533 2.693-.069 3.524-.145-.735-.289-1.43-.126-2.145.031.162.05.318.057.481a4.19 4.19 0 00.407 1.638c.05.11.195.176.302.254.037.026.087.039.131.058-.006.026-.006.053-.013.071-.232-.012-.457-.039-.69-.045-.15-.006-.325-.045-.445.02-.157.084-.282.248-.37.41-.025.045.1.227.195.299.25.188.42.396.382.747-.006.085.088.234.17.267.225.085.288.253.325.468.026.136.045.312.132.39.282.26.37.572.377.95.006.24.131.487.1.72-.025.202.012.352.094.469h-.006l.019.02c.05.077.12.142.2.201l.164.156s.282.305.288.604c.006.3-.019.338.069.605.088.26.207.468.245.69.037.22-.044.285.088.428.131.143.276.24.426.404.144.169.351.227.49.37.137.143.356.41.526.579.088.091.207.162.295.214.025.026.037.039.031.053-.119.259.125.253.22.337.163.143.395.234.514.41.213.318.49.481.835.579.031.006.069.012.08.032.045.052.075.117.114.175-.013.02-.032.04-.044.059.345.123.69.253 1.034.37a.367.367 0 00.22.008c.289-.098.578-.203.866-.306.056-.02.144-.078.138-.105-.044-.207.125-.175.22-.227.224-.123.489-.214.658-.39.207-.221.395-.449.671-.598.113-.066.338-.091.225-.338-.006-.013.057-.065.089-.097.043-.04.094-.072.157-.124.043-.02.093-.052.175-.111.182-.142.558-.5.709-.69.15-.188.395-.422.395-.422s-.157-.37-.056-.695l.532-.396c.114-.241.145-.333.27-.58.12-.247.15-.721.32-.91.15-.162.333-.292.326-.396a.747.747 0 00.038-.345c-.018-.169.037-.345.056-.514.013-.142 0-.286.038-.422.063-.221.107-.48.244-.637.15-.17.252-.319.27-.546.02-.196.094-.351.29-.443a.406.406 0 00.187-.305c-.006-.293.087-.5.326-.657.069-.045.12-.123.188-.175.113-.085.095-.182.032-.293-.163-.292-.408-.396-.734-.337-.245.045-.615.07-.747.07-.131 0-.037-.097-.037-.097.464-.013.52-.396.627-.708.088-.26.138-.533.182-.806.044-.26.044-.384.094-.788.05-.403.17.781-.019 1.75.377-.572.257-2.647-.163-3.257-.012.012-.025.02-.025.032-.019.078-.031.156-.05.234-.182.994-.558 1.885-1.255 2.614-.257.266-.244.273-.069.617.02.033.02.078.025.124-.15-.072-.262-.176-.375-.273a1.02 1.02 0 00-.747-.286c-.3 0-.383.22-.47.435-.163.39-.546.63-.559 1.151-.018.76-.696 1.144-1.135 1.651-.006.008-.025-.006-.05-.006-.006-.026-.025-.059-.02-.085 0-.468.127-.942-.08-1.391-.013-.026-.007-.065 0-.09.08-.658.156-1.308.244-1.958.012-.084.056-.162.094-.24.22-.468.056-1.002-.388-1.236a.324.324 0 00-.176-.026c-.245.032-.483.078-.722.11-.12.02-.244.02-.363.027-.007-.02-.013-.04-.019-.053.2-.064.3-.187.257-.409l-.452-2.25c-.012-.058-.025-.35.044-.2.07.155.289.824.414 1.247.12.41.213.833.32 1.248-.176-1.163-.445-2.295-1.11-3.328-.177.222-.319.47-.42.735-.162.473-.312.95-.452 1.43-.106.37-.382 1.099-.263 1.118.118.02.702-2.165.74-2.32.037-.157.107-.15.037.142z",
    fill: "white"
  }));
};

SvgZilla.displayName = "SvgZilla";
SvgZilla.defaultProps = {
  size: 24,
  color: "#00004D"
};

function _extends$kn() { _extends$kn = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$kn.apply(this, arguments); }
var Svg$kj = styled("svg")({
  flex: "none"
}, space, color);

var SvgZrx = function SvgZrx(props) {
  return createElement(Svg$kj, _extends$kn({}, props, {
    viewBox: "0 0 24 24",
    fill: "currentcolor",
    height: props.size,
    width: props.size
  }), createElement("path", {
    d: "M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z",
    fill: "inherit"
  }), createElement("path", {
    d: "M11.597 20.8c-.216-.023-.432-.042-.649-.068a8.705 8.705 0 01-3.297-1.09c-.015-.008-.029-.021-.058-.041l5.287-3.952.533.517c.296.29.593.576.883.87.072.072.125.072.209.028a5.72 5.72 0 002.182-1.912l.086-.126c.025.029.048.052.067.078.613.817 1.227 1.635 1.843 2.45.053.07.047.112-.01.175-1.427 1.622-3.2 2.62-5.336 2.961-.269.044-.542.06-.813.09-.036.003-.072.013-.107.02h-.82zm.776-17.6l.447.045c1.261.12 2.441.494 3.539 1.12.016.01.03.02.056.04L11.041 8.26c-.072-.068-.14-.131-.208-.197-.378-.368-.758-.735-1.133-1.107-.06-.06-.105-.066-.18-.028a5.717 5.717 0 00-2.216 1.94l-.08.12-1.975-2.63c.2-.212.383-.422.583-.617a8.727 8.727 0 014.627-2.396c.343-.062.694-.083 1.042-.124.04-.004.079-.014.117-.02h.755zM4.366 7.628l3.996 5.238-.806.827c-.2.205-.4.414-.605.616-.058.057-.06.102-.025.172a5.708 5.708 0 002.021 2.273c.005.002.008.01.021.037L6.36 18.75c-1.56-1.344-2.573-3-2.978-5.007-.435-2.148-.083-4.179.985-6.114zm11.34 3.495l.736-.762c.203-.213.404-.428.614-.636.066-.064.066-.113.027-.19a5.71 5.71 0 00-1.96-2.238l-.109-.077 2.624-1.968c1.485 1.272 2.472 2.84 2.925 4.731.565 2.362.061 4.698-.918 6.342l-3.938-5.202z",
    fill: "white"
  }));
};

SvgZrx.displayName = "SvgZrx";
SvgZrx.defaultProps = {
  size: 24,
  color: "#2D2D31"
};



var tokenIcons = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Abt: SvgAbt,
  Act: SvgAct,
  Ada: SvgAda,
  Adx: SvgAdx,
  Ae: SvgAe,
  Agi: SvgAgi,
  Agrs: SvgAgrs,
  Aion: SvgAion,
  Amb: SvgAmb,
  Amp: SvgAmp,
  Ant: SvgAnt,
  Apex: SvgApex,
  Appc: SvgAppc,
  Ardr: SvgArdr,
  Ark: SvgArk,
  Arn: SvgArn,
  Ary: SvgAry,
  Ast: SvgAst,
  Atm: SvgAtm,
  Auto: SvgAuto,
  Bat: SvgBat,
  Bay: SvgBay,
  Bcbc: SvgBcbc,
  Bcc: SvgBcc,
  Bcd: SvgBcd,
  Bch: SvgBch,
  Bcn: SvgBcn,
  Bco: SvgBco,
  Bcpt: SvgBcpt,
  Bdl: SvgBdl,
  Bela: SvgBela,
  Bix: SvgBix,
  Blcn: SvgBlcn,
  Blk: SvgBlk,
  Block: SvgBlock$1,
  Blz: SvgBlz,
  Bnb: SvgBnb,
  Bnt: SvgBnt,
  Bnty: SvgBnty,
  Bos: SvgBos,
  Bpt: SvgBpt,
  Bq: SvgBq,
  Brd: SvgBrd,
  Btc: SvgBtc,
  Btcd: SvgBtcd,
  Btcp: SvgBtcp,
  Btcz: SvgBtcz,
  Btg: SvgBtg,
  Btm: SvgBtm,
  Bts: SvgBts,
  Btx: SvgBtx,
  Burst: SvgBurst,
  Cdn: SvgCdn,
  Cdt: SvgCdt,
  Cenz: SvgCenz,
  Chat: SvgChat$1,
  Chips: SvgChips,
  Cix: SvgCix,
  Clam: SvgClam,
  Cloak: SvgCloak,
  Cmt: SvgCmt,
  Cnd: SvgCnd,
  Cnx: SvgCnx,
  Cny: SvgCny,
  Cob: SvgCob,
  Coqui: SvgCoqui,
  Cred: SvgCred,
  Crpt: SvgCrpt,
  Crw: SvgCrw,
  Cs: SvgCs,
  Ctr: SvgCtr,
  Cvc: SvgCvc,
  Dai: SvgDai,
  Dash: SvgDash,
  Dat: SvgDat,
  Data: SvgData,
  Dbc: SvgDbc,
  Dcn: SvgDcn,
  Dcr: SvgDcr,
  Deez: SvgDeez,
  Dent: SvgDent,
  Dew: SvgDew,
  Dgb: SvgDgb,
  Dgd: SvgDgd,
  Dlt: SvgDlt,
  Dnr: SvgDnr,
  Dnt: SvgDnt,
  Doge: SvgDoge,
  Drgn: SvgDrgn,
  Dta: SvgDta,
  Dtr: SvgDtr,
  Ebst: SvgEbst,
  Eca: SvgEca,
  Edg: SvgEdg,
  Edo: SvgEdo,
  Edoge: SvgEdoge,
  Ela: SvgEla,
  Elf: SvgElf,
  Elix: SvgElix,
  Ella: SvgElla,
  Emc: SvgEmc,
  Emc2: SvgEmc2,
  Eng: SvgEng,
  Enj: SvgEnj,
  Eos: SvgEos,
  Eql: SvgEql,
  Equa: SvgEqua,
  Etc: SvgEtc,
  Eth: SvgEth,
  Ethos: SvgEthos,
  Etn: SvgEtn,
  Etp: SvgEtp,
  Eur: SvgEur,
  Evx: SvgEvx,
  Exmo: SvgExmo,
  Exp: SvgExp,
  Fair: SvgFair,
  Fct: SvgFct,
  Fil: SvgFil,
  Fldc: SvgFldc,
  Flo: SvgFlo,
  Fsn: SvgFsn,
  Ftc: SvgFtc,
  Fuel: SvgFuel,
  Fun: SvgFun,
  Game: SvgGame,
  Gas: SvgGas,
  Gbp: SvgGbp,
  Gbx: SvgGbx,
  Gbyte: SvgGbyte,
  Generic: SvgGeneric,
  Gno: SvgGno,
  Gnt: SvgGnt,
  Grc: SvgGrc,
  Gto: SvgGto,
  Gup: SvgGup,
  Gvt: SvgGvt,
  Gxs: SvgGxs,
  Hpb: SvgHpb,
  Hsr: SvgHsr,
  Html: SvgHtml,
  Huc: SvgHuc,
  Hush: SvgHush,
  Icn: SvgIcn,
  Icx: SvgIcx,
  Ignis: SvgIgnis,
  Ink: SvgInk,
  Ins: SvgIns,
  Ion: SvgIon,
  Iop: SvgIop,
  Iost: SvgIost,
  Itc: SvgItc,
  Jnt: SvgJnt,
  Jpy: SvgJpy,
  Kcs: SvgKcs,
  Kin: SvgKin,
  Kmd: SvgKmd,
  Knc: SvgKnc,
  Krb: SvgKrb,
  Lbc: SvgLbc,
  Lend: SvgLend,
  Link: SvgLink$1,
  Lkk: SvgLkk,
  Lrc: SvgLrc,
  Lsk: SvgLsk,
  Ltc: SvgLtc,
  Lun: SvgLun,
  Maid: SvgMaid,
  Mana: SvgMana,
  Mcap: SvgMcap,
  Mco: SvgMco,
  Mda: SvgMda,
  Mds: SvgMds,
  Med: SvgMed,
  Miota: SvgMiota,
  Mith: SvgMith,
  Mkr: SvgMkr,
  Mln: SvgMln,
  Mnx: SvgMnx,
  Mnz: SvgMnz,
  Mod: SvgMod,
  Mona: SvgMona,
  Mth: SvgMth,
  Mtl: SvgMtl,
  Music: SvgMusic,
  Mzc: SvgMzc,
  Nano: SvgNano,
  Nas: SvgNas,
  Nav: SvgNav,
  Ncash: SvgNcash,
  Ndz: SvgNdz,
  Nebl: SvgNebl,
  Neo: SvgNeo,
  Neos: SvgNeos,
  Ngc: SvgNgc,
  Nio: SvgNio,
  Nlc2: SvgNlc2,
  Nlg: SvgNlg,
  Nmc: SvgNmc,
  Nuls: SvgNuls,
  Nxs: SvgNxs,
  Nxt: SvgNxt,
  Oax: SvgOax,
  Omg: SvgOmg,
  Omni: SvgOmni,
  Ont: SvgOnt,
  Oot: SvgOot,
  Ost: SvgOst,
  Ox: SvgOx,
  Part: SvgPart,
  Pasl: SvgPasl,
  Pay: SvgPay,
  Pink: SvgPink,
  Pirl: SvgPirl,
  Pivx: SvgPivx,
  Plr: SvgPlr,
  Poa: SvgPoa,
  Poe: SvgPoe,
  Poly: SvgPoly,
  Pot: SvgPot,
  Powr: SvgPowr,
  Ppc: SvgPpc,
  Ppp: SvgPpp,
  Ppt: SvgPpt,
  Prl: SvgPrl,
  Pura: SvgPura,
  Qash: SvgQash,
  Qiwi: SvgQiwi,
  Qlc: SvgQlc,
  Qrl: SvgQrl,
  Qsp: SvgQsp,
  Qtum: SvgQtum,
  R: SvgR,
  Rads: SvgRads,
  Rcn: SvgRcn,
  Rdd: SvgRdd,
  Rdn: SvgRdn,
  Rep: SvgRep,
  Req: SvgReq,
  Rhoc: SvgRhoc,
  Ric: SvgRic,
  Rise: SvgRise,
  Rlc: SvgRlc,
  Rpx: SvgRpx,
  Rub: SvgRub,
  Rvn: SvgRvn,
  Salt: SvgSalt,
  San: SvgSan,
  Sbd: SvgSbd,
  Sberbank: SvgSberbank,
  Sc: SvgSc,
  Sky: SvgSky,
  Slr: SvgSlr,
  Sls: SvgSls,
  Smart: SvgSmart,
  Sngls: SvgSngls,
  Snm: SvgSnm,
  Snt: SvgSnt,
  Spank: SvgSpank,
  Sphtx: SvgSphtx,
  Srn: SvgSrn,
  Start: SvgStart,
  Steem: SvgSteem,
  Storj: SvgStorj,
  Storm: SvgStorm,
  Strat: SvgStrat,
  Sub: SvgSub,
  Sumo: SvgSumo,
  Sys: SvgSys,
  Taas: SvgTaas,
  Tau: SvgTau,
  Tel: SvgTel,
  Ten: SvgTen,
  Theta: SvgTheta,
  Tix: SvgTix,
  Tkn: SvgTkn,
  Tnb: SvgTnb,
  Tnc: SvgTnc,
  Tnt: SvgTnt,
  Trig: SvgTrig,
  Trx: SvgTrx,
  Tzc: SvgTzc,
  Ubq: SvgUbq,
  Unity: SvgUnity,
  Usd: SvgUsd,
  Usdt: SvgUsdt,
  Utk: SvgUtk,
  Ven: SvgVen,
  Veri: SvgVeri,
  Via: SvgVia,
  Vib: SvgVib,
  Vibe: SvgVibe,
  Vivo: SvgVivo,
  Vrc: SvgVrc,
  Vtc: SvgVtc,
  Wabi: SvgWabi,
  Wan: SvgWan,
  Waves: SvgWaves,
  Wax: SvgWax,
  Wgr: SvgWgr,
  Wings: SvgWings,
  Wpr: SvgWpr,
  Wtc: SvgWtc,
  Xas: SvgXas,
  Xbc: SvgXbc,
  Xby: SvgXby,
  Xcp: SvgXcp,
  Xdn: SvgXdn,
  Xem: SvgXem,
  Xlm: SvgXlm,
  Xmg: SvgXmg,
  Xmr: SvgXmr,
  Xmy: SvgXmy,
  Xp: SvgXp,
  Xpa: SvgXpa,
  Xpm: SvgXpm,
  Xrp: SvgXrp,
  Xtz: SvgXtz,
  Xuc: SvgXuc,
  Xvc: SvgXvc,
  Xvg: SvgXvg,
  Xzc: SvgXzc,
  Yoyow: SvgYoyow,
  Zcl: SvgZcl,
  Zec: SvgZec,
  Zel: SvgZel,
  Zen: SvgZen,
  Zil: SvgZil,
  Zilla: SvgZilla,
  Zrx: SvgZrx
});

function _objectWithoutProperties$1(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose$1(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose$1(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Icon = function Icon(_ref) {
  var name = _ref.name,
      props = _objectWithoutProperties$1(_ref, ["name"]);

  if (tokenIcons[name]) {
    var Component = tokenIcons[name];
    return React__default.createElement(Component, props);
  } else if (mdIcons[name]) {
    var _Component = mdIcons[name];
    return React__default.createElement(_Component, props);
  } else {
    return false;
  }
};

Icon.displayName = "Icon";

var Icon$1 = React__default.forwardRef(function (_ref, ref) {
  var name = _ref.name,
      size = _ref.size,
      rest = _objectWithoutProperties(_ref, ["name", "size"]);

  return React__default.createElement(Box, _extends$1({
    ref: ref
  }, rest), React__default.createElement(Icon, {
    name: name,
    size: size
  }));
});
Icon$1.defaultProps = {
  name: '',
  size: '24px',
  display: 'inline-flex',
  theme: theme
};
Icon$1.propTypes = {
  /**
   * Sets which icon to display
   */
  name: PropTypes.string.isRequired,

  /**
   * Sets the width and height in pixels
   */
  size: PropTypes.string,

  /**
   * Sets the element display property
   */
  display: PropTypes.string,
  theme: PropTypes.object
};
Icon$1.displayName = 'Icon';

function _templateObject$2() {
  var data = _taggedTemplateLiteral(["\n  & {\n    -webkit-font-smoothing: antialiased;\n    appearance: none;\n    user-select: none;\n    white-space: nowrap;\n    text-decoration: none;\n    text-align: center;\n    overflow: hidden;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    padding: ", ";\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n\n  > span.button-text {\n    display: inline-flex;\n  }\n\n  ", "\n  > div > svg,\n  > span.button-text {\n    position: relative;\n    z-index: 1;\n    user-select: none;\n    pointer-events: none;\n  }\n\n  > div > svg {\n    display: block;\n  }\n  > div:first-child > svg {\n    margin-left: -0.5rem;\n    margin-right: .5rem;\n  }\n  > div:last-child > svg {\n    margin-left: .5rem;\n    margin-right: -0.5rem;\n  }\n  > div:first-child:last-child > svg {\n    margin: 0;\n  }\n\n  ", "\n  ", "\n  ", "\n  ", "\n"]);

  _templateObject$2 = function _templateObject() {
    return data;
  };

  return data;
}
var buttonSize = variant({
  prop: 'size',
  key: 'buttonSizes'
});
var mainColor = style({
  prop: 'mainColor',
  cssProperty: '--main-color',
  key: 'colors'
});
var contrastColor = style({
  prop: 'contrastColor',
  cssProperty: '--contrast-color',
  key: 'colors'
});
var StyledButton = styled(StyledBox)(_templateObject$2(), function (props) {
  return props.icononly ? '0' : props.p;
}, ''
/* with icon styles */
, mainColor, contrastColor, buttonStyle, buttonSize);
StyledButton.defaultProps = {
  as: 'button'
};

var ButtonBody = function ButtonBody(_ref) {
  var children = _ref.children,
      icon = _ref.icon,
      iconpos = _ref.iconpos;

  if (icon) {
    return React__default.createElement(React__default.Fragment, null, icon && !iconpos && React__default.createElement(Icon$1, {
      name: icon
    }), icon && iconpos == 'left' && React__default.createElement(Icon$1, {
      name: icon
    }), children && React__default.createElement("span", {
      className: "button-text",
      children: children
    }), icon && iconpos == 'right' && React__default.createElement(Icon$1, {
      name: icon
    }));
  } else {
    return React__default.createElement("span", {
      className: "button-text",
      children: children
    });
  }
};

var Button = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledButton, _extends$1({}, props, {
    ref: ref
  }));
});
Button.defaultProps = {
  // base props
  position: 'relative',
  height: '3rem',
  minWidth: '3rem',
  px: 4,
  py: 0,
  fontSize: 'inherit',
  fontFamily: 'sansSerif',
  fontWeight: 3,
  lineHeight: 1,
  // color props
  color: 'white',
  bg: 'silver',
  mainColor: 'primary',
  contrastColor: 'white',
  border: 'none'
};
Button.propTypes = {
  /**
   * Sets theme
   */
  theme: PropTypes.object,

  /**
   * Sets background color of button
   */
  mainColor: PropTypes.string,

  /**
   * Sets text color of button
   */
  contrastColor: PropTypes.string,

  /**
   * Sets font and spacing size of button
   */
  size: PropTypes.oneOf(['small', 'medium', 'large']),

  /**
   * Sets icon of button
   */
  icon: PropTypes.string,

  /**
   * Sets icon position on button
   */
  iconpos: PropTypes.oneOf(['left', 'right']),

  /**
   * Sets padding on button with icon and no text
   */
  icononly: PropTypes.bool
};
Button.displayName = 'Button';

function _templateObject$3() {
  var data = _taggedTemplateLiteral(["\n  & {\n    color: var(--main-color);\n    border: none;\n    background: none;\n    box-shadow: none;\n  }\n\n  &:hover {\n    text-decoration: underline;\n    background: none;\n    box-shadow: none;\n  }\n\n  &:active {\n    text-decoration: none;\n  }\n\n  &::before {\n    display: none;\n  }\n"]);

  _templateObject$3 = function _templateObject() {
    return data;
  };

  return data;
}

var StyledTextButton = styled(StyledButton)(_templateObject$3());
var TextButton = React__default.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      icon = _ref.icon,
      iconpos = _ref.iconpos,
      props = _objectWithoutProperties(_ref, ["children", "icon", "iconpos"]);

  return React__default.createElement(StyledTextButton, _extends$1({}, props, {
    ref: ref
  }), React__default.createElement(ButtonBody, {
    icon: icon,
    iconpos: iconpos,
    children: children
  }));
});
TextButton.defaultProps = _objectSpread2({}, Button.defaultProps, {
  px: 2
});

function _templateObject$4() {
  var data = _taggedTemplateLiteral(["\n  & {\n    color: var(--contrast-color);\n    ", "\n    background: #FFF;\n    z-index: 0;\n    transition: all 0.15s ease;\n  }\n\n  &:hover {\n    text-decoration: inherit;\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n  }\n\n  &:hover::before {\n    opacity: 0.9;\n  }\n\n  &:active {\n    box-shadow: none;\n    background: #000;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 1;\n    height: 100%;\n    width: 100%;\n    background: var(--main-color);\n    pointer-events: none;\n  }\n"]);

  _templateObject$4 = function _templateObject() {
    return data;
  };

  return data;
}

var StyledSolidButton = styled(StyledButton)(_templateObject$4(), ''
/* background: var(--main-color); */
);
var SolidButton = React__default.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      icon = _ref.icon,
      iconpos = _ref.iconpos,
      props = _objectWithoutProperties(_ref, ["children", "icon", "iconpos"]);

  return React__default.createElement(StyledSolidButton, _extends$1({}, props, {
    ref: ref
  }), React__default.createElement(ButtonBody, {
    icon: icon,
    iconpos: iconpos,
    children: children
  }));
});
SolidButton.defaultProps = _objectSpread2({}, Button.defaultProps, {
  borderRadius: 1,
  boxShadow: 1
});

function _templateObject$5() {
  var data = _taggedTemplateLiteral(["\n  & {\n    color: var(--main-color);\n    background: transparent;\n  }\n\n  &:hover {\n    border-color: var(--main-color);\n  }\n\n  &:hover::before {\n    opacity: 0;\n  }\n\n  &:active {\n    background: #fff;\n  }\n\n  &:active::before {\n    opacity: 0.1;\n  }\n\n  &::before {\n    opacity: 0;\n  }\n"]);

  _templateObject$5 = function _templateObject() {
    return data;
  };

  return data;
}

var StyledOutlineButton = styled(StyledSolidButton)(_templateObject$5());
var OutlineButton = React__default.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      icon = _ref.icon,
      iconpos = _ref.iconpos,
      props = _objectWithoutProperties(_ref, ["children", "icon", "iconpos"]);

  return React__default.createElement(StyledOutlineButton, _extends$1({}, props, {
    ref: ref
  }), React__default.createElement(ButtonBody, {
    icon: icon,
    iconpos: iconpos,
    children: children
  }));
});
OutlineButton.defaultProps = _objectSpread2({}, SolidButton.defaultProps, {
  border: 1,
  borderColor: 'grey',
  boxShadow: 0
});

var Button$1; // solid style

Button$1 = SolidButton;
Button$1.displayName = 'Button'; // outline style

Button$1.Outline = OutlineButton;
Button$1.Outline.displayName = 'Button.Outline'; // text style

Button$1.Text = TextButton;
Button$1.Text.displayName = 'Button.Text'; // base style

Button$1.Base = Button;
Button$1.Base.displayName = 'Button.Base';
var Button$2 = Button$1;

function _templateObject2$1() {
  var data = _taggedTemplateLiteral(["\n  & {\n    display: inline-block;\n    position: relative;\n    cursor: pointer;\n  }\n"]);

  _templateObject2$1 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$6() {
  var data = _taggedTemplateLiteral(["\n  & {\n    width: 0;\n    height: 0;\n    opacity: 0;\n    position: absolute;\n    overflow: hidden;\n    z-index: -1;\n  }\n"]);

  _templateObject$6 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledFileInput = styled('input')(_templateObject$6());
var StyledFileLabel = styled('label')(_templateObject2$1());

var FileInput = /*#__PURE__*/function (_Component) {
  _inherits(FileInput, _Component);

  function FileInput(props) {
    var _this;

    _classCallCheck(this, FileInput);

    _this = _possibleConstructorReturn(this, _getPrototypeOf$1(FileInput).call(this, props));

    _this.handleClick = function (e) {
      _this.fileInput.current.click();
    };

    _this.handleChange = function (e) {
      var files = _this.fileInput.current.files;

      _this.setState({
        files: files.length ? true : false
      });

      if (files && files.length > 1) {
        _this.setState({
          buttonLabel: files.length + ' files selected'
        });
      } else if (files && files.length) {
        _this.setState({
          buttonLabel: files[0].name
        });
      } else {
        _this.setState({
          buttonLabel: 'Choose file…'
        });
      }

      if (_this.props.onChange) {
        _this.props.onChange(e);
      }
    };

    _this.fileInput = React__default.createRef();
    _this.state = {
      buttonLabel: 'Choose file…',
      files: false
    };
    return _this;
  }

  _createClass(FileInput, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          variant = _this$props.variant,
          props = _objectWithoutProperties(_this$props, ["variant"]);

      if (variant === 'unstyled') {
        return React__default.createElement("input", _extends$1({
          type: 'file'
        }, props));
      }

      return React__default.createElement(StyledFileLabel, null, React__default.createElement(StyledFileInput, _extends$1({
        type: 'file'
      }, props, {
        ref: this.fileInput,
        onChange: this.handleChange
      })), React__default.createElement(Button$2, {
        icon: this.state.files ? 'CloudDone' : 'CloudUpload',
        onClick: this.handleClick
      }, this.state.buttonLabel));
    }
  }]);

  return FileInput;
}(Component);

FileInput.displayName = 'FileInput';

function _templateObject2$2() {
  var data = _taggedTemplateLiteral(["\n  & {\n    position: relative;\n    display: flex;\n    align-items: center;\n    width: 100%;\n  }\n  > ", " {\n    padding-right: 3rem;\n    text-overflow: ellipsis;\n    white-space: no-wrap;\n  }\n  > svg {\n    position: absolute;\n    right: 1rem;\n    visibility: hidden;\n  }\n"]);

  _templateObject2$2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$7() {
  var data = _taggedTemplateLiteral(["\n  & {\n    appearance: none;\n  }\n\n  &:hover {\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.3);\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ", ";\n  }\n\n  &:disabled {\n    opacity: 0.4;\n    pointer-events: none;\n  }\n\n  &[type=\"color\"] {\n    min-width: 3rem;\n    padding: 0;\n    &::-webkit-color-swatch-wrapper {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0;\n    }\n    &::-webkit-color-swatch {\n      flex: 0 0 auto;\n      height: 2rem;\n      width: 2rem;\n      border: none;\n      border-radius: 100%;\n    }\n    &::-moz-color-swatch {\n      height: 2rem;\n      width: 2rem;\n      border: none;\n      border-radius: 100%;\n    }\n  }\n\n  .was-validated & {\n    &:valid {\n      border-color: ", ";\n    }\n    &:valid ~ svg.icon-valid {\n      visibility: visible;\n      color: ", ";\n    }\n    &:invalid {\n      border-color: ", ";\n    }\n    &:invalid ~ svg.icon-invalid {\n      visibility: visible;\n      color: ", ";\n    }\n  }}\n"]);

  _templateObject$7 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledInput = styled(StyledBox).attrs(function (props) {
  return {
    as: 'input'
  };
})(_templateObject$7(), themeGet('colors.primary', '#000'), themeGet('colors.success'), themeGet('colors.success'), themeGet('colors.danger'), themeGet('colors.danger'));
var StyledIconWrapper = styled.div(_templateObject2$2(), StyledInput);
var WithValidationStyle = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledIconWrapper, null, React__default.createElement(StyledInput, _extends$1({}, props, {
    ref: ref
  })), React__default.createElement(SvgCheckCircle, {
    className: 'icon-valid'
  }), React__default.createElement(SvgWarning, {
    className: 'icon-invalid'
  }));
});
var Input = React__default.forwardRef(function (props, ref) {
  if (props.type === 'file') {
    return React__default.createElement(FileInput, _extends$1({}, props, {
      ref: ref
    }));
  } else {
    return React__default.createElement(StyledInput, _extends$1({}, props, {
      ref: ref
    }));
  }
});
var defaultProps$1 = {
  color: 'text',
  bg: 'background',
  fontSize: '1rem',
  lineHeight: 'initial',
  height: '3rem',
  p: 3,
  border: 1,
  borderColor: 'moon-gray',
  borderRadius: 1,
  boxShadow: 1
};
Input.WithValidationStyle = WithValidationStyle;
WithValidationStyle.defaultProps = defaultProps$1;
StyledInput.defaultProps = defaultProps$1;
Input.defaultProps = defaultProps$1;
Input.propTypes = {
  theme: PropTypes.object
};
Input.displayName = 'Input';

function _templateObject$8() {
  var data = _taggedTemplateLiteral(["\n  &:after {\n    content: ' (optional)';\n    font-weight: normal;\n    font-style: italic;\n  }\n"]);

  _templateObject$8 = function _templateObject() {
    return data;
  };

  return data;
}
var OptionalLabel = styled(Text)(_templateObject$8());
var Field = React__default.forwardRef(function (_ref, ref) {
  var label = _ref.label,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["label", "children"]);

  var isRequired = function isRequired(children) {
    var value = false;
    React__default.Children.forEach(children, function (child) {
      if (child.props.required) {
        value = true;
      }
    });
    return value;
  };

  var renderLabel = function renderLabel(required) {
    if (required) {
      return React__default.createElement(Text, {
        fontSize: 1,
        fontWeight: 3,
        mb: 2
      }, label);
    } else {
      return React__default.createElement(OptionalLabel, {
        fontSize: 1,
        fontWeight: 3,
        mb: 2
      }, label);
    }
  };

  return React__default.createElement(Box, _extends$1({
    as: 'label',
    display: 'inline-flex',
    flexDirection: 'column',
    alignItems: 'flex-start',
    mb: 3,
    ref: ref
  }, props), renderLabel(isRequired(children)), children);
});
Field.propTypes = {
  // ...Box.propTypes,
  label: PropTypes.string.isRequired,
  children: PropTypes.element.isRequired
};
Field.displayName = 'Field';

function _templateObject2$3() {
  var data = _taggedTemplateLiteral(["\n  & {\n    cursor: pointer;\n  }\n  &:hover input:not(:disabled) ~ svg[name='unchecked'] {\n    fill: currentColor;\n  }\n"]);

  _templateObject2$3 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$9() {
  var data = _taggedTemplateLiteral(["\n  & {\n    position: relative;\n    display: inline-block;\n  }\n\n  > input {\n    cursor: pointer;\n    appearance: none;\n    position: relative;\n    z-index: 1;\n    display: block;\n    height: 1.5rem;\n    width: 1.5rem;\n    margin: 0;\n  }\n\n  > svg {\n    position: absolute;\n    z-index: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 100%;\n    width: 100%;\n    pointer-events: none;\n    fill: ", ";\n  }\n\n  > svg[name='checked'] {\n    display: none;\n    z-index: 1;\n    fill: ", ";\n  }\n\n  > input:checked ~ svg[name='checked'] {\n    display: block;\n  }\n"]);

  _templateObject$9 = function _templateObject() {
    return data;
  };

  return data;
}
var StyledWrapper = styled(Box)(_templateObject$9(), function (props) {
  return themeGet('colors.grey', '#CCC');
}, function (props) {
  return themeGet('colors.primary', '#000');
});
var StyledLabel = styled(Box)(_templateObject2$3());
var Checkbox = React__default.forwardRef(function (_ref, ref) {
  var className = _ref.className,
      label = _ref.label,
      name = _ref.name,
      value = _ref.value,
      id = _ref.id,
      props = _objectWithoutProperties(_ref, ["className", "label", "name", "value", "id"]);

  return React__default.createElement(StyledLabel, _extends$1({
    forwardedAs: 'label',
    display: 'flex',
    alignItems: 'center',
    className: className
  }, props, {
    htmlFor: id,
    opacity: props.disabled ? 0.4 : 1
  }), React__default.createElement(StyledWrapper, {
    theme: props.theme
  }, React__default.createElement("input", _extends$1({
    type: 'checkbox',
    name: name,
    value: value,
    id: id,
    ref: ref
  }, props)), React__default.createElement(SvgCheckBox, {
    name: 'checked'
  }), React__default.createElement(SvgCheckBoxOutlineBlank, {
    name: 'unchecked'
  })), React__default.createElement(Text, {
    color: 'text',
    fontSize: 1,
    fontWeight: 3,
    lineHeight: 1,
    ml: 1,
    mr: 2
  }, label));
});
StyledWrapper.defaultProps = {
  theme: theme
};
Checkbox.defaultProps = {
  color: 'primary'
};
Checkbox.propTypes = _objectSpread2({}, Box.propTypes, {
  theme: PropTypes.object,
  label: PropTypes.string
});
Checkbox.displayName = 'Checkbox';

var Form = /*#__PURE__*/function (_Component) {
  _inherits(Form, _Component);

  function Form() {
    _classCallCheck(this, Form);

    return _possibleConstructorReturn(this, _getPrototypeOf$1(Form).apply(this, arguments));
  }

  _createClass(Form, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          children = _this$props.children,
          validated = _this$props.validated;

      if (validated) {
        className += ' was-validated';
      }

      return React__default.createElement(Box, _extends$1({
        as: 'form',
        className: className
      }, this.props), children);
    }
  }]);

  return Form;
}(Component);

Form.defaultProps = {
  validated: false
};
Form.propTypes = _objectSpread2({}, Box.propTypes, {
  /**
   * Shows the input validation styles when true by adding he `.was-validated` class to the form element.
   */
  validated: PropTypes.bool
});
Form.displayName = 'Form';
Form.Input = Input.WithValidationStyle;
Form.Field = Field;
Form.Check = Checkbox;

function _templateObject2$4() {
  var data = _taggedTemplateLiteral(["\n  & {\n    cursor: pointer;\n  }\n  &:hover input:not(:disabled) ~ svg[name='unchecked'] {\n    fill: currentColor;\n  }\n"]);

  _templateObject2$4 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$a() {
  var data = _taggedTemplateLiteral(["\n  & {\n    position: relative;\n    display: inline-block;\n  }\n\n  > input {\n    cursor: pointer;\n    appearance: none;\n    position: relative;\n    z-index: 1;\n    display: block;\n    height: 1.5rem;\n    width: 1.5rem;\n    margin: 0;\n  }\n\n  > svg {\n    position: absolute;\n    z-index: 0;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 100%;\n    width: 100%;\n    pointer-events: none;\n    fill: ", ";\n  }\n\n  > svg[name='checked'] {\n    display: none;\n    z-index: 1;\n    fill: ", ";\n  }\n\n  > input:checked ~ svg[name='checked'] {\n    display: block;\n  }\n"]);

  _templateObject$a = function _templateObject() {
    return data;
  };

  return data;
}
var StyledWrapper$1 = styled(Box)(_templateObject$a(), function (props) {
  return themeGet('colors.grey', '#CCC');
}, function (props) {
  return themeGet('colors.primary', '#000');
});
var StyledLabel$1 = styled(Box)(_templateObject2$4());
StyledWrapper$1.defaultProps = {
  theme: theme
};
var Radio = React__default.forwardRef(function (_ref, ref) {
  var className = _ref.className,
      label = _ref.label,
      name = _ref.name,
      value = _ref.value,
      id = _ref.id,
      props = _objectWithoutProperties(_ref, ["className", "label", "name", "value", "id"]);

  return React__default.createElement(StyledLabel$1, _extends$1({
    forwardedAs: 'label',
    display: 'flex',
    alignItems: 'center',
    className: className
  }, props, {
    htmlFor: id,
    opacity: props.disabled ? 0.4 : 1
  }), React__default.createElement(StyledWrapper$1, {
    theme: props.theme
  }, React__default.createElement("input", _extends$1({
    type: 'radio',
    name: name,
    value: value,
    id: id,
    ref: ref
  }, props)), React__default.createElement(SvgRadioButtonChecked, {
    name: 'checked'
  }), React__default.createElement(SvgRadioButtonUnchecked, {
    name: 'unchecked'
  })), React__default.createElement(Text, {
    color: 'text',
    fontSize: 1,
    fontWeight: 3,
    lineHeight: 1,
    ml: 1,
    mr: 2
  }, label));
});
Radio.defaultProps = {
  theme: theme,
  color: 'primary'
};
Radio.propTypes = _objectSpread2({}, Box.propTypes, {
  theme: PropTypes.object,
  label: PropTypes.string
});
Radio.displayName = 'Radio';

function _templateObject$b() {
  var data = _taggedTemplateLiteral(["\n  & {\n    position: relative;\n    display: inline-block;\n  }\n\n  > svg {\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    bottom: 0;\n  }\n"]);

  _templateObject$b = function _templateObject() {
    return data;
  };

  return data;
}
var StyledWrapper$2 = styled(Box)(_templateObject$b());
var Select = React__default.forwardRef(function (_ref, ref) {
  var options = _ref.options,
      children = _ref.children,
      width = _ref.width,
      props = _objectWithoutProperties(_ref, ["options", "children", "width"]);

  var renderChildren = function renderChildren() {
    if (children) {
      return children;
    } else if (options) {
      return options.map(function (option, i) {
        return React__default.createElement("option", {
          key: i,
          value: option.value,
          children: option.label
        });
      });
    } else {
      return null;
    }
  };

  return React__default.createElement(StyledWrapper$2, {
    width: width
  }, React__default.createElement(StyledInput, _extends$1({
    as: 'select',
    children: renderChildren(),
    ref: ref,
    width: '100%',
    p: 'auto',
    py: 0,
    pl: 3,
    pr: '3rem'
  }, props)), React__default.createElement(SvgExpandMore, {
    my: 'auto',
    mx: 3
  }));
});
Select.propTypes = {
  options: PropTypes.arrayOf(PropTypes.object)
};
Select.displayName = 'Select';

function _templateObject$c() {
  var data = _taggedTemplateLiteral(["\n  & {\n    appearance: none;\n  }\n  &:hover {\n    box-shadow: none;\n  }\n  &::-webkit-slider-runnable-track {\n    box-sizing: border-box;\n    appearance: none;\n    border: none;\n    border-radius: 4px;\n    background: currentColor;\n    height: 4px;\n    display: flex;\n    align-items: center;\n  }\n  &::-webkit-slider-thumb {\n    box-sizing: border-box;\n    appearance: none;\n    border: 1px solid #ccc;\n    background: white;\n    height: 1.5rem;\n    width: 1.5rem;\n    border-radius: 100%;\n    cursor: grab;\n    &:hover {\n      box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n    }\n    &:active {\n      cursor: grabbing;\n      border-color: currentColor;\n    }\n  }\n\n  &::-moz-range-track {\n    box-sizing: border-box;\n    appearance: none;\n    border: none;\n    border-radius: 4px;\n    background: currentColor;\n    height: 4px;\n    display: flex;\n    align-items: center;\n  }\n  &::-moz-range-thumb {\n    box-sizing: border-box;\n    appearance: none;\n    border: 1px solid #ccc;\n    background: white;\n    height: 1.5rem;\n    width: 1.5rem;\n    border-radius: 100%;\n    cursor: grab;\n    &:hover {\n      box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n    }\n    &:active {\n      cursor: grabbing;\n      border-color: currentColor;\n    }\n  }\n"]);

  _templateObject$c = function _templateObject() {
    return data;
  };

  return data;
}
var StyledSlider = styled(StyledInput)(_templateObject$c());
var Slider = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledSlider, _extends$1({
    ref: ref
  }, props, {
    type: 'range'
  }));
});
StyledSlider.defaultProps = {
  color: 'primary',
  bg: 'none',
  height: '2rem',
  minWidth: '200px',
  m: 0,
  p: 0,
  border: 'none',
  boxShadow: 'none',
  theme: theme
};
Slider.defaultProps = {
  'aria-label': 'range slider'
};
Slider.propTypes = {
  'aria-label': PropTypes.string
};
Slider.displayName = 'Slider';

var Textarea = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledInput, _extends$1({
    as: 'textarea',
    ref: ref
  }, props));
});
Textarea.defaultProps = {
  lineHeight: 'copy',
  height: 'auto'
};
Textarea.propTypes = {
  theme: PropTypes.object
};
Textarea.displayName = 'Textarea';

function _templateObject$d() {
  var data = _taggedTemplateLiteral(["\n  & {\n    appearance: none;\n    display: inline-block;\n    overflow: hidden;\n    height: 8px;\n    border-radius: 8px;\n  }\n  &::-webkit-progress-bar {\n    background-color: ", ";\n  }\n  &::-webkit-progress-value {\n    background-color: ", ";\n    border-radius: 8px;\n  }\n"]);

  _templateObject$d = function _templateObject() {
    return data;
  };

  return data;
}
var StyledProgress = styled.progress.attrs(function (props) {
  return {
    primarycolor: themeGet('colors.primary', '#000')(props)
  };
})(_templateObject$d(), function (props) {
  return curriedTransparentize('0.75', props.primarycolor);
}, function (props) {
  return props.primarycolor;
});
var Progress = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledProgress, _extends$1({
    ref: ref
  }, props));
});
StyledProgress.defaultProps = {
  theme: theme
}; // Progress.defaultProps = {
//   theme,
// };

Progress.propTypes = {
  theme: PropTypes.object
};
Progress.displayName = 'Progress';

function _templateObject$e() {
  var data = _taggedTemplateLiteral(["\n  & {\n    text-decoration: none;\n    cursor: pointer;\n  }\n\n  &:hover {\n    text-decoration: underline;\n    ", ";\n  }\n\n  &:active {\n    text-decoration: none;\n    ", ";\n  }\n"]);

  _templateObject$e = function _templateObject() {
    return data;
  };

  return data;
}
var hoverColor = system({
  hoverColor: {
    property: 'color',
    scale: 'colors'
  }
});
var activeColor = system({
  activeColor: {
    property: 'color',
    scale: 'colors'
  }
});
var StyledLink = styled(StyledBox)(_templateObject$e(), hoverColor, activeColor);
var Link = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledLink, _extends$1({
    as: 'a',
    ref: ref
  }, props));
});
Link.defaultProps = {
  color: 'primary',
  hoverColor: 'primary-light',
  activeColor: 'primary-dark',
  fontSize: 1,
  fontWeight: 3
};
Link.propTypes = _objectSpread2({}, Box.PropTypes, {
  theme: PropTypes.object
});
Link.displayName = 'Link';

var Card = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(Box, _extends$1({
    ref: ref
  }, props));
});
Card.defaultProps = {
  position: 'relative',
  bg: 'white',
  border: 1,
  borderColor: 'light-gray',
  boxShadow: 2,
  p: 4
};
Card.propTypes = _objectSpread2({}, Box.propTypes, {
  theme: PropTypes.object
});
Card.displayName = 'Card';

function _templateObject$f() {
  var data = _taggedTemplateLiteral(["\n  & {\n    position: relative;\n    overflow: hidden;\n    border-radius: 100%;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-image: url(", ");\n  }\n\n  ", "\n"]);

  _templateObject$f = function _templateObject() {
    return data;
  };

  return data;
}

var size$1 = function size(props) {
  switch (props.size) {
    case 'small':
      return "\n        height: 2em;\n        width: 2em;\n      ";

    case 'medium':
      return "\n        height: 3em;\n        width: 3em;\n      ";

    case 'large':
      return "\n        height: 4em;\n        width: 4em;\n      ";

    default:
      return "";
  }
};

var StyledAvatar = styled(Box)(_templateObject$f(), function (props) {
  return props.src;
}, size$1);
StyledAvatar.defaultProps = {
  theme: theme
};
var Avatar = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledAvatar, _extends$1({
    ref: ref
  }, props));
});
Avatar.defaultProps = {
  size: '2rem',
  bg: 'grey',
  alt: 'Avatar'
};
Avatar.propTypes = _objectSpread2({
  /**
   * Sets alt attribute on image for accessibility
   */
  alt: PropTypes.string,

  /**
   * Sets avatar height and width
   */
  size: PropTypes.string,

  /**
   * Sets avatar image
   */
  src: PropTypes.string.isRequired,

  /**
   * Sets theme
   */
  theme: PropTypes.object
}, Box.propTypes);
Avatar.displayName = 'Avatar';

var Image = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(Box, _extends$1({
    ref: ref
  }, props));
});
Image.defaultProps = {
  as: 'img',
  maxWidth: '100%',
  height: 'auto'
};
Image.propTypes = _objectSpread2({}, Box.propTypes, {
  theme: PropTypes.object,

  /**
   * Sets alt attribute on image for accessibility
   */
  alt: PropTypes.string,

  /**
   * Sets the src attribute of the img element
   */
  src: PropTypes.string.isRequired
});
Image.displayName = 'Image';

function _templateObject2$5() {
  var data = _taggedTemplateLiteral(["\n  & {\n    display: block;\n    position: relative;\n    overflow: hidden;\n  }\n\n  > svg {\n    fill: currentColor;\n    height: 100%;\n    width: 100%;\n    display: block;\n    animation: ", " 1000ms linear infinite;\n    animation-timing-function: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n  }\n"]);

  _templateObject2$5 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$g() {
  var data = _taggedTemplateLiteral(["\n  0% {\n    transform: rotate(225deg);\n  }\n\n  100% {\n    transform: rotate(585deg);\n  }\n"]);

  _templateObject$g = function _templateObject() {
    return data;
  };

  return data;
}
var rotate = keyframes(_templateObject$g());
var Rotate = styled(Box)(_templateObject2$5(), rotate);
var Loader = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(Rotate, _extends$1({
    ref: ref
  }, props), React__default.createElement("svg", {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    xmlns: "http://www.w3.org/2000/svg"
  }, React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 20.5714C16.7339 20.5714 20.5714 16.7339 20.5714 12C20.5714 7.26613 16.7339 3.42857 12 3.42857C7.26613 3.42857 3.42857 7.26613 3.42857 12C3.42857 16.7339 7.26613 20.5714 12 20.5714ZM12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z",
    fill: "currentColor",
    opacity: "0.25"
  }), React__default.createElement("mask", {
    id: "mask0",
    "mask-type": "alpha",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24"
  }, React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12 20.5714C16.7339 20.5714 20.5714 16.7339 20.5714 12C20.5714 7.26613 16.7339 3.42857 12 3.42857C7.26613 3.42857 3.42857 7.26613 3.42857 12C3.42857 16.7339 7.26613 20.5714 12 20.5714ZM12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z",
    fill: "currentColor"
  })), React__default.createElement("g", {
    mask: "url(#mask0)"
  }, React__default.createElement("path", {
    d: "M12 24V15.8824V12H24V24H12Z",
    fill: "currentColor"
  }))));
});
Loader.defaultProps = {
  color: 'primary',
  bg: 'transparent',
  size: '1rem'
};
Loader.propTypes = _objectSpread2({}, Box.propTypes);
Loader.displayName = 'Loader';

var COMMON = compose(color, space);
var TYPOGRAPHY = compose(fontFamily, fontSize, fontWeight, lineHeight, textAlign, letterSpacing);
var LAYOUT = compose(display, size, width, height, minWidth, minHeight, maxWidth, maxHeight, overflow, verticalAlign);
var POSITION = compose(position, zIndex, top, right, bottom, left);
var BORDERS = compose(border, borderColor, borderRadius, shadow);
var FLEXBOX = compose( // container
flexBasis, flexDirection, flexWrap, alignContent, alignItems, justifyContent, justifyItems, // item
flex, justifySelf, alignSelf, order);

function _templateObject$h() {
  var data = _taggedTemplateLiteral(["\n  & {\n    border-collapse: collapse;\n  }\n\n  th,\n  td {\n    border: solid;\n    border-width: 1px 0;\n    border-color: inherit;\n    text-align: left;\n    padding: 0 2rem;\n  }\n\n  tbody tr {\n    height: ", ";\n  }\n\n  thead tr,\n  tfoot tr {\n    height: ", ";\n  }\n\n  thead th {\n    font-weight: ", ";\n    text-transform: uppercase;\n  }\n\n  ", "\n"]);

  _templateObject$h = function _templateObject() {
    return data;
  };

  return data;
}
var StyledTable = styled(Box)(_templateObject$h(), themeGet('height[3]', '4rem'), themeGet('height[2]', '3rem'), themeGet('fontWeights.3', 'bold'), TYPOGRAPHY);
StyledTable.defaultProps = {
  theme: theme
};
var Table = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledTable, _extends$1({
    ref: ref
  }, props, {
    forwardedAs: 'table'
  }));
});
Table.defaultProps = {
  width: 1,
  border: 1,
  borderColor: 'grey',
  fontSize: 1,
  fontWeight: 2,
  fontFamily: 'sansSerif',
  color: 'dark-gray',
  boxShadow: 1
};
Table.propTypes = _objectSpread2({}, Box.propTypes, {
  theme: PropTypes.object
});
Table.displayName = 'Table';

function _templateObject$i() {
  var data = _taggedTemplateLiteral(["\n  & {\n    position: relative;\n    overflow: hidden;\n  }\n  &::after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    height: 100%;\n    width: 100%;\n    opacity: 0.12;\n    background: currentColor;\n    pointer-events: none;\n  }\n"]);

  _templateObject$i = function _templateObject() {
    return data;
  };

  return data;
}
var StyledPill = styled(Text)(_templateObject$i());
var Pill = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(StyledPill, _extends$1({
    ref: ref
  }, props));
});
Pill.defaultProps = {
  color: 'dark-gray',
  bg: '#FFF',
  fontSize: 1,
  fontWeight: 2,
  lineHeight: 'solid',
  height: '2rem',
  px: 3,
  py: 1,
  borderRadius: 3,
  display: 'inline-flex',
  alignItems: 'center'
};
Pill.propTypes = _objectSpread2({}, Text.propTypes);
Pill.displayName = 'Pill';

function _templateObject2$6() {
  var data = _taggedTemplateLiteral(["\n  & {\n    cursor: pointer;\n  }\n  &:hover {\n    color: inherit;\n  }\n"]);

  _templateObject2$6 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$j() {
  var data = _taggedTemplateLiteral(["\n  ", "\n\n  & {\n    position: relative;\n  }\n"]);

  _templateObject$j = function _templateObject() {
    return data;
  };

  return data;
}
var lastId = 0;

var newID = function newID() {
  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'id';
  return "".concat(prefix).concat(lastId++);
};

var flashVariant = variant({
  key: 'messageStyle'
});
var StyledFlash = styled(Box)(_templateObject$j(), flashVariant);
var StyledLink$1 = styled(Link).attrs(function (props) {
  return {
    color: 'inherit',
    fontSize: 'inherit'
  };
})(_templateObject2$6());
var Flash = React__default.forwardRef(function (_ref, ref) {
  var className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ["className", "children"]);

  var status = props.variant;
  var id = newID('Flash');
  var contentID = "".concat(id, "Content");
  var ariaRoleType = 'status';

  switch (status) {
    case 'warning':
      ariaRoleType = 'alert';
      break;

    case 'danger':
      ariaRoleType = 'alert';
      break;

    default: // invalid status

  }

  return React__default.createElement(StyledFlash, _extends$1({
    className: className,
    tabIndex: 0,
    role: ariaRoleType,
    "aria-live": "polite",
    "aria-describedby": contentID,
    ref: ref
  }, props), React__default.createElement(Text, {
    color: 'inherit',
    display: 'inherit',
    id: contentID
  }, children));
});
Flash.defaultProps = {
  theme: theme,
  variant: 'base',
  p: '3',
  border: '1',
  borderRadius: 1,
  width: '100%'
};
Flash.propTypes = _objectSpread2({
  /**
   * Sets the colors of the background, text and links
   */
  variant: PropTypes.oneOf(['base', 'success', 'warning', 'danger', 'info'])
}, Box.propTypes);
Flash.displayName = 'Flash';
Flash.Link = StyledLink$1;
Flash.Link.displayName = 'Flash.Link';

var isBrowser = function isBrowser() {
  return typeof window !== 'undefined' && typeof document !== 'undefined' ? true : false;
};

var portalRoot = isBrowser() ? document.body : null;

var Portal = /*#__PURE__*/function (_Component) {
  _inherits(Portal, _Component);

  function Portal(props) {
    var _this;

    _classCallCheck(this, Portal);

    _this = _possibleConstructorReturn(this, _getPrototypeOf$1(Portal).call(this, props));
    _this.el = isBrowser() ? document.createElement('div') : null;
    return _this;
  }

  _createClass(Portal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      portalRoot.appendChild(this.el);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      portalRoot.removeChild(this.el);
    }
  }, {
    key: "render",
    value: function render() {
      if (isBrowser()) {
        return ReactDOM.createPortal(this.props.children, this.el);
      } // ssr


      return null;
    }
  }]);

  return Portal;
}(Component);

Portal.propTypes = {
  children: PropTypes.element.isRequired
};

function _templateObject$k() {
  var data = _taggedTemplateLiteral(["\n  & {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 9999;\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-flow: column;\n    place-items: center;\n    place-content: center;\n  }\n"]);

  _templateObject$k = function _templateObject() {
    return data;
  };

  return data;
}
var StyledOverlay = styled(Box)(_templateObject$k());
StyledOverlay.defaultProps = {
  bg: 'blacks.10',
  color: 'text',
  fontSize: '2',
  fontFamily: 'sansSerif',
  p: 3
};

var Modal = /*#__PURE__*/function (_Component) {
  _inherits(Modal, _Component);

  function Modal(props) {
    var _this;

    _classCallCheck(this, Modal);

    _this = _possibleConstructorReturn(this, _getPrototypeOf$1(Modal).call(this, props));

    _this.closeModal = function (e) {
      e.preventDefault();

      _this.setState(function (state, props) {
        return {
          isOpen: false
        };
      });
    };

    _this.openModal = function (e) {
      e.preventDefault();

      _this.setState(function (state, props) {
        return {
          isOpen: true
        };
      });
    };

    _this.state = {
      isOpen: _this.props.isOpen || false
    };
    return _this;
  }

  _createClass(Modal, [{
    key: "render",
    value: function render() {
      if (!this.props.isOpen) {
        return null;
      }

      return React__default.createElement(Portal, null, React__default.createElement(StyledOverlay, null, this.props.children));
    }
  }]);

  return Modal;
}(Component);

Modal.defaultProps = {
  isOpen: false
};
Modal.propTypes = {
  /**
   * Shows the content of the Modal when true
   */
  isOpen: PropTypes.bool
};
Modal.displayName = 'Modal';

/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.15.0
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var isBrowser$1 = typeof window !== 'undefined' && typeof document !== 'undefined';

var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
var timeoutDuration = 0;
for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
  if (isBrowser$1 && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
    timeoutDuration = 1;
    break;
  }
}

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser$1 && window.Promise;

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;
    case '#document':
      return element.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

var isIE11 = isBrowser$1 && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser$1 && /MSIE 10/.test(navigator.userAgent);

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null;

  // NOTE: 1 DOM access here
  var offsetParent = element.offsetParent || null;
  // Skip hidden elements which don't have an offsetParent
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }

  // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);

  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends$ko = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function getClientRect(offsets) {
  return _extends$ko({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.right - result.left;
  var height = sizes.height || element.clientHeight || result.bottom - result.top;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);

  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);

  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop, 10);
    var marginLeft = parseFloat(styles.marginLeft, 10);

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  var parentNode = getParentNode(element);
  if (!parentNode) {
    return false;
  }
  return isFixed(parentNode);
}

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }
  return el || document.documentElement;
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  // NOTE: 1 DOM access here

  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends$ko({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  data.positionFixed = this.options.positionFixed;

  // compute the popper offsets
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

  // run the modifiers
  data = runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */
function destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicity asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */
function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);

  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;

  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;

  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser$1 && /Firefox/i.test(navigator.userAgent);

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = _extends$ko({}, attributes, data.attributes);
  data.styles = _extends$ko({}, styles, data.styles);
  data.arrowStyles = _extends$ko({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function arrow(data, options) {
  var _data$offsets$arrow;

  // arrow depends on keepTogether in order to work
  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;

    // flips variation if reference element overflows boundaries
    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    // flips variation if popper content overflows boundaries
    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);

    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = _extends$ko({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }

  // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself
  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification
  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];

  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

  // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;

  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends$ko({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = _extends$ko({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',
    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,
    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = debounce(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = _extends$ko({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(_extends$ko({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends$ko({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends$ko({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }

    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */


    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _global = createCommonjsModule(function (module) {
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
});

var _core = createCommonjsModule(function (module) {
var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
});
var _core_1 = _core.version;

var _aFunction = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

// optional / simple context binding

var _ctx = function (fn, that, length) {
  _aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var _isObject = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

var _anObject = function (it) {
  if (!_isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

var _fails = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

// Thank's IE8 for his funny defineProperty
var _descriptors = !_fails(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

var document$1 = _global.document;
// typeof document.createElement is 'object' in old IE
var is = _isObject(document$1) && _isObject(document$1.createElement);
var _domCreate = function (it) {
  return is ? document$1.createElement(it) : {};
};

var _ie8DomDefine = !_descriptors && !_fails(function () {
  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;
});

// 7.1.1 ToPrimitive(input [, PreferredType])

// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var _toPrimitive = function (it, S) {
  if (!_isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

var dP = Object.defineProperty;

var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  _anObject(O);
  P = _toPrimitive(P, true);
  _anObject(Attributes);
  if (_ie8DomDefine) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var _objectDp = {
	f: f
};

var _propertyDesc = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var _hide = _descriptors ? function (object, key, value) {
  return _objectDp.f(object, key, _propertyDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var hasOwnProperty$1 = {}.hasOwnProperty;
var _has = function (it, key) {
  return hasOwnProperty$1.call(it, key);
};

var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && _has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? _ctx(out, _global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) _hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
var _export = $export;

var toString = {}.toString;

var _cof = function (it) {
  return toString.call(it).slice(8, -1);
};

// fallback for non-array-like ES3 and non-enumerable old V8 strings

// eslint-disable-next-line no-prototype-builtins
var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return _cof(it) == 'String' ? it.split('') : Object(it);
};

// 7.2.1 RequireObjectCoercible(argument)
var _defined = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

// to indexed object, toObject with fallback for non-array-like ES3 strings


var _toIobject = function (it) {
  return _iobject(_defined(it));
};

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
var _toInteger = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

// 7.1.15 ToLength

var min = Math.min;
var _toLength = function (it) {
  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

var max = Math.max;
var min$1 = Math.min;
var _toAbsoluteIndex = function (index, length) {
  index = _toInteger(index);
  return index < 0 ? max(index + length, 0) : min$1(index, length);
};

// false -> Array#indexOf
// true  -> Array#includes



var _arrayIncludes = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = _toIobject($this);
    var length = _toLength(O.length);
    var index = _toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var _library = true;

var _shared = createCommonjsModule(function (module) {
var SHARED = '__core-js_shared__';
var store = _global[SHARED] || (_global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: _core.version,
  mode:  'pure' ,
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});
});

var id = 0;
var px = Math.random();
var _uid = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

var shared = _shared('keys');

var _sharedKey = function (key) {
  return shared[key] || (shared[key] = _uid(key));
};

var arrayIndexOf = _arrayIncludes(false);
var IE_PROTO = _sharedKey('IE_PROTO');

var _objectKeysInternal = function (object, names) {
  var O = _toIobject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (_has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

// IE 8- don't enum bug keys
var _enumBugKeys = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

// 19.1.2.14 / 15.2.3.14 Object.keys(O)



var _objectKeys = Object.keys || function keys(O) {
  return _objectKeysInternal(O, _enumBugKeys);
};

var f$1 = Object.getOwnPropertySymbols;

var _objectGops = {
	f: f$1
};

var f$2 = {}.propertyIsEnumerable;

var _objectPie = {
	f: f$2
};

// 7.1.13 ToObject(argument)

var _toObject = function (it) {
  return Object(_defined(it));
};

// 19.1.2.1 Object.assign(target, source, ...)






var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
var _objectAssign = !$assign || _fails(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = _toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = _objectGops.f;
  var isEnum = _objectPie.f;
  while (aLen > index) {
    var S = _iobject(arguments[index++]);
    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!_descriptors || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

// 19.1.3.1 Object.assign(target, source)


_export(_export.S + _export.F, 'Object', { assign: _objectAssign });

var assign = _core.Object.assign;

var assign$1 = createCommonjsModule(function (module) {
module.exports = { "default": assign, __esModule: true };
});

unwrapExports(assign$1);

var _extends$kp = createCommonjsModule(function (module, exports) {

exports.__esModule = true;



var _assign2 = _interopRequireDefault(assign$1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};
});

var _extends$kq = unwrapExports(_extends$kp);

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

var hasOwnProperty$2 = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is$1(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is$1(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty$2.call(objB, keysA[i]) || !is$1(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

var shallowEqual_1 = shallowEqual;

var classCallCheck$1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
});

var _classCallCheck$1 = unwrapExports(classCallCheck$1);

// true  -> String#at
// false -> String#codePointAt
var _stringAt = function (TO_STRING) {
  return function (that, pos) {
    var s = String(_defined(that));
    var i = _toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

var _redefine = _hide;

var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  _anObject(O);
  var keys = _objectKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);
  return O;
};

var document$2 = _global.document;
var _html = document$2 && document$2.documentElement;

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])



var IE_PROTO$1 = _sharedKey('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE$1 = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = _domCreate('iframe');
  var i = _enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  _html.appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];
  return createDict();
};

var _objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE$1] = _anObject(O);
    result = new Empty();
    Empty[PROTOTYPE$1] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = createDict();
  return Properties === undefined ? result : _objectDps(result, Properties);
};

var _wks = createCommonjsModule(function (module) {
var store = _shared('wks');

var Symbol = _global.Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
};

$exports.store = store;
});

var def = _objectDp.f;

var TAG = _wks('toStringTag');

var _setToStringTag = function (it, tag, stat) {
  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
_hide(IteratorPrototype, _wks('iterator'), function () { return this; });

var _iterCreate = function (Constructor, NAME, next) {
  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });
  _setToStringTag(Constructor, NAME + ' Iterator');
};

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)


var IE_PROTO$2 = _sharedKey('IE_PROTO');
var ObjectProto = Object.prototype;

var _objectGpo = Object.getPrototypeOf || function (O) {
  O = _toObject(O);
  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

var ITERATOR = _wks('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  _iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = _objectGpo($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      _setToStringTag(IteratorPrototype, TAG, true);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if (( FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    _hide(proto, ITERATOR, $default);
  }
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) _redefine(proto, key, methods[key]);
    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

var $at = _stringAt(true);

// 21.1.3.27 String.prototype[@@iterator]()
_iterDefine(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

var _iterStep = function (done, value) {
  return { value: value, done: !!done };
};

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {
  this._t = _toIobject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return _iterStep(1);
  }
  if (kind == 'keys') return _iterStep(0, index);
  if (kind == 'values') return _iterStep(0, O[index]);
  return _iterStep(0, [index, O[index]]);
}, 'values');

var TO_STRING_TAG = _wks('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i$1 = 0; i$1 < DOMIterables.length; i$1++) {
  var NAME = DOMIterables[i$1];
  var Collection = _global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);
}

var f$3 = _wks;

var _wksExt = {
	f: f$3
};

var iterator = _wksExt.f('iterator');

var iterator$1 = createCommonjsModule(function (module) {
module.exports = { "default": iterator, __esModule: true };
});

unwrapExports(iterator$1);

var _meta = createCommonjsModule(function (module) {
var META = _uid('meta');


var setDesc = _objectDp.f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !_fails(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!_has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!_has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};
});
var _meta_1 = _meta.KEY;
var _meta_2 = _meta.NEED;
var _meta_3 = _meta.fastKey;
var _meta_4 = _meta.getWeak;
var _meta_5 = _meta.onFreeze;

var defineProperty$1 = _objectDp.f;
var _wksDefine = function (name) {
  var $Symbol = _core.Symbol || (_core.Symbol =  {} );
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty$1($Symbol, name, { value: _wksExt.f(name) });
};

// all enumerable object keys, includes symbols



var _enumKeys = function (it) {
  var result = _objectKeys(it);
  var getSymbols = _objectGops.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = _objectPie.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

// 7.2.2 IsArray(argument)

var _isArray = Array.isArray || function isArray(arg) {
  return _cof(arg) == 'Array';
};

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)

var hiddenKeys = _enumBugKeys.concat('length', 'prototype');

var f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return _objectKeysInternal(O, hiddenKeys);
};

var _objectGopn = {
	f: f$4
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window

var gOPN = _objectGopn.f;
var toString$1 = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

var f$5 = function getOwnPropertyNames(it) {
  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));
};

var _objectGopnExt = {
	f: f$5
};

var gOPD = Object.getOwnPropertyDescriptor;

var f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = _toIobject(O);
  P = _toPrimitive(P, true);
  if (_ie8DomDefine) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);
};

var _objectGopd = {
	f: f$6
};

// ECMAScript 6 symbols shim





var META = _meta.KEY;





















var gOPD$1 = _objectGopd.f;
var dP$1 = _objectDp.f;
var gOPN$1 = _objectGopnExt.f;
var $Symbol = _global.Symbol;
var $JSON = _global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE$2 = 'prototype';
var HIDDEN = _wks('_hidden');
var TO_PRIMITIVE = _wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = _shared('symbol-registry');
var AllSymbols = _shared('symbols');
var OPSymbols = _shared('op-symbols');
var ObjectProto$1 = Object[PROTOTYPE$2];
var USE_NATIVE = typeof $Symbol == 'function' && !!_objectGops.f;
var QObject = _global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = _descriptors && _fails(function () {
  return _objectCreate(dP$1({}, 'a', {
    get: function () { return dP$1(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD$1(ObjectProto$1, key);
  if (protoDesc) delete ObjectProto$1[key];
  dP$1(it, key, D);
  if (protoDesc && it !== ObjectProto$1) dP$1(ObjectProto$1, key, protoDesc);
} : dP$1;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto$1) $defineProperty(OPSymbols, key, D);
  _anObject(it);
  key = _toPrimitive(key, true);
  _anObject(D);
  if (_has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP$1(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  _anObject(it);
  var keys = _enumKeys(P = _toIobject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = _toPrimitive(key, true));
  if (this === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;
  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = _toIobject(it);
  key = _toPrimitive(key, true);
  if (it === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;
  var D = gOPD$1(it, key);
  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN$1(_toIobject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto$1;
  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto$1, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto$1) $set.call(OPSymbols, value);
      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, _propertyDesc(1, value));
    };
    if (_descriptors && setter) setSymbolDesc(ObjectProto$1, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {
    return this._k;
  });

  _objectGopd.f = $getOwnPropertyDescriptor;
  _objectDp.f = $defineProperty;
  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;
  _objectPie.f = $propertyIsEnumerable;
  _objectGops.f = $getOwnPropertySymbols;

  if (_descriptors && !_library) {
    _redefine(ObjectProto$1, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  _wksExt.f = function (name) {
    return wrap(_wks(name));
  };
}

_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)_wks(es6Symbols[j++]);

for (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) _wksDefine(wellKnownSymbols[k++]);

_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return _has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

_export(_export.S + _export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = _fails(function () { _objectGops.f(1); });

_export(_export.S + _export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return _objectGops.f(_toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!_isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
_setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
_setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
_setToStringTag(_global.JSON, 'JSON', true);

_wksDefine('asyncIterator');

_wksDefine('observable');

var symbol = _core.Symbol;

var symbol$1 = createCommonjsModule(function (module) {
module.exports = { "default": symbol, __esModule: true };
});

unwrapExports(symbol$1);

var _typeof_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;



var _iterator2 = _interopRequireDefault(iterator$1);



var _symbol2 = _interopRequireDefault(symbol$1);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
});

unwrapExports(_typeof_1);

var possibleConstructorReturn = createCommonjsModule(function (module, exports) {

exports.__esModule = true;



var _typeof3 = _interopRequireDefault(_typeof_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};
});

var _possibleConstructorReturn$1 = unwrapExports(possibleConstructorReturn);

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */


var check = function (O, proto) {
  _anObject(O);
  if (!_isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
var _setProto = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = _ctx(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

// 19.1.3.19 Object.setPrototypeOf(O, proto)

_export(_export.S, 'Object', { setPrototypeOf: _setProto.set });

var setPrototypeOf = _core.Object.setPrototypeOf;

var setPrototypeOf$1 = createCommonjsModule(function (module) {
module.exports = { "default": setPrototypeOf, __esModule: true };
});

unwrapExports(setPrototypeOf$1);

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
_export(_export.S, 'Object', { create: _objectCreate });

var $Object = _core.Object;
var create = function create(P, D) {
  return $Object.create(P, D);
};

var create$1 = createCommonjsModule(function (module) {
module.exports = { "default": create, __esModule: true };
});

unwrapExports(create$1);

var inherits = createCommonjsModule(function (module, exports) {

exports.__esModule = true;



var _setPrototypeOf2 = _interopRequireDefault(setPrototypeOf$1);



var _create2 = _interopRequireDefault(create$1);



var _typeof3 = _interopRequireDefault(_typeof_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};
});

var _inherits$1 = unwrapExports(inherits);

var objectWithoutProperties = createCommonjsModule(function (module, exports) {

exports.__esModule = true;

exports.default = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};
});

unwrapExports(objectWithoutProperties);

// most Object methods by ES6 should accept primitives



var _objectSap = function (KEY, exec) {
  var fn = (_core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  _export(_export.S + _export.F * _fails(function () { fn(1); }), 'Object', exp);
};

// 19.1.2.14 Object.keys(O)



_objectSap('keys', function () {
  return function keys(it) {
    return _objectKeys(_toObject(it));
  };
});

var keys = _core.Object.keys;

var keys$1 = createCommonjsModule(function (module) {
module.exports = { "default": keys, __esModule: true };
});

var _Object$keys = unwrapExports(keys$1);

var lib = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var createChangeEmitter = exports.createChangeEmitter = function createChangeEmitter() {
  var currentListeners = [];
  var nextListeners = currentListeners;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  function listen(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;

    ensureCanMutateNextListeners();
    nextListeners.push(listener);

    return function () {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;

      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  function emit() {
    currentListeners = nextListeners;
    var listeners = currentListeners;
    for (var i = 0; i < listeners.length; i++) {
      listeners[i].apply(listeners, arguments);
    }
  }

  return {
    listen: listen,
    emit: emit
  };
};
});

unwrapExports(lib);
var lib_1 = lib.createChangeEmitter;

function symbolObservablePonyfill(root) {
	var result;
	var Symbol = root.Symbol;

	if (typeof Symbol === 'function') {
		if (Symbol.observable) {
			result = Symbol.observable;
		} else {
			result = Symbol('observable');
			Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
}

/* global window */

var root;

if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (typeof module !== 'undefined') {
  root = module;
} else {
  root = Function('return this')();
}

var result = symbolObservablePonyfill(root);

var setStatic = function setStatic(key, value) {
  return function (BaseComponent) {
    /* eslint-disable no-param-reassign */
    BaseComponent[key] = value;
    /* eslint-enable no-param-reassign */
    return BaseComponent;
  };
};

var setDisplayName = function setDisplayName(displayName) {
  return setStatic('displayName', displayName);
};

var getDisplayName = function getDisplayName(Component$$1) {
  if (typeof Component$$1 === 'string') {
    return Component$$1;
  }

  if (!Component$$1) {
    return undefined;
  }

  return Component$$1.displayName || Component$$1.name || 'Component';
};

var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
  return hocName + '(' + getDisplayName(BaseComponent) + ')';
};

var mapValues = function mapValues(obj, func) {
  var result = {};
  /* eslint-disable no-restricted-syntax */
  for (var key in obj) {
    if (obj.hasOwnProperty(key)) {
      result[key] = func(obj[key], key);
    }
  }
  /* eslint-enable no-restricted-syntax */
  return result;
};

var withHandlers = function withHandlers(handlers) {
  return function (BaseComponent) {
    var factory = createFactory(BaseComponent);

    var WithHandlers = function (_Component) {
      _inherits$1(WithHandlers, _Component);

      function WithHandlers() {
        var _temp, _this, _ret;

        _classCallCheck$1(this, WithHandlers);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn$1(this, _Component.call.apply(_Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn$1(_this, _ret);
      }

      WithHandlers.prototype.render = function render() {
        return factory(_extends$kq({}, this.props, this.handlers));
      };

      return WithHandlers;
    }(Component);

    var _initialiseProps = function _initialiseProps() {
      var _this2 = this;

      this.handlers = mapValues(typeof handlers === 'function' ? handlers(this.props) : handlers, function (createHandler) {
        return function () {
          var handler = createHandler(_this2.props);

          if (process.env.NODE_ENV !== 'production' && typeof handler !== 'function') {
            console.error(
            // eslint-disable-line no-console
            'withHandlers(): Expected a map of higher-order functions. ' + 'Refer to the docs for more info.');
          }

          return handler.apply(undefined, arguments);
        };
      });
    };

    if (process.env.NODE_ENV !== 'production') {
      return setDisplayName(wrapDisplayName(BaseComponent, 'withHandlers'))(WithHandlers);
    }
    return WithHandlers;
  };
};

var withStateHandlers = function withStateHandlers(initialState, stateUpdaters) {
  return function (BaseComponent) {
    var factory = createFactory(BaseComponent);

    var WithStateHandlers = function (_Component) {
      _inherits$1(WithStateHandlers, _Component);

      function WithStateHandlers() {
        var _temp, _this, _ret;

        _classCallCheck$1(this, WithStateHandlers);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn$1(this, _Component.call.apply(_Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn$1(_this, _ret);
      }

      WithStateHandlers.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
        var propsChanged = nextProps !== this.props;
        // the idea is to skip render if stateUpdater handler return undefined
        // this allows to create no state update handlers with access to state and props
        var stateChanged = !shallowEqual_1(nextState, this.state);
        return propsChanged || stateChanged;
      };

      WithStateHandlers.prototype.render = function render() {
        return factory(_extends$kq({}, this.props, this.state, this.stateUpdaters));
      };

      return WithStateHandlers;
    }(Component);

    var _initialiseProps = function _initialiseProps() {
      var _this2 = this;

      this.state = typeof initialState === 'function' ? initialState(this.props) : initialState;
      this.stateUpdaters = mapValues(stateUpdaters, function (handler) {
        return function (mayBeEvent) {
          for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }

          // Having that functional form of setState can be called async
          // we need to persist SyntheticEvent
          if (mayBeEvent && typeof mayBeEvent.persist === 'function') {
            mayBeEvent.persist();
          }

          _this2.setState(function (state, props) {
            return handler(state, props).apply(undefined, [mayBeEvent].concat(args));
          });
        };
      });
    };

    if (process.env.NODE_ENV !== 'production') {
      return setDisplayName(wrapDisplayName(BaseComponent, 'withStateHandlers'))(WithStateHandlers);
    }
    return WithStateHandlers;
  };
};

var Nothing = function (_Component) {
  _inherits$1(Nothing, _Component);

  function Nothing() {
    _classCallCheck$1(this, Nothing);

    return _possibleConstructorReturn$1(this, _Component.apply(this, arguments));
  }

  Nothing.prototype.render = function render() {
    return null;
  };

  return Nothing;
}(Component);

var lifecycle = function lifecycle(spec) {
  return function (BaseComponent) {
    var factory = createFactory(BaseComponent);

    if (process.env.NODE_ENV !== 'production' && spec.hasOwnProperty('render')) {
      console.error('lifecycle() does not support the render method; its behavior is to ' + 'pass all props and state to the base component.');
    }

    var Lifecycle = function (_Component) {
      _inherits$1(Lifecycle, _Component);

      function Lifecycle() {
        _classCallCheck$1(this, Lifecycle);

        return _possibleConstructorReturn$1(this, _Component.apply(this, arguments));
      }

      Lifecycle.prototype.render = function render() {
        return factory(_extends$kq({}, this.props, this.state));
      };

      return Lifecycle;
    }(Component);

    _Object$keys(spec).forEach(function (hook) {
      return Lifecycle.prototype[hook] = spec[hook];
    });

    if (process.env.NODE_ENV !== 'production') {
      return setDisplayName(wrapDisplayName(BaseComponent, 'lifecycle'))(Lifecycle);
    }
    return Lifecycle;
  };
};

var setPropTypes = function setPropTypes(propTypes) {
  return setStatic('propTypes', propTypes);
};

var compose$1 = function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(undefined, arguments));
    };
  }, function (arg) {
    return arg;
  });
};

var _extends$kr = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var enhance = compose$1(setDisplayName('Popper'), setPropTypes({
  renderRef: PropTypes.any.isRequired,
  renderPop: PropTypes.func,
  children: PropTypes.any,
  options: PropTypes.object,
  defaultIsOpened: PropTypes.bool,
  canClickOutside: PropTypes.bool
}), withStateHandlers({
  reference: null
}, {
  setReference: function setReference() {
    return function (reference) {
      if (reference) {
        return {
          reference: reference
        };
      }
    };
  }
}), withStateHandlers({
  pop: null,
  popper: null
}, {
  setPop: function setPop(_ref, props) {
    var prevPopper = _ref.popper;
    return function (pop) {
      if (prevPopper) {
        prevPopper.destroy();
      }
      var popper = pop ? new Popper(props.reference, pop, props.options) : null;
      return { pop: pop, popper: popper };
    };
  }
}), withStateHandlers(function (_ref2) {
  var _ref2$defaultIsOpened = _ref2.defaultIsOpened,
      defaultIsOpened = _ref2$defaultIsOpened === undefined ? false : _ref2$defaultIsOpened;
  return {
    isOpened: defaultIsOpened
  };
}, {
  open: function open(_, props) {
    return function () {
      return {
        isOpened: true
      };
    };
  },
  close: function close() {
    return function () {
      return {
        isOpened: false
      };
    };
  },
  toggle: function toggle(_ref3, props) {
    var isOpened = _ref3.isOpened;
    return function () {
      return {
        isOpened: !isOpened
      };
    };
  }
}), withHandlers({
  onClick: function onClick(props) {
    return function (e) {
      if (props.reference && !props.canClickOutside && !e.canBeIgnoredByReactPopper) {
        var isInsidePop = props.pop && props.pop.contains(e.target);
        if (!props.reference.contains(e.target) && !isInsidePop) {
          // click outside
          props.close();
        }
      }
    };
  }
}), lifecycle({
  componentDidUpdate: function componentDidUpdate() {
    if (this.props.popper) {
      this.props.popper.scheduleUpdate();
    }
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    if (this.props.options != nextProps.options && this.props.pop) {
      this.props.setPop(this.props.pop);
    }
  },
  componentWillMount: function componentWillMount() {
    document.addEventListener('mousedown', this.props.onClick);
  },
  componentWillUnmount: function componentWillUnmount() {
    document.removeEventListener('mousedown', this.props.onClick);
    if (this.props.popper) {
      this.props.popper.destroy();
    }
  }
}));

var Popper$1 = enhance(function (props) {
  return React__default.createElement(
    React__default.Fragment,
    null,
    props.renderRef(_extends$kr({}, props)),
    props.isOpened && (props.renderPop ? props.renderPop(_extends$kr({}, props)) : React__default.createElement(
      'div',
      { ref: props.setPop, style: props.style, className: props.className },
      props.children
    ))
  );
});

function _templateObject$l() {
  var data = _taggedTemplateLiteral(["\n  & {\n    background: ", ";\n    color: ", ";\n    border: ", ";\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n    min-height: 24px;\n    margin: 4px;\n    padding: 12px;\n    line-height: 16px;\n    font-size: 12px;\n    z-index: 999999;\n  }\n"]);

  _templateObject$l = function _templateObject() {
    return data;
  };

  return data;
}
/**
 * Tooltip display a message near to an anchoring element when the user's mouse hovers or focus is set on anchoring element.
 */

var StyledTooltip = styled(Text)(_templateObject$l(), function (props) {
  return props.variant === 'dark' ? '#333' : '#FFF';
}, function (props) {
  return props.variant === 'dark' ? '#FFF' : '#666';
}, function (props) {
  return props.variant === 'dark' ? 'none' : '1px solid #CCCCCC';
});
StyledTooltip.defaultProps = {
  theme: theme,
  fontFamily: 'sansSerif'
};

var Tooltip = function Tooltip(_ref) {
  var children = _ref.children,
      props = _objectWithoutProperties(_ref, ["children"]);

  var options = {
    placement: props.placement,
    modifiers: {
      offset: {
        offset: props.offset
      }
    }
  };

  var triggerElement = function triggerElement(_ref2) {
    var setReference = _ref2.setReference,
        toggle = _ref2.toggle;
    return React__default.cloneElement(children, {
      ref: setReference,
      onMouseEnter: toggle,
      onMouseLeave: toggle
    });
  };

  if (isBrowser()) {
    return React__default.createElement(Popper$1, {
      options: options,
      renderRef: triggerElement,
      style: {
        zIndex: 99999
      }
    }, React__default.createElement(StyledTooltip, {
      variant: props.variant,
      children: props.message
    }));
  } else {
    return children;
  }
};

Tooltip.displayName = 'Tooltip';
Tooltip.defaultProps = {
  variant: 'dark',
  placement: 'bottom',
  offset: '0, 0',
  message: 'props.message text'
};
Tooltip.propTypes = {
  /** Sets the theme of tooltip. Options are light or dark. */
  variant: PropTypes.oneOf(['light', 'dark']),

  /** Sets the placement of tooltip relative to anchoring element. */
  placement: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),

  /** Sets the placement of tooltip relative to anchoring element. */
  offset: PropTypes.string,

  /** Sets the content of tooltip. Only accepts text and not markup. */
  message: PropTypes.string
};

function _templateObject2$7() {
  var data = _taggedTemplateLiteral(["\n  & {\n    display: block;\n  }\n  > * {\n    animation-name: ", ";\n    animation-duration: ", ";\n    animation-timing-function: ease;\n    animation-delay: 0s;\n    animation-iteration-count: infinite;\n  }\n  > *:nth-child(4n + 0) {\n    animation-duration: ", ";\n    animation-delay: ", ";\n  }\n  > *:nth-child(2n + 0) {\n    animation-duration: ", ";\n  }\n  > *:nth-child(3n + 0) {\n    animation-duration: ", ";\n    animation-delay: ", ";\n  }\n"]);

  _templateObject2$7 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$m() {
  var data = _taggedTemplateLiteral(["\n  0% {\n    opacity: 0.1;\n    transform: translateY(-1px);\n  }\n  20% {\n    opacity: 0.6;\n  }\n  40% {\n    opacity: 0.9;\n    transform: translateY(1px);\n  }\n  60% {\n    opacity: 0.5;\n    transform: translateY(2px);\n  }\n  100% {\n    opacity: 0;\n    transform: translateY(3px);\n  }\n"]);

  _templateObject$m = function _templateObject() {
    return data;
  };

  return data;
}

var IconProcessing = function IconProcessing(props) {
  return React__default.createElement("svg", props, React__default.createElement("rect", {
    y: "5",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".1"
  }), React__default.createElement("rect", {
    x: "30",
    y: "30",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".1"
  }), React__default.createElement("path", {
    d: "M10 1a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1V1z",
    fill: "#4E3FCE",
    fillOpacity: ".5"
  }), React__default.createElement("rect", {
    x: "20",
    y: "15",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".5"
  }), React__default.createElement("rect", {
    x: "20",
    y: "25",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".5"
  }), React__default.createElement("rect", {
    x: "10",
    y: "20",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".5"
  }), React__default.createElement("rect", {
    y: "15",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".7"
  }), React__default.createElement("rect", {
    x: "30",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".1"
  }), React__default.createElement("rect", {
    x: "30",
    y: "20",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".1"
  }), React__default.createElement("rect", {
    x: "30",
    y: "10",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".7"
  }), React__default.createElement("rect", {
    x: "10",
    y: "10",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".9"
  }), React__default.createElement("rect", {
    x: "20",
    y: "5",
    width: "6",
    height: "6",
    rx: "1",
    fill: "#4E3FCE",
    fillOpacity: ".9"
  }));
};

IconProcessing.defaultProps = {
  width: "36",
  height: "36",
  viewBox: "0 0 36 36",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
};

var WrappedIconProcessing = function WrappedIconProcessing(props) {
  return React__default.createElement(IconProcessing, props);
};

var flicker = keyframes(_templateObject$m());
var AnimatedIconProcessing = styled(WrappedIconProcessing).attrs({
  seed: Math.floor(1000 + Math.random() * 7000),
  seeda: Math.floor(Date.now().toString().substring(2, 6) + Math.random() * 9000).toString().substring(0, 4),
  seedb: Math.floor(Date.now().toString().substring(0, 4) + Math.random() * 4500).toString().substring(0, 4)
})(_templateObject2$7(), flicker, function (props) {
  return props.seed + 'ms';
}, function (props) {
  return props.seeda + 'ms';
}, function (props) {
  return props.seeda + 'ms';
}, function (props) {
  return props.seedb + 'ms';
}, function (props) {
  return props.seeda + 'ms';
}, function (props) {
  return props.seedb + 'ms';
});

function _templateObject$n() {
  var data = _taggedTemplateLiteral([""]);

  _templateObject$n = function _templateObject() {
    return data;
  };

  return data;
}

var PositiveIcon = function PositiveIcon(props) {
  return React__default.createElement("svg", props, React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M18 36c9.941 0 18-8.059 18-18S27.941 0 18 0 0 8.059 0 18s8.059 18 18 18z",
    fill: "#DFF6EC"
  }), React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M23.616 14.284c.472.412.515 1.123.096 1.588l-6.084 6.75a1.153 1.153 0 0 1-1.633.077l-3.63-3.323a1.113 1.113 0 0 1-.059-1.59 1.156 1.156 0 0 1 1.615-.058l2.773 2.539 5.308-5.889a1.156 1.156 0 0 1 1.614-.095z",
    fill: "#33C489"
  }));
};

PositiveIcon.defaultProps = {
  width: "36",
  height: "36",
  viewBox: "0 0 36 36",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
};

var WrappedIconPositive = function WrappedIconPositive(props) {
  return React__default.createElement(PositiveIcon, props);
};

var IconPositive = styled(WrappedIconPositive)(_templateObject$n());

function _templateObject$o() {
  var data = _taggedTemplateLiteral([""]);

  _templateObject$o = function _templateObject() {
    return data;
  };

  return data;
}

var NegativeIcon = function NegativeIcon(props) {
  return React__default.createElement("svg", props, React__default.createElement("path", {
    d: "M0 0h36v36H0z"
  }), React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M17.083 3.526a1 1 0 0 1 1.738 0l16.232 28.506a1 1 0 0 1-.87 1.495H1.72a1 1 0 0 1-.869-1.495L17.083 3.526z",
    fill: "#fbe1de"
  }), React__default.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M18 15a1 1 0 0 0-1 1v6a1 1 0 1 0 2 0v-6a1 1 0 0 0-1-1zm-1 10.333a1 1 0 1 1 2 0 1 1 0 0 1-2 0z",
    fill: "#DC2C10"
  }));
};

NegativeIcon.defaultProps = {
  width: "36",
  height: "36",
  viewBox: "0 0 36 36",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
};

var WrappedIconNegative = function WrappedIconNegative(props) {
  return React__default.createElement(NegativeIcon, props);
};

var IconNegative = styled(WrappedIconNegative)(_templateObject$o());

function _templateObject7() {
  var data = _taggedTemplateLiteral(["\n  & {\n    pointer-events: all;\n    user-select: none;\n    overflow: hidden;\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    height: 80px;\n    padding: 0 1rem;\n    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.1);\n    transition: all 0.15s ease;\n  }\n\n  &:hover {\n    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.15);\n  }\n\n  > .iconBox {\n    display: none;\n  }\n\n  > .closeBttn {\n    display: none;\n  }\n\n  > ", " > div {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    word-wrap: normal;\n  }\n\n  @media screen and (max-width: 420px) {\n    border-color: transparent;\n  }\n\n  @media screen and (min-width: 420px) {\n    & {\n      border-radius: 4px;\n      padding: ", ";\n    }\n\n    > .iconBox {\n      display: block;\n    }\n\n    > .closeBttn {\n      display: flex;\n      align-self: flex-start;\n    }\n  }\n"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["\n  & {\n    ", "\n    text-align: left;\n  }\n"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n  & {\n    display: block;\n    position: fixed;\n    z-index: 9999;\n    top: auto;\n    bottom: 0;\n    left: auto;\n    right: 0;\n    width: 100%;\n    max-width: 100%;\n    pointer-events: none;\n  }\n\n  @media screen and (min-width: 420px) {\n    width: 420px;\n    padding: 1rem;\n  }\n\n  > div {\n    width: 100%;\n  }\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n  & {\n    animation-name: ", ";\n    animation-duration: ", ";\n    animation-timing-function: ", ";\n    animation-delay: 0s;\n    animation-iteration-count: 1;\n    animation-direction: normal;\n    animation-fill-mode: forwards;\n    animation-play-state: running;\n  }\n  @media screen and (min-width: 420px) {\n    animation-name: ", ";\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  from {\n    opacity: 1;\n    transform: translateX(0);\n  }\n\n  to {\n    opacity: 0;\n    transform: translateX(120%);\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$8() {
  var data = _taggedTemplateLiteral(["\n  from {\n    opacity: 1;\n    transform: translateY(0);\n  }\n\n  to {\n    opacity: 0;\n    transform: translateY(120%);\n  }\n"]);

  _templateObject2$8 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$p() {
  var data = _taggedTemplateLiteral(["\n  from {\n    transform: translateY(100%);\n  }\n\n  to {\n    transform: translateY(0);\n  }\n"]);

  _templateObject$p = function _templateObject() {
    return data;
  };

  return data;
}
var animInKeyframes = keyframes(_templateObject$p());
var animOutKeyframes = keyframes(_templateObject2$8());
var animOutKeyframesDesktop = keyframes(_templateObject3());
var AnimationWrapper = styled.div(_templateObject4(), function (props) {
  return props.direction ? animOutKeyframes : animInKeyframes;
}, function (props) {
  return props.direction ? '500ms' : '300ms';
}, function (props) {
  return props.direction ? timingFunctions('easeOutSine') : 'ease';
}, function (props) {
  return props.direction ? animOutKeyframesDesktop : animInKeyframes;
});
var StyledToastContainer = styled.div(_templateObject5());
var StyledTextCell = styled(Box)(_templateObject6(), ellipsis());
var StyledToastMessage = styled(Box)(_templateObject7(), StyledTextCell, function (props) {
  return props.closeElem ? '0 0 0 1rem' : '0 1rem';
});
var ToastMessage = React__default.forwardRef(function (_ref, ref) {
  var className = _ref.className,
      props = _objectWithoutProperties(_ref, ["className"]);

  var themeIsDark = props.colorTheme === 'dark' ? true : false;

  var renderVariantSvg = function renderVariantSvg(variant) {
    switch (variant) {
      case 'processing':
        return React__default.createElement(AnimatedIconProcessing, {
          width: '32px',
          height: '32px'
        });
        break;

      case 'success':
        return React__default.createElement(IconPositive, {
          width: '32px',
          height: '32px'
        });
        break;

      case 'failure':
        return React__default.createElement(IconNegative, {
          width: '32px',
          height: '32px'
        });
        break;

      default:
        return '';
    }
  };

  var renderFigure = function renderFigure(_ref2) {
    var variant = _ref2.variant,
        icon = _ref2.icon;

    if (variant && variant !== 'default') {
      return React__default.createElement(Box, {
        className: 'iconBox',
        flex: '0 0',
        mr: 2
      }, renderVariantSvg(variant));
    } else if (icon && icon.length) {
      return React__default.createElement(Box, {
        className: 'iconBox',
        flex: '0 0',
        mr: 2
      }, React__default.createElement(Icon$1, {
        name: icon,
        color: !themeIsDark ? 'primary' : 'white',
        size: '32px'
      }));
    } else {
      return null;
    }
  };

  var renderCloseBttn = function renderCloseBttn(_ref3) {
    var closeElem = _ref3.closeElem,
        closeFunction = _ref3.closeFunction;

    if (closeElem) {
      return React__default.createElement(Button$2.Text, {
        onClick: closeFunction,
        className: 'closeBttn',
        size: 'small',
        icononly: true
      }, React__default.createElement(Icon$1, {
        name: 'Close',
        size: '16px',
        color: !themeIsDark ? '#666' : '#afafaf'
      }));
    } else {
      return null;
    }
  };

  return React__default.createElement(StyledToastMessage, _extends$1({
    className: className,
    bg: !themeIsDark ? 'white' : 'near-black',
    border: 1,
    borderColor: !themeIsDark ? '#D6D6D6' : 'transparent',
    ref: ref
  }, props), renderFigure(props), React__default.createElement(StyledTextCell, {
    flex: '1 1 auto',
    mx: 2
  }, props.message && React__default.createElement(Text, {
    fontSize: 1,
    fontWeight: 3,
    color: !themeIsDark ? 'black' : 'white'
  }, props.message), props.secondaryMessage && React__default.createElement(Text, {
    fontSize: 1,
    color: !themeIsDark ? '#666' : '#afafaf'
  }, props.secondaryMessage)), React__default.createElement(Text, {
    flex: '0 1',
    mr: 2,
    textAlign: 'right',
    lineHeight: '18px'
  }, props.actionText && props.actionHref && React__default.createElement(Link, {
    href: props.actionHref,
    target: '_blank',
    color: !themeIsDark ? 'primary' : '#9387FF'
  }, props.actionText)), renderCloseBttn(props));
});

var ProtoToastMessage = /*#__PURE__*/function (_Component) {
  _inherits(ProtoToastMessage, _Component);

  function ProtoToastMessage(props) {
    var _this;

    _classCallCheck(this, ProtoToastMessage);

    _this = _possibleConstructorReturn(this, _getPrototypeOf$1(ProtoToastMessage).call(this, props));

    _this.handleClose = function (e) {
      e.preventDefault();
    };

    return _this;
  }

  _createClass(ProtoToastMessage, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          message = _this$props.message,
          secondaryMessage = _this$props.secondaryMessage,
          actionHref = _this$props.actionHref,
          actionText = _this$props.actionText,
          variant = _this$props.variant,
          icon = _this$props.icon;
      return React__default.createElement(ToastMessage, _extends$1({
        message: message,
        secondaryMessage: secondaryMessage,
        actionHref: actionHref,
        actionText: actionText
      }, this.props));
    }
  }]);

  return ProtoToastMessage;
}(Component);

ProtoToastMessage.displayName = 'Proto Toast Message';
ProtoToastMessage.defaultProps = {
  message: 'Message text… ',
  secondaryMessage: '',
  actionHref: '',
  actionText: '',
  variant: '',
  icon: '',
  colorTheme: 'dark',
  closeElem: true
};

var ToastProvider = /*#__PURE__*/function (_React$Component) {
  _inherits(ToastProvider, _React$Component);

  function ToastProvider(props) {
    var _this2;

    _classCallCheck(this, ToastProvider);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf$1(ToastProvider).call(this, props));

    _this2.addMessage = function (msg, data) {
      if (!msg) {
        return false;
      }

      _this2.setState(function () {
        return {
          isOpen: false
        };
      }, function () {
        setTimeout(function () {
          _this2.setState(function () {
            return {
              isOpen: true,
              unMount: false,
              currentMsg: _objectSpread2({
                message: msg
              }, data)
            };
          }, function () {
            _this2.startTimer();
          });
        }, 500);
      });
    };

    _this2.removeMessage = function () {
      if (!_this2.state.isOpen) {
        return null;
      }

      _this2.clearTimer();

      _this2.setState(function (state, props) {
        return {
          isOpen: false
        };
      });
    };

    _this2.startTimer = function () {
      if (!document.hasFocus()) {
        return null;
      }

      _this2.clearTimer();

      _this2.timer = setTimeout(function () {
        _this2.removeMessage();
      }, _this2.props.delay);
    };

    _this2.clearTimer = function () {
      clearTimeout(_this2.timer);
    };

    _this2.handleClose = function (e) {
      e.preventDefault();
    };

    _this2.handleEnter = function (e) {
      e.preventDefault();

      _this2.clearTimer();
    };

    _this2.handleLeave = function (e) {
      e.preventDefault();

      _this2.startTimer();
    };

    _this2.renderMessage = function () {
      return React__default.createElement(ProtoToastMessage, _extends$1({}, _this2.state.currentMsg, {
        onMouseEnter: _this2.handleEnter,
        onMouseLeave: _this2.handleLeave,
        closeFunction: _this2.removeMessage
      }));
    };

    _this2.state = {
      isReady: false,
      isOpen: false,
      unMount: true,
      currentMsg: _this2.props.messageData
    };
    _this2.timer = {};
    return _this2;
  }

  _createClass(ToastProvider, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this3 = this;

      this.setState(function (state, props) {
        return {
          isReady: true
        };
      });

      window.onfocus = function () {
        _this3.startTimer();
      };

      window.onblur = function () {
        _this3.clearTimer();
      };
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.onfocus = null;
      window.onblur = null;
    }
  }, {
    key: "render",
    value: function render() {
      if (!this.state.isReady) {
        return null;
      }

      return React__default.createElement(StyledToastContainer, null, !this.state.unMount && React__default.createElement(AnimationWrapper, {
        direction: this.state.isOpen ? null : 'out'
      }, this.renderMessage()));
    }
  }]);

  return ToastProvider;
}(React__default.Component);

ToastProvider.displayName = 'Toast Message Provider';
ToastProvider.defaultProps = {
  messageData: {
    message: '[…Placeholder Message…]',
    secondaryMessage: '',
    actionHref: '',
    actionText: '',
    icon: '',
    variant: 'default'
  },
  delay: 3000
};
ToastMessage.Success = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(ToastMessage, _extends$1({
    ref: ref
  }, props, {
    variant: 'success'
  }));
});
ToastMessage.Failure = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(ToastMessage, _extends$1({
    ref: ref
  }, props, {
    variant: 'failure'
  }));
});
ToastMessage.Processing = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(ToastMessage, _extends$1({
    ref: ref
  }, props, {
    variant: 'processing'
  }));
});
ToastMessage.Provider = ToastProvider;
ToastMessage.defaultProps = {
  message: 'Write update here [Required]',
  secondaryMessage: '',
  actionHref: '',
  actionText: '',
  variant: 'default',
  icon: '',
  colorTheme: 'light',
  closeElem: false
};
ToastMessage.propTypes = {
  /**
   * Sets primary message text
   */
  message: PropTypes.string,

  /**
   * Sets secondary message text
   */
  secondaryMessage: PropTypes.string,

  /**
   * Sets URL for button
   */
  actionHref: PropTypes.string,

  /**
   * Sets text for button
   */
  actionText: PropTypes.string,

  /**
   * Sets type of ToastMessage to display
   */
  variant: PropTypes.oneOf(['default', 'success', 'failure', 'processing']),

  /**
   * Sets icon to display
   */
  icon: PropTypes.string,

  /**
   * Sets background and text color
   */
  colorTheme: PropTypes.oneOf(['light', 'dark']),

  /**
   * Allows ToastMessage to be closed by user
   */
  closeElem: PropTypes.bool
};
ToastMessage.displayName = 'ToastMessage';

var mode = {
	MODE_NUMBER :		1 << 0,
	MODE_ALPHA_NUM : 	1 << 1,
	MODE_8BIT_BYTE : 	1 << 2,
	MODE_KANJI :		1 << 3
};

function QR8bitByte(data) {
	this.mode = mode.MODE_8BIT_BYTE;
	this.data = data;
}

QR8bitByte.prototype = {

	getLength : function(buffer) {
		return this.data.length;
	},
	
	write : function(buffer) {
		for (var i = 0; i < this.data.length; i++) {
			// not JIS ...
			buffer.put(this.data.charCodeAt(i), 8);
		}
	}
};

var _8BitByte = QR8bitByte;

var ErrorCorrectLevel = {
	L : 1,
	M : 0,
	Q : 3,
	H : 2
};

// ErrorCorrectLevel


function QRRSBlock(totalCount, dataCount) {
	this.totalCount = totalCount;
	this.dataCount  = dataCount;
}

QRRSBlock.RS_BLOCK_TABLE = [

	// L
	// M
	// Q
	// H

	// 1
	[1, 26, 19],
	[1, 26, 16],
	[1, 26, 13],
	[1, 26, 9],
	
	// 2
	[1, 44, 34],
	[1, 44, 28],
	[1, 44, 22],
	[1, 44, 16],

	// 3
	[1, 70, 55],
	[1, 70, 44],
	[2, 35, 17],
	[2, 35, 13],

	// 4		
	[1, 100, 80],
	[2, 50, 32],
	[2, 50, 24],
	[4, 25, 9],
	
	// 5
	[1, 134, 108],
	[2, 67, 43],
	[2, 33, 15, 2, 34, 16],
	[2, 33, 11, 2, 34, 12],
	
	// 6
	[2, 86, 68],
	[4, 43, 27],
	[4, 43, 19],
	[4, 43, 15],
	
	// 7		
	[2, 98, 78],
	[4, 49, 31],
	[2, 32, 14, 4, 33, 15],
	[4, 39, 13, 1, 40, 14],
	
	// 8
	[2, 121, 97],
	[2, 60, 38, 2, 61, 39],
	[4, 40, 18, 2, 41, 19],
	[4, 40, 14, 2, 41, 15],
	
	// 9
	[2, 146, 116],
	[3, 58, 36, 2, 59, 37],
	[4, 36, 16, 4, 37, 17],
	[4, 36, 12, 4, 37, 13],
	
	// 10		
	[2, 86, 68, 2, 87, 69],
	[4, 69, 43, 1, 70, 44],
	[6, 43, 19, 2, 44, 20],
	[6, 43, 15, 2, 44, 16],

	// 11
	[4, 101, 81],
	[1, 80, 50, 4, 81, 51],
	[4, 50, 22, 4, 51, 23],
	[3, 36, 12, 8, 37, 13],

	// 12
	[2, 116, 92, 2, 117, 93],
	[6, 58, 36, 2, 59, 37],
	[4, 46, 20, 6, 47, 21],
	[7, 42, 14, 4, 43, 15],

	// 13
	[4, 133, 107],
	[8, 59, 37, 1, 60, 38],
	[8, 44, 20, 4, 45, 21],
	[12, 33, 11, 4, 34, 12],

	// 14
	[3, 145, 115, 1, 146, 116],
	[4, 64, 40, 5, 65, 41],
	[11, 36, 16, 5, 37, 17],
	[11, 36, 12, 5, 37, 13],

	// 15
	[5, 109, 87, 1, 110, 88],
	[5, 65, 41, 5, 66, 42],
	[5, 54, 24, 7, 55, 25],
	[11, 36, 12],

	// 16
	[5, 122, 98, 1, 123, 99],
	[7, 73, 45, 3, 74, 46],
	[15, 43, 19, 2, 44, 20],
	[3, 45, 15, 13, 46, 16],

	// 17
	[1, 135, 107, 5, 136, 108],
	[10, 74, 46, 1, 75, 47],
	[1, 50, 22, 15, 51, 23],
	[2, 42, 14, 17, 43, 15],

	// 18
	[5, 150, 120, 1, 151, 121],
	[9, 69, 43, 4, 70, 44],
	[17, 50, 22, 1, 51, 23],
	[2, 42, 14, 19, 43, 15],

	// 19
	[3, 141, 113, 4, 142, 114],
	[3, 70, 44, 11, 71, 45],
	[17, 47, 21, 4, 48, 22],
	[9, 39, 13, 16, 40, 14],

	// 20
	[3, 135, 107, 5, 136, 108],
	[3, 67, 41, 13, 68, 42],
	[15, 54, 24, 5, 55, 25],
	[15, 43, 15, 10, 44, 16],

	// 21
	[4, 144, 116, 4, 145, 117],
	[17, 68, 42],
	[17, 50, 22, 6, 51, 23],
	[19, 46, 16, 6, 47, 17],

	// 22
	[2, 139, 111, 7, 140, 112],
	[17, 74, 46],
	[7, 54, 24, 16, 55, 25],
	[34, 37, 13],

	// 23
	[4, 151, 121, 5, 152, 122],
	[4, 75, 47, 14, 76, 48],
	[11, 54, 24, 14, 55, 25],
	[16, 45, 15, 14, 46, 16],

	// 24
	[6, 147, 117, 4, 148, 118],
	[6, 73, 45, 14, 74, 46],
	[11, 54, 24, 16, 55, 25],
	[30, 46, 16, 2, 47, 17],

	// 25
	[8, 132, 106, 4, 133, 107],
	[8, 75, 47, 13, 76, 48],
	[7, 54, 24, 22, 55, 25],
	[22, 45, 15, 13, 46, 16],

	// 26
	[10, 142, 114, 2, 143, 115],
	[19, 74, 46, 4, 75, 47],
	[28, 50, 22, 6, 51, 23],
	[33, 46, 16, 4, 47, 17],

	// 27
	[8, 152, 122, 4, 153, 123],
	[22, 73, 45, 3, 74, 46],
	[8, 53, 23, 26, 54, 24],
	[12, 45, 15, 28, 46, 16],

	// 28
	[3, 147, 117, 10, 148, 118],
	[3, 73, 45, 23, 74, 46],
	[4, 54, 24, 31, 55, 25],
	[11, 45, 15, 31, 46, 16],

	// 29
	[7, 146, 116, 7, 147, 117],
	[21, 73, 45, 7, 74, 46],
	[1, 53, 23, 37, 54, 24],
	[19, 45, 15, 26, 46, 16],

	// 30
	[5, 145, 115, 10, 146, 116],
	[19, 75, 47, 10, 76, 48],
	[15, 54, 24, 25, 55, 25],
	[23, 45, 15, 25, 46, 16],

	// 31
	[13, 145, 115, 3, 146, 116],
	[2, 74, 46, 29, 75, 47],
	[42, 54, 24, 1, 55, 25],
	[23, 45, 15, 28, 46, 16],

	// 32
	[17, 145, 115],
	[10, 74, 46, 23, 75, 47],
	[10, 54, 24, 35, 55, 25],
	[19, 45, 15, 35, 46, 16],

	// 33
	[17, 145, 115, 1, 146, 116],
	[14, 74, 46, 21, 75, 47],
	[29, 54, 24, 19, 55, 25],
	[11, 45, 15, 46, 46, 16],

	// 34
	[13, 145, 115, 6, 146, 116],
	[14, 74, 46, 23, 75, 47],
	[44, 54, 24, 7, 55, 25],
	[59, 46, 16, 1, 47, 17],

	// 35
	[12, 151, 121, 7, 152, 122],
	[12, 75, 47, 26, 76, 48],
	[39, 54, 24, 14, 55, 25],
	[22, 45, 15, 41, 46, 16],

	// 36
	[6, 151, 121, 14, 152, 122],
	[6, 75, 47, 34, 76, 48],
	[46, 54, 24, 10, 55, 25],
	[2, 45, 15, 64, 46, 16],

	// 37
	[17, 152, 122, 4, 153, 123],
	[29, 74, 46, 14, 75, 47],
	[49, 54, 24, 10, 55, 25],
	[24, 45, 15, 46, 46, 16],

	// 38
	[4, 152, 122, 18, 153, 123],
	[13, 74, 46, 32, 75, 47],
	[48, 54, 24, 14, 55, 25],
	[42, 45, 15, 32, 46, 16],

	// 39
	[20, 147, 117, 4, 148, 118],
	[40, 75, 47, 7, 76, 48],
	[43, 54, 24, 22, 55, 25],
	[10, 45, 15, 67, 46, 16],

	// 40
	[19, 148, 118, 6, 149, 119],
	[18, 75, 47, 31, 76, 48],
	[34, 54, 24, 34, 55, 25],
	[20, 45, 15, 61, 46, 16]
];

QRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {
	
	var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);
	
	if (rsBlock == undefined) {
		throw new Error("bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" + errorCorrectLevel);
	}

	var length = rsBlock.length / 3;
	
	var list = new Array();
	
	for (var i = 0; i < length; i++) {

		var count = rsBlock[i * 3 + 0];
		var totalCount = rsBlock[i * 3 + 1];
		var dataCount  = rsBlock[i * 3 + 2];

		for (var j = 0; j < count; j++) {
			list.push(new QRRSBlock(totalCount, dataCount) );	
		}
	}
	
	return list;
};

QRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {

	switch(errorCorrectLevel) {
	case ErrorCorrectLevel.L :
		return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];
	case ErrorCorrectLevel.M :
		return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];
	case ErrorCorrectLevel.Q :
		return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];
	case ErrorCorrectLevel.H :
		return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];
	default :
		return undefined;
	}
};

var RSBlock = QRRSBlock;

function QRBitBuffer() {
	this.buffer = new Array();
	this.length = 0;
}

QRBitBuffer.prototype = {

	get : function(index) {
		var bufIndex = Math.floor(index / 8);
		return ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;
	},
	
	put : function(num, length) {
		for (var i = 0; i < length; i++) {
			this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);
		}
	},
	
	getLengthInBits : function() {
		return this.length;
	},
	
	putBit : function(bit) {
	
		var bufIndex = Math.floor(this.length / 8);
		if (this.buffer.length <= bufIndex) {
			this.buffer.push(0);
		}
	
		if (bit) {
			this.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );
		}
	
		this.length++;
	}
};

var BitBuffer = QRBitBuffer;

var QRMath = {

	glog : function(n) {
	
		if (n < 1) {
			throw new Error("glog(" + n + ")");
		}
		
		return QRMath.LOG_TABLE[n];
	},
	
	gexp : function(n) {
	
		while (n < 0) {
			n += 255;
		}
	
		while (n >= 256) {
			n -= 255;
		}
	
		return QRMath.EXP_TABLE[n];
	},
	
	EXP_TABLE : new Array(256),
	
	LOG_TABLE : new Array(256)

};
	
for (var i$2 = 0; i$2 < 8; i$2++) {
	QRMath.EXP_TABLE[i$2] = 1 << i$2;
}
for (var i$2 = 8; i$2 < 256; i$2++) {
	QRMath.EXP_TABLE[i$2] = QRMath.EXP_TABLE[i$2 - 4]
		^ QRMath.EXP_TABLE[i$2 - 5]
		^ QRMath.EXP_TABLE[i$2 - 6]
		^ QRMath.EXP_TABLE[i$2 - 8];
}
for (var i$2 = 0; i$2 < 255; i$2++) {
	QRMath.LOG_TABLE[QRMath.EXP_TABLE[i$2] ] = i$2;
}

var math = QRMath;

function QRPolynomial(num, shift) {

	if (num.length == undefined) {
		throw new Error(num.length + "/" + shift);
	}

	var offset = 0;

	while (offset < num.length && num[offset] == 0) {
		offset++;
	}

	this.num = new Array(num.length - offset + shift);
	for (var i = 0; i < num.length - offset; i++) {
		this.num[i] = num[i + offset];
	}
}

QRPolynomial.prototype = {

	get : function(index) {
		return this.num[index];
	},
	
	getLength : function() {
		return this.num.length;
	},
	
	multiply : function(e) {
	
		var num = new Array(this.getLength() + e.getLength() - 1);
	
		for (var i = 0; i < this.getLength(); i++) {
			for (var j = 0; j < e.getLength(); j++) {
				num[i + j] ^= math.gexp(math.glog(this.get(i) ) + math.glog(e.get(j) ) );
			}
		}
	
		return new QRPolynomial(num, 0);
	},
	
	mod : function(e) {
	
		if (this.getLength() - e.getLength() < 0) {
			return this;
		}
	
		var ratio = math.glog(this.get(0) ) - math.glog(e.get(0) );
	
		var num = new Array(this.getLength() );
		
		for (var i = 0; i < this.getLength(); i++) {
			num[i] = this.get(i);
		}
		
		for (var i = 0; i < e.getLength(); i++) {
			num[i] ^= math.gexp(math.glog(e.get(i) ) + ratio);
		}
	
		// recursive call
		return new QRPolynomial(num, 0).mod(e);
	}
};

var Polynomial = QRPolynomial;

var QRMaskPattern = {
	PATTERN000 : 0,
	PATTERN001 : 1,
	PATTERN010 : 2,
	PATTERN011 : 3,
	PATTERN100 : 4,
	PATTERN101 : 5,
	PATTERN110 : 6,
	PATTERN111 : 7
};

var QRUtil = {

    PATTERN_POSITION_TABLE : [
	    [],
	    [6, 18],
	    [6, 22],
	    [6, 26],
	    [6, 30],
	    [6, 34],
	    [6, 22, 38],
	    [6, 24, 42],
	    [6, 26, 46],
	    [6, 28, 50],
	    [6, 30, 54],		
	    [6, 32, 58],
	    [6, 34, 62],
	    [6, 26, 46, 66],
	    [6, 26, 48, 70],
	    [6, 26, 50, 74],
	    [6, 30, 54, 78],
	    [6, 30, 56, 82],
	    [6, 30, 58, 86],
	    [6, 34, 62, 90],
	    [6, 28, 50, 72, 94],
	    [6, 26, 50, 74, 98],
	    [6, 30, 54, 78, 102],
	    [6, 28, 54, 80, 106],
	    [6, 32, 58, 84, 110],
	    [6, 30, 58, 86, 114],
	    [6, 34, 62, 90, 118],
	    [6, 26, 50, 74, 98, 122],
	    [6, 30, 54, 78, 102, 126],
	    [6, 26, 52, 78, 104, 130],
	    [6, 30, 56, 82, 108, 134],
	    [6, 34, 60, 86, 112, 138],
	    [6, 30, 58, 86, 114, 142],
	    [6, 34, 62, 90, 118, 146],
	    [6, 30, 54, 78, 102, 126, 150],
	    [6, 24, 50, 76, 102, 128, 154],
	    [6, 28, 54, 80, 106, 132, 158],
	    [6, 32, 58, 84, 110, 136, 162],
	    [6, 26, 54, 82, 110, 138, 166],
	    [6, 30, 58, 86, 114, 142, 170]
    ],

    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),
    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),
    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)	| (1 << 4) | (1 << 1),

    getBCHTypeInfo : function(data) {
	    var d = data << 10;
	    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {
		    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); 	
	    }
	    return ( (data << 10) | d) ^ QRUtil.G15_MASK;
    },

    getBCHTypeNumber : function(data) {
	    var d = data << 12;
	    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {
		    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); 	
	    }
	    return (data << 12) | d;
    },

    getBCHDigit : function(data) {

	    var digit = 0;

	    while (data != 0) {
		    digit++;
		    data >>>= 1;
	    }

	    return digit;
    },

    getPatternPosition : function(typeNumber) {
	    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
    },

    getMask : function(maskPattern, i, j) {
	    
	    switch (maskPattern) {
		    
	    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;
	    case QRMaskPattern.PATTERN001 : return i % 2 == 0;
	    case QRMaskPattern.PATTERN010 : return j % 3 == 0;
	    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;
	    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;
	    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;
	    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;
	    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;

	    default :
		    throw new Error("bad maskPattern:" + maskPattern);
	    }
    },

    getErrorCorrectPolynomial : function(errorCorrectLength) {

	    var a = new Polynomial([1], 0);

	    for (var i = 0; i < errorCorrectLength; i++) {
		    a = a.multiply(new Polynomial([1, math.gexp(i)], 0) );
	    }

	    return a;
    },

    getLengthInBits : function(mode$1, type) {

	    if (1 <= type && type < 10) {

		    // 1 - 9

		    switch(mode$1) {
		    case mode.MODE_NUMBER 	: return 10;
		    case mode.MODE_ALPHA_NUM 	: return 9;
		    case mode.MODE_8BIT_BYTE	: return 8;
		    case mode.MODE_KANJI  	: return 8;
		    default :
			    throw new Error("mode:" + mode$1);
		    }

	    } else if (type < 27) {

		    // 10 - 26

		    switch(mode$1) {
		    case mode.MODE_NUMBER 	: return 12;
		    case mode.MODE_ALPHA_NUM 	: return 11;
		    case mode.MODE_8BIT_BYTE	: return 16;
		    case mode.MODE_KANJI  	: return 10;
		    default :
			    throw new Error("mode:" + mode$1);
		    }

	    } else if (type < 41) {

		    // 27 - 40

		    switch(mode$1) {
		    case mode.MODE_NUMBER 	: return 14;
		    case mode.MODE_ALPHA_NUM	: return 13;
		    case mode.MODE_8BIT_BYTE	: return 16;
		    case mode.MODE_KANJI  	: return 12;
		    default :
			    throw new Error("mode:" + mode$1);
		    }

	    } else {
		    throw new Error("type:" + type);
	    }
    },

    getLostPoint : function(qrCode) {
	    
	    var moduleCount = qrCode.getModuleCount();
	    
	    var lostPoint = 0;
	    
	    // LEVEL1
	    
	    for (var row = 0; row < moduleCount; row++) {

		    for (var col = 0; col < moduleCount; col++) {

			    var sameCount = 0;
			    var dark = qrCode.isDark(row, col);

				for (var r = -1; r <= 1; r++) {

				    if (row + r < 0 || moduleCount <= row + r) {
					    continue;
				    }

				    for (var c = -1; c <= 1; c++) {

					    if (col + c < 0 || moduleCount <= col + c) {
						    continue;
					    }

					    if (r == 0 && c == 0) {
						    continue;
					    }

					    if (dark == qrCode.isDark(row + r, col + c) ) {
						    sameCount++;
					    }
				    }
			    }

			    if (sameCount > 5) {
				    lostPoint += (3 + sameCount - 5);
			    }
		    }
	    }

	    // LEVEL2

	    for (var row = 0; row < moduleCount - 1; row++) {
		    for (var col = 0; col < moduleCount - 1; col++) {
			    var count = 0;
			    if (qrCode.isDark(row,     col    ) ) count++;
			    if (qrCode.isDark(row + 1, col    ) ) count++;
			    if (qrCode.isDark(row,     col + 1) ) count++;
			    if (qrCode.isDark(row + 1, col + 1) ) count++;
			    if (count == 0 || count == 4) {
				    lostPoint += 3;
			    }
		    }
	    }

	    // LEVEL3

	    for (var row = 0; row < moduleCount; row++) {
		    for (var col = 0; col < moduleCount - 6; col++) {
			    if (qrCode.isDark(row, col)
					    && !qrCode.isDark(row, col + 1)
					    &&  qrCode.isDark(row, col + 2)
					    &&  qrCode.isDark(row, col + 3)
					    &&  qrCode.isDark(row, col + 4)
					    && !qrCode.isDark(row, col + 5)
					    &&  qrCode.isDark(row, col + 6) ) {
				    lostPoint += 40;
			    }
		    }
	    }

	    for (var col = 0; col < moduleCount; col++) {
		    for (var row = 0; row < moduleCount - 6; row++) {
			    if (qrCode.isDark(row, col)
					    && !qrCode.isDark(row + 1, col)
					    &&  qrCode.isDark(row + 2, col)
					    &&  qrCode.isDark(row + 3, col)
					    &&  qrCode.isDark(row + 4, col)
					    && !qrCode.isDark(row + 5, col)
					    &&  qrCode.isDark(row + 6, col) ) {
				    lostPoint += 40;
			    }
		    }
	    }

	    // LEVEL4
	    
	    var darkCount = 0;

	    for (var col = 0; col < moduleCount; col++) {
		    for (var row = 0; row < moduleCount; row++) {
			    if (qrCode.isDark(row, col) ) {
				    darkCount++;
			    }
		    }
	    }
	    
	    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
	    lostPoint += ratio * 10;

	    return lostPoint;		
    }
};

var util = QRUtil;

function QRCode(typeNumber, errorCorrectLevel) {
	this.typeNumber = typeNumber;
	this.errorCorrectLevel = errorCorrectLevel;
	this.modules = null;
	this.moduleCount = 0;
	this.dataCache = null;
	this.dataList = [];
}

// for client side minification
var proto$1 = QRCode.prototype;

proto$1.addData = function(data) {
	var newData = new _8BitByte(data);
	this.dataList.push(newData);
	this.dataCache = null;
};

proto$1.isDark = function(row, col) {
	if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {
		throw new Error(row + "," + col);
	}
	return this.modules[row][col];
};

proto$1.getModuleCount = function() {
	return this.moduleCount;
};

proto$1.make = function() {
	// Calculate automatically typeNumber if provided is < 1
	if (this.typeNumber < 1 ){
		var typeNumber = 1;
		for (typeNumber = 1; typeNumber < 40; typeNumber++) {
			var rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);

			var buffer = new BitBuffer();
			var totalDataCount = 0;
			for (var i = 0; i < rsBlocks.length; i++) {
				totalDataCount += rsBlocks[i].dataCount;
			}

			for (var i = 0; i < this.dataList.length; i++) {
				var data = this.dataList[i];
				buffer.put(data.mode, 4);
				buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );
				data.write(buffer);
			}
			if (buffer.getLengthInBits() <= totalDataCount * 8)
				break;
		}
		this.typeNumber = typeNumber;
	}
	this.makeImpl(false, this.getBestMaskPattern() );
};

proto$1.makeImpl = function(test, maskPattern) {
	
	this.moduleCount = this.typeNumber * 4 + 17;
	this.modules = new Array(this.moduleCount);
	
	for (var row = 0; row < this.moduleCount; row++) {
		
		this.modules[row] = new Array(this.moduleCount);
		
		for (var col = 0; col < this.moduleCount; col++) {
			this.modules[row][col] = null;//(col + row) % 3;
		}
	}

	this.setupPositionProbePattern(0, 0);
	this.setupPositionProbePattern(this.moduleCount - 7, 0);
	this.setupPositionProbePattern(0, this.moduleCount - 7);
	this.setupPositionAdjustPattern();
	this.setupTimingPattern();
	this.setupTypeInfo(test, maskPattern);
	
	if (this.typeNumber >= 7) {
		this.setupTypeNumber(test);
	}

	if (this.dataCache == null) {
		this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);
	}

	this.mapData(this.dataCache, maskPattern);
};

proto$1.setupPositionProbePattern = function(row, col)  {
	
	for (var r = -1; r <= 7; r++) {
		
		if (row + r <= -1 || this.moduleCount <= row + r) continue;
		
		for (var c = -1; c <= 7; c++) {
			
			if (col + c <= -1 || this.moduleCount <= col + c) continue;
			
			if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )
					|| (0 <= c && c <= 6 && (r == 0 || r == 6) )
					|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {
				this.modules[row + r][col + c] = true;
			} else {
				this.modules[row + r][col + c] = false;
			}
		}		
	}		
};

proto$1.getBestMaskPattern = function() {

	var minLostPoint = 0;
	var pattern = 0;

	for (var i = 0; i < 8; i++) {
		
		this.makeImpl(true, i);

		var lostPoint = util.getLostPoint(this);

		if (i == 0 || minLostPoint >  lostPoint) {
			minLostPoint = lostPoint;
			pattern = i;
		}
	}

	return pattern;
};

proto$1.createMovieClip = function(target_mc, instance_name, depth) {

	var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);
	var cs = 1;

	this.make();

	for (var row = 0; row < this.modules.length; row++) {
		
		var y = row * cs;
		
		for (var col = 0; col < this.modules[row].length; col++) {

			var x = col * cs;
			var dark = this.modules[row][col];
		
			if (dark) {
				qr_mc.beginFill(0, 100);
				qr_mc.moveTo(x, y);
				qr_mc.lineTo(x + cs, y);
				qr_mc.lineTo(x + cs, y + cs);
				qr_mc.lineTo(x, y + cs);
				qr_mc.endFill();
			}
		}
	}
	
	return qr_mc;
};

proto$1.setupTimingPattern = function() {
	
	for (var r = 8; r < this.moduleCount - 8; r++) {
		if (this.modules[r][6] != null) {
			continue;
		}
		this.modules[r][6] = (r % 2 == 0);
	}

	for (var c = 8; c < this.moduleCount - 8; c++) {
		if (this.modules[6][c] != null) {
			continue;
		}
		this.modules[6][c] = (c % 2 == 0);
	}
};

proto$1.setupPositionAdjustPattern = function() {

	var pos = util.getPatternPosition(this.typeNumber);
	
	for (var i = 0; i < pos.length; i++) {
	
		for (var j = 0; j < pos.length; j++) {
		
			var row = pos[i];
			var col = pos[j];
			
			if (this.modules[row][col] != null) {
				continue;
			}
			
			for (var r = -2; r <= 2; r++) {
			
				for (var c = -2; c <= 2; c++) {
				
					if (r == -2 || r == 2 || c == -2 || c == 2
							|| (r == 0 && c == 0) ) {
						this.modules[row + r][col + c] = true;
					} else {
						this.modules[row + r][col + c] = false;
					}
				}
			}
		}
	}
};

proto$1.setupTypeNumber = function(test) {

	var bits = util.getBCHTypeNumber(this.typeNumber);

	for (var i = 0; i < 18; i++) {
		var mod = (!test && ( (bits >> i) & 1) == 1);
		this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;
	}

	for (var i = 0; i < 18; i++) {
		var mod = (!test && ( (bits >> i) & 1) == 1);
		this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
	}
};

proto$1.setupTypeInfo = function(test, maskPattern) {

	var data = (this.errorCorrectLevel << 3) | maskPattern;
	var bits = util.getBCHTypeInfo(data);

	// vertical		
	for (var i = 0; i < 15; i++) {

		var mod = (!test && ( (bits >> i) & 1) == 1);

		if (i < 6) {
			this.modules[i][8] = mod;
		} else if (i < 8) {
			this.modules[i + 1][8] = mod;
		} else {
			this.modules[this.moduleCount - 15 + i][8] = mod;
		}
	}

	// horizontal
	for (var i = 0; i < 15; i++) {

		var mod = (!test && ( (bits >> i) & 1) == 1);
		
		if (i < 8) {
			this.modules[8][this.moduleCount - i - 1] = mod;
		} else if (i < 9) {
			this.modules[8][15 - i - 1 + 1] = mod;
		} else {
			this.modules[8][15 - i - 1] = mod;
		}
	}

	// fixed module
	this.modules[this.moduleCount - 8][8] = (!test);
};

proto$1.mapData = function(data, maskPattern) {
	
	var inc = -1;
	var row = this.moduleCount - 1;
	var bitIndex = 7;
	var byteIndex = 0;
	
	for (var col = this.moduleCount - 1; col > 0; col -= 2) {

		if (col == 6) col--;

		while (true) {

			for (var c = 0; c < 2; c++) {
				
				if (this.modules[row][col - c] == null) {
					
					var dark = false;

					if (byteIndex < data.length) {
						dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);
					}

					var mask = util.getMask(maskPattern, row, col - c);

					if (mask) {
						dark = !dark;
					}
					
					this.modules[row][col - c] = dark;
					bitIndex--;

					if (bitIndex == -1) {
						byteIndex++;
						bitIndex = 7;
					}
				}
			}
							
			row += inc;

			if (row < 0 || this.moduleCount <= row) {
				row -= inc;
				inc = -inc;
				break;
			}
		}
	}
};

QRCode.PAD0 = 0xEC;
QRCode.PAD1 = 0x11;

QRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {
	
	var rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);
	
	var buffer = new BitBuffer();
	
	for (var i = 0; i < dataList.length; i++) {
		var data = dataList[i];
		buffer.put(data.mode, 4);
		buffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );
		data.write(buffer);
	}

	// calc num max data.
	var totalDataCount = 0;
	for (var i = 0; i < rsBlocks.length; i++) {
		totalDataCount += rsBlocks[i].dataCount;
	}

	if (buffer.getLengthInBits() > totalDataCount * 8) {
		throw new Error("code length overflow. ("
			+ buffer.getLengthInBits()
			+ ">"
			+  totalDataCount * 8
			+ ")");
	}

	// end code
	if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
		buffer.put(0, 4);
	}

	// padding
	while (buffer.getLengthInBits() % 8 != 0) {
		buffer.putBit(false);
	}

	// padding
	while (true) {
		
		if (buffer.getLengthInBits() >= totalDataCount * 8) {
			break;
		}
		buffer.put(QRCode.PAD0, 8);
		
		if (buffer.getLengthInBits() >= totalDataCount * 8) {
			break;
		}
		buffer.put(QRCode.PAD1, 8);
	}

	return QRCode.createBytes(buffer, rsBlocks);
};

QRCode.createBytes = function(buffer, rsBlocks) {

	var offset = 0;
	
	var maxDcCount = 0;
	var maxEcCount = 0;
	
	var dcdata = new Array(rsBlocks.length);
	var ecdata = new Array(rsBlocks.length);
	
	for (var r = 0; r < rsBlocks.length; r++) {

		var dcCount = rsBlocks[r].dataCount;
		var ecCount = rsBlocks[r].totalCount - dcCount;

		maxDcCount = Math.max(maxDcCount, dcCount);
		maxEcCount = Math.max(maxEcCount, ecCount);
		
		dcdata[r] = new Array(dcCount);
		
		for (var i = 0; i < dcdata[r].length; i++) {
			dcdata[r][i] = 0xff & buffer.buffer[i + offset];
		}
		offset += dcCount;
		
		var rsPoly = util.getErrorCorrectPolynomial(ecCount);
		var rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);

		var modPoly = rawPoly.mod(rsPoly);
		ecdata[r] = new Array(rsPoly.getLength() - 1);
		for (var i = 0; i < ecdata[r].length; i++) {
            var modIndex = i + modPoly.getLength() - ecdata[r].length;
			ecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;
		}

	}
	
	var totalCodeCount = 0;
	for (var i = 0; i < rsBlocks.length; i++) {
		totalCodeCount += rsBlocks[i].totalCount;
	}

	var data = new Array(totalCodeCount);
	var index = 0;

	for (var i = 0; i < maxDcCount; i++) {
		for (var r = 0; r < rsBlocks.length; r++) {
			if (i < dcdata[r].length) {
				data[index++] = dcdata[r][i];
			}
		}
	}

	for (var i = 0; i < maxEcCount; i++) {
		for (var r = 0; r < rsBlocks.length; r++) {
			if (i < ecdata[r].length) {
				data[index++] = ecdata[r][i];
			}
		}
	}

	return data;
};

var QRCode_1 = QRCode;

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends$ks() { _extends$ks = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$ks.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty$1(target, key, source[key]); }); } return target; }

function _objectWithoutProperties$2(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose$2(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose$2(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck$2(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$1(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$1(Constructor.prototype, protoProps); if (staticProps) _defineProperties$1(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn$2(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized$2(self); }

function _getPrototypeOf$2(o) { _getPrototypeOf$2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf$2(o); }

function _inherits$2(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf$2(subClass, superClass); }

function _setPrototypeOf$2(o, p) { _setPrototypeOf$2 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$2(o, p); }

function _assertThisInitialized$2(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty$1(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



 // qr.js doesn't handle error level of zero (M) so we need to do it right,
// thus the deep require.




 // Convert from UTF-16, forcing the use of byte-mode encoding in our QR Code.
// This allows us to encode Hanji, Kanji, emoji, etc. Ideally we'd do more
// detection and not resort to byte-mode if possible, but we're trading off
// a smaller library for a smaller amount of data we can potentially encode.
// Based on http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/


function convertStr(str) {
  var out = '';

  for (var i = 0; i < str.length; i++) {
    var charcode = str.charCodeAt(i);

    if (charcode < 0x0080) {
      out += String.fromCharCode(charcode);
    } else if (charcode < 0x0800) {
      out += String.fromCharCode(0xc0 | charcode >> 6);
      out += String.fromCharCode(0x80 | charcode & 0x3f);
    } else if (charcode < 0xd800 || charcode >= 0xe000) {
      out += String.fromCharCode(0xe0 | charcode >> 12);
      out += String.fromCharCode(0x80 | charcode >> 6 & 0x3f);
      out += String.fromCharCode(0x80 | charcode & 0x3f);
    } else {
      // This is a surrogate pair, so we'll reconsitute the pieces and work
      // from that
      i++;
      charcode = 0x10000 + ((charcode & 0x3ff) << 10 | str.charCodeAt(i) & 0x3ff);
      out += String.fromCharCode(0xf0 | charcode >> 18);
      out += String.fromCharCode(0x80 | charcode >> 12 & 0x3f);
      out += String.fromCharCode(0x80 | charcode >> 6 & 0x3f);
      out += String.fromCharCode(0x80 | charcode & 0x3f);
    }
  }

  return out;
}

var DEFAULT_PROPS = {
  size: 128,
  level: 'L',
  bgColor: '#FFFFFF',
  fgColor: '#000000',
  includeMargin: false
};
var PROP_TYPES = {
  value: PropTypes.string.isRequired,
  size: PropTypes.number,
  level: PropTypes.oneOf(['L', 'M', 'Q', 'H']),
  bgColor: PropTypes.string,
  fgColor: PropTypes.string,
  includeMargin: PropTypes.bool
};
var MARGIN_SIZE = 4;

function generatePath(modules) {
  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var ops = [];
  modules.forEach(function (row, y) {
    var start = null;
    row.forEach(function (cell, x) {
      if (!cell && start !== null) {
        // M0 0h7v1H0z injects the space with the move and drops the comma,
        // saving a char per operation
        ops.push("M".concat(start + margin, " ").concat(y + margin, "h").concat(x - start, "v1H").concat(start + margin, "z"));
        start = null;
        return;
      } // end of row, clean up or skip


      if (x === row.length - 1) {
        if (!cell) {
          // We would have closed the op above already so this can only mean
          // 2+ light modules in a row.
          return;
        }

        if (start === null) {
          // Just a single dark module.
          ops.push("M".concat(x + margin, ",").concat(y + margin, " h1v1H").concat(x + margin, "z"));
        } else {
          // Otherwise finish the current line.
          ops.push("M".concat(start + margin, ",").concat(y + margin, " h").concat(x + 1 - start, "v1H").concat(start + margin, "z"));
        }

        return;
      }

      if (cell && start === null) {
        start = x;
      }
    });
  });
  return ops.join('');
} // For canvas we're going to switch our drawing mode based on whether or not
// the environment supports Path2D. We only need the constructor to be
// supported, but Edge doesn't actually support the path (string) type
// argument. Luckily it also doesn't support the addPath() method. We can
// treat that as the same thing.


var SUPPORTS_PATH2D = function () {
  try {
    new Path2D().addPath(new Path2D());
  } catch (e) {
    return false;
  }

  return true;
}();

var QRCodeCanvas =
/*#__PURE__*/
function (_React$PureComponent) {
  _inherits$2(QRCodeCanvas, _React$PureComponent);

  function QRCodeCanvas() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck$2(this, QRCodeCanvas);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn$2(this, (_getPrototypeOf2 = _getPrototypeOf$2(QRCodeCanvas)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty$1(_assertThisInitialized$2(_assertThisInitialized$2(_this)), "_canvas", void 0);

    return _this;
  }

  _createClass$1(QRCodeCanvas, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.update();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.update();
    }
  }, {
    key: "update",
    value: function update() {
      var _this$props = this.props,
          value = _this$props.value,
          size = _this$props.size,
          level = _this$props.level,
          bgColor = _this$props.bgColor,
          fgColor = _this$props.fgColor,
          includeMargin = _this$props.includeMargin; // We'll use type===-1 to force QRCode to automatically pick the best type

      var qrcode = new QRCode_1(-1, ErrorCorrectLevel[level]);
      qrcode.addData(convertStr(value));
      qrcode.make();

      if (this._canvas != null) {
        var canvas = this._canvas;
        var ctx = canvas.getContext('2d');

        if (!ctx) {
          return;
        }

        var cells = qrcode.modules;

        if (cells === null) {
          return;
        }

        var margin = includeMargin ? MARGIN_SIZE : 0;
        var numCells = cells.length + margin * 2; // We're going to scale this so that the number of drawable units
        // matches the number of cells. This avoids rounding issues, but does
        // result in some potentially unwanted single pixel issues between
        // blocks, only in environments that don't support Path2D.

        var pixelRatio = window.devicePixelRatio || 1;
        canvas.height = canvas.width = size * pixelRatio;
        var scale = size / numCells * pixelRatio;
        ctx.scale(scale, scale); // Draw solid background, only paint dark modules.

        ctx.fillStyle = bgColor;
        ctx.fillRect(0, 0, numCells, numCells);
        ctx.fillStyle = fgColor;

        if (SUPPORTS_PATH2D) {
          // $FlowFixMe: Path2D c'tor doesn't support args yet.
          ctx.fill(new Path2D(generatePath(cells, margin)));
        } else {
          cells.forEach(function (row, rdx) {
            row.forEach(function (cell, cdx) {
              if (cell) {
                ctx.fillRect(cdx + margin, rdx + margin, 1, 1);
              }
            });
          });
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          value = _this$props2.value,
          size = _this$props2.size,
          level = _this$props2.level,
          bgColor = _this$props2.bgColor,
          fgColor = _this$props2.fgColor,
          style = _this$props2.style,
          includeMargin = _this$props2.includeMargin,
          otherProps = _objectWithoutProperties$2(_this$props2, ["value", "size", "level", "bgColor", "fgColor", "style", "includeMargin"]);

      var canvasStyle = _objectSpread({
        height: size,
        width: size
      }, style);

      return React__default.createElement("canvas", _extends$ks({
        style: canvasStyle,
        height: size,
        width: size,
        ref: function ref(_ref) {
          return _this2._canvas = _ref;
        }
      }, otherProps));
    }
  }]);

  return QRCodeCanvas;
}(React__default.PureComponent);

_defineProperty$1(QRCodeCanvas, "defaultProps", DEFAULT_PROPS);

_defineProperty$1(QRCodeCanvas, "propTypes", PROP_TYPES);

var QRCodeSVG =
/*#__PURE__*/
function (_React$PureComponent2) {
  _inherits$2(QRCodeSVG, _React$PureComponent2);

  function QRCodeSVG() {
    _classCallCheck$2(this, QRCodeSVG);

    return _possibleConstructorReturn$2(this, _getPrototypeOf$2(QRCodeSVG).apply(this, arguments));
  }

  _createClass$1(QRCodeSVG, [{
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          value = _this$props3.value,
          size = _this$props3.size,
          level = _this$props3.level,
          bgColor = _this$props3.bgColor,
          fgColor = _this$props3.fgColor,
          includeMargin = _this$props3.includeMargin,
          otherProps = _objectWithoutProperties$2(_this$props3, ["value", "size", "level", "bgColor", "fgColor", "includeMargin"]); // We'll use type===-1 to force QRCode to automatically pick the best type


      var qrcode = new QRCode_1(-1, ErrorCorrectLevel[level]);
      qrcode.addData(convertStr(value));
      qrcode.make();
      var cells = qrcode.modules;

      if (cells === null) {
        return null;
      }

      var margin = includeMargin ? MARGIN_SIZE : 0; // Drawing strategy: instead of a rect per module, we're going to create a
      // single path for the dark modules and layer that on top of a light rect,
      // for a total of 2 DOM nodes. We pay a bit more in string concat but that's
      // way faster than DOM ops.
      // For level 1, 441 nodes -> 2
      // For level 40, 31329 -> 2

      var fgPath = generatePath(cells, margin);
      var numCells = cells.length + margin * 2;
      return React__default.createElement("svg", _extends$ks({
        shapeRendering: "crispEdges",
        height: size,
        width: size,
        viewBox: "0 0 ".concat(numCells, " ").concat(numCells)
      }, otherProps), React__default.createElement("path", {
        fill: bgColor,
        d: "M0,0 h".concat(numCells, "v").concat(numCells, "H0z")
      }), React__default.createElement("path", {
        fill: fgColor,
        d: fgPath
      }));
    }
  }]);

  return QRCodeSVG;
}(React__default.PureComponent);

_defineProperty$1(QRCodeSVG, "defaultProps", DEFAULT_PROPS);

_defineProperty$1(QRCodeSVG, "propTypes", PROP_TYPES);

var QRCode$1 = function QRCode(props) {
  var renderAs = props.renderAs,
      otherProps = _objectWithoutProperties$2(props, ["renderAs"]);

  var Component = renderAs === 'svg' ? QRCodeSVG : QRCodeCanvas;
  return React__default.createElement(Component, otherProps);
};

QRCode$1.defaultProps = _objectSpread({
  renderAs: 'canvas'
}, DEFAULT_PROPS);
var lib$1 = QRCode$1;

var QR = React__default.forwardRef(function (props, ref) {
  return React__default.createElement(lib$1, _extends$1({
    ref: ref
  }, props));
});
QR.propTypes = {
  /**
   * Sets the value of the QR code
   */
  value: PropTypes.string.isRequired,

  /**
   * Changes the element that contains the QR code
   */
  renderAs: PropTypes.oneOf(['canvas', 'svg']),

  /**
   * Sets the height and width in pixels
   */
  size: PropTypes.number,

  /**
   * Sets the background color
   */
  bgColor: PropTypes.string,

  /**
   * Sets the foreground color
   */
  fgColor: PropTypes.string,

  /**
   * Sets the amount of error correction
   */
  level: PropTypes.oneOf(['L', 'M', 'Q', 'H']),

  /**
   * Adds margin around the QR code
   */
  includeMargin: PropTypes.bool
};
QR.defaultProps = {
  renderAs: 'svg',
  size: 128,
  bgColor: '#FFFFFF',
  fgColor: '#000000',
  level: 'L',
  includeMargin: false
};
QR.displayName = 'QR';

var useHiddenState = function useHiddenState() {
  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      visible = _useState2[0],
      setIsVisible = _useState2[1];

  var toggle = function toggle() {
    setIsVisible(!visible);
  };

  return {
    visible: visible,
    toggle: toggle
  };
};

var clipboard = createCommonjsModule(function (module, exports) {
/*!
 * clipboard.js v2.0.4
 * https://zenorocha.github.io/clipboard.js
 * 
 * Licensed MIT © Zeno Rocha
 */
(function webpackUniversalModuleDefinition(root, factory) {
	module.exports = factory();
})(commonjsGlobal, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _clipboardAction = __webpack_require__(1);

var _clipboardAction2 = _interopRequireDefault(_clipboardAction);

var _tinyEmitter = __webpack_require__(3);

var _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);

var _goodListener = __webpack_require__(4);

var _goodListener2 = _interopRequireDefault(_goodListener);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Base class which takes one or more elements, adds event listeners to them,
 * and instantiates a new `ClipboardAction` on each click.
 */
var Clipboard = function (_Emitter) {
    _inherits(Clipboard, _Emitter);

    /**
     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger
     * @param {Object} options
     */
    function Clipboard(trigger, options) {
        _classCallCheck(this, Clipboard);

        var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));

        _this.resolveOptions(options);
        _this.listenClick(trigger);
        return _this;
    }

    /**
     * Defines if attributes would be resolved using internal setter functions
     * or custom functions that were passed in the constructor.
     * @param {Object} options
     */


    _createClass(Clipboard, [{
        key: 'resolveOptions',
        value: function resolveOptions() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            this.action = typeof options.action === 'function' ? options.action : this.defaultAction;
            this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;
            this.text = typeof options.text === 'function' ? options.text : this.defaultText;
            this.container = _typeof(options.container) === 'object' ? options.container : document.body;
        }

        /**
         * Adds a click event listener to the passed trigger.
         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger
         */

    }, {
        key: 'listenClick',
        value: function listenClick(trigger) {
            var _this2 = this;

            this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {
                return _this2.onClick(e);
            });
        }

        /**
         * Defines a new `ClipboardAction` on each click event.
         * @param {Event} e
         */

    }, {
        key: 'onClick',
        value: function onClick(e) {
            var trigger = e.delegateTarget || e.currentTarget;

            if (this.clipboardAction) {
                this.clipboardAction = null;
            }

            this.clipboardAction = new _clipboardAction2.default({
                action: this.action(trigger),
                target: this.target(trigger),
                text: this.text(trigger),
                container: this.container,
                trigger: trigger,
                emitter: this
            });
        }

        /**
         * Default `action` lookup function.
         * @param {Element} trigger
         */

    }, {
        key: 'defaultAction',
        value: function defaultAction(trigger) {
            return getAttributeValue('action', trigger);
        }

        /**
         * Default `target` lookup function.
         * @param {Element} trigger
         */

    }, {
        key: 'defaultTarget',
        value: function defaultTarget(trigger) {
            var selector = getAttributeValue('target', trigger);

            if (selector) {
                return document.querySelector(selector);
            }
        }

        /**
         * Returns the support of the given action, or all actions if no action is
         * given.
         * @param {String} [action]
         */

    }, {
        key: 'defaultText',


        /**
         * Default `text` lookup function.
         * @param {Element} trigger
         */
        value: function defaultText(trigger) {
            return getAttributeValue('text', trigger);
        }

        /**
         * Destroy lifecycle.
         */

    }, {
        key: 'destroy',
        value: function destroy() {
            this.listener.destroy();

            if (this.clipboardAction) {
                this.clipboardAction.destroy();
                this.clipboardAction = null;
            }
        }
    }], [{
        key: 'isSupported',
        value: function isSupported() {
            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];

            var actions = typeof action === 'string' ? [action] : action;
            var support = !!document.queryCommandSupported;

            actions.forEach(function (action) {
                support = support && !!document.queryCommandSupported(action);
            });

            return support;
        }
    }]);

    return Clipboard;
}(_tinyEmitter2.default);

/**
 * Helper function to retrieve attribute value.
 * @param {String} suffix
 * @param {Element} element
 */


function getAttributeValue(suffix, element) {
    var attribute = 'data-clipboard-' + suffix;

    if (!element.hasAttribute(attribute)) {
        return;
    }

    return element.getAttribute(attribute);
}

module.exports = Clipboard;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _select = __webpack_require__(2);

var _select2 = _interopRequireDefault(_select);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Inner class which performs selection from either `text` or `target`
 * properties and then executes copy or cut operations.
 */
var ClipboardAction = function () {
    /**
     * @param {Object} options
     */
    function ClipboardAction(options) {
        _classCallCheck(this, ClipboardAction);

        this.resolveOptions(options);
        this.initSelection();
    }

    /**
     * Defines base properties passed from constructor.
     * @param {Object} options
     */


    _createClass(ClipboardAction, [{
        key: 'resolveOptions',
        value: function resolveOptions() {
            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

            this.action = options.action;
            this.container = options.container;
            this.emitter = options.emitter;
            this.target = options.target;
            this.text = options.text;
            this.trigger = options.trigger;

            this.selectedText = '';
        }

        /**
         * Decides which selection strategy is going to be applied based
         * on the existence of `text` and `target` properties.
         */

    }, {
        key: 'initSelection',
        value: function initSelection() {
            if (this.text) {
                this.selectFake();
            } else if (this.target) {
                this.selectTarget();
            }
        }

        /**
         * Creates a fake textarea element, sets its value from `text` property,
         * and makes a selection on it.
         */

    }, {
        key: 'selectFake',
        value: function selectFake() {
            var _this = this;

            var isRTL = document.documentElement.getAttribute('dir') == 'rtl';

            this.removeFake();

            this.fakeHandlerCallback = function () {
                return _this.removeFake();
            };
            this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;

            this.fakeElem = document.createElement('textarea');
            // Prevent zooming on iOS
            this.fakeElem.style.fontSize = '12pt';
            // Reset box model
            this.fakeElem.style.border = '0';
            this.fakeElem.style.padding = '0';
            this.fakeElem.style.margin = '0';
            // Move element out of screen horizontally
            this.fakeElem.style.position = 'absolute';
            this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';
            // Move element to the same position vertically
            var yPosition = window.pageYOffset || document.documentElement.scrollTop;
            this.fakeElem.style.top = yPosition + 'px';

            this.fakeElem.setAttribute('readonly', '');
            this.fakeElem.value = this.text;

            this.container.appendChild(this.fakeElem);

            this.selectedText = (0, _select2.default)(this.fakeElem);
            this.copyText();
        }

        /**
         * Only removes the fake element after another click event, that way
         * a user can hit `Ctrl+C` to copy because selection still exists.
         */

    }, {
        key: 'removeFake',
        value: function removeFake() {
            if (this.fakeHandler) {
                this.container.removeEventListener('click', this.fakeHandlerCallback);
                this.fakeHandler = null;
                this.fakeHandlerCallback = null;
            }

            if (this.fakeElem) {
                this.container.removeChild(this.fakeElem);
                this.fakeElem = null;
            }
        }

        /**
         * Selects the content from element passed on `target` property.
         */

    }, {
        key: 'selectTarget',
        value: function selectTarget() {
            this.selectedText = (0, _select2.default)(this.target);
            this.copyText();
        }

        /**
         * Executes the copy operation based on the current selection.
         */

    }, {
        key: 'copyText',
        value: function copyText() {
            var succeeded = void 0;

            try {
                succeeded = document.execCommand(this.action);
            } catch (err) {
                succeeded = false;
            }

            this.handleResult(succeeded);
        }

        /**
         * Fires an event based on the copy operation result.
         * @param {Boolean} succeeded
         */

    }, {
        key: 'handleResult',
        value: function handleResult(succeeded) {
            this.emitter.emit(succeeded ? 'success' : 'error', {
                action: this.action,
                text: this.selectedText,
                trigger: this.trigger,
                clearSelection: this.clearSelection.bind(this)
            });
        }

        /**
         * Moves focus away from `target` and back to the trigger, removes current selection.
         */

    }, {
        key: 'clearSelection',
        value: function clearSelection() {
            if (this.trigger) {
                this.trigger.focus();
            }

            window.getSelection().removeAllRanges();
        }

        /**
         * Sets the `action` to be performed which can be either 'copy' or 'cut'.
         * @param {String} action
         */

    }, {
        key: 'destroy',


        /**
         * Destroy lifecycle.
         */
        value: function destroy() {
            this.removeFake();
        }
    }, {
        key: 'action',
        set: function set() {
            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';

            this._action = action;

            if (this._action !== 'copy' && this._action !== 'cut') {
                throw new Error('Invalid "action" value, use either "copy" or "cut"');
            }
        }

        /**
         * Gets the `action` property.
         * @return {String}
         */
        ,
        get: function get() {
            return this._action;
        }

        /**
         * Sets the `target` property using an element
         * that will be have its content copied.
         * @param {Element} target
         */

    }, {
        key: 'target',
        set: function set(target) {
            if (target !== undefined) {
                if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {
                    if (this.action === 'copy' && target.hasAttribute('disabled')) {
                        throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                    }

                    if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {
                        throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
                    }

                    this._target = target;
                } else {
                    throw new Error('Invalid "target" value, use a valid Element');
                }
            }
        }

        /**
         * Gets the `target` property.
         * @return {String|HTMLElement}
         */
        ,
        get: function get() {
            return this._target;
        }
    }]);

    return ClipboardAction;
}();

module.exports = ClipboardAction;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

function select(element) {
    var selectedText;

    if (element.nodeName === 'SELECT') {
        element.focus();

        selectedText = element.value;
    }
    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {
        var isReadOnly = element.hasAttribute('readonly');

        if (!isReadOnly) {
            element.setAttribute('readonly', '');
        }

        element.select();
        element.setSelectionRange(0, element.value.length);

        if (!isReadOnly) {
            element.removeAttribute('readonly');
        }

        selectedText = element.value;
    }
    else {
        if (element.hasAttribute('contenteditable')) {
            element.focus();
        }

        var selection = window.getSelection();
        var range = document.createRange();

        range.selectNodeContents(element);
        selection.removeAllRanges();
        selection.addRange(range);

        selectedText = selection.toString();
    }

    return selectedText;
}

module.exports = select;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

function E () {
  // Keep this empty so it's easier to inherit from
  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)
}

E.prototype = {
  on: function (name, callback, ctx) {
    var e = this.e || (this.e = {});

    (e[name] || (e[name] = [])).push({
      fn: callback,
      ctx: ctx
    });

    return this;
  },

  once: function (name, callback, ctx) {
    var self = this;
    function listener () {
      self.off(name, listener);
      callback.apply(ctx, arguments);
    }
    listener._ = callback;
    return this.on(name, listener, ctx);
  },

  emit: function (name) {
    var data = [].slice.call(arguments, 1);
    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();
    var i = 0;
    var len = evtArr.length;

    for (i; i < len; i++) {
      evtArr[i].fn.apply(evtArr[i].ctx, data);
    }

    return this;
  },

  off: function (name, callback) {
    var e = this.e || (this.e = {});
    var evts = e[name];
    var liveEvents = [];

    if (evts && callback) {
      for (var i = 0, len = evts.length; i < len; i++) {
        if (evts[i].fn !== callback && evts[i].fn._ !== callback)
          liveEvents.push(evts[i]);
      }
    }

    // Remove event from queue to prevent memory leak
    // Suggested by https://github.com/lazd
    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910

    (liveEvents.length)
      ? e[name] = liveEvents
      : delete e[name];

    return this;
  }
};

module.exports = E;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var is = __webpack_require__(5);
var delegate = __webpack_require__(6);

/**
 * Validates all params and calls the right
 * listener function based on its target type.
 *
 * @param {String|HTMLElement|HTMLCollection|NodeList} target
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listen(target, type, callback) {
    if (!target && !type && !callback) {
        throw new Error('Missing required arguments');
    }

    if (!is.string(type)) {
        throw new TypeError('Second argument must be a String');
    }

    if (!is.fn(callback)) {
        throw new TypeError('Third argument must be a Function');
    }

    if (is.node(target)) {
        return listenNode(target, type, callback);
    }
    else if (is.nodeList(target)) {
        return listenNodeList(target, type, callback);
    }
    else if (is.string(target)) {
        return listenSelector(target, type, callback);
    }
    else {
        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');
    }
}

/**
 * Adds an event listener to a HTML element
 * and returns a remove listener function.
 *
 * @param {HTMLElement} node
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listenNode(node, type, callback) {
    node.addEventListener(type, callback);

    return {
        destroy: function() {
            node.removeEventListener(type, callback);
        }
    }
}

/**
 * Add an event listener to a list of HTML elements
 * and returns a remove listener function.
 *
 * @param {NodeList|HTMLCollection} nodeList
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listenNodeList(nodeList, type, callback) {
    Array.prototype.forEach.call(nodeList, function(node) {
        node.addEventListener(type, callback);
    });

    return {
        destroy: function() {
            Array.prototype.forEach.call(nodeList, function(node) {
                node.removeEventListener(type, callback);
            });
        }
    }
}

/**
 * Add an event listener to a selector
 * and returns a remove listener function.
 *
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listenSelector(selector, type, callback) {
    return delegate(document.body, selector, type, callback);
}

module.exports = listen;


/***/ }),
/* 5 */
/***/ (function(module, exports) {

/**
 * Check if argument is a HTML element.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.node = function(value) {
    return value !== undefined
        && value instanceof HTMLElement
        && value.nodeType === 1;
};

/**
 * Check if argument is a list of HTML elements.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.nodeList = function(value) {
    var type = Object.prototype.toString.call(value);

    return value !== undefined
        && (type === '[object NodeList]' || type === '[object HTMLCollection]')
        && ('length' in value)
        && (value.length === 0 || exports.node(value[0]));
};

/**
 * Check if argument is a string.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.string = function(value) {
    return typeof value === 'string'
        || value instanceof String;
};

/**
 * Check if argument is a function.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.fn = function(value) {
    var type = Object.prototype.toString.call(value);

    return type === '[object Function]';
};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var closest = __webpack_require__(7);

/**
 * Delegates event to a selector.
 *
 * @param {Element} element
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @param {Boolean} useCapture
 * @return {Object}
 */
function _delegate(element, selector, type, callback, useCapture) {
    var listenerFn = listener.apply(this, arguments);

    element.addEventListener(type, listenerFn, useCapture);

    return {
        destroy: function() {
            element.removeEventListener(type, listenerFn, useCapture);
        }
    }
}

/**
 * Delegates event to a selector.
 *
 * @param {Element|String|Array} [elements]
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @param {Boolean} useCapture
 * @return {Object}
 */
function delegate(elements, selector, type, callback, useCapture) {
    // Handle the regular Element usage
    if (typeof elements.addEventListener === 'function') {
        return _delegate.apply(null, arguments);
    }

    // Handle Element-less usage, it defaults to global delegation
    if (typeof type === 'function') {
        // Use `document` as the first parameter, then apply arguments
        // This is a short way to .unshift `arguments` without running into deoptimizations
        return _delegate.bind(null, document).apply(null, arguments);
    }

    // Handle Selector-based usage
    if (typeof elements === 'string') {
        elements = document.querySelectorAll(elements);
    }

    // Handle Array-like based usage
    return Array.prototype.map.call(elements, function (element) {
        return _delegate(element, selector, type, callback, useCapture);
    });
}

/**
 * Finds closest match and invokes callback.
 *
 * @param {Element} element
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @return {Function}
 */
function listener(element, selector, type, callback) {
    return function(e) {
        e.delegateTarget = closest(e.target, selector);

        if (e.delegateTarget) {
            callback.call(element, e);
        }
    }
}

module.exports = delegate;


/***/ }),
/* 7 */
/***/ (function(module, exports) {

var DOCUMENT_NODE_TYPE = 9;

/**
 * A polyfill for Element.matches()
 */
if (typeof Element !== 'undefined' && !Element.prototype.matches) {
    var proto = Element.prototype;

    proto.matches = proto.matchesSelector ||
                    proto.mozMatchesSelector ||
                    proto.msMatchesSelector ||
                    proto.oMatchesSelector ||
                    proto.webkitMatchesSelector;
}

/**
 * Finds the closest parent that matches a selector.
 *
 * @param {Element} element
 * @param {String} selector
 * @return {Function}
 */
function closest (element, selector) {
    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {
        if (typeof element.matches === 'function' &&
            element.matches(selector)) {
          return element;
        }
        element = element.parentNode;
    }
}

module.exports = closest;


/***/ })
/******/ ]);
});
});

var ClipboardJS = unwrapExports(clipboard);

var Clipboard = function Clipboard(props) {
  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      isCopied = _useState2[0],
      setIsCopied = _useState2[1];

  var targetEl = useRef(null);
  var timer = useRef(0);
  useEffect(function () {
    var afterCopy = function afterCopy() {
      setIsCopied(true);
      clearTimeout(timer.current);
      timer.current = setTimeout(function () {
        return setIsCopied(false);
      }, 1500);
    };

    var clipboard = new ClipboardJS(targetEl.current, {
      text: function text() {
        return props.text;
      }
    });
    clipboard.on('success', function (e) {
      // console.log('text copied!:', props.text);
      afterCopy();
    });
    clipboard.on('error', function (e) {
      console.log('error: failed to copy text');
    });
    return function () {
      clipboard.destroy();
      clearTimeout(timer.current);
    };
  }, []);
  return React__default.createElement("div", {
    ref: targetEl
  }, props.children(isCopied));
};

function _templateObject2$9() {
  var data = _taggedTemplateLiteral(["\n  & {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    position: relative;\n  }\n"]);

  _templateObject2$9 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$q() {
  var data = _taggedTemplateLiteral(["\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"]);

  _templateObject$q = function _templateObject() {
    return data;
  };

  return data;
}
var StyledInput$1 = styled(Input)(_templateObject$q());
StyledInput$1.defaultProps = {
  title: 'Ethereum Address',
  'aria-label': 'Ethereum Address'
};
var StyledWrapper$3 = styled(Box)(_templateObject2$9());

var AddressQrModal = function AddressQrModal(_ref) {
  var isOpen = _ref.isOpen,
      hide = _ref.hide,
      address = _ref.address;
  var text = {
    title: 'Ethereum Address',
    description: 'To send funds to this Ethereum address, scan this code using your mobile wallet app'
  };
  var colors = {
    foreground: 'black',
    background: 'white'
  };

  if (isOpen) {
    return React__default.createElement(Portal, null, React__default.createElement(StyledOverlay, null, React__default.createElement(Card, {
      maxWidth: '100%',
      bg: colors.background,
      color: colors.foreground,
      border: 'none',
      borderRadius: 2,
      p: 0,
      display: 'flex',
      flexDirection: 'column'
    }, React__default.createElement(Button$2.Text, {
      icon: 'Close',
      mainColor: 'inherit',
      p: 0,
      borderRadius: '100%',
      position: 'absolute',
      top: 0,
      right: 0,
      onClick: hide
    }), React__default.createElement(Text, {
      color: 'inherit',
      p: 3,
      borderBottom: 1,
      borderColor: 'blacks.4',
      lineHeight: 'solid',
      textAlign: 'center',
      fontWeight: 3
    }, text.title), React__default.createElement(Box, {
      p: [3, 4],
      overflow: 'scroll'
    }, React__default.createElement(Text, {
      color: 'inherit',
      textAlign: 'center',
      mb: 4
    }, text.description), React__default.createElement(Box // size={['100%', '200px']}
    , {
      width: 1,
      maxWidth: '220px',
      mx: 'auto',
      mb: 4,
      p: 4,
      bg: 'white',
      border: 1,
      borderColor: 'blacks.3',
      boxShadow: 2
    }, React__default.createElement(QR, {
      value: address,
      size: '100%'
    })), React__default.createElement(Clipboard, {
      text: address
    }, function (isCopied) {
      return React__default.createElement(Box, {
        color: 'inherit',
        position: 'relative',
        display: 'flex',
        alignItems: 'center'
      }, React__default.createElement(StyledInput$1, {
        readOnly: true,
        value: address,
        width: 1,
        p: 'auto',
        pl: 3,
        pr: '5rem',
        fontWeight: 3
      }), React__default.createElement(Button$2, {
        size: 'small',
        width: '4rem',
        mx: 2,
        position: 'absolute',
        right: 0
      }, !isCopied ? 'Copy' : React__default.createElement(Icon$1, {
        name: 'Check'
      })));
    })))));
  }

  return null;
};

var QRButton = function QRButton(_ref2) {
  var address = _ref2.address,
      props = _objectWithoutProperties(_ref2, ["address"]);

  var _useHiddenState = useHiddenState(),
      visible = _useHiddenState.visible,
      toggle = _useHiddenState.toggle;

  var text = {
    tooltip: 'Show QR Code',
    button: 'Show QR Code'
  };

  if (!props.textLabels) {
    return React__default.createElement(React__default.Fragment, null, React__default.createElement(Tooltip, {
      message: text.tooltip
    }, React__default.createElement(Button$2, {
      size: 'small',
      ml: 2,
      p: 0,
      onClick: toggle
    }, React__default.createElement(Icon$1, {
      name: 'CenterFocusStrong'
    }))), React__default.createElement(AddressQrModal, {
      address: address,
      isOpen: visible,
      hide: toggle
    }));
  }

  return React__default.createElement(React__default.Fragment, null, React__default.createElement(Button$2, {
    size: 'small',
    ml: 2,
    onClick: toggle
  }, text.button), React__default.createElement(AddressQrModal, {
    address: address,
    isOpen: visible,
    hide: toggle
  }));
};

var CopyButton = function CopyButton(_ref3) {
  var clipboardText = _ref3.clipboardText,
      props = _objectWithoutProperties(_ref3, ["clipboardText"]);

  var text = {
    tooltip: 'Copy to clipboard',
    button: 'Copy'
  };

  if (!props.textLabels) {
    return React__default.createElement(Clipboard, {
      text: clipboardText
    }, function (isCopied) {
      return React__default.createElement(Tooltip, {
        message: text.tooltip
      }, React__default.createElement(Button$2, {
        size: 'small',
        p: 0
      }, React__default.createElement(Icon$1, {
        name: isCopied ? 'Check' : 'Assignment'
      })));
    });
  }

  return React__default.createElement(Clipboard, {
    text: clipboardText
  }, function (isCopied) {
    return React__default.createElement(Button$2, {
      size: 'small'
    }, !isCopied ? text.button : 'Copied!');
  });
};

var EthAddress = /*#__PURE__*/function (_Component) {
  _inherits(EthAddress, _Component);

  function EthAddress() {
    _classCallCheck(this, EthAddress);

    return _possibleConstructorReturn(this, _getPrototypeOf$1(EthAddress).apply(this, arguments));
  }

  _createClass(EthAddress, [{
    key: "render",
    value: function render() {
      return React__default.createElement(StyledWrapper$3, this.props, React__default.createElement(StyledInput$1, {
        readOnly: true,
        value: this.props.address,
        ref: this.inputRef,
        width: 1,
        fontWeight: 3,
        p: 'auto',
        pl: 3,
        pr: this.props.textLabels ? '12rem' : '6rem'
      }), React__default.createElement(Flex, {
        position: 'absolute',
        right: 0,
        mr: 2
      }, React__default.createElement(CopyButton, {
        clipboardText: this.props.address,
        textLabels: this.props.textLabels
      }), React__default.createElement(QRButton, {
        address: this.props.address,
        textLabels: this.props.textLabels
      })));
    }
  }]);

  return EthAddress;
}(Component);

EthAddress.propTypes = {
  /**
   * Sets Ethereum address as the value of the field
   */
  address: PropTypes.string.isRequired,

  /**
   * Changes buttons to text from icons
   */
  textLabels: PropTypes.bool
};
EthAddress.defaultProps = {
  textLabels: false
};
EthAddress.displayName = 'EthAddress';

var blockies = createCommonjsModule(function (module) {
(function() {
	// The random number is a js implementation of the Xorshift PRNG
	var randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values

	function seedrand(seed) {
		for (var i = 0; i < randseed.length; i++) {
			randseed[i] = 0;
		}
		for (var i = 0; i < seed.length; i++) {
			randseed[i%4] = ((randseed[i%4] << 5) - randseed[i%4]) + seed.charCodeAt(i);
		}
	}

	function rand() {
		// based on Java's String.hashCode(), expanded to 4 32bit values
		var t = randseed[0] ^ (randseed[0] << 11);

		randseed[0] = randseed[1];
		randseed[1] = randseed[2];
		randseed[2] = randseed[3];
		randseed[3] = (randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8));

		return (randseed[3]>>>0) / ((1 << 31)>>>0);
	}

	function createColor() {
		//saturation is the whole color spectrum
		var h = Math.floor(rand() * 360);
		//saturation goes from 40 to 100, it avoids greyish colors
		var s = ((rand() * 60) + 40) + '%';
		//lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%
		var l = ((rand()+rand()+rand()+rand()) * 25) + '%';

		var color = 'hsl(' + h + ',' + s + ',' + l + ')';
		return color;
	}

	function createImageData(size) {
		var width = size; // Only support square icons for now
		var height = size;

		var dataWidth = Math.ceil(width / 2);
		var mirrorWidth = width - dataWidth;

		var data = [];
		for(var y = 0; y < height; y++) {
			var row = [];
			for(var x = 0; x < dataWidth; x++) {
				// this makes foreground and background color to have a 43% (1/2.3) probability
				// spot color has 13% chance
				row[x] = Math.floor(rand()*2.3);
			}
			var r = row.slice(0, mirrorWidth);
			r.reverse();
			row = row.concat(r);

			for(var i = 0; i < row.length; i++) {
				data.push(row[i]);
			}
		}

		return data;
	}

  function buildOpts(opts) {
    var newOpts = {};

		newOpts.size = opts.size || 8;
		newOpts.scale = opts.scale || 4;
		newOpts.seed = opts.seed || Math.floor((Math.random()*Math.pow(10,16))).toString(16);
		newOpts.color = opts.color || createColor();
		newOpts.bgcolor = opts.bgcolor || createColor();
		newOpts.spotcolor = opts.spotcolor || createColor();

		seedrand(newOpts.seed);

    return newOpts;
  }

  function renderIcon(opts, canvas) {
    var opts = buildOpts(opts || {});

		var imageData = createImageData(opts.size);
		var width = Math.sqrt(imageData.length);

		canvas.width = canvas.height = opts.size * opts.scale;

		var cc = canvas.getContext('2d');
		cc.fillStyle = opts.bgcolor;
		cc.fillRect(0, 0, canvas.width, canvas.height);
		cc.fillStyle = opts.color;

		for(var i = 0; i < imageData.length; i++) {

			// if data is 0, leave the background
			if(imageData[i]) {
				var row = Math.floor(i / width);
				var col = i % width;

				// if data is 2, choose spot color, if 1 choose foreground
			  cc.fillStyle = (imageData[i] == 1) ? opts.color : opts.spotcolor;

				cc.fillRect(col * opts.scale, row * opts.scale, opts.scale, opts.scale);
			}
		}
    return canvas;
  }

	function createIcon(opts) {
    var opts = buildOpts(opts || {});
		var canvas = document.createElement('canvas');

    renderIcon(opts, canvas);

		return canvas;
	}

	var api = {
    create: createIcon,
    render: renderIcon
  };

  {
    module.exports = api;
  }
  if (typeof window !== "undefined") {
    window.blockies = api;
  }

})();
});

var BlockiesIdenticon = /*#__PURE__*/function (_Component) {
  _inherits(BlockiesIdenticon, _Component);

  function BlockiesIdenticon(props) {
    _classCallCheck(this, BlockiesIdenticon);

    return _possibleConstructorReturn(this, _getPrototypeOf$1(BlockiesIdenticon).call(this, props));
  }

  _createClass(BlockiesIdenticon, [{
    key: "getOpts",
    value: function getOpts() {
      return {
        seed: this.props.opts.seed || 'foo',
        color: this.props.opts.color || '#dfe',
        bgcolor: this.props.opts.bgcolor || '#a71',
        size: this.props.opts.size || 15,
        scale: this.props.opts.scale || 3,
        spotcolor: this.props.opts.spotcolor || '#000'
      };
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.draw();
    }
  }, {
    key: "draw",
    value: function draw() {
      blockies.render(this.getOpts(), this.canvas);
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      return React__default.createElement('canvas', {
        ref: function ref(canvas) {
          return _this.canvas = canvas;
        }
      });
    }
  }]);

  return BlockiesIdenticon;
}(Component);

BlockiesIdenticon.defaultProps = {
  opts: {
    seed: 'foo',
    color: '#dfe',
    bgcolor: '#a71',
    size: 15,
    scale: 3,
    spotcolor: '#000'
  }
};
BlockiesIdenticon.propTypes = {
  /**
   * Sets the options for the blockies identicon
   */
  opts: PropTypes.shape({
    seed: PropTypes.string,
    color: PropTypes.string,
    bgcolor: PropTypes.string,
    size: PropTypes.number,
    scale: PropTypes.number,
    spotcolor: PropTypes.string
  })
};
BlockiesIdenticon.displayName = 'BlockiesIdenticon';

function _templateObject3$1() {
  var data = _taggedTemplateLiteral(["\n  & {\n    color: #333;\n    background: ", ";\n    border: 1px solid #ccc;\n  }\n  &:hover {\n    background-color: #f3f2f2;\n  }\n  &:active {\n    background-color: #e4e4e4;\n  }\n"]);

  _templateObject3$1 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$a() {
  var data = _taggedTemplateLiteral(["\n  & {\n    color: ", ";\n    background: ", ";\n  }\n  &:hover {\n    background-color: ", ";\n  }\n  &:active {\n    background-color: ", ";\n  }\n"]);

  _templateObject2$a = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$r() {
  var data = _taggedTemplateLiteral(["\n  & {\n    transition: all 0.15s ease;\n  }\n\n  &:hover {\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n  }\n\n  && > svg.r-ff-icon {\n    height: ", ";\n    width: ", ";\n    margin-right: 0.5rem;\n    margin-bottom: -2px;\n  }\n"]);

  _templateObject$r = function _templateObject() {
    return data;
  };

  return data;
}

var MMlogo = function MMlogo(props) {
  return React__default.createElement("svg", props, React__default.createElement("path", {
    d: "M8.49 3.5L1.492.5l-1 3 2 8.5 18.995-.5 2-8-1.5-3-6.499 3H8.49z",
    fill: "#763D16"
  }), React__default.createElement("path", {
    d: "M6.99 12h10.998v7H6.99v-7z",
    fill: "#333"
  }), React__default.createElement("path", {
    fill: "#333",
    d: "M7.99 17h5.998v3H7.99z"
  }), React__default.createElement("path", {
    d: "M1.581 10.664a.609.609 0 0 1 .126.585l-1.484 4.59a.517.517 0 0 0 0 .356l1.296 4.445c.104.334.438.522.752.417l4.452-1.231c.188-.063.397 0 .564.125l.773.626c.021.021.021.021.042.021l1.923 1.336c.104.062.23.104.355.104H13.6c.125 0 .25-.042.355-.104l1.923-1.336c.02 0 .02-.02.042-.02l.773-.627a.663.663 0 0 1 .564-.125l4.452 1.231c.335.084.669-.104.753-.417l1.295-4.445a.517.517 0 0 0 0-.355l-1.483-4.591a.599.599 0 0 1 .125-.585l1.588-7.116a.536.536 0 0 0-.02-.313L23.024.417c-.105-.334-.48-.5-.815-.375l-6.94 2.587a.744.744 0 0 1-.208.042H8.917c-.083 0-.146-.02-.209-.042L1.77.042c-.334-.126-.71.041-.815.375l-.92 2.818a.524.524 0 0 0-.02.313l1.567 7.116zm12.415 3.59l.522-1.085c.063-.126.23-.188.356-.126l1.254.564c.23.104.209.438-.042.522l-1.756.521a.285.285 0 0 1-.334-.396zm-.104-7.534c-.126-.105-.126-.313.02-.397l7.9-5.405a.252.252 0 0 1 .377.125l.982 2.692c.021.042.021.084 0 .147l-1.61 6.198a.226.226 0 0 1-.292.146l-4.347-1.169c-.042 0-.063-.02-.084-.042L13.891 6.72zm-3.825 12.814l.146-1.21c0-.063.042-.126.105-.168l.292-.208c.042-.021.084-.042.126-.042h2.466c.042 0 .104.02.125.042l.293.208c.063.042.083.105.104.167l.126 1.21a.243.243 0 0 1-.23.272h-3.344c-.105 0-.21-.125-.21-.271zM7.85 13.607l1.254-.564a.27.27 0 0 1 .356.126l.522 1.085c.105.208-.104.438-.334.375l-1.777-.521c-.23-.063-.25-.397-.02-.501zM.808 3.86c-.021-.042 0-.105 0-.146l.982-2.672c.063-.146.251-.208.376-.125l7.9 5.405a.244.244 0 0 1 .022.397L7.14 9.015a.159.159 0 0 1-.084.042L2.71 10.226a.226.226 0 0 1-.293-.146L.807 3.86z",
    fill: "#F36D34"
  }));
};

MMlogo.defaultProps = {
  width: "24",
  height: "24",
  viewBox: "0 0 24 24",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg"
};
var brandColors = {
  baseColor: '#000',
  hoverColor: '#4c4c4c',
  activeColor: '#999',
  foregroundColor: '#FFFFFF'
};
var MMStyledButton = styled(StyledButton)(_templateObject$r(), function (props) {
  return props.size === 'small' ? '1rem' : '1.5rem';
}, function (props) {
  return props.size === 'small' ? '1rem' : '1.5rem';
});
var StyledButtonSolid = styled(MMStyledButton)(_templateObject2$a(), brandColors.foregroundColor, brandColors.baseColor, brandColors.hoverColor, brandColors.activeColor);
var StyledButtonOutline = styled(MMStyledButton)(_templateObject3$1(), brandColors.foregroundColor);

var ButtonBody$1 = function ButtonBody(_ref) {
  var children = _ref.children,
      size = _ref.size;
  return React__default.createElement(React__default.Fragment, null, React__default.createElement(MMlogo, {
    className: 'r-ff-icon',
    size: size
  }), children);
};

var MetaMaskButtonSolid = function MetaMaskButtonSolid(_ref2) {
  var className = _ref2.className,
      children = _ref2.children,
      props = _objectWithoutProperties(_ref2, ["className", "children"]);

  return React__default.createElement(StyledButtonSolid, _extends$1({
    className: className
  }, props), React__default.createElement(ButtonBody$1, {
    children: children,
    size: props.size
  }));
};

var MetaMaskButtonOutline = function MetaMaskButtonOutline(_ref3) {
  var className = _ref3.className,
      children = _ref3.children,
      props = _objectWithoutProperties(_ref3, ["className", "children"]);

  return React__default.createElement(StyledButtonOutline, _extends$1({
    className: className
  }, props), React__default.createElement(ButtonBody$1, {
    children: children,
    size: props.size
  }));
};

var defaultProps$2 = _objectSpread2({}, Button.defaultProps, {
  width: 'auto',
  borderRadius: 1,
  boxShadow: 1
});

MetaMaskButtonSolid.defaultProps = defaultProps$2;
MetaMaskButtonOutline.defaultProps = defaultProps$2;
var MetaMaskButton;
MetaMaskButton = MetaMaskButtonSolid;
MetaMaskButton.Solid = MetaMaskButtonSolid;
MetaMaskButton.Outline = MetaMaskButtonOutline;
MetaMaskButton.propTypes = _objectSpread2({}, Button.propTypes);
MetaMaskButton.displayName = 'MetaMaskButton';
var MetaMaskButton$1 = MetaMaskButton;

function _templateObject3$2() {
  var data = _taggedTemplateLiteral(["\n  & {\n    color: #333;\n    background: ", ";\n    border: 1px solid #ccc;\n  }\n  &:hover {\n    background-color: #f3f2f2;\n  }\n  &:active {\n    background-color: #e4e4e4;\n  }\n"]);

  _templateObject3$2 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$b() {
  var data = _taggedTemplateLiteral(["\n  & {\n    color: ", ";\n    background: ", ";\n  }\n  &:hover {\n    background-color: ", ";\n  }\n  &:active {\n    background-color: ", ";\n  }\n  > svg:first-child {\n    fill: ", ";\n  }\n"]);

  _templateObject2$b = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$s() {
  var data = _taggedTemplateLiteral(["\n  & {\n    transition: all 0.15s ease;\n  }\n\n  &:hover {\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\n  }\n\n  && > svg.r-up-icon {\n    height: ", ";\n    width: ", ";\n    margin-right: 0.5rem;\n  }\n"]);

  _templateObject$s = function _templateObject() {
    return data;
  };

  return data;
}

var UPlogo = function UPlogo(props) {
  return React__default.createElement("svg", props, React__default.createElement("path", {
    d: "M22.842 17.08L12.839 1.458a.997.997 0 0 0-1.678 0L1.159 17.08a.993.993 0 0 0 .466 1.458l10.003 4.032a.997.997 0 0 0 .746 0l10.003-4.032a.993.993 0 0 0 .466-1.458zM12 8.628a3.33 3.33 0 0 1 3.331 3.331A3.33 3.33 0 0 1 12 15.291a3.33 3.33 0 1 1 0-6.663zm4.767 9.506c-.963.43-2.566.722-4.407.758h-.007c-.115.003-.234.003-.353.003h-.006c-.12 0-.235 0-.354-.003h-.006c-1.838-.036-3.444-.328-4.408-.758-1.355-.515-2.203-1.24-2.203-2.05 0-.98 1.246-1.84 3.132-2.342.086.19.186.37.298.543-1.799.453-2.827 1.205-2.827 1.802 0 .286.235.607.675.913.235-.633 1.632-1.16 3.543-1.392.63.373 1.366.592 2.15.592a4.22 4.22 0 0 0 2.149-.591c1.911.23 3.308.758 3.543 1.39.44-.305.675-.626.675-.912 0-.597-1.025-1.349-2.827-1.802.112-.174.212-.353.298-.543 1.886.504 3.133 1.365 3.133 2.342.006.81-.842 1.535-2.198 2.05z"
  }));
};

UPlogo.defaultProps = {
  width: "24",
  height: "24",
  viewBox: "0 0 24 24",
  fill: "#5C4BCD",
  xmlns: "http://www.w3.org/2000/svg"
};
var brandColors$1 = {
  baseColor: '#5c50ca',
  hoverColor: curriedTint(0.1, '#5c50ca'),
  activeColor: curriedShade(0.1, '#5c50ca'),
  foregroundColor: '#FFFFFF'
};
var UPStyledButton = styled(StyledButton)(_templateObject$s(), function (props) {
  return props.size === 'small' ? '16px' : '24px';
}, function (props) {
  return props.size === 'small' ? '16px' : '24px';
});
var StyledButtonSolid$1 = styled(UPStyledButton)(_templateObject2$b(), brandColors$1.foregroundColor, brandColors$1.baseColor, brandColors$1.hoverColor, brandColors$1.activeColor, brandColors$1.foregroundColor);
var StyledButtonOutline$1 = styled(UPStyledButton)(_templateObject3$2(), brandColors$1.foregroundColor);

var ButtonBody$2 = function ButtonBody(_ref) {
  var children = _ref.children,
      size = _ref.size;
  return React__default.createElement(React__default.Fragment, null, React__default.createElement(UPlogo, {
    className: 'r-up-icon',
    size: size
  }), children);
};

var UPortButtonSolid = function UPortButtonSolid(_ref2) {
  var className = _ref2.className,
      children = _ref2.children,
      props = _objectWithoutProperties(_ref2, ["className", "children"]);

  return React__default.createElement(StyledButtonSolid$1, _extends$1({
    className: className
  }, props), React__default.createElement(ButtonBody$2, {
    children: children,
    size: props.size
  }));
};

var UPortButtonOutline = function UPortButtonOutline(_ref3) {
  var className = _ref3.className,
      children = _ref3.children,
      props = _objectWithoutProperties(_ref3, ["className", "children"]);

  return React__default.createElement(StyledButtonOutline$1, _extends$1({
    className: className
  }, props), React__default.createElement(ButtonBody$2, {
    children: children,
    size: props.size
  }));
};

var defaultProps$3 = _objectSpread2({}, Button.defaultProps, {
  width: [1, 'auto'],
  borderRadius: 1,
  boxShadow: 1
});

UPortButtonSolid.defaultProps = defaultProps$3;
UPortButtonOutline.defaultProps = defaultProps$3;
var UPortButton;
UPortButton = UPortButtonOutline;
UPortButton.Solid = UPortButtonSolid;
UPortButton.Outline = UPortButtonOutline;
UPortButton.propTypes = _objectSpread2({}, Button.propTypes);
UPortButton.displayName = 'UPortButton';
var UPortButton$1 = UPortButton;

export { Avatar, BaseStyles, BlockiesIdenticon as Blockie, Box, Button$2 as Button, Card, Checkbox, EthAddress, Field, Flash, Flex, Form, Heading, Icon$1 as Icon, Image, Input, Link, Loader, MetaMaskButton$1 as MetaMaskButton, Modal, Pill, Portal, Progress, QR, Radio, Select, Slider, Table, Text, Textarea, ThemeProvider, ToastMessage, Tooltip, UPortButton$1 as UPortButton, theme };
//# sourceMappingURL=index.esm.js.map
